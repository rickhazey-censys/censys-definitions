// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zlint.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zlint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zsearch {
class LintResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LintResult> {
} _LintResult_default_instance_;
class ZLintDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZLint> {
} _ZLint_default_instance_;
class LintsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Lints> {
} _Lints_default_instance_;

namespace protobuf_zlint_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LintResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LintResult, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LintResult, details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, infos_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, notices_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, warnings_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, errors_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, fatals_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLint, lints_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_basic_constraints_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ian_bare_wildcard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ian_wildcard_not_first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_san_bare_wildcard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_san_wildcard_not_first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_country_name_invalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_country_name_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_crl_sign_not_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, n_ca_digital_signature_not_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_key_cert_sign_not_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_key_usage_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_key_usage_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_organization_name_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_subject_field_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cert_contains_unique_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cert_extensions_version_not_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cab_dv_conflicts_with_locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cab_dv_conflicts_with_org_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cab_dv_conflicts_with_postal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cab_dv_conflicts_with_province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cab_dv_conflicts_with_street_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cert_policy_iv_requires_country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cert_policy_iv_requires_province_or_locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cert_policy_ov_requires_country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cert_policy_ov_requires_province_or_locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cab_ov_requires_org_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cab_iv_requires_personal_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_cert_unique_identifier_version_not_2_or_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_distribution_point_incomplete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_distribution_point_missing_ldap_or_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dsa_improper_modulus_or_divisor_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dsa_shorter_than_2048_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ec_improper_curves_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_eku_critical_improperly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ev_business_category_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ev_country_name_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ev_locality_name_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ev_organization_name_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ev_serial_number_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ev_valid_time_too_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_aia_access_location_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_aia_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_authority_key_identifier_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_authority_key_identifier_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_authority_key_identifier_no_key_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_cert_policy_contains_noticeref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_cert_policy_disallowed_any_policy_qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_cert_policy_duplicate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_cert_policy_explicit_text_ia5_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_cert_policy_explicit_text_includes_control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_cert_policy_explicit_text_not_nfc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_cert_policy_explicit_text_not_utf8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_cert_policy_explicit_text_too_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_crl_distribution_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_duplicate_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_freshest_crl_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_ian_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_dns_not_ia5_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_empty_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_no_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_rfc822_format_invalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_space_dns_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_uri_format_invalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_uri_host_not_fqdn_or_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_uri_not_ia5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_ian_uri_relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_key_usage_cert_sign_without_ca_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_key_usage_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_key_usage_without_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_name_constraints_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_name_constraints_not_in_ca_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_policy_constraints_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_policy_constraints_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_policy_map_any_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_policy_map_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_policy_map_not_in_cert_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_contains_reserved_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_san_critical_with_subject_dn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_directory_name_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_dns_not_ia5_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_edi_party_name_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_empty_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_no_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_not_critical_without_subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_other_name_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_registered_id_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_rfc822_format_invalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_rfc822_name_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_space_dns_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_uniform_resource_identifier_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_uri_format_invalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_uri_host_not_fqdn_or_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_uri_not_ia5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_uri_relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_subject_directory_attr_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_subject_key_identifier_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_subject_key_identifier_missing_ca_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ext_subject_key_identifier_missing_sub_cert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_generalized_time_does_not_include_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_generalized_time_includes_fraction_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_generalized_time_not_in_zulu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ian_dns_name_includes_null_char_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ian_dns_name_starts_with_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_ian_iana_pub_suffix_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_inhibit_any_policy_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_invalid_certificate_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_issuer_field_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_name_constraint_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_name_constraint_maximum_not_absent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_name_constraint_minimum_non_zero_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_name_constraint_on_edi_party_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_name_constraint_on_registered_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_name_constraint_on_x400_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_old_root_ca_rsa_mod_less_than_2048_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_old_sub_ca_rsa_mod_less_than_1024_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_old_sub_cert_rsa_mod_less_than_1024_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_path_len_constraint_improperly_included_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_path_len_constraint_zero_or_less_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_public_key_type_not_allowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_root_ca_basic_constraints_path_len_constraint_field_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_root_ca_contains_cert_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_root_ca_extended_key_usage_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_rsa_exp_negative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_rsa_mod_factors_smaller_than_752_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_rsa_mod_less_than_2048_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_rsa_mod_not_odd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_rsa_public_exponent_not_in_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_rsa_public_exponent_not_odd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_rsa_public_exponent_too_small_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_san_dns_name_includes_null_char_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_san_dns_name_starts_with_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_san_iana_pub_suffix_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_serial_number_longer_than_20_octets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_serial_number_not_positive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_ca_aia_does_not_contain_issuing_ca_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_aia_does_not_contain_ocsp_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_aia_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_ca_certificate_policies_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_certificate_policies_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_crl_distribution_points_does_not_contain_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_crl_distribution_points_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_crl_distribution_points_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_ca_eku_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_ca_name_constraints_not_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_aia_does_not_contain_ocsp_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_aia_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_cert_policy_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_cert_certificate_policies_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_crl_distribution_points_does_not_contain_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_crl_distribution_points_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_cert_eku_extra_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_eku_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_eku_server_auth_client_auth_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_key_usage_cert_sign_bit_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_or_sub_ca_using_sha1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_cert_sha1_expiration_too_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, n_subject_common_name_included_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_common_name_not_from_san_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_contains_noninformational_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_contains_reserved_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_country_not_iso_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_empty_without_san_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_info_access_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_not_dn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_utc_time_does_not_include_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_utc_time_not_in_zulu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_validity_time_not_positive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_wrong_time_format_pre2050_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_rsa_no_public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_certificate_policies_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_key_usage_crl_sign_bit_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_common_name_max_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_locality_name_max_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_organization_name_max_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_organizational_unit_name_max_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_subject_state_name_max_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_multiple_subject_rdn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_multiple_issuer_rdn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_issuer_dn_trailing_whitespace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_issuer_dn_leading_whitespace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_subject_dn_trailing_whitespace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_subject_dn_leading_whitespace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_locality_name_must_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_signature_algorithm_not_supported_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_hyphen_in_sld_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dsa_correct_order_in_subgroup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, n_sub_ca_eku_not_technically_constrained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_empty_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_common_name_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_wildcard_only_in_left_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_valid_time_too_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_left_label_wildcard_correct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_serial_number_low_entropy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_label_too_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_root_ca_key_usage_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_dnsname_wildcard_left_of_public_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_international_dns_name_not_unicode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_dnsname_underscore_in_trd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, w_sub_cert_aia_does_not_contain_issuing_ca_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_locality_name_must_not_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_country_name_must_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_bad_character_in_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_must_not_contain_any_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_international_dns_name_not_nfkc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_aia_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ca_is_ca_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_street_address_should_not_exist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_eku_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_province_must_not_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_underscore_in_sld_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_eku_name_constraints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_not_is_ca_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dsa_unique_correct_representation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_province_must_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_root_ca_key_usage_must_be_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_ext_san_dns_name_too_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dsa_params_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_ca_aia_marked_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_given_name_surname_contains_correct_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_sub_cert_postal_code_must_not_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_not_valid_tld_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, n_contains_redacted_dnsname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lints, e_dnsname_contains_bare_iana_suffix_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(LintResult)},
  { 6, -1, sizeof(ZLint)},
  { 19, -1, sizeof(Lints)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LintResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZLint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Lints_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "zlint.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _LintResult_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ZLint_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Lints_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LintResult_default_instance_.DefaultConstruct();
  _ZLint_default_instance_.DefaultConstruct();
  _Lints_default_instance_.DefaultConstruct();
  _ZLint_default_instance_.get_mutable()->lints_ = const_cast< ::zsearch::Lints*>(
      ::zsearch::Lints::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_basic_constraints_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ian_bare_wildcard_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ian_wildcard_not_first_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_san_bare_wildcard_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_san_wildcard_not_first_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_country_name_invalid_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_country_name_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_crl_sign_not_set_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->n_ca_digital_signature_not_set_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_key_cert_sign_not_set_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_key_usage_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_key_usage_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_organization_name_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_subject_field_empty_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cert_contains_unique_identifier_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cert_extensions_version_not_3_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cab_dv_conflicts_with_locality_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cab_dv_conflicts_with_org_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cab_dv_conflicts_with_postal_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cab_dv_conflicts_with_province_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cab_dv_conflicts_with_street_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cert_policy_iv_requires_country_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cert_policy_iv_requires_province_or_locality_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cert_policy_ov_requires_country_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cert_policy_ov_requires_province_or_locality_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cab_ov_requires_org_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cab_iv_requires_personal_name_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_cert_unique_identifier_version_not_2_or_3_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_distribution_point_incomplete_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_distribution_point_missing_ldap_or_uri_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dsa_improper_modulus_or_divisor_size_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dsa_shorter_than_2048_bits_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ec_improper_curves_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_eku_critical_improperly_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ev_business_category_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ev_country_name_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ev_locality_name_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ev_organization_name_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ev_serial_number_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ev_valid_time_too_long_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_aia_access_location_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_aia_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_authority_key_identifier_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_authority_key_identifier_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_authority_key_identifier_no_key_identifier_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_cert_policy_contains_noticeref_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_cert_policy_disallowed_any_policy_qualifier_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_cert_policy_duplicate_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_cert_policy_explicit_text_ia5_string_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_cert_policy_explicit_text_includes_control_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_cert_policy_explicit_text_not_nfc_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_cert_policy_explicit_text_not_utf8_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_cert_policy_explicit_text_too_long_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_crl_distribution_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_duplicate_extension_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_freshest_crl_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_ian_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_dns_not_ia5_string_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_empty_name_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_no_entries_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_rfc822_format_invalid_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_space_dns_name_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_uri_format_invalid_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_uri_host_not_fqdn_or_ip_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_uri_not_ia5_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_ian_uri_relative_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_key_usage_cert_sign_without_ca_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_key_usage_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_key_usage_without_bits_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_name_constraints_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_name_constraints_not_in_ca_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_policy_constraints_empty_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_policy_constraints_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_policy_map_any_policy_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_policy_map_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_policy_map_not_in_cert_policy_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_contains_reserved_ip_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_san_critical_with_subject_dn_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_directory_name_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_dns_not_ia5_string_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_edi_party_name_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_empty_name_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_no_entries_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_not_critical_without_subject_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_other_name_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_registered_id_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_rfc822_format_invalid_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_rfc822_name_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_space_dns_name_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_uniform_resource_identifier_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_uri_format_invalid_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_uri_host_not_fqdn_or_ip_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_uri_not_ia5_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_uri_relative_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_subject_directory_attr_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_subject_key_identifier_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_subject_key_identifier_missing_ca_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ext_subject_key_identifier_missing_sub_cert_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_generalized_time_does_not_include_seconds_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_generalized_time_includes_fraction_seconds_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_generalized_time_not_in_zulu_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ian_dns_name_includes_null_char_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ian_dns_name_starts_with_period_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_ian_iana_pub_suffix_empty_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_inhibit_any_policy_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_invalid_certificate_version_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_issuer_field_empty_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_name_constraint_empty_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_name_constraint_maximum_not_absent_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_name_constraint_minimum_non_zero_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_name_constraint_on_edi_party_name_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_name_constraint_on_registered_id_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_name_constraint_on_x400_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_old_root_ca_rsa_mod_less_than_2048_bits_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_old_sub_ca_rsa_mod_less_than_1024_bits_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_old_sub_cert_rsa_mod_less_than_1024_bits_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_path_len_constraint_improperly_included_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_path_len_constraint_zero_or_less_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_public_key_type_not_allowed_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_root_ca_basic_constraints_path_len_constraint_field_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_root_ca_contains_cert_policy_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_root_ca_extended_key_usage_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_rsa_exp_negative_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_rsa_mod_factors_smaller_than_752_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_rsa_mod_less_than_2048_bits_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_rsa_mod_not_odd_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_rsa_public_exponent_not_in_range_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_rsa_public_exponent_not_odd_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_rsa_public_exponent_too_small_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_san_dns_name_includes_null_char_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_san_dns_name_starts_with_period_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_san_iana_pub_suffix_empty_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_serial_number_longer_than_20_octets_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_serial_number_not_positive_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_ca_aia_does_not_contain_issuing_ca_url_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_aia_does_not_contain_ocsp_url_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_aia_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_ca_certificate_policies_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_certificate_policies_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_crl_distribution_points_does_not_contain_url_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_crl_distribution_points_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_crl_distribution_points_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_ca_eku_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_ca_name_constraints_not_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_aia_does_not_contain_ocsp_url_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_aia_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_cert_policy_empty_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_cert_certificate_policies_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_crl_distribution_points_does_not_contain_url_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_crl_distribution_points_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_cert_eku_extra_values_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_eku_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_eku_server_auth_client_auth_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_key_usage_cert_sign_bit_set_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_or_sub_ca_using_sha1_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_cert_sha1_expiration_too_long_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->n_subject_common_name_included_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_common_name_not_from_san_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_contains_noninformational_value_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_contains_reserved_ip_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_country_not_iso_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_empty_without_san_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_info_access_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_not_dn_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_utc_time_does_not_include_seconds_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_utc_time_not_in_zulu_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_validity_time_not_positive_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_wrong_time_format_pre2050_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_rsa_no_public_key_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_certificate_policies_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_key_usage_crl_sign_bit_set_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_common_name_max_length_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_locality_name_max_length_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_organization_name_max_length_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_organizational_unit_name_max_length_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_subject_state_name_max_length_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_multiple_subject_rdn_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_multiple_issuer_rdn_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_issuer_dn_trailing_whitespace_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_issuer_dn_leading_whitespace_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_subject_dn_trailing_whitespace_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_subject_dn_leading_whitespace_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_locality_name_must_appear_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_signature_algorithm_not_supported_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_hyphen_in_sld_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dsa_correct_order_in_subgroup_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->n_sub_ca_eku_not_technically_constrained_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_empty_label_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_common_name_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_wildcard_only_in_left_label_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_valid_time_too_long_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_left_label_wildcard_correct_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_serial_number_low_entropy_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_label_too_long_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_root_ca_key_usage_present_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_dnsname_wildcard_left_of_public_suffix_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_international_dns_name_not_unicode_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_dnsname_underscore_in_trd_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->w_sub_cert_aia_does_not_contain_issuing_ca_url_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_locality_name_must_not_appear_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_country_name_must_appear_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_bad_character_in_label_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_must_not_contain_any_policy_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_international_dns_name_not_nfkc_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_aia_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ca_is_ca_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_street_address_should_not_exist_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_eku_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_province_must_not_appear_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_underscore_in_sld_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_eku_name_constraints_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_not_is_ca_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dsa_unique_correct_representation_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_province_must_appear_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_root_ca_key_usage_must_be_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_ext_san_dns_name_too_long_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dsa_params_missing_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_ca_aia_marked_critical_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_given_name_surname_contains_correct_policy_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_sub_cert_postal_code_must_not_appear_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_not_valid_tld_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->n_contains_redacted_dnsname_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
  _Lints_default_instance_.get_mutable()->e_dnsname_contains_bare_iana_suffix_ = const_cast< ::zsearch::LintResult*>(
      ::zsearch::LintResult::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013zlint.proto\022\007zsearch\"H\n\nLintResult\022)\n\006"
      "result\030\001 \001(\0162\031.zsearch.LintResultStatus\022"
      "\017\n\007details\030\002 \001(\t\"\352\001\n\005ZLint\022\017\n\007version\030\001 "
      "\001(\003\022\021\n\ttimestamp\030\002 \001(\003\022$\n\006status\030\003 \001(\0162\024"
      ".zsearch.ZLintStatus\022\025\n\rinfos_present\030\004 "
      "\001(\010\022\027\n\017notices_present\030\005 \001(\010\022\030\n\020warnings"
      "_present\030\006 \001(\010\022\026\n\016errors_present\030\007 \001(\010\022\026"
      "\n\016fatals_present\030\010 \001(\010\022\035\n\005lints\030\t \001(\0132\016."
      "zsearch.Lints\"\320n\n\005Lints\022=\n e_basic_const"
      "raints_not_critical\030\001 \001(\0132\023.zsearch.Lint"
      "Result\0220\n\023e_ian_bare_wildcard\030\002 \001(\0132\023.zs"
      "earch.LintResult\0225\n\030e_ian_wildcard_not_f"
      "irst\030\003 \001(\0132\023.zsearch.LintResult\0220\n\023e_san"
      "_bare_wildcard\030\004 \001(\0132\023.zsearch.LintResul"
      "t\0225\n\030e_san_wildcard_not_first\030\005 \001(\0132\023.zs"
      "earch.LintResult\0226\n\031e_ca_country_name_in"
      "valid\030\006 \001(\0132\023.zsearch.LintResult\0226\n\031e_ca"
      "_country_name_missing\030\007 \001(\0132\023.zsearch.Li"
      "ntResult\0222\n\025e_ca_crl_sign_not_set\030\010 \001(\0132"
      "\023.zsearch.LintResult\022;\n\036n_ca_digital_sig"
      "nature_not_set\030\t \001(\0132\023.zsearch.LintResul"
      "t\0227\n\032e_ca_key_cert_sign_not_set\030\n \001(\0132\023."
      "zsearch.LintResult\0223\n\026e_ca_key_usage_mis"
      "sing\030\013 \001(\0132\023.zsearch.LintResult\0228\n\033e_ca_"
      "key_usage_not_critical\030\014 \001(\0132\023.zsearch.L"
      "intResult\022;\n\036e_ca_organization_name_miss"
      "ing\030\r \001(\0132\023.zsearch.LintResult\0225\n\030e_ca_s"
      "ubject_field_empty\030\016 \001(\0132\023.zsearch.LintR"
      "esult\022>\n!e_cert_contains_unique_identifi"
      "er\030\017 \001(\0132\023.zsearch.LintResult\022<\n\037e_cert_"
      "extensions_version_not_3\030\020 \001(\0132\023.zsearch"
      ".LintResult\022=\n e_cab_dv_conflicts_with_l"
      "ocality\030\021 \001(\0132\023.zsearch.LintResult\0228\n\033e_"
      "cab_dv_conflicts_with_org\030\022 \001(\0132\023.zsearc"
      "h.LintResult\022;\n\036e_cab_dv_conflicts_with_"
      "postal\030\023 \001(\0132\023.zsearch.LintResult\022=\n e_c"
      "ab_dv_conflicts_with_province\030\024 \001(\0132\023.zs"
      "earch.LintResult\022;\n\036e_cab_dv_conflicts_w"
      "ith_street\030\025 \001(\0132\023.zsearch.LintResult\022>\n"
      "!e_cert_policy_iv_requires_country\030\026 \001(\013"
      "2\023.zsearch.LintResult\022K\n.e_cert_policy_i"
      "v_requires_province_or_locality\030\027 \001(\0132\023."
      "zsearch.LintResult\022>\n!e_cert_policy_ov_r"
      "equires_country\030\030 \001(\0132\023.zsearch.LintResu"
      "lt\022K\n.e_cert_policy_ov_requires_province"
      "_or_locality\030\031 \001(\0132\023.zsearch.LintResult\022"
      "2\n\025e_cab_ov_requires_org\030\032 \001(\0132\023.zsearch"
      ".LintResult\022<\n\037e_cab_iv_requires_persona"
      "l_name\030\033 \001(\0132\023.zsearch.LintResult\022H\n+e_c"
      "ert_unique_identifier_version_not_2_or_3"
      "\030\034 \001(\0132\023.zsearch.LintResult\022<\n\037e_distrib"
      "ution_point_incomplete\030\036 \001(\0132\023.zsearch.L"
      "intResult\022E\n(w_distribution_point_missin"
      "g_ldap_or_uri\030\037 \001(\0132\023.zsearch.LintResult"
      "\022C\n&e_dsa_improper_modulus_or_divisor_si"
      "ze\030  \001(\0132\023.zsearch.LintResult\0229\n\034e_dsa_s"
      "horter_than_2048_bits\030! \001(\0132\023.zsearch.Li"
      "ntResult\0221\n\024e_ec_improper_curves\030\" \001(\0132\023"
      ".zsearch.LintResult\0226\n\031w_eku_critical_im"
      "properly\030# \001(\0132\023.zsearch.LintResult\022;\n\036e"
      "_ev_business_category_missing\030$ \001(\0132\023.zs"
      "earch.LintResult\0226\n\031e_ev_country_name_mi"
      "ssing\030% \001(\0132\023.zsearch.LintResult\0227\n\032e_ev"
      "_locality_name_missing\030& \001(\0132\023.zsearch.L"
      "intResult\022;\n\036e_ev_organization_name_miss"
      "ing\030\' \001(\0132\023.zsearch.LintResult\0227\n\032e_ev_s"
      "erial_number_missing\030( \001(\0132\023.zsearch.Lin"
      "tResult\0225\n\030e_ev_valid_time_too_long\030) \001("
      "\0132\023.zsearch.LintResult\022>\n!w_ext_aia_acce"
      "ss_location_missing\030* \001(\0132\023.zsearch.Lint"
      "Result\0226\n\031e_ext_aia_marked_critical\030+ \001("
      "\0132\023.zsearch.LintResult\022D\n\'e_ext_authorit"
      "y_key_identifier_critical\030, \001(\0132\023.zsearc"
      "h.LintResult\022C\n&e_ext_authority_key_iden"
      "tifier_missing\030- \001(\0132\023.zsearch.LintResul"
      "t\022M\n0e_ext_authority_key_identifier_no_k"
      "ey_identifier\030. \001(\0132\023.zsearch.LintResult"
      "\022A\n$w_ext_cert_policy_contains_noticeref"
      "\030/ \001(\0132\023.zsearch.LintResult\022N\n1e_ext_cer"
      "t_policy_disallowed_any_policy_qualifier"
      "\0300 \001(\0132\023.zsearch.LintResult\0228\n\033e_ext_cer"
      "t_policy_duplicate\0301 \001(\0132\023.zsearch.LintR"
      "esult\022G\n*e_ext_cert_policy_explicit_text"
      "_ia5_string\0302 \001(\0132\023.zsearch.LintResult\022M"
      "\n0w_ext_cert_policy_explicit_text_includ"
      "es_control\0303 \001(\0132\023.zsearch.LintResult\022D\n"
      "\'w_ext_cert_policy_explicit_text_not_nfc"
      "\0304 \001(\0132\023.zsearch.LintResult\022E\n(w_ext_cer"
      "t_policy_explicit_text_not_utf8\0305 \001(\0132\023."
      "zsearch.LintResult\022E\n(e_ext_cert_policy_"
      "explicit_text_too_long\0306 \001(\0132\023.zsearch.L"
      "intResult\022C\n&w_ext_crl_distribution_mark"
      "ed_critical\0307 \001(\0132\023.zsearch.LintResult\0226"
      "\n\031e_ext_duplicate_extension\0308 \001(\0132\023.zsea"
      "rch.LintResult\022\?\n\"e_ext_freshest_crl_mar"
      "ked_critical\0309 \001(\0132\023.zsearch.LintResult\022"
      "/\n\022w_ext_ian_critical\030: \001(\0132\023.zsearch.Li"
      "ntResult\0229\n\034e_ext_ian_dns_not_ia5_string"
      "\030; \001(\0132\023.zsearch.LintResult\0221\n\024e_ext_ian"
      "_empty_name\030< \001(\0132\023.zsearch.LintResult\0221"
      "\n\024e_ext_ian_no_entries\030= \001(\0132\023.zsearch.L"
      "intResult\022<\n\037e_ext_ian_rfc822_format_inv"
      "alid\030> \001(\0132\023.zsearch.LintResult\0225\n\030e_ext"
      "_ian_space_dns_name\030\? \001(\0132\023.zsearch.Lint"
      "Result\0229\n\034e_ext_ian_uri_format_invalid\030@"
      " \001(\0132\023.zsearch.LintResult\022>\n!e_ext_ian_u"
      "ri_host_not_fqdn_or_ip\030A \001(\0132\023.zsearch.L"
      "intResult\0222\n\025e_ext_ian_uri_not_ia5\030B \001(\013"
      "2\023.zsearch.LintResult\0223\n\026e_ext_ian_uri_r"
      "elative\030C \001(\0132\023.zsearch.LintResult\022A\n$e_"
      "ext_key_usage_cert_sign_without_ca\030D \001(\013"
      "2\023.zsearch.LintResult\0229\n\034w_ext_key_usage"
      "_not_critical\030E \001(\0132\023.zsearch.LintResult"
      "\0229\n\034e_ext_key_usage_without_bits\030F \001(\0132\023"
      ".zsearch.LintResult\022@\n#e_ext_name_constr"
      "aints_not_critical\030G \001(\0132\023.zsearch.LintR"
      "esult\022=\n e_ext_name_constraints_not_in_c"
      "a\030H \001(\0132\023.zsearch.LintResult\022;\n\036e_ext_po"
      "licy_constraints_empty\030I \001(\0132\023.zsearch.L"
      "intResult\022B\n%e_ext_policy_constraints_no"
      "t_critical\030J \001(\0132\023.zsearch.LintResult\0228\n"
      "\033e_ext_policy_map_any_policy\030K \001(\0132\023.zse"
      "arch.LintResult\022:\n\035w_ext_policy_map_not_"
      "critical\030L \001(\0132\023.zsearch.LintResult\022@\n#w"
      "_ext_policy_map_not_in_cert_policy\030M \001(\013"
      "2\023.zsearch.LintResult\022;\n\036e_ext_san_conta"
      "ins_reserved_ip\030N \001(\0132\023.zsearch.LintResu"
      "lt\022\?\n\"w_ext_san_critical_with_subject_dn"
      "\030O \001(\0132\023.zsearch.LintResult\022=\n e_ext_san"
      "_directory_name_present\030P \001(\0132\023.zsearch."
      "LintResult\0229\n\034e_ext_san_dns_not_ia5_stri"
      "ng\030Q \001(\0132\023.zsearch.LintResult\022=\n e_ext_s"
      "an_edi_party_name_present\030T \001(\0132\023.zsearc"
      "h.LintResult\0221\n\024e_ext_san_empty_name\030U \001"
      "(\0132\023.zsearch.LintResult\022.\n\021e_ext_san_mis"
      "sing\030V \001(\0132\023.zsearch.LintResult\0221\n\024e_ext"
      "_san_no_entries\030W \001(\0132\023.zsearch.LintResu"
      "lt\022C\n&e_ext_san_not_critical_without_sub"
      "ject\030X \001(\0132\023.zsearch.LintResult\0229\n\034e_ext"
      "_san_other_name_present\030Y \001(\0132\023.zsearch."
      "LintResult\022<\n\037e_ext_san_registered_id_pr"
      "esent\030Z \001(\0132\023.zsearch.LintResult\022<\n\037e_ex"
      "t_san_rfc822_format_invalid\030[ \001(\0132\023.zsea"
      "rch.LintResult\022:\n\035e_ext_san_rfc822_name_"
      "present\030\\ \001(\0132\023.zsearch.LintResult\0225\n\030e_"
      "ext_san_space_dns_name\030] \001(\0132\023.zsearch.L"
      "intResult\022J\n-e_ext_san_uniform_resource_"
      "identifier_present\030^ \001(\0132\023.zsearch.LintR"
      "esult\0229\n\034e_ext_san_uri_format_invalid\030_ "
      "\001(\0132\023.zsearch.LintResult\022>\n!e_ext_san_ur"
      "i_host_not_fqdn_or_ip\030` \001(\0132\023.zsearch.Li"
      "ntResult\0222\n\025e_ext_san_uri_not_ia5\030a \001(\0132"
      "\023.zsearch.LintResult\0223\n\026e_ext_san_uri_re"
      "lative\030b \001(\0132\023.zsearch.LintResult\022B\n%e_e"
      "xt_subject_directory_attr_critical\030c \001(\013"
      "2\023.zsearch.LintResult\022B\n%e_ext_subject_k"
      "ey_identifier_critical\030d \001(\0132\023.zsearch.L"
      "intResult\022D\n\'e_ext_subject_key_identifie"
      "r_missing_ca\030e \001(\0132\023.zsearch.LintResult\022"
      "J\n-w_ext_subject_key_identifier_missing_"
      "sub_cert\030f \001(\0132\023.zsearch.LintResult\022H\n+e"
      "_generalized_time_does_not_include_secon"
      "ds\030g \001(\0132\023.zsearch.LintResult\022I\n,e_gener"
      "alized_time_includes_fraction_seconds\030h "
      "\001(\0132\023.zsearch.LintResult\022;\n\036e_generalize"
      "d_time_not_in_zulu\030i \001(\0132\023.zsearch.LintR"
      "esult\022>\n!e_ian_dns_name_includes_null_ch"
      "ar\030k \001(\0132\023.zsearch.LintResult\022>\n!e_ian_d"
      "ns_name_starts_with_period\030l \001(\0132\023.zsear"
      "ch.LintResult\0228\n\033w_ian_iana_pub_suffix_e"
      "mpty\030m \001(\0132\023.zsearch.LintResult\022>\n!e_inh"
      "ibit_any_policy_not_critical\030n \001(\0132\023.zse"
      "arch.LintResult\022:\n\035e_invalid_certificate"
      "_version\030o \001(\0132\023.zsearch.LintResult\0221\n\024e"
      "_issuer_field_empty\030p \001(\0132\023.zsearch.Lint"
      "Result\0224\n\027e_name_constraint_empty\030q \001(\0132"
      "\023.zsearch.LintResult\022A\n$e_name_constrain"
      "t_maximum_not_absent\030r \001(\0132\023.zsearch.Lin"
      "tResult\022\?\n\"e_name_constraint_minimum_non"
      "_zero\030s \001(\0132\023.zsearch.LintResult\022@\n#w_na"
      "me_constraint_on_edi_party_name\030t \001(\0132\023."
      "zsearch.LintResult\022\?\n\"w_name_constraint_"
      "on_registered_id\030u \001(\0132\023.zsearch.LintRes"
      "ult\0226\n\031w_name_constraint_on_x400\030v \001(\0132\023"
      ".zsearch.LintResult\022F\n)e_old_root_ca_rsa"
      "_mod_less_than_2048_bits\030w \001(\0132\023.zsearch"
      ".LintResult\022E\n(e_old_sub_ca_rsa_mod_less"
      "_than_1024_bits\030x \001(\0132\023.zsearch.LintResu"
      "lt\022G\n*e_old_sub_cert_rsa_mod_less_than_1"
      "024_bits\030y \001(\0132\023.zsearch.LintResult\022F\n)e"
      "_path_len_constraint_improperly_included"
      "\030z \001(\0132\023.zsearch.LintResult\022\?\n\"e_path_le"
      "n_constraint_zero_or_less\030{ \001(\0132\023.zsearc"
      "h.LintResult\022:\n\035e_public_key_type_not_al"
      "lowed\030| \001(\0132\023.zsearch.LintResult\022Z\n=w_ro"
      "ot_ca_basic_constraints_path_len_constra"
      "int_field_present\030} \001(\0132\023.zsearch.LintRe"
      "sult\022;\n\036w_root_ca_contains_cert_policy\030~"
      " \001(\0132\023.zsearch.LintResult\022A\n$e_root_ca_e"
      "xtended_key_usage_present\030\177 \001(\0132\023.zsearc"
      "h.LintResult\0220\n\022e_rsa_exp_negative\030\200\001 \001("
      "\0132\023.zsearch.LintResult\022@\n\"w_rsa_mod_fact"
      "ors_smaller_than_752\030\201\001 \001(\0132\023.zsearch.Li"
      "ntResult\022;\n\035e_rsa_mod_less_than_2048_bit"
      "s\030\202\001 \001(\0132\023.zsearch.LintResult\022/\n\021w_rsa_m"
      "od_not_odd\030\203\001 \001(\0132\023.zsearch.LintResult\022@"
      "\n\"w_rsa_public_exponent_not_in_range\030\204\001 "
      "\001(\0132\023.zsearch.LintResult\022;\n\035e_rsa_public"
      "_exponent_not_odd\030\205\001 \001(\0132\023.zsearch.LintR"
      "esult\022=\n\037e_rsa_public_exponent_too_small"
      "\030\206\001 \001(\0132\023.zsearch.LintResult\022\?\n!e_san_dn"
      "s_name_includes_null_char\030\207\001 \001(\0132\023.zsear"
      "ch.LintResult\022\?\n!e_san_dns_name_starts_w"
      "ith_period\030\210\001 \001(\0132\023.zsearch.LintResult\0229"
      "\n\033w_san_iana_pub_suffix_empty\030\211\001 \001(\0132\023.z"
      "search.LintResult\022C\n%e_serial_number_lon"
      "ger_than_20_octets\030\212\001 \001(\0132\023.zsearch.Lint"
      "Result\022:\n\034e_serial_number_not_positive\030\213"
      "\001 \001(\0132\023.zsearch.LintResult\022J\n,w_sub_ca_a"
      "ia_does_not_contain_issuing_ca_url\030\214\001 \001("
      "\0132\023.zsearch.LintResult\022D\n&e_sub_ca_aia_d"
      "oes_not_contain_ocsp_url\030\215\001 \001(\0132\023.zsearc"
      "h.LintResult\0222\n\024e_sub_ca_aia_missing\030\216\001 "
      "\001(\0132\023.zsearch.LintResult\022K\n-w_sub_ca_cer"
      "tificate_policies_marked_critical\030\217\001 \001(\013"
      "2\023.zsearch.LintResult\022C\n%e_sub_ca_certif"
      "icate_policies_missing\030\220\001 \001(\0132\023.zsearch."
      "LintResult\022S\n5e_sub_ca_crl_distribution_"
      "points_does_not_contain_url\030\221\001 \001(\0132\023.zse"
      "arch.LintResult\022N\n0e_sub_ca_crl_distribu"
      "tion_points_marked_critical\030\222\001 \001(\0132\023.zse"
      "arch.LintResult\022F\n(e_sub_ca_crl_distribu"
      "tion_points_missing\030\223\001 \001(\0132\023.zsearch.Lin"
      "tResult\0223\n\025w_sub_ca_eku_critical\030\224\001 \001(\0132"
      "\023.zsearch.LintResult\022D\n&w_sub_ca_name_co"
      "nstraints_not_critical\030\225\001 \001(\0132\023.zsearch."
      "LintResult\022F\n(e_sub_cert_aia_does_not_co"
      "ntain_ocsp_url\030\231\001 \001(\0132\023.zsearch.LintResu"
      "lt\0224\n\026e_sub_cert_aia_missing\030\232\001 \001(\0132\023.zs"
      "earch.LintResult\022:\n\034e_sub_cert_cert_poli"
      "cy_empty\030\233\001 \001(\0132\023.zsearch.LintResult\022M\n/"
      "w_sub_cert_certificate_policies_marked_c"
      "ritical\030\234\001 \001(\0132\023.zsearch.LintResult\022U\n7e"
      "_sub_cert_crl_distribution_points_does_n"
      "ot_contain_url\030\235\001 \001(\0132\023.zsearch.LintResu"
      "lt\022P\n2e_sub_cert_crl_distribution_points"
      "_marked_critical\030\236\001 \001(\0132\023.zsearch.LintRe"
      "sult\0229\n\033w_sub_cert_eku_extra_values\030\237\001 \001"
      "(\0132\023.zsearch.LintResult\0224\n\026e_sub_cert_ek"
      "u_missing\030\240\001 \001(\0132\023.zsearch.LintResult\022L\n"
      ".e_sub_cert_eku_server_auth_client_auth_"
      "missing\030\241\001 \001(\0132\023.zsearch.LintResult\022D\n&e"
      "_sub_cert_key_usage_cert_sign_bit_set\030\242\001"
      " \001(\0132\023.zsearch.LintResult\022=\n\037e_sub_cert_"
      "or_sub_ca_using_sha1\030\243\001 \001(\0132\023.zsearch.Li"
      "ntResult\022A\n#w_sub_cert_sha1_expiration_t"
      "oo_long\030\244\001 \001(\0132\023.zsearch.LintResult\022<\n\036n"
      "_subject_common_name_included\030\246\001 \001(\0132\023.z"
      "search.LintResult\022@\n\"e_subject_common_na"
      "me_not_from_san\030\247\001 \001(\0132\023.zsearch.LintRes"
      "ult\022G\n)e_subject_contains_noninformation"
      "al_value\030\250\001 \001(\0132\023.zsearch.LintResult\022<\n\036"
      "e_subject_contains_reserved_ip\030\251\001 \001(\0132\023."
      "zsearch.LintResult\0227\n\031e_subject_country_"
      "not_iso\030\252\001 \001(\0132\023.zsearch.LintResult\0229\n\033e"
      "_subject_empty_without_san\030\253\001 \001(\0132\023.zsea"
      "rch.LintResult\022C\n%e_subject_info_access_"
      "marked_critical\030\254\001 \001(\0132\023.zsearch.LintRes"
      "ult\022.\n\020e_subject_not_dn\030\256\001 \001(\0132\023.zsearch"
      ".LintResult\022A\n#e_utc_time_does_not_inclu"
      "de_seconds\030\264\001 \001(\0132\023.zsearch.LintResult\0224"
      "\n\026e_utc_time_not_in_zulu\030\265\001 \001(\0132\023.zsearc"
      "h.LintResult\022:\n\034e_validity_time_not_posi"
      "tive\030\266\001 \001(\0132\023.zsearch.LintResult\0229\n\033e_wr"
      "ong_time_format_pre2050\030\267\001 \001(\0132\023.zsearch"
      ".LintResult\0221\n\023e_rsa_no_public_key\030\270\001 \001("
      "\0132\023.zsearch.LintResult\022E\n\'e_sub_cert_cer"
      "tificate_policies_missing\030\271\001 \001(\0132\023.zsear"
      "ch.LintResult\022C\n%e_sub_cert_key_usage_cr"
      "l_sign_bit_set\030\272\001 \001(\0132\023.zsearch.LintResu"
      "lt\022>\n e_subject_common_name_max_length\030\273"
      "\001 \001(\0132\023.zsearch.LintResult\022@\n\"e_subject_"
      "locality_name_max_length\030\274\001 \001(\0132\023.zsearc"
      "h.LintResult\022D\n&e_subject_organization_n"
      "ame_max_length\030\275\001 \001(\0132\023.zsearch.LintResu"
      "lt\022K\n-e_subject_organizational_unit_name"
      "_max_length\030\276\001 \001(\0132\023.zsearch.LintResult\022"
      "=\n\037e_subject_state_name_max_length\030\277\001 \001("
      "\0132\023.zsearch.LintResult\0224\n\026w_multiple_sub"
      "ject_rdn\030\300\001 \001(\0132\023.zsearch.LintResult\0223\n\025"
      "w_multiple_issuer_rdn\030\301\001 \001(\0132\023.zsearch.L"
      "intResult\022=\n\037w_issuer_dn_trailing_whites"
      "pace\030\302\001 \001(\0132\023.zsearch.LintResult\022<\n\036w_is"
      "suer_dn_leading_whitespace\030\303\001 \001(\0132\023.zsea"
      "rch.LintResult\022>\n w_subject_dn_trailing_"
      "whitespace\030\304\001 \001(\0132\023.zsearch.LintResult\022="
      "\n\037w_subject_dn_leading_whitespace\030\305\001 \001(\013"
      "2\023.zsearch.LintResult\022B\n$e_sub_cert_loca"
      "lity_name_must_appear\030\306\001 \001(\0132\023.zsearch.L"
      "intResult\022A\n#e_signature_algorithm_not_s"
      "upported\030\307\001 \001(\0132\023.zsearch.LintResult\0225\n\027"
      "e_dnsname_hyphen_in_sld\030\310\001 \001(\0132\023.zsearch"
      ".LintResult\022=\n\037e_dsa_correct_order_in_su"
      "bgroup\030\311\001 \001(\0132\023.zsearch.LintResult\022F\n(n_"
      "sub_ca_eku_not_technically_constrained\030\312"
      "\001 \001(\0132\023.zsearch.LintResult\0223\n\025e_dnsname_"
      "empty_label\030\313\001 \001(\0132\023.zsearch.LintResult\022"
      "6\n\030e_ca_common_name_missing\030\314\001 \001(\0132\023.zse"
      "arch.LintResult\022C\n%e_dnsname_wildcard_on"
      "ly_in_left_label\030\315\001 \001(\0132\023.zsearch.LintRe"
      "sult\022<\n\036e_sub_cert_valid_time_too_long\030\316"
      "\001 \001(\0132\023.zsearch.LintResult\022C\n%e_dnsname_"
      "left_label_wildcard_correct\030\317\001 \001(\0132\023.zse"
      "arch.LintResult\0229\n\033w_serial_number_low_e"
      "ntropy\030\320\001 \001(\0132\023.zsearch.LintResult\0226\n\030e_"
      "dnsname_label_too_long\030\321\001 \001(\0132\023.zsearch."
      "LintResult\0229\n\033e_root_ca_key_usage_presen"
      "t\030\322\001 \001(\0132\023.zsearch.LintResult\022F\n(w_dnsna"
      "me_wildcard_left_of_public_suffix\030\323\001 \001(\013"
      "2\023.zsearch.LintResult\022B\n$e_international"
      "_dns_name_not_unicode\030\324\001 \001(\0132\023.zsearch.L"
      "intResult\0229\n\033w_dnsname_underscore_in_trd"
      "\030\325\001 \001(\0132\023.zsearch.LintResult\022L\n.w_sub_ce"
      "rt_aia_does_not_contain_issuing_ca_url\030\326"
      "\001 \001(\0132\023.zsearch.LintResult\022F\n(e_sub_cert"
      "_locality_name_must_not_appear\030\327\001 \001(\0132\023."
      "zsearch.LintResult\022A\n#e_sub_cert_country"
      "_name_must_appear\030\330\001 \001(\0132\023.zsearch.LintR"
      "esult\022>\n e_dnsname_bad_character_in_labe"
      "l\030\331\001 \001(\0132\023.zsearch.LintResult\022B\n$e_sub_c"
      "a_must_not_contain_any_policy\030\332\001 \001(\0132\023.z"
      "search.LintResult\022\?\n!e_international_dns"
      "_name_not_nfkc\030\333\001 \001(\0132\023.zsearch.LintResu"
      "lt\022<\n\036e_sub_cert_aia_marked_critical\030\334\001 "
      "\001(\0132\023.zsearch.LintResult\022(\n\ne_ca_is_ca\030\335"
      "\001 \001(\0132\023.zsearch.LintResult\022H\n*e_sub_cert"
      "_street_address_should_not_exist\030\336\001 \001(\0132"
      "\023.zsearch.LintResult\0222\n\024e_sub_ca_eku_mis"
      "sing\030\337\001 \001(\0132\023.zsearch.LintResult\022A\n#e_su"
      "b_cert_province_must_not_appear\030\340\001 \001(\0132\023"
      ".zsearch.LintResult\0229\n\033e_dnsname_undersc"
      "ore_in_sld\030\341\001 \001(\0132\023.zsearch.LintResult\022;"
      "\n\035e_sub_ca_eku_name_constraints\030\342\001 \001(\0132\023"
      ".zsearch.LintResult\0222\n\024e_sub_cert_not_is"
      "_ca\030\343\001 \001(\0132\023.zsearch.LintResult\022A\n#e_dsa"
      "_unique_correct_representation\030\344\001 \001(\0132\023."
      "zsearch.LintResult\022=\n\037e_sub_cert_provinc"
      "e_must_appear\030\345\001 \001(\0132\023.zsearch.LintResul"
      "t\022B\n$e_root_ca_key_usage_must_be_critica"
      "l\030\346\001 \001(\0132\023.zsearch.LintResult\0229\n\033e_ext_s"
      "an_dns_name_too_long\030\347\001 \001(\0132\023.zsearch.Li"
      "ntResult\0222\n\024e_dsa_params_missing\030\350\001 \001(\0132"
      "\023.zsearch.LintResult\022:\n\034e_sub_ca_aia_mar"
      "ked_critical\030\351\001 \001(\0132\023.zsearch.LintResult"
      "\022S\n5e_sub_cert_given_name_surname_contai"
      "ns_correct_policy\030\352\001 \001(\0132\023.zsearch.LintR"
      "esult\022D\n&e_sub_cert_postal_code_must_not"
      "_appear\030\353\001 \001(\0132\023.zsearch.LintResult\0225\n\027e"
      "_dnsname_not_valid_tld\030\354\001 \001(\0132\023.zsearch."
      "LintResult\0229\n\033n_contains_redacted_dnsnam"
      "e\030\355\001 \001(\0132\023.zsearch.LintResult\022A\n#e_dnsna"
      "me_contains_bare_iana_suffix\030\356\001 \001(\0132\023.zs"
      "earch.LintResult*\365\001\n\020LintResultStatus\022\030\n"
      "\024LINT_RESULT_RESERVED\020\000\022\022\n\016LINT_RESULT_N"
      "A\020\001\022\022\n\016LINT_RESULT_NE\020\002\022\024\n\020LINT_RESULT_P"
      "ASS\020\003\022\024\n\020LINT_RESULT_INFO\020\004\022\026\n\022LINT_RESU"
      "LT_NOTICE\020\005\022\024\n\020LINT_RESULT_WARN\020\006\022\025\n\021LIN"
      "T_RESULT_ERROR\020\007\022\025\n\021LINT_RESULT_FATAL\020\010\022"
      "\027\n\023LINT_RESULT_UNKNOWN\020\t*[\n\013ZLintStatus\022"
      "\031\n\025ZLINT_STATUS_RESERVED\020\000\022\030\n\024ZLINT_STAT"
      "US_SUCCESS\020\001\022\027\n\023ZLINT_STATUS_FAILED\020\002b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 14845);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zlint.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_zlint_2eproto

const ::google::protobuf::EnumDescriptor* LintResultStatus_descriptor() {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_enum_descriptors[0];
}
bool LintResultStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ZLintStatus_descriptor() {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_enum_descriptors[1];
}
bool ZLintStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LintResult::kResultFieldNumber;
const int LintResult::kDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LintResult::LintResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zlint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zsearch.LintResult)
}
LintResult::LintResult(const LintResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.details().size() > 0) {
    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:zsearch.LintResult)
}

void LintResult::SharedCtor() {
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

LintResult::~LintResult() {
  // @@protoc_insertion_point(destructor:zsearch.LintResult)
  SharedDtor();
}

void LintResult::SharedDtor() {
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LintResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LintResult::descriptor() {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_metadata[0].descriptor;
}

const LintResult& LintResult::default_instance() {
  protobuf_zlint_2eproto::InitDefaults();
  return *internal_default_instance();
}

LintResult* LintResult::New(::google::protobuf::Arena* arena) const {
  LintResult* n = new LintResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LintResult::Clear() {
// @@protoc_insertion_point(message_clear_start:zsearch.LintResult)
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool LintResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zsearch.LintResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .zsearch.LintResultStatus result = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::zsearch::LintResultStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string details = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details().data(), this->details().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zsearch.LintResult.details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zsearch.LintResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zsearch.LintResult)
  return false;
#undef DO_
}

void LintResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zsearch.LintResult)
  // .zsearch.LintResultStatus result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // string details = 2;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), this->details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.LintResult.details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->details(), output);
  }

  // @@protoc_insertion_point(serialize_end:zsearch.LintResult)
}

::google::protobuf::uint8* LintResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zsearch.LintResult)
  // .zsearch.LintResultStatus result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // string details = 2;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), this->details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.LintResult.details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->details(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:zsearch.LintResult)
  return target;
}

size_t LintResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zsearch.LintResult)
  size_t total_size = 0;

  // string details = 2;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->details());
  }

  // .zsearch.LintResultStatus result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LintResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zsearch.LintResult)
  GOOGLE_DCHECK_NE(&from, this);
  const LintResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LintResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zsearch.LintResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zsearch.LintResult)
    MergeFrom(*source);
  }
}

void LintResult::MergeFrom(const LintResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zsearch.LintResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.details().size() > 0) {

    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void LintResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zsearch.LintResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LintResult::CopyFrom(const LintResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zsearch.LintResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LintResult::IsInitialized() const {
  return true;
}

void LintResult::Swap(LintResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LintResult::InternalSwap(LintResult* other) {
  details_.Swap(&other->details_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LintResult::GetMetadata() const {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LintResult

// .zsearch.LintResultStatus result = 1;
void LintResult::clear_result() {
  result_ = 0;
}
::zsearch::LintResultStatus LintResult::result() const {
  // @@protoc_insertion_point(field_get:zsearch.LintResult.result)
  return static_cast< ::zsearch::LintResultStatus >(result_);
}
void LintResult::set_result(::zsearch::LintResultStatus value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:zsearch.LintResult.result)
}

// string details = 2;
void LintResult::clear_details() {
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LintResult::details() const {
  // @@protoc_insertion_point(field_get:zsearch.LintResult.details)
  return details_.GetNoArena();
}
void LintResult::set_details(const ::std::string& value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.LintResult.details)
}
#if LANG_CXX11
void LintResult::set_details(::std::string&& value) {
  
  details_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.LintResult.details)
}
#endif
void LintResult::set_details(const char* value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.LintResult.details)
}
void LintResult::set_details(const char* value, size_t size) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.LintResult.details)
}
::std::string* LintResult::mutable_details() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.LintResult.details)
  return details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LintResult::release_details() {
  // @@protoc_insertion_point(field_release:zsearch.LintResult.details)
  
  return details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LintResult::set_allocated_details(::std::string* details) {
  if (details != NULL) {
    
  } else {
    
  }
  details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details);
  // @@protoc_insertion_point(field_set_allocated:zsearch.LintResult.details)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZLint::kVersionFieldNumber;
const int ZLint::kTimestampFieldNumber;
const int ZLint::kStatusFieldNumber;
const int ZLint::kInfosPresentFieldNumber;
const int ZLint::kNoticesPresentFieldNumber;
const int ZLint::kWarningsPresentFieldNumber;
const int ZLint::kErrorsPresentFieldNumber;
const int ZLint::kFatalsPresentFieldNumber;
const int ZLint::kLintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZLint::ZLint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zlint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zsearch.ZLint)
}
ZLint::ZLint(const ZLint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lints()) {
    lints_ = new ::zsearch::Lints(*from.lints_);
  } else {
    lints_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&fatals_present_) -
    reinterpret_cast<char*>(&version_) + sizeof(fatals_present_));
  // @@protoc_insertion_point(copy_constructor:zsearch.ZLint)
}

void ZLint::SharedCtor() {
  ::memset(&lints_, 0, reinterpret_cast<char*>(&fatals_present_) -
    reinterpret_cast<char*>(&lints_) + sizeof(fatals_present_));
  _cached_size_ = 0;
}

ZLint::~ZLint() {
  // @@protoc_insertion_point(destructor:zsearch.ZLint)
  SharedDtor();
}

void ZLint::SharedDtor() {
  if (this != internal_default_instance()) {
    delete lints_;
  }
}

void ZLint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZLint::descriptor() {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_metadata[1].descriptor;
}

const ZLint& ZLint::default_instance() {
  protobuf_zlint_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZLint* ZLint::New(::google::protobuf::Arena* arena) const {
  ZLint* n = new ZLint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZLint::Clear() {
// @@protoc_insertion_point(message_clear_start:zsearch.ZLint)
  if (GetArenaNoVirtual() == NULL && lints_ != NULL) {
    delete lints_;
  }
  lints_ = NULL;
  ::memset(&version_, 0, reinterpret_cast<char*>(&fatals_present_) -
    reinterpret_cast<char*>(&version_) + sizeof(fatals_present_));
}

bool ZLint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zsearch.ZLint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 version = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.ZLintStatus status = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::zsearch::ZLintStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool infos_present = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &infos_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool notices_present = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &notices_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool warnings_present = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &warnings_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool errors_present = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &errors_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fatals_present = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fatals_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.Lints lints = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zsearch.ZLint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zsearch.ZLint)
  return false;
#undef DO_
}

void ZLint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zsearch.ZLint)
  // int64 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // .zsearch.ZLintStatus status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // bool infos_present = 4;
  if (this->infos_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->infos_present(), output);
  }

  // bool notices_present = 5;
  if (this->notices_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->notices_present(), output);
  }

  // bool warnings_present = 6;
  if (this->warnings_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->warnings_present(), output);
  }

  // bool errors_present = 7;
  if (this->errors_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->errors_present(), output);
  }

  // bool fatals_present = 8;
  if (this->fatals_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->fatals_present(), output);
  }

  // .zsearch.Lints lints = 9;
  if (this->has_lints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->lints_, output);
  }

  // @@protoc_insertion_point(serialize_end:zsearch.ZLint)
}

::google::protobuf::uint8* ZLint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zsearch.ZLint)
  // int64 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->version(), target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // .zsearch.ZLintStatus status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // bool infos_present = 4;
  if (this->infos_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->infos_present(), target);
  }

  // bool notices_present = 5;
  if (this->notices_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->notices_present(), target);
  }

  // bool warnings_present = 6;
  if (this->warnings_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->warnings_present(), target);
  }

  // bool errors_present = 7;
  if (this->errors_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->errors_present(), target);
  }

  // bool fatals_present = 8;
  if (this->fatals_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->fatals_present(), target);
  }

  // .zsearch.Lints lints = 9;
  if (this->has_lints()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->lints_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:zsearch.ZLint)
  return target;
}

size_t ZLint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zsearch.ZLint)
  size_t total_size = 0;

  // .zsearch.Lints lints = 9;
  if (this->has_lints()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lints_);
  }

  // int64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // .zsearch.ZLintStatus status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // bool infos_present = 4;
  if (this->infos_present() != 0) {
    total_size += 1 + 1;
  }

  // bool notices_present = 5;
  if (this->notices_present() != 0) {
    total_size += 1 + 1;
  }

  // bool warnings_present = 6;
  if (this->warnings_present() != 0) {
    total_size += 1 + 1;
  }

  // bool errors_present = 7;
  if (this->errors_present() != 0) {
    total_size += 1 + 1;
  }

  // bool fatals_present = 8;
  if (this->fatals_present() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZLint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zsearch.ZLint)
  GOOGLE_DCHECK_NE(&from, this);
  const ZLint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZLint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zsearch.ZLint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zsearch.ZLint)
    MergeFrom(*source);
  }
}

void ZLint::MergeFrom(const ZLint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zsearch.ZLint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lints()) {
    mutable_lints()->::zsearch::Lints::MergeFrom(from.lints());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.infos_present() != 0) {
    set_infos_present(from.infos_present());
  }
  if (from.notices_present() != 0) {
    set_notices_present(from.notices_present());
  }
  if (from.warnings_present() != 0) {
    set_warnings_present(from.warnings_present());
  }
  if (from.errors_present() != 0) {
    set_errors_present(from.errors_present());
  }
  if (from.fatals_present() != 0) {
    set_fatals_present(from.fatals_present());
  }
}

void ZLint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zsearch.ZLint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZLint::CopyFrom(const ZLint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zsearch.ZLint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZLint::IsInitialized() const {
  return true;
}

void ZLint::Swap(ZLint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZLint::InternalSwap(ZLint* other) {
  std::swap(lints_, other->lints_);
  std::swap(version_, other->version_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(status_, other->status_);
  std::swap(infos_present_, other->infos_present_);
  std::swap(notices_present_, other->notices_present_);
  std::swap(warnings_present_, other->warnings_present_);
  std::swap(errors_present_, other->errors_present_);
  std::swap(fatals_present_, other->fatals_present_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZLint::GetMetadata() const {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZLint

// int64 version = 1;
void ZLint::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ZLint::version() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.version)
  return version_;
}
void ZLint::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.version)
}

// int64 timestamp = 2;
void ZLint::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ZLint::timestamp() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.timestamp)
  return timestamp_;
}
void ZLint::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.timestamp)
}

// .zsearch.ZLintStatus status = 3;
void ZLint::clear_status() {
  status_ = 0;
}
::zsearch::ZLintStatus ZLint::status() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.status)
  return static_cast< ::zsearch::ZLintStatus >(status_);
}
void ZLint::set_status(::zsearch::ZLintStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.status)
}

// bool infos_present = 4;
void ZLint::clear_infos_present() {
  infos_present_ = false;
}
bool ZLint::infos_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.infos_present)
  return infos_present_;
}
void ZLint::set_infos_present(bool value) {
  
  infos_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.infos_present)
}

// bool notices_present = 5;
void ZLint::clear_notices_present() {
  notices_present_ = false;
}
bool ZLint::notices_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.notices_present)
  return notices_present_;
}
void ZLint::set_notices_present(bool value) {
  
  notices_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.notices_present)
}

// bool warnings_present = 6;
void ZLint::clear_warnings_present() {
  warnings_present_ = false;
}
bool ZLint::warnings_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.warnings_present)
  return warnings_present_;
}
void ZLint::set_warnings_present(bool value) {
  
  warnings_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.warnings_present)
}

// bool errors_present = 7;
void ZLint::clear_errors_present() {
  errors_present_ = false;
}
bool ZLint::errors_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.errors_present)
  return errors_present_;
}
void ZLint::set_errors_present(bool value) {
  
  errors_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.errors_present)
}

// bool fatals_present = 8;
void ZLint::clear_fatals_present() {
  fatals_present_ = false;
}
bool ZLint::fatals_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.fatals_present)
  return fatals_present_;
}
void ZLint::set_fatals_present(bool value) {
  
  fatals_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.fatals_present)
}

// .zsearch.Lints lints = 9;
bool ZLint::has_lints() const {
  return this != internal_default_instance() && lints_ != NULL;
}
void ZLint::clear_lints() {
  if (GetArenaNoVirtual() == NULL && lints_ != NULL) delete lints_;
  lints_ = NULL;
}
const ::zsearch::Lints& ZLint::lints() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.lints)
  return lints_ != NULL ? *lints_
                         : *::zsearch::Lints::internal_default_instance();
}
::zsearch::Lints* ZLint::mutable_lints() {
  
  if (lints_ == NULL) {
    lints_ = new ::zsearch::Lints;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.ZLint.lints)
  return lints_;
}
::zsearch::Lints* ZLint::release_lints() {
  // @@protoc_insertion_point(field_release:zsearch.ZLint.lints)
  
  ::zsearch::Lints* temp = lints_;
  lints_ = NULL;
  return temp;
}
void ZLint::set_allocated_lints(::zsearch::Lints* lints) {
  delete lints_;
  lints_ = lints;
  if (lints) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.ZLint.lints)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lints::kEBasicConstraintsNotCriticalFieldNumber;
const int Lints::kEIanBareWildcardFieldNumber;
const int Lints::kEIanWildcardNotFirstFieldNumber;
const int Lints::kESanBareWildcardFieldNumber;
const int Lints::kESanWildcardNotFirstFieldNumber;
const int Lints::kECaCountryNameInvalidFieldNumber;
const int Lints::kECaCountryNameMissingFieldNumber;
const int Lints::kECaCrlSignNotSetFieldNumber;
const int Lints::kNCaDigitalSignatureNotSetFieldNumber;
const int Lints::kECaKeyCertSignNotSetFieldNumber;
const int Lints::kECaKeyUsageMissingFieldNumber;
const int Lints::kECaKeyUsageNotCriticalFieldNumber;
const int Lints::kECaOrganizationNameMissingFieldNumber;
const int Lints::kECaSubjectFieldEmptyFieldNumber;
const int Lints::kECertContainsUniqueIdentifierFieldNumber;
const int Lints::kECertExtensionsVersionNot3FieldNumber;
const int Lints::kECabDvConflictsWithLocalityFieldNumber;
const int Lints::kECabDvConflictsWithOrgFieldNumber;
const int Lints::kECabDvConflictsWithPostalFieldNumber;
const int Lints::kECabDvConflictsWithProvinceFieldNumber;
const int Lints::kECabDvConflictsWithStreetFieldNumber;
const int Lints::kECertPolicyIvRequiresCountryFieldNumber;
const int Lints::kECertPolicyIvRequiresProvinceOrLocalityFieldNumber;
const int Lints::kECertPolicyOvRequiresCountryFieldNumber;
const int Lints::kECertPolicyOvRequiresProvinceOrLocalityFieldNumber;
const int Lints::kECabOvRequiresOrgFieldNumber;
const int Lints::kECabIvRequiresPersonalNameFieldNumber;
const int Lints::kECertUniqueIdentifierVersionNot2Or3FieldNumber;
const int Lints::kEDistributionPointIncompleteFieldNumber;
const int Lints::kWDistributionPointMissingLdapOrUriFieldNumber;
const int Lints::kEDsaImproperModulusOrDivisorSizeFieldNumber;
const int Lints::kEDsaShorterThan2048BitsFieldNumber;
const int Lints::kEEcImproperCurvesFieldNumber;
const int Lints::kWEkuCriticalImproperlyFieldNumber;
const int Lints::kEEvBusinessCategoryMissingFieldNumber;
const int Lints::kEEvCountryNameMissingFieldNumber;
const int Lints::kEEvLocalityNameMissingFieldNumber;
const int Lints::kEEvOrganizationNameMissingFieldNumber;
const int Lints::kEEvSerialNumberMissingFieldNumber;
const int Lints::kEEvValidTimeTooLongFieldNumber;
const int Lints::kWExtAiaAccessLocationMissingFieldNumber;
const int Lints::kEExtAiaMarkedCriticalFieldNumber;
const int Lints::kEExtAuthorityKeyIdentifierCriticalFieldNumber;
const int Lints::kEExtAuthorityKeyIdentifierMissingFieldNumber;
const int Lints::kEExtAuthorityKeyIdentifierNoKeyIdentifierFieldNumber;
const int Lints::kWExtCertPolicyContainsNoticerefFieldNumber;
const int Lints::kEExtCertPolicyDisallowedAnyPolicyQualifierFieldNumber;
const int Lints::kEExtCertPolicyDuplicateFieldNumber;
const int Lints::kEExtCertPolicyExplicitTextIa5StringFieldNumber;
const int Lints::kWExtCertPolicyExplicitTextIncludesControlFieldNumber;
const int Lints::kWExtCertPolicyExplicitTextNotNfcFieldNumber;
const int Lints::kWExtCertPolicyExplicitTextNotUtf8FieldNumber;
const int Lints::kEExtCertPolicyExplicitTextTooLongFieldNumber;
const int Lints::kWExtCrlDistributionMarkedCriticalFieldNumber;
const int Lints::kEExtDuplicateExtensionFieldNumber;
const int Lints::kEExtFreshestCrlMarkedCriticalFieldNumber;
const int Lints::kWExtIanCriticalFieldNumber;
const int Lints::kEExtIanDnsNotIa5StringFieldNumber;
const int Lints::kEExtIanEmptyNameFieldNumber;
const int Lints::kEExtIanNoEntriesFieldNumber;
const int Lints::kEExtIanRfc822FormatInvalidFieldNumber;
const int Lints::kEExtIanSpaceDnsNameFieldNumber;
const int Lints::kEExtIanUriFormatInvalidFieldNumber;
const int Lints::kEExtIanUriHostNotFqdnOrIpFieldNumber;
const int Lints::kEExtIanUriNotIa5FieldNumber;
const int Lints::kEExtIanUriRelativeFieldNumber;
const int Lints::kEExtKeyUsageCertSignWithoutCaFieldNumber;
const int Lints::kWExtKeyUsageNotCriticalFieldNumber;
const int Lints::kEExtKeyUsageWithoutBitsFieldNumber;
const int Lints::kEExtNameConstraintsNotCriticalFieldNumber;
const int Lints::kEExtNameConstraintsNotInCaFieldNumber;
const int Lints::kEExtPolicyConstraintsEmptyFieldNumber;
const int Lints::kEExtPolicyConstraintsNotCriticalFieldNumber;
const int Lints::kEExtPolicyMapAnyPolicyFieldNumber;
const int Lints::kWExtPolicyMapNotCriticalFieldNumber;
const int Lints::kWExtPolicyMapNotInCertPolicyFieldNumber;
const int Lints::kEExtSanContainsReservedIpFieldNumber;
const int Lints::kWExtSanCriticalWithSubjectDnFieldNumber;
const int Lints::kEExtSanDirectoryNamePresentFieldNumber;
const int Lints::kEExtSanDnsNotIa5StringFieldNumber;
const int Lints::kEExtSanEdiPartyNamePresentFieldNumber;
const int Lints::kEExtSanEmptyNameFieldNumber;
const int Lints::kEExtSanMissingFieldNumber;
const int Lints::kEExtSanNoEntriesFieldNumber;
const int Lints::kEExtSanNotCriticalWithoutSubjectFieldNumber;
const int Lints::kEExtSanOtherNamePresentFieldNumber;
const int Lints::kEExtSanRegisteredIdPresentFieldNumber;
const int Lints::kEExtSanRfc822FormatInvalidFieldNumber;
const int Lints::kEExtSanRfc822NamePresentFieldNumber;
const int Lints::kEExtSanSpaceDnsNameFieldNumber;
const int Lints::kEExtSanUniformResourceIdentifierPresentFieldNumber;
const int Lints::kEExtSanUriFormatInvalidFieldNumber;
const int Lints::kEExtSanUriHostNotFqdnOrIpFieldNumber;
const int Lints::kEExtSanUriNotIa5FieldNumber;
const int Lints::kEExtSanUriRelativeFieldNumber;
const int Lints::kEExtSubjectDirectoryAttrCriticalFieldNumber;
const int Lints::kEExtSubjectKeyIdentifierCriticalFieldNumber;
const int Lints::kEExtSubjectKeyIdentifierMissingCaFieldNumber;
const int Lints::kWExtSubjectKeyIdentifierMissingSubCertFieldNumber;
const int Lints::kEGeneralizedTimeDoesNotIncludeSecondsFieldNumber;
const int Lints::kEGeneralizedTimeIncludesFractionSecondsFieldNumber;
const int Lints::kEGeneralizedTimeNotInZuluFieldNumber;
const int Lints::kEIanDnsNameIncludesNullCharFieldNumber;
const int Lints::kEIanDnsNameStartsWithPeriodFieldNumber;
const int Lints::kWIanIanaPubSuffixEmptyFieldNumber;
const int Lints::kEInhibitAnyPolicyNotCriticalFieldNumber;
const int Lints::kEInvalidCertificateVersionFieldNumber;
const int Lints::kEIssuerFieldEmptyFieldNumber;
const int Lints::kENameConstraintEmptyFieldNumber;
const int Lints::kENameConstraintMaximumNotAbsentFieldNumber;
const int Lints::kENameConstraintMinimumNonZeroFieldNumber;
const int Lints::kWNameConstraintOnEdiPartyNameFieldNumber;
const int Lints::kWNameConstraintOnRegisteredIdFieldNumber;
const int Lints::kWNameConstraintOnX400FieldNumber;
const int Lints::kEOldRootCaRsaModLessThan2048BitsFieldNumber;
const int Lints::kEOldSubCaRsaModLessThan1024BitsFieldNumber;
const int Lints::kEOldSubCertRsaModLessThan1024BitsFieldNumber;
const int Lints::kEPathLenConstraintImproperlyIncludedFieldNumber;
const int Lints::kEPathLenConstraintZeroOrLessFieldNumber;
const int Lints::kEPublicKeyTypeNotAllowedFieldNumber;
const int Lints::kWRootCaBasicConstraintsPathLenConstraintFieldPresentFieldNumber;
const int Lints::kWRootCaContainsCertPolicyFieldNumber;
const int Lints::kERootCaExtendedKeyUsagePresentFieldNumber;
const int Lints::kERsaExpNegativeFieldNumber;
const int Lints::kWRsaModFactorsSmallerThan752FieldNumber;
const int Lints::kERsaModLessThan2048BitsFieldNumber;
const int Lints::kWRsaModNotOddFieldNumber;
const int Lints::kWRsaPublicExponentNotInRangeFieldNumber;
const int Lints::kERsaPublicExponentNotOddFieldNumber;
const int Lints::kERsaPublicExponentTooSmallFieldNumber;
const int Lints::kESanDnsNameIncludesNullCharFieldNumber;
const int Lints::kESanDnsNameStartsWithPeriodFieldNumber;
const int Lints::kWSanIanaPubSuffixEmptyFieldNumber;
const int Lints::kESerialNumberLongerThan20OctetsFieldNumber;
const int Lints::kESerialNumberNotPositiveFieldNumber;
const int Lints::kWSubCaAiaDoesNotContainIssuingCaUrlFieldNumber;
const int Lints::kESubCaAiaDoesNotContainOcspUrlFieldNumber;
const int Lints::kESubCaAiaMissingFieldNumber;
const int Lints::kWSubCaCertificatePoliciesMarkedCriticalFieldNumber;
const int Lints::kESubCaCertificatePoliciesMissingFieldNumber;
const int Lints::kESubCaCrlDistributionPointsDoesNotContainUrlFieldNumber;
const int Lints::kESubCaCrlDistributionPointsMarkedCriticalFieldNumber;
const int Lints::kESubCaCrlDistributionPointsMissingFieldNumber;
const int Lints::kWSubCaEkuCriticalFieldNumber;
const int Lints::kWSubCaNameConstraintsNotCriticalFieldNumber;
const int Lints::kESubCertAiaDoesNotContainOcspUrlFieldNumber;
const int Lints::kESubCertAiaMissingFieldNumber;
const int Lints::kESubCertCertPolicyEmptyFieldNumber;
const int Lints::kWSubCertCertificatePoliciesMarkedCriticalFieldNumber;
const int Lints::kESubCertCrlDistributionPointsDoesNotContainUrlFieldNumber;
const int Lints::kESubCertCrlDistributionPointsMarkedCriticalFieldNumber;
const int Lints::kWSubCertEkuExtraValuesFieldNumber;
const int Lints::kESubCertEkuMissingFieldNumber;
const int Lints::kESubCertEkuServerAuthClientAuthMissingFieldNumber;
const int Lints::kESubCertKeyUsageCertSignBitSetFieldNumber;
const int Lints::kESubCertOrSubCaUsingSha1FieldNumber;
const int Lints::kWSubCertSha1ExpirationTooLongFieldNumber;
const int Lints::kNSubjectCommonNameIncludedFieldNumber;
const int Lints::kESubjectCommonNameNotFromSanFieldNumber;
const int Lints::kESubjectContainsNoninformationalValueFieldNumber;
const int Lints::kESubjectContainsReservedIpFieldNumber;
const int Lints::kESubjectCountryNotIsoFieldNumber;
const int Lints::kESubjectEmptyWithoutSanFieldNumber;
const int Lints::kESubjectInfoAccessMarkedCriticalFieldNumber;
const int Lints::kESubjectNotDnFieldNumber;
const int Lints::kEUtcTimeDoesNotIncludeSecondsFieldNumber;
const int Lints::kEUtcTimeNotInZuluFieldNumber;
const int Lints::kEValidityTimeNotPositiveFieldNumber;
const int Lints::kEWrongTimeFormatPre2050FieldNumber;
const int Lints::kERsaNoPublicKeyFieldNumber;
const int Lints::kESubCertCertificatePoliciesMissingFieldNumber;
const int Lints::kESubCertKeyUsageCrlSignBitSetFieldNumber;
const int Lints::kESubjectCommonNameMaxLengthFieldNumber;
const int Lints::kESubjectLocalityNameMaxLengthFieldNumber;
const int Lints::kESubjectOrganizationNameMaxLengthFieldNumber;
const int Lints::kESubjectOrganizationalUnitNameMaxLengthFieldNumber;
const int Lints::kESubjectStateNameMaxLengthFieldNumber;
const int Lints::kWMultipleSubjectRdnFieldNumber;
const int Lints::kWMultipleIssuerRdnFieldNumber;
const int Lints::kWIssuerDnTrailingWhitespaceFieldNumber;
const int Lints::kWIssuerDnLeadingWhitespaceFieldNumber;
const int Lints::kWSubjectDnTrailingWhitespaceFieldNumber;
const int Lints::kWSubjectDnLeadingWhitespaceFieldNumber;
const int Lints::kESubCertLocalityNameMustAppearFieldNumber;
const int Lints::kESignatureAlgorithmNotSupportedFieldNumber;
const int Lints::kEDnsnameHyphenInSldFieldNumber;
const int Lints::kEDsaCorrectOrderInSubgroupFieldNumber;
const int Lints::kNSubCaEkuNotTechnicallyConstrainedFieldNumber;
const int Lints::kEDnsnameEmptyLabelFieldNumber;
const int Lints::kECaCommonNameMissingFieldNumber;
const int Lints::kEDnsnameWildcardOnlyInLeftLabelFieldNumber;
const int Lints::kESubCertValidTimeTooLongFieldNumber;
const int Lints::kEDnsnameLeftLabelWildcardCorrectFieldNumber;
const int Lints::kWSerialNumberLowEntropyFieldNumber;
const int Lints::kEDnsnameLabelTooLongFieldNumber;
const int Lints::kERootCaKeyUsagePresentFieldNumber;
const int Lints::kWDnsnameWildcardLeftOfPublicSuffixFieldNumber;
const int Lints::kEInternationalDnsNameNotUnicodeFieldNumber;
const int Lints::kWDnsnameUnderscoreInTrdFieldNumber;
const int Lints::kWSubCertAiaDoesNotContainIssuingCaUrlFieldNumber;
const int Lints::kESubCertLocalityNameMustNotAppearFieldNumber;
const int Lints::kESubCertCountryNameMustAppearFieldNumber;
const int Lints::kEDnsnameBadCharacterInLabelFieldNumber;
const int Lints::kESubCaMustNotContainAnyPolicyFieldNumber;
const int Lints::kEInternationalDnsNameNotNfkcFieldNumber;
const int Lints::kESubCertAiaMarkedCriticalFieldNumber;
const int Lints::kECaIsCaFieldNumber;
const int Lints::kESubCertStreetAddressShouldNotExistFieldNumber;
const int Lints::kESubCaEkuMissingFieldNumber;
const int Lints::kESubCertProvinceMustNotAppearFieldNumber;
const int Lints::kEDnsnameUnderscoreInSldFieldNumber;
const int Lints::kESubCaEkuNameConstraintsFieldNumber;
const int Lints::kESubCertNotIsCaFieldNumber;
const int Lints::kEDsaUniqueCorrectRepresentationFieldNumber;
const int Lints::kESubCertProvinceMustAppearFieldNumber;
const int Lints::kERootCaKeyUsageMustBeCriticalFieldNumber;
const int Lints::kEExtSanDnsNameTooLongFieldNumber;
const int Lints::kEDsaParamsMissingFieldNumber;
const int Lints::kESubCaAiaMarkedCriticalFieldNumber;
const int Lints::kESubCertGivenNameSurnameContainsCorrectPolicyFieldNumber;
const int Lints::kESubCertPostalCodeMustNotAppearFieldNumber;
const int Lints::kEDnsnameNotValidTldFieldNumber;
const int Lints::kNContainsRedactedDnsnameFieldNumber;
const int Lints::kEDnsnameContainsBareIanaSuffixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lints::Lints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zlint_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zsearch.Lints)
}
Lints::Lints(const Lints& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_e_basic_constraints_not_critical()) {
    e_basic_constraints_not_critical_ = new ::zsearch::LintResult(*from.e_basic_constraints_not_critical_);
  } else {
    e_basic_constraints_not_critical_ = NULL;
  }
  if (from.has_e_ian_bare_wildcard()) {
    e_ian_bare_wildcard_ = new ::zsearch::LintResult(*from.e_ian_bare_wildcard_);
  } else {
    e_ian_bare_wildcard_ = NULL;
  }
  if (from.has_e_ian_wildcard_not_first()) {
    e_ian_wildcard_not_first_ = new ::zsearch::LintResult(*from.e_ian_wildcard_not_first_);
  } else {
    e_ian_wildcard_not_first_ = NULL;
  }
  if (from.has_e_san_bare_wildcard()) {
    e_san_bare_wildcard_ = new ::zsearch::LintResult(*from.e_san_bare_wildcard_);
  } else {
    e_san_bare_wildcard_ = NULL;
  }
  if (from.has_e_san_wildcard_not_first()) {
    e_san_wildcard_not_first_ = new ::zsearch::LintResult(*from.e_san_wildcard_not_first_);
  } else {
    e_san_wildcard_not_first_ = NULL;
  }
  if (from.has_e_ca_country_name_invalid()) {
    e_ca_country_name_invalid_ = new ::zsearch::LintResult(*from.e_ca_country_name_invalid_);
  } else {
    e_ca_country_name_invalid_ = NULL;
  }
  if (from.has_e_ca_country_name_missing()) {
    e_ca_country_name_missing_ = new ::zsearch::LintResult(*from.e_ca_country_name_missing_);
  } else {
    e_ca_country_name_missing_ = NULL;
  }
  if (from.has_e_ca_crl_sign_not_set()) {
    e_ca_crl_sign_not_set_ = new ::zsearch::LintResult(*from.e_ca_crl_sign_not_set_);
  } else {
    e_ca_crl_sign_not_set_ = NULL;
  }
  if (from.has_n_ca_digital_signature_not_set()) {
    n_ca_digital_signature_not_set_ = new ::zsearch::LintResult(*from.n_ca_digital_signature_not_set_);
  } else {
    n_ca_digital_signature_not_set_ = NULL;
  }
  if (from.has_e_ca_key_cert_sign_not_set()) {
    e_ca_key_cert_sign_not_set_ = new ::zsearch::LintResult(*from.e_ca_key_cert_sign_not_set_);
  } else {
    e_ca_key_cert_sign_not_set_ = NULL;
  }
  if (from.has_e_ca_key_usage_missing()) {
    e_ca_key_usage_missing_ = new ::zsearch::LintResult(*from.e_ca_key_usage_missing_);
  } else {
    e_ca_key_usage_missing_ = NULL;
  }
  if (from.has_e_ca_key_usage_not_critical()) {
    e_ca_key_usage_not_critical_ = new ::zsearch::LintResult(*from.e_ca_key_usage_not_critical_);
  } else {
    e_ca_key_usage_not_critical_ = NULL;
  }
  if (from.has_e_ca_organization_name_missing()) {
    e_ca_organization_name_missing_ = new ::zsearch::LintResult(*from.e_ca_organization_name_missing_);
  } else {
    e_ca_organization_name_missing_ = NULL;
  }
  if (from.has_e_ca_subject_field_empty()) {
    e_ca_subject_field_empty_ = new ::zsearch::LintResult(*from.e_ca_subject_field_empty_);
  } else {
    e_ca_subject_field_empty_ = NULL;
  }
  if (from.has_e_cert_contains_unique_identifier()) {
    e_cert_contains_unique_identifier_ = new ::zsearch::LintResult(*from.e_cert_contains_unique_identifier_);
  } else {
    e_cert_contains_unique_identifier_ = NULL;
  }
  if (from.has_e_cert_extensions_version_not_3()) {
    e_cert_extensions_version_not_3_ = new ::zsearch::LintResult(*from.e_cert_extensions_version_not_3_);
  } else {
    e_cert_extensions_version_not_3_ = NULL;
  }
  if (from.has_e_cab_dv_conflicts_with_locality()) {
    e_cab_dv_conflicts_with_locality_ = new ::zsearch::LintResult(*from.e_cab_dv_conflicts_with_locality_);
  } else {
    e_cab_dv_conflicts_with_locality_ = NULL;
  }
  if (from.has_e_cab_dv_conflicts_with_org()) {
    e_cab_dv_conflicts_with_org_ = new ::zsearch::LintResult(*from.e_cab_dv_conflicts_with_org_);
  } else {
    e_cab_dv_conflicts_with_org_ = NULL;
  }
  if (from.has_e_cab_dv_conflicts_with_postal()) {
    e_cab_dv_conflicts_with_postal_ = new ::zsearch::LintResult(*from.e_cab_dv_conflicts_with_postal_);
  } else {
    e_cab_dv_conflicts_with_postal_ = NULL;
  }
  if (from.has_e_cab_dv_conflicts_with_province()) {
    e_cab_dv_conflicts_with_province_ = new ::zsearch::LintResult(*from.e_cab_dv_conflicts_with_province_);
  } else {
    e_cab_dv_conflicts_with_province_ = NULL;
  }
  if (from.has_e_cab_dv_conflicts_with_street()) {
    e_cab_dv_conflicts_with_street_ = new ::zsearch::LintResult(*from.e_cab_dv_conflicts_with_street_);
  } else {
    e_cab_dv_conflicts_with_street_ = NULL;
  }
  if (from.has_e_cert_policy_iv_requires_country()) {
    e_cert_policy_iv_requires_country_ = new ::zsearch::LintResult(*from.e_cert_policy_iv_requires_country_);
  } else {
    e_cert_policy_iv_requires_country_ = NULL;
  }
  if (from.has_e_cert_policy_iv_requires_province_or_locality()) {
    e_cert_policy_iv_requires_province_or_locality_ = new ::zsearch::LintResult(*from.e_cert_policy_iv_requires_province_or_locality_);
  } else {
    e_cert_policy_iv_requires_province_or_locality_ = NULL;
  }
  if (from.has_e_cert_policy_ov_requires_country()) {
    e_cert_policy_ov_requires_country_ = new ::zsearch::LintResult(*from.e_cert_policy_ov_requires_country_);
  } else {
    e_cert_policy_ov_requires_country_ = NULL;
  }
  if (from.has_e_cert_policy_ov_requires_province_or_locality()) {
    e_cert_policy_ov_requires_province_or_locality_ = new ::zsearch::LintResult(*from.e_cert_policy_ov_requires_province_or_locality_);
  } else {
    e_cert_policy_ov_requires_province_or_locality_ = NULL;
  }
  if (from.has_e_cab_ov_requires_org()) {
    e_cab_ov_requires_org_ = new ::zsearch::LintResult(*from.e_cab_ov_requires_org_);
  } else {
    e_cab_ov_requires_org_ = NULL;
  }
  if (from.has_e_cab_iv_requires_personal_name()) {
    e_cab_iv_requires_personal_name_ = new ::zsearch::LintResult(*from.e_cab_iv_requires_personal_name_);
  } else {
    e_cab_iv_requires_personal_name_ = NULL;
  }
  if (from.has_e_cert_unique_identifier_version_not_2_or_3()) {
    e_cert_unique_identifier_version_not_2_or_3_ = new ::zsearch::LintResult(*from.e_cert_unique_identifier_version_not_2_or_3_);
  } else {
    e_cert_unique_identifier_version_not_2_or_3_ = NULL;
  }
  if (from.has_e_distribution_point_incomplete()) {
    e_distribution_point_incomplete_ = new ::zsearch::LintResult(*from.e_distribution_point_incomplete_);
  } else {
    e_distribution_point_incomplete_ = NULL;
  }
  if (from.has_w_distribution_point_missing_ldap_or_uri()) {
    w_distribution_point_missing_ldap_or_uri_ = new ::zsearch::LintResult(*from.w_distribution_point_missing_ldap_or_uri_);
  } else {
    w_distribution_point_missing_ldap_or_uri_ = NULL;
  }
  if (from.has_e_dsa_improper_modulus_or_divisor_size()) {
    e_dsa_improper_modulus_or_divisor_size_ = new ::zsearch::LintResult(*from.e_dsa_improper_modulus_or_divisor_size_);
  } else {
    e_dsa_improper_modulus_or_divisor_size_ = NULL;
  }
  if (from.has_e_dsa_shorter_than_2048_bits()) {
    e_dsa_shorter_than_2048_bits_ = new ::zsearch::LintResult(*from.e_dsa_shorter_than_2048_bits_);
  } else {
    e_dsa_shorter_than_2048_bits_ = NULL;
  }
  if (from.has_e_ec_improper_curves()) {
    e_ec_improper_curves_ = new ::zsearch::LintResult(*from.e_ec_improper_curves_);
  } else {
    e_ec_improper_curves_ = NULL;
  }
  if (from.has_w_eku_critical_improperly()) {
    w_eku_critical_improperly_ = new ::zsearch::LintResult(*from.w_eku_critical_improperly_);
  } else {
    w_eku_critical_improperly_ = NULL;
  }
  if (from.has_e_ev_business_category_missing()) {
    e_ev_business_category_missing_ = new ::zsearch::LintResult(*from.e_ev_business_category_missing_);
  } else {
    e_ev_business_category_missing_ = NULL;
  }
  if (from.has_e_ev_country_name_missing()) {
    e_ev_country_name_missing_ = new ::zsearch::LintResult(*from.e_ev_country_name_missing_);
  } else {
    e_ev_country_name_missing_ = NULL;
  }
  if (from.has_e_ev_locality_name_missing()) {
    e_ev_locality_name_missing_ = new ::zsearch::LintResult(*from.e_ev_locality_name_missing_);
  } else {
    e_ev_locality_name_missing_ = NULL;
  }
  if (from.has_e_ev_organization_name_missing()) {
    e_ev_organization_name_missing_ = new ::zsearch::LintResult(*from.e_ev_organization_name_missing_);
  } else {
    e_ev_organization_name_missing_ = NULL;
  }
  if (from.has_e_ev_serial_number_missing()) {
    e_ev_serial_number_missing_ = new ::zsearch::LintResult(*from.e_ev_serial_number_missing_);
  } else {
    e_ev_serial_number_missing_ = NULL;
  }
  if (from.has_e_ev_valid_time_too_long()) {
    e_ev_valid_time_too_long_ = new ::zsearch::LintResult(*from.e_ev_valid_time_too_long_);
  } else {
    e_ev_valid_time_too_long_ = NULL;
  }
  if (from.has_w_ext_aia_access_location_missing()) {
    w_ext_aia_access_location_missing_ = new ::zsearch::LintResult(*from.w_ext_aia_access_location_missing_);
  } else {
    w_ext_aia_access_location_missing_ = NULL;
  }
  if (from.has_e_ext_aia_marked_critical()) {
    e_ext_aia_marked_critical_ = new ::zsearch::LintResult(*from.e_ext_aia_marked_critical_);
  } else {
    e_ext_aia_marked_critical_ = NULL;
  }
  if (from.has_e_ext_authority_key_identifier_critical()) {
    e_ext_authority_key_identifier_critical_ = new ::zsearch::LintResult(*from.e_ext_authority_key_identifier_critical_);
  } else {
    e_ext_authority_key_identifier_critical_ = NULL;
  }
  if (from.has_e_ext_authority_key_identifier_missing()) {
    e_ext_authority_key_identifier_missing_ = new ::zsearch::LintResult(*from.e_ext_authority_key_identifier_missing_);
  } else {
    e_ext_authority_key_identifier_missing_ = NULL;
  }
  if (from.has_e_ext_authority_key_identifier_no_key_identifier()) {
    e_ext_authority_key_identifier_no_key_identifier_ = new ::zsearch::LintResult(*from.e_ext_authority_key_identifier_no_key_identifier_);
  } else {
    e_ext_authority_key_identifier_no_key_identifier_ = NULL;
  }
  if (from.has_w_ext_cert_policy_contains_noticeref()) {
    w_ext_cert_policy_contains_noticeref_ = new ::zsearch::LintResult(*from.w_ext_cert_policy_contains_noticeref_);
  } else {
    w_ext_cert_policy_contains_noticeref_ = NULL;
  }
  if (from.has_e_ext_cert_policy_disallowed_any_policy_qualifier()) {
    e_ext_cert_policy_disallowed_any_policy_qualifier_ = new ::zsearch::LintResult(*from.e_ext_cert_policy_disallowed_any_policy_qualifier_);
  } else {
    e_ext_cert_policy_disallowed_any_policy_qualifier_ = NULL;
  }
  if (from.has_e_ext_cert_policy_duplicate()) {
    e_ext_cert_policy_duplicate_ = new ::zsearch::LintResult(*from.e_ext_cert_policy_duplicate_);
  } else {
    e_ext_cert_policy_duplicate_ = NULL;
  }
  if (from.has_e_ext_cert_policy_explicit_text_ia5_string()) {
    e_ext_cert_policy_explicit_text_ia5_string_ = new ::zsearch::LintResult(*from.e_ext_cert_policy_explicit_text_ia5_string_);
  } else {
    e_ext_cert_policy_explicit_text_ia5_string_ = NULL;
  }
  if (from.has_w_ext_cert_policy_explicit_text_includes_control()) {
    w_ext_cert_policy_explicit_text_includes_control_ = new ::zsearch::LintResult(*from.w_ext_cert_policy_explicit_text_includes_control_);
  } else {
    w_ext_cert_policy_explicit_text_includes_control_ = NULL;
  }
  if (from.has_w_ext_cert_policy_explicit_text_not_nfc()) {
    w_ext_cert_policy_explicit_text_not_nfc_ = new ::zsearch::LintResult(*from.w_ext_cert_policy_explicit_text_not_nfc_);
  } else {
    w_ext_cert_policy_explicit_text_not_nfc_ = NULL;
  }
  if (from.has_w_ext_cert_policy_explicit_text_not_utf8()) {
    w_ext_cert_policy_explicit_text_not_utf8_ = new ::zsearch::LintResult(*from.w_ext_cert_policy_explicit_text_not_utf8_);
  } else {
    w_ext_cert_policy_explicit_text_not_utf8_ = NULL;
  }
  if (from.has_e_ext_cert_policy_explicit_text_too_long()) {
    e_ext_cert_policy_explicit_text_too_long_ = new ::zsearch::LintResult(*from.e_ext_cert_policy_explicit_text_too_long_);
  } else {
    e_ext_cert_policy_explicit_text_too_long_ = NULL;
  }
  if (from.has_w_ext_crl_distribution_marked_critical()) {
    w_ext_crl_distribution_marked_critical_ = new ::zsearch::LintResult(*from.w_ext_crl_distribution_marked_critical_);
  } else {
    w_ext_crl_distribution_marked_critical_ = NULL;
  }
  if (from.has_e_ext_duplicate_extension()) {
    e_ext_duplicate_extension_ = new ::zsearch::LintResult(*from.e_ext_duplicate_extension_);
  } else {
    e_ext_duplicate_extension_ = NULL;
  }
  if (from.has_e_ext_freshest_crl_marked_critical()) {
    e_ext_freshest_crl_marked_critical_ = new ::zsearch::LintResult(*from.e_ext_freshest_crl_marked_critical_);
  } else {
    e_ext_freshest_crl_marked_critical_ = NULL;
  }
  if (from.has_w_ext_ian_critical()) {
    w_ext_ian_critical_ = new ::zsearch::LintResult(*from.w_ext_ian_critical_);
  } else {
    w_ext_ian_critical_ = NULL;
  }
  if (from.has_e_ext_ian_dns_not_ia5_string()) {
    e_ext_ian_dns_not_ia5_string_ = new ::zsearch::LintResult(*from.e_ext_ian_dns_not_ia5_string_);
  } else {
    e_ext_ian_dns_not_ia5_string_ = NULL;
  }
  if (from.has_e_ext_ian_empty_name()) {
    e_ext_ian_empty_name_ = new ::zsearch::LintResult(*from.e_ext_ian_empty_name_);
  } else {
    e_ext_ian_empty_name_ = NULL;
  }
  if (from.has_e_ext_ian_no_entries()) {
    e_ext_ian_no_entries_ = new ::zsearch::LintResult(*from.e_ext_ian_no_entries_);
  } else {
    e_ext_ian_no_entries_ = NULL;
  }
  if (from.has_e_ext_ian_rfc822_format_invalid()) {
    e_ext_ian_rfc822_format_invalid_ = new ::zsearch::LintResult(*from.e_ext_ian_rfc822_format_invalid_);
  } else {
    e_ext_ian_rfc822_format_invalid_ = NULL;
  }
  if (from.has_e_ext_ian_space_dns_name()) {
    e_ext_ian_space_dns_name_ = new ::zsearch::LintResult(*from.e_ext_ian_space_dns_name_);
  } else {
    e_ext_ian_space_dns_name_ = NULL;
  }
  if (from.has_e_ext_ian_uri_format_invalid()) {
    e_ext_ian_uri_format_invalid_ = new ::zsearch::LintResult(*from.e_ext_ian_uri_format_invalid_);
  } else {
    e_ext_ian_uri_format_invalid_ = NULL;
  }
  if (from.has_e_ext_ian_uri_host_not_fqdn_or_ip()) {
    e_ext_ian_uri_host_not_fqdn_or_ip_ = new ::zsearch::LintResult(*from.e_ext_ian_uri_host_not_fqdn_or_ip_);
  } else {
    e_ext_ian_uri_host_not_fqdn_or_ip_ = NULL;
  }
  if (from.has_e_ext_ian_uri_not_ia5()) {
    e_ext_ian_uri_not_ia5_ = new ::zsearch::LintResult(*from.e_ext_ian_uri_not_ia5_);
  } else {
    e_ext_ian_uri_not_ia5_ = NULL;
  }
  if (from.has_e_ext_ian_uri_relative()) {
    e_ext_ian_uri_relative_ = new ::zsearch::LintResult(*from.e_ext_ian_uri_relative_);
  } else {
    e_ext_ian_uri_relative_ = NULL;
  }
  if (from.has_e_ext_key_usage_cert_sign_without_ca()) {
    e_ext_key_usage_cert_sign_without_ca_ = new ::zsearch::LintResult(*from.e_ext_key_usage_cert_sign_without_ca_);
  } else {
    e_ext_key_usage_cert_sign_without_ca_ = NULL;
  }
  if (from.has_w_ext_key_usage_not_critical()) {
    w_ext_key_usage_not_critical_ = new ::zsearch::LintResult(*from.w_ext_key_usage_not_critical_);
  } else {
    w_ext_key_usage_not_critical_ = NULL;
  }
  if (from.has_e_ext_key_usage_without_bits()) {
    e_ext_key_usage_without_bits_ = new ::zsearch::LintResult(*from.e_ext_key_usage_without_bits_);
  } else {
    e_ext_key_usage_without_bits_ = NULL;
  }
  if (from.has_e_ext_name_constraints_not_critical()) {
    e_ext_name_constraints_not_critical_ = new ::zsearch::LintResult(*from.e_ext_name_constraints_not_critical_);
  } else {
    e_ext_name_constraints_not_critical_ = NULL;
  }
  if (from.has_e_ext_name_constraints_not_in_ca()) {
    e_ext_name_constraints_not_in_ca_ = new ::zsearch::LintResult(*from.e_ext_name_constraints_not_in_ca_);
  } else {
    e_ext_name_constraints_not_in_ca_ = NULL;
  }
  if (from.has_e_ext_policy_constraints_empty()) {
    e_ext_policy_constraints_empty_ = new ::zsearch::LintResult(*from.e_ext_policy_constraints_empty_);
  } else {
    e_ext_policy_constraints_empty_ = NULL;
  }
  if (from.has_e_ext_policy_constraints_not_critical()) {
    e_ext_policy_constraints_not_critical_ = new ::zsearch::LintResult(*from.e_ext_policy_constraints_not_critical_);
  } else {
    e_ext_policy_constraints_not_critical_ = NULL;
  }
  if (from.has_e_ext_policy_map_any_policy()) {
    e_ext_policy_map_any_policy_ = new ::zsearch::LintResult(*from.e_ext_policy_map_any_policy_);
  } else {
    e_ext_policy_map_any_policy_ = NULL;
  }
  if (from.has_w_ext_policy_map_not_critical()) {
    w_ext_policy_map_not_critical_ = new ::zsearch::LintResult(*from.w_ext_policy_map_not_critical_);
  } else {
    w_ext_policy_map_not_critical_ = NULL;
  }
  if (from.has_w_ext_policy_map_not_in_cert_policy()) {
    w_ext_policy_map_not_in_cert_policy_ = new ::zsearch::LintResult(*from.w_ext_policy_map_not_in_cert_policy_);
  } else {
    w_ext_policy_map_not_in_cert_policy_ = NULL;
  }
  if (from.has_e_ext_san_contains_reserved_ip()) {
    e_ext_san_contains_reserved_ip_ = new ::zsearch::LintResult(*from.e_ext_san_contains_reserved_ip_);
  } else {
    e_ext_san_contains_reserved_ip_ = NULL;
  }
  if (from.has_w_ext_san_critical_with_subject_dn()) {
    w_ext_san_critical_with_subject_dn_ = new ::zsearch::LintResult(*from.w_ext_san_critical_with_subject_dn_);
  } else {
    w_ext_san_critical_with_subject_dn_ = NULL;
  }
  if (from.has_e_ext_san_directory_name_present()) {
    e_ext_san_directory_name_present_ = new ::zsearch::LintResult(*from.e_ext_san_directory_name_present_);
  } else {
    e_ext_san_directory_name_present_ = NULL;
  }
  if (from.has_e_ext_san_dns_not_ia5_string()) {
    e_ext_san_dns_not_ia5_string_ = new ::zsearch::LintResult(*from.e_ext_san_dns_not_ia5_string_);
  } else {
    e_ext_san_dns_not_ia5_string_ = NULL;
  }
  if (from.has_e_ext_san_edi_party_name_present()) {
    e_ext_san_edi_party_name_present_ = new ::zsearch::LintResult(*from.e_ext_san_edi_party_name_present_);
  } else {
    e_ext_san_edi_party_name_present_ = NULL;
  }
  if (from.has_e_ext_san_empty_name()) {
    e_ext_san_empty_name_ = new ::zsearch::LintResult(*from.e_ext_san_empty_name_);
  } else {
    e_ext_san_empty_name_ = NULL;
  }
  if (from.has_e_ext_san_missing()) {
    e_ext_san_missing_ = new ::zsearch::LintResult(*from.e_ext_san_missing_);
  } else {
    e_ext_san_missing_ = NULL;
  }
  if (from.has_e_ext_san_no_entries()) {
    e_ext_san_no_entries_ = new ::zsearch::LintResult(*from.e_ext_san_no_entries_);
  } else {
    e_ext_san_no_entries_ = NULL;
  }
  if (from.has_e_ext_san_not_critical_without_subject()) {
    e_ext_san_not_critical_without_subject_ = new ::zsearch::LintResult(*from.e_ext_san_not_critical_without_subject_);
  } else {
    e_ext_san_not_critical_without_subject_ = NULL;
  }
  if (from.has_e_ext_san_other_name_present()) {
    e_ext_san_other_name_present_ = new ::zsearch::LintResult(*from.e_ext_san_other_name_present_);
  } else {
    e_ext_san_other_name_present_ = NULL;
  }
  if (from.has_e_ext_san_registered_id_present()) {
    e_ext_san_registered_id_present_ = new ::zsearch::LintResult(*from.e_ext_san_registered_id_present_);
  } else {
    e_ext_san_registered_id_present_ = NULL;
  }
  if (from.has_e_ext_san_rfc822_format_invalid()) {
    e_ext_san_rfc822_format_invalid_ = new ::zsearch::LintResult(*from.e_ext_san_rfc822_format_invalid_);
  } else {
    e_ext_san_rfc822_format_invalid_ = NULL;
  }
  if (from.has_e_ext_san_rfc822_name_present()) {
    e_ext_san_rfc822_name_present_ = new ::zsearch::LintResult(*from.e_ext_san_rfc822_name_present_);
  } else {
    e_ext_san_rfc822_name_present_ = NULL;
  }
  if (from.has_e_ext_san_space_dns_name()) {
    e_ext_san_space_dns_name_ = new ::zsearch::LintResult(*from.e_ext_san_space_dns_name_);
  } else {
    e_ext_san_space_dns_name_ = NULL;
  }
  if (from.has_e_ext_san_uniform_resource_identifier_present()) {
    e_ext_san_uniform_resource_identifier_present_ = new ::zsearch::LintResult(*from.e_ext_san_uniform_resource_identifier_present_);
  } else {
    e_ext_san_uniform_resource_identifier_present_ = NULL;
  }
  if (from.has_e_ext_san_uri_format_invalid()) {
    e_ext_san_uri_format_invalid_ = new ::zsearch::LintResult(*from.e_ext_san_uri_format_invalid_);
  } else {
    e_ext_san_uri_format_invalid_ = NULL;
  }
  if (from.has_e_ext_san_uri_host_not_fqdn_or_ip()) {
    e_ext_san_uri_host_not_fqdn_or_ip_ = new ::zsearch::LintResult(*from.e_ext_san_uri_host_not_fqdn_or_ip_);
  } else {
    e_ext_san_uri_host_not_fqdn_or_ip_ = NULL;
  }
  if (from.has_e_ext_san_uri_not_ia5()) {
    e_ext_san_uri_not_ia5_ = new ::zsearch::LintResult(*from.e_ext_san_uri_not_ia5_);
  } else {
    e_ext_san_uri_not_ia5_ = NULL;
  }
  if (from.has_e_ext_san_uri_relative()) {
    e_ext_san_uri_relative_ = new ::zsearch::LintResult(*from.e_ext_san_uri_relative_);
  } else {
    e_ext_san_uri_relative_ = NULL;
  }
  if (from.has_e_ext_subject_directory_attr_critical()) {
    e_ext_subject_directory_attr_critical_ = new ::zsearch::LintResult(*from.e_ext_subject_directory_attr_critical_);
  } else {
    e_ext_subject_directory_attr_critical_ = NULL;
  }
  if (from.has_e_ext_subject_key_identifier_critical()) {
    e_ext_subject_key_identifier_critical_ = new ::zsearch::LintResult(*from.e_ext_subject_key_identifier_critical_);
  } else {
    e_ext_subject_key_identifier_critical_ = NULL;
  }
  if (from.has_e_ext_subject_key_identifier_missing_ca()) {
    e_ext_subject_key_identifier_missing_ca_ = new ::zsearch::LintResult(*from.e_ext_subject_key_identifier_missing_ca_);
  } else {
    e_ext_subject_key_identifier_missing_ca_ = NULL;
  }
  if (from.has_w_ext_subject_key_identifier_missing_sub_cert()) {
    w_ext_subject_key_identifier_missing_sub_cert_ = new ::zsearch::LintResult(*from.w_ext_subject_key_identifier_missing_sub_cert_);
  } else {
    w_ext_subject_key_identifier_missing_sub_cert_ = NULL;
  }
  if (from.has_e_generalized_time_does_not_include_seconds()) {
    e_generalized_time_does_not_include_seconds_ = new ::zsearch::LintResult(*from.e_generalized_time_does_not_include_seconds_);
  } else {
    e_generalized_time_does_not_include_seconds_ = NULL;
  }
  if (from.has_e_generalized_time_includes_fraction_seconds()) {
    e_generalized_time_includes_fraction_seconds_ = new ::zsearch::LintResult(*from.e_generalized_time_includes_fraction_seconds_);
  } else {
    e_generalized_time_includes_fraction_seconds_ = NULL;
  }
  if (from.has_e_generalized_time_not_in_zulu()) {
    e_generalized_time_not_in_zulu_ = new ::zsearch::LintResult(*from.e_generalized_time_not_in_zulu_);
  } else {
    e_generalized_time_not_in_zulu_ = NULL;
  }
  if (from.has_e_ian_dns_name_includes_null_char()) {
    e_ian_dns_name_includes_null_char_ = new ::zsearch::LintResult(*from.e_ian_dns_name_includes_null_char_);
  } else {
    e_ian_dns_name_includes_null_char_ = NULL;
  }
  if (from.has_e_ian_dns_name_starts_with_period()) {
    e_ian_dns_name_starts_with_period_ = new ::zsearch::LintResult(*from.e_ian_dns_name_starts_with_period_);
  } else {
    e_ian_dns_name_starts_with_period_ = NULL;
  }
  if (from.has_w_ian_iana_pub_suffix_empty()) {
    w_ian_iana_pub_suffix_empty_ = new ::zsearch::LintResult(*from.w_ian_iana_pub_suffix_empty_);
  } else {
    w_ian_iana_pub_suffix_empty_ = NULL;
  }
  if (from.has_e_inhibit_any_policy_not_critical()) {
    e_inhibit_any_policy_not_critical_ = new ::zsearch::LintResult(*from.e_inhibit_any_policy_not_critical_);
  } else {
    e_inhibit_any_policy_not_critical_ = NULL;
  }
  if (from.has_e_invalid_certificate_version()) {
    e_invalid_certificate_version_ = new ::zsearch::LintResult(*from.e_invalid_certificate_version_);
  } else {
    e_invalid_certificate_version_ = NULL;
  }
  if (from.has_e_issuer_field_empty()) {
    e_issuer_field_empty_ = new ::zsearch::LintResult(*from.e_issuer_field_empty_);
  } else {
    e_issuer_field_empty_ = NULL;
  }
  if (from.has_e_name_constraint_empty()) {
    e_name_constraint_empty_ = new ::zsearch::LintResult(*from.e_name_constraint_empty_);
  } else {
    e_name_constraint_empty_ = NULL;
  }
  if (from.has_e_name_constraint_maximum_not_absent()) {
    e_name_constraint_maximum_not_absent_ = new ::zsearch::LintResult(*from.e_name_constraint_maximum_not_absent_);
  } else {
    e_name_constraint_maximum_not_absent_ = NULL;
  }
  if (from.has_e_name_constraint_minimum_non_zero()) {
    e_name_constraint_minimum_non_zero_ = new ::zsearch::LintResult(*from.e_name_constraint_minimum_non_zero_);
  } else {
    e_name_constraint_minimum_non_zero_ = NULL;
  }
  if (from.has_w_name_constraint_on_edi_party_name()) {
    w_name_constraint_on_edi_party_name_ = new ::zsearch::LintResult(*from.w_name_constraint_on_edi_party_name_);
  } else {
    w_name_constraint_on_edi_party_name_ = NULL;
  }
  if (from.has_w_name_constraint_on_registered_id()) {
    w_name_constraint_on_registered_id_ = new ::zsearch::LintResult(*from.w_name_constraint_on_registered_id_);
  } else {
    w_name_constraint_on_registered_id_ = NULL;
  }
  if (from.has_w_name_constraint_on_x400()) {
    w_name_constraint_on_x400_ = new ::zsearch::LintResult(*from.w_name_constraint_on_x400_);
  } else {
    w_name_constraint_on_x400_ = NULL;
  }
  if (from.has_e_old_root_ca_rsa_mod_less_than_2048_bits()) {
    e_old_root_ca_rsa_mod_less_than_2048_bits_ = new ::zsearch::LintResult(*from.e_old_root_ca_rsa_mod_less_than_2048_bits_);
  } else {
    e_old_root_ca_rsa_mod_less_than_2048_bits_ = NULL;
  }
  if (from.has_e_old_sub_ca_rsa_mod_less_than_1024_bits()) {
    e_old_sub_ca_rsa_mod_less_than_1024_bits_ = new ::zsearch::LintResult(*from.e_old_sub_ca_rsa_mod_less_than_1024_bits_);
  } else {
    e_old_sub_ca_rsa_mod_less_than_1024_bits_ = NULL;
  }
  if (from.has_e_old_sub_cert_rsa_mod_less_than_1024_bits()) {
    e_old_sub_cert_rsa_mod_less_than_1024_bits_ = new ::zsearch::LintResult(*from.e_old_sub_cert_rsa_mod_less_than_1024_bits_);
  } else {
    e_old_sub_cert_rsa_mod_less_than_1024_bits_ = NULL;
  }
  if (from.has_e_path_len_constraint_improperly_included()) {
    e_path_len_constraint_improperly_included_ = new ::zsearch::LintResult(*from.e_path_len_constraint_improperly_included_);
  } else {
    e_path_len_constraint_improperly_included_ = NULL;
  }
  if (from.has_e_path_len_constraint_zero_or_less()) {
    e_path_len_constraint_zero_or_less_ = new ::zsearch::LintResult(*from.e_path_len_constraint_zero_or_less_);
  } else {
    e_path_len_constraint_zero_or_less_ = NULL;
  }
  if (from.has_e_public_key_type_not_allowed()) {
    e_public_key_type_not_allowed_ = new ::zsearch::LintResult(*from.e_public_key_type_not_allowed_);
  } else {
    e_public_key_type_not_allowed_ = NULL;
  }
  if (from.has_w_root_ca_basic_constraints_path_len_constraint_field_present()) {
    w_root_ca_basic_constraints_path_len_constraint_field_present_ = new ::zsearch::LintResult(*from.w_root_ca_basic_constraints_path_len_constraint_field_present_);
  } else {
    w_root_ca_basic_constraints_path_len_constraint_field_present_ = NULL;
  }
  if (from.has_w_root_ca_contains_cert_policy()) {
    w_root_ca_contains_cert_policy_ = new ::zsearch::LintResult(*from.w_root_ca_contains_cert_policy_);
  } else {
    w_root_ca_contains_cert_policy_ = NULL;
  }
  if (from.has_e_root_ca_extended_key_usage_present()) {
    e_root_ca_extended_key_usage_present_ = new ::zsearch::LintResult(*from.e_root_ca_extended_key_usage_present_);
  } else {
    e_root_ca_extended_key_usage_present_ = NULL;
  }
  if (from.has_e_rsa_exp_negative()) {
    e_rsa_exp_negative_ = new ::zsearch::LintResult(*from.e_rsa_exp_negative_);
  } else {
    e_rsa_exp_negative_ = NULL;
  }
  if (from.has_w_rsa_mod_factors_smaller_than_752()) {
    w_rsa_mod_factors_smaller_than_752_ = new ::zsearch::LintResult(*from.w_rsa_mod_factors_smaller_than_752_);
  } else {
    w_rsa_mod_factors_smaller_than_752_ = NULL;
  }
  if (from.has_e_rsa_mod_less_than_2048_bits()) {
    e_rsa_mod_less_than_2048_bits_ = new ::zsearch::LintResult(*from.e_rsa_mod_less_than_2048_bits_);
  } else {
    e_rsa_mod_less_than_2048_bits_ = NULL;
  }
  if (from.has_w_rsa_mod_not_odd()) {
    w_rsa_mod_not_odd_ = new ::zsearch::LintResult(*from.w_rsa_mod_not_odd_);
  } else {
    w_rsa_mod_not_odd_ = NULL;
  }
  if (from.has_w_rsa_public_exponent_not_in_range()) {
    w_rsa_public_exponent_not_in_range_ = new ::zsearch::LintResult(*from.w_rsa_public_exponent_not_in_range_);
  } else {
    w_rsa_public_exponent_not_in_range_ = NULL;
  }
  if (from.has_e_rsa_public_exponent_not_odd()) {
    e_rsa_public_exponent_not_odd_ = new ::zsearch::LintResult(*from.e_rsa_public_exponent_not_odd_);
  } else {
    e_rsa_public_exponent_not_odd_ = NULL;
  }
  if (from.has_e_rsa_public_exponent_too_small()) {
    e_rsa_public_exponent_too_small_ = new ::zsearch::LintResult(*from.e_rsa_public_exponent_too_small_);
  } else {
    e_rsa_public_exponent_too_small_ = NULL;
  }
  if (from.has_e_san_dns_name_includes_null_char()) {
    e_san_dns_name_includes_null_char_ = new ::zsearch::LintResult(*from.e_san_dns_name_includes_null_char_);
  } else {
    e_san_dns_name_includes_null_char_ = NULL;
  }
  if (from.has_e_san_dns_name_starts_with_period()) {
    e_san_dns_name_starts_with_period_ = new ::zsearch::LintResult(*from.e_san_dns_name_starts_with_period_);
  } else {
    e_san_dns_name_starts_with_period_ = NULL;
  }
  if (from.has_w_san_iana_pub_suffix_empty()) {
    w_san_iana_pub_suffix_empty_ = new ::zsearch::LintResult(*from.w_san_iana_pub_suffix_empty_);
  } else {
    w_san_iana_pub_suffix_empty_ = NULL;
  }
  if (from.has_e_serial_number_longer_than_20_octets()) {
    e_serial_number_longer_than_20_octets_ = new ::zsearch::LintResult(*from.e_serial_number_longer_than_20_octets_);
  } else {
    e_serial_number_longer_than_20_octets_ = NULL;
  }
  if (from.has_e_serial_number_not_positive()) {
    e_serial_number_not_positive_ = new ::zsearch::LintResult(*from.e_serial_number_not_positive_);
  } else {
    e_serial_number_not_positive_ = NULL;
  }
  if (from.has_w_sub_ca_aia_does_not_contain_issuing_ca_url()) {
    w_sub_ca_aia_does_not_contain_issuing_ca_url_ = new ::zsearch::LintResult(*from.w_sub_ca_aia_does_not_contain_issuing_ca_url_);
  } else {
    w_sub_ca_aia_does_not_contain_issuing_ca_url_ = NULL;
  }
  if (from.has_e_sub_ca_aia_does_not_contain_ocsp_url()) {
    e_sub_ca_aia_does_not_contain_ocsp_url_ = new ::zsearch::LintResult(*from.e_sub_ca_aia_does_not_contain_ocsp_url_);
  } else {
    e_sub_ca_aia_does_not_contain_ocsp_url_ = NULL;
  }
  if (from.has_e_sub_ca_aia_missing()) {
    e_sub_ca_aia_missing_ = new ::zsearch::LintResult(*from.e_sub_ca_aia_missing_);
  } else {
    e_sub_ca_aia_missing_ = NULL;
  }
  if (from.has_w_sub_ca_certificate_policies_marked_critical()) {
    w_sub_ca_certificate_policies_marked_critical_ = new ::zsearch::LintResult(*from.w_sub_ca_certificate_policies_marked_critical_);
  } else {
    w_sub_ca_certificate_policies_marked_critical_ = NULL;
  }
  if (from.has_e_sub_ca_certificate_policies_missing()) {
    e_sub_ca_certificate_policies_missing_ = new ::zsearch::LintResult(*from.e_sub_ca_certificate_policies_missing_);
  } else {
    e_sub_ca_certificate_policies_missing_ = NULL;
  }
  if (from.has_e_sub_ca_crl_distribution_points_does_not_contain_url()) {
    e_sub_ca_crl_distribution_points_does_not_contain_url_ = new ::zsearch::LintResult(*from.e_sub_ca_crl_distribution_points_does_not_contain_url_);
  } else {
    e_sub_ca_crl_distribution_points_does_not_contain_url_ = NULL;
  }
  if (from.has_e_sub_ca_crl_distribution_points_marked_critical()) {
    e_sub_ca_crl_distribution_points_marked_critical_ = new ::zsearch::LintResult(*from.e_sub_ca_crl_distribution_points_marked_critical_);
  } else {
    e_sub_ca_crl_distribution_points_marked_critical_ = NULL;
  }
  if (from.has_e_sub_ca_crl_distribution_points_missing()) {
    e_sub_ca_crl_distribution_points_missing_ = new ::zsearch::LintResult(*from.e_sub_ca_crl_distribution_points_missing_);
  } else {
    e_sub_ca_crl_distribution_points_missing_ = NULL;
  }
  if (from.has_w_sub_ca_eku_critical()) {
    w_sub_ca_eku_critical_ = new ::zsearch::LintResult(*from.w_sub_ca_eku_critical_);
  } else {
    w_sub_ca_eku_critical_ = NULL;
  }
  if (from.has_w_sub_ca_name_constraints_not_critical()) {
    w_sub_ca_name_constraints_not_critical_ = new ::zsearch::LintResult(*from.w_sub_ca_name_constraints_not_critical_);
  } else {
    w_sub_ca_name_constraints_not_critical_ = NULL;
  }
  if (from.has_e_sub_cert_aia_does_not_contain_ocsp_url()) {
    e_sub_cert_aia_does_not_contain_ocsp_url_ = new ::zsearch::LintResult(*from.e_sub_cert_aia_does_not_contain_ocsp_url_);
  } else {
    e_sub_cert_aia_does_not_contain_ocsp_url_ = NULL;
  }
  if (from.has_e_sub_cert_aia_missing()) {
    e_sub_cert_aia_missing_ = new ::zsearch::LintResult(*from.e_sub_cert_aia_missing_);
  } else {
    e_sub_cert_aia_missing_ = NULL;
  }
  if (from.has_e_sub_cert_cert_policy_empty()) {
    e_sub_cert_cert_policy_empty_ = new ::zsearch::LintResult(*from.e_sub_cert_cert_policy_empty_);
  } else {
    e_sub_cert_cert_policy_empty_ = NULL;
  }
  if (from.has_w_sub_cert_certificate_policies_marked_critical()) {
    w_sub_cert_certificate_policies_marked_critical_ = new ::zsearch::LintResult(*from.w_sub_cert_certificate_policies_marked_critical_);
  } else {
    w_sub_cert_certificate_policies_marked_critical_ = NULL;
  }
  if (from.has_e_sub_cert_crl_distribution_points_does_not_contain_url()) {
    e_sub_cert_crl_distribution_points_does_not_contain_url_ = new ::zsearch::LintResult(*from.e_sub_cert_crl_distribution_points_does_not_contain_url_);
  } else {
    e_sub_cert_crl_distribution_points_does_not_contain_url_ = NULL;
  }
  if (from.has_e_sub_cert_crl_distribution_points_marked_critical()) {
    e_sub_cert_crl_distribution_points_marked_critical_ = new ::zsearch::LintResult(*from.e_sub_cert_crl_distribution_points_marked_critical_);
  } else {
    e_sub_cert_crl_distribution_points_marked_critical_ = NULL;
  }
  if (from.has_w_sub_cert_eku_extra_values()) {
    w_sub_cert_eku_extra_values_ = new ::zsearch::LintResult(*from.w_sub_cert_eku_extra_values_);
  } else {
    w_sub_cert_eku_extra_values_ = NULL;
  }
  if (from.has_e_sub_cert_eku_missing()) {
    e_sub_cert_eku_missing_ = new ::zsearch::LintResult(*from.e_sub_cert_eku_missing_);
  } else {
    e_sub_cert_eku_missing_ = NULL;
  }
  if (from.has_e_sub_cert_eku_server_auth_client_auth_missing()) {
    e_sub_cert_eku_server_auth_client_auth_missing_ = new ::zsearch::LintResult(*from.e_sub_cert_eku_server_auth_client_auth_missing_);
  } else {
    e_sub_cert_eku_server_auth_client_auth_missing_ = NULL;
  }
  if (from.has_e_sub_cert_key_usage_cert_sign_bit_set()) {
    e_sub_cert_key_usage_cert_sign_bit_set_ = new ::zsearch::LintResult(*from.e_sub_cert_key_usage_cert_sign_bit_set_);
  } else {
    e_sub_cert_key_usage_cert_sign_bit_set_ = NULL;
  }
  if (from.has_e_sub_cert_or_sub_ca_using_sha1()) {
    e_sub_cert_or_sub_ca_using_sha1_ = new ::zsearch::LintResult(*from.e_sub_cert_or_sub_ca_using_sha1_);
  } else {
    e_sub_cert_or_sub_ca_using_sha1_ = NULL;
  }
  if (from.has_w_sub_cert_sha1_expiration_too_long()) {
    w_sub_cert_sha1_expiration_too_long_ = new ::zsearch::LintResult(*from.w_sub_cert_sha1_expiration_too_long_);
  } else {
    w_sub_cert_sha1_expiration_too_long_ = NULL;
  }
  if (from.has_n_subject_common_name_included()) {
    n_subject_common_name_included_ = new ::zsearch::LintResult(*from.n_subject_common_name_included_);
  } else {
    n_subject_common_name_included_ = NULL;
  }
  if (from.has_e_subject_common_name_not_from_san()) {
    e_subject_common_name_not_from_san_ = new ::zsearch::LintResult(*from.e_subject_common_name_not_from_san_);
  } else {
    e_subject_common_name_not_from_san_ = NULL;
  }
  if (from.has_e_subject_contains_noninformational_value()) {
    e_subject_contains_noninformational_value_ = new ::zsearch::LintResult(*from.e_subject_contains_noninformational_value_);
  } else {
    e_subject_contains_noninformational_value_ = NULL;
  }
  if (from.has_e_subject_contains_reserved_ip()) {
    e_subject_contains_reserved_ip_ = new ::zsearch::LintResult(*from.e_subject_contains_reserved_ip_);
  } else {
    e_subject_contains_reserved_ip_ = NULL;
  }
  if (from.has_e_subject_country_not_iso()) {
    e_subject_country_not_iso_ = new ::zsearch::LintResult(*from.e_subject_country_not_iso_);
  } else {
    e_subject_country_not_iso_ = NULL;
  }
  if (from.has_e_subject_empty_without_san()) {
    e_subject_empty_without_san_ = new ::zsearch::LintResult(*from.e_subject_empty_without_san_);
  } else {
    e_subject_empty_without_san_ = NULL;
  }
  if (from.has_e_subject_info_access_marked_critical()) {
    e_subject_info_access_marked_critical_ = new ::zsearch::LintResult(*from.e_subject_info_access_marked_critical_);
  } else {
    e_subject_info_access_marked_critical_ = NULL;
  }
  if (from.has_e_subject_not_dn()) {
    e_subject_not_dn_ = new ::zsearch::LintResult(*from.e_subject_not_dn_);
  } else {
    e_subject_not_dn_ = NULL;
  }
  if (from.has_e_utc_time_does_not_include_seconds()) {
    e_utc_time_does_not_include_seconds_ = new ::zsearch::LintResult(*from.e_utc_time_does_not_include_seconds_);
  } else {
    e_utc_time_does_not_include_seconds_ = NULL;
  }
  if (from.has_e_utc_time_not_in_zulu()) {
    e_utc_time_not_in_zulu_ = new ::zsearch::LintResult(*from.e_utc_time_not_in_zulu_);
  } else {
    e_utc_time_not_in_zulu_ = NULL;
  }
  if (from.has_e_validity_time_not_positive()) {
    e_validity_time_not_positive_ = new ::zsearch::LintResult(*from.e_validity_time_not_positive_);
  } else {
    e_validity_time_not_positive_ = NULL;
  }
  if (from.has_e_wrong_time_format_pre2050()) {
    e_wrong_time_format_pre2050_ = new ::zsearch::LintResult(*from.e_wrong_time_format_pre2050_);
  } else {
    e_wrong_time_format_pre2050_ = NULL;
  }
  if (from.has_e_rsa_no_public_key()) {
    e_rsa_no_public_key_ = new ::zsearch::LintResult(*from.e_rsa_no_public_key_);
  } else {
    e_rsa_no_public_key_ = NULL;
  }
  if (from.has_e_sub_cert_certificate_policies_missing()) {
    e_sub_cert_certificate_policies_missing_ = new ::zsearch::LintResult(*from.e_sub_cert_certificate_policies_missing_);
  } else {
    e_sub_cert_certificate_policies_missing_ = NULL;
  }
  if (from.has_e_sub_cert_key_usage_crl_sign_bit_set()) {
    e_sub_cert_key_usage_crl_sign_bit_set_ = new ::zsearch::LintResult(*from.e_sub_cert_key_usage_crl_sign_bit_set_);
  } else {
    e_sub_cert_key_usage_crl_sign_bit_set_ = NULL;
  }
  if (from.has_e_subject_common_name_max_length()) {
    e_subject_common_name_max_length_ = new ::zsearch::LintResult(*from.e_subject_common_name_max_length_);
  } else {
    e_subject_common_name_max_length_ = NULL;
  }
  if (from.has_e_subject_locality_name_max_length()) {
    e_subject_locality_name_max_length_ = new ::zsearch::LintResult(*from.e_subject_locality_name_max_length_);
  } else {
    e_subject_locality_name_max_length_ = NULL;
  }
  if (from.has_e_subject_organization_name_max_length()) {
    e_subject_organization_name_max_length_ = new ::zsearch::LintResult(*from.e_subject_organization_name_max_length_);
  } else {
    e_subject_organization_name_max_length_ = NULL;
  }
  if (from.has_e_subject_organizational_unit_name_max_length()) {
    e_subject_organizational_unit_name_max_length_ = new ::zsearch::LintResult(*from.e_subject_organizational_unit_name_max_length_);
  } else {
    e_subject_organizational_unit_name_max_length_ = NULL;
  }
  if (from.has_e_subject_state_name_max_length()) {
    e_subject_state_name_max_length_ = new ::zsearch::LintResult(*from.e_subject_state_name_max_length_);
  } else {
    e_subject_state_name_max_length_ = NULL;
  }
  if (from.has_w_multiple_subject_rdn()) {
    w_multiple_subject_rdn_ = new ::zsearch::LintResult(*from.w_multiple_subject_rdn_);
  } else {
    w_multiple_subject_rdn_ = NULL;
  }
  if (from.has_w_multiple_issuer_rdn()) {
    w_multiple_issuer_rdn_ = new ::zsearch::LintResult(*from.w_multiple_issuer_rdn_);
  } else {
    w_multiple_issuer_rdn_ = NULL;
  }
  if (from.has_w_issuer_dn_trailing_whitespace()) {
    w_issuer_dn_trailing_whitespace_ = new ::zsearch::LintResult(*from.w_issuer_dn_trailing_whitespace_);
  } else {
    w_issuer_dn_trailing_whitespace_ = NULL;
  }
  if (from.has_w_issuer_dn_leading_whitespace()) {
    w_issuer_dn_leading_whitespace_ = new ::zsearch::LintResult(*from.w_issuer_dn_leading_whitespace_);
  } else {
    w_issuer_dn_leading_whitespace_ = NULL;
  }
  if (from.has_w_subject_dn_trailing_whitespace()) {
    w_subject_dn_trailing_whitespace_ = new ::zsearch::LintResult(*from.w_subject_dn_trailing_whitespace_);
  } else {
    w_subject_dn_trailing_whitespace_ = NULL;
  }
  if (from.has_w_subject_dn_leading_whitespace()) {
    w_subject_dn_leading_whitespace_ = new ::zsearch::LintResult(*from.w_subject_dn_leading_whitespace_);
  } else {
    w_subject_dn_leading_whitespace_ = NULL;
  }
  if (from.has_e_sub_cert_locality_name_must_appear()) {
    e_sub_cert_locality_name_must_appear_ = new ::zsearch::LintResult(*from.e_sub_cert_locality_name_must_appear_);
  } else {
    e_sub_cert_locality_name_must_appear_ = NULL;
  }
  if (from.has_e_signature_algorithm_not_supported()) {
    e_signature_algorithm_not_supported_ = new ::zsearch::LintResult(*from.e_signature_algorithm_not_supported_);
  } else {
    e_signature_algorithm_not_supported_ = NULL;
  }
  if (from.has_e_dnsname_hyphen_in_sld()) {
    e_dnsname_hyphen_in_sld_ = new ::zsearch::LintResult(*from.e_dnsname_hyphen_in_sld_);
  } else {
    e_dnsname_hyphen_in_sld_ = NULL;
  }
  if (from.has_e_dsa_correct_order_in_subgroup()) {
    e_dsa_correct_order_in_subgroup_ = new ::zsearch::LintResult(*from.e_dsa_correct_order_in_subgroup_);
  } else {
    e_dsa_correct_order_in_subgroup_ = NULL;
  }
  if (from.has_n_sub_ca_eku_not_technically_constrained()) {
    n_sub_ca_eku_not_technically_constrained_ = new ::zsearch::LintResult(*from.n_sub_ca_eku_not_technically_constrained_);
  } else {
    n_sub_ca_eku_not_technically_constrained_ = NULL;
  }
  if (from.has_e_dnsname_empty_label()) {
    e_dnsname_empty_label_ = new ::zsearch::LintResult(*from.e_dnsname_empty_label_);
  } else {
    e_dnsname_empty_label_ = NULL;
  }
  if (from.has_e_ca_common_name_missing()) {
    e_ca_common_name_missing_ = new ::zsearch::LintResult(*from.e_ca_common_name_missing_);
  } else {
    e_ca_common_name_missing_ = NULL;
  }
  if (from.has_e_dnsname_wildcard_only_in_left_label()) {
    e_dnsname_wildcard_only_in_left_label_ = new ::zsearch::LintResult(*from.e_dnsname_wildcard_only_in_left_label_);
  } else {
    e_dnsname_wildcard_only_in_left_label_ = NULL;
  }
  if (from.has_e_sub_cert_valid_time_too_long()) {
    e_sub_cert_valid_time_too_long_ = new ::zsearch::LintResult(*from.e_sub_cert_valid_time_too_long_);
  } else {
    e_sub_cert_valid_time_too_long_ = NULL;
  }
  if (from.has_e_dnsname_left_label_wildcard_correct()) {
    e_dnsname_left_label_wildcard_correct_ = new ::zsearch::LintResult(*from.e_dnsname_left_label_wildcard_correct_);
  } else {
    e_dnsname_left_label_wildcard_correct_ = NULL;
  }
  if (from.has_w_serial_number_low_entropy()) {
    w_serial_number_low_entropy_ = new ::zsearch::LintResult(*from.w_serial_number_low_entropy_);
  } else {
    w_serial_number_low_entropy_ = NULL;
  }
  if (from.has_e_dnsname_label_too_long()) {
    e_dnsname_label_too_long_ = new ::zsearch::LintResult(*from.e_dnsname_label_too_long_);
  } else {
    e_dnsname_label_too_long_ = NULL;
  }
  if (from.has_e_root_ca_key_usage_present()) {
    e_root_ca_key_usage_present_ = new ::zsearch::LintResult(*from.e_root_ca_key_usage_present_);
  } else {
    e_root_ca_key_usage_present_ = NULL;
  }
  if (from.has_w_dnsname_wildcard_left_of_public_suffix()) {
    w_dnsname_wildcard_left_of_public_suffix_ = new ::zsearch::LintResult(*from.w_dnsname_wildcard_left_of_public_suffix_);
  } else {
    w_dnsname_wildcard_left_of_public_suffix_ = NULL;
  }
  if (from.has_e_international_dns_name_not_unicode()) {
    e_international_dns_name_not_unicode_ = new ::zsearch::LintResult(*from.e_international_dns_name_not_unicode_);
  } else {
    e_international_dns_name_not_unicode_ = NULL;
  }
  if (from.has_w_dnsname_underscore_in_trd()) {
    w_dnsname_underscore_in_trd_ = new ::zsearch::LintResult(*from.w_dnsname_underscore_in_trd_);
  } else {
    w_dnsname_underscore_in_trd_ = NULL;
  }
  if (from.has_w_sub_cert_aia_does_not_contain_issuing_ca_url()) {
    w_sub_cert_aia_does_not_contain_issuing_ca_url_ = new ::zsearch::LintResult(*from.w_sub_cert_aia_does_not_contain_issuing_ca_url_);
  } else {
    w_sub_cert_aia_does_not_contain_issuing_ca_url_ = NULL;
  }
  if (from.has_e_sub_cert_locality_name_must_not_appear()) {
    e_sub_cert_locality_name_must_not_appear_ = new ::zsearch::LintResult(*from.e_sub_cert_locality_name_must_not_appear_);
  } else {
    e_sub_cert_locality_name_must_not_appear_ = NULL;
  }
  if (from.has_e_sub_cert_country_name_must_appear()) {
    e_sub_cert_country_name_must_appear_ = new ::zsearch::LintResult(*from.e_sub_cert_country_name_must_appear_);
  } else {
    e_sub_cert_country_name_must_appear_ = NULL;
  }
  if (from.has_e_dnsname_bad_character_in_label()) {
    e_dnsname_bad_character_in_label_ = new ::zsearch::LintResult(*from.e_dnsname_bad_character_in_label_);
  } else {
    e_dnsname_bad_character_in_label_ = NULL;
  }
  if (from.has_e_sub_ca_must_not_contain_any_policy()) {
    e_sub_ca_must_not_contain_any_policy_ = new ::zsearch::LintResult(*from.e_sub_ca_must_not_contain_any_policy_);
  } else {
    e_sub_ca_must_not_contain_any_policy_ = NULL;
  }
  if (from.has_e_international_dns_name_not_nfkc()) {
    e_international_dns_name_not_nfkc_ = new ::zsearch::LintResult(*from.e_international_dns_name_not_nfkc_);
  } else {
    e_international_dns_name_not_nfkc_ = NULL;
  }
  if (from.has_e_sub_cert_aia_marked_critical()) {
    e_sub_cert_aia_marked_critical_ = new ::zsearch::LintResult(*from.e_sub_cert_aia_marked_critical_);
  } else {
    e_sub_cert_aia_marked_critical_ = NULL;
  }
  if (from.has_e_ca_is_ca()) {
    e_ca_is_ca_ = new ::zsearch::LintResult(*from.e_ca_is_ca_);
  } else {
    e_ca_is_ca_ = NULL;
  }
  if (from.has_e_sub_cert_street_address_should_not_exist()) {
    e_sub_cert_street_address_should_not_exist_ = new ::zsearch::LintResult(*from.e_sub_cert_street_address_should_not_exist_);
  } else {
    e_sub_cert_street_address_should_not_exist_ = NULL;
  }
  if (from.has_e_sub_ca_eku_missing()) {
    e_sub_ca_eku_missing_ = new ::zsearch::LintResult(*from.e_sub_ca_eku_missing_);
  } else {
    e_sub_ca_eku_missing_ = NULL;
  }
  if (from.has_e_sub_cert_province_must_not_appear()) {
    e_sub_cert_province_must_not_appear_ = new ::zsearch::LintResult(*from.e_sub_cert_province_must_not_appear_);
  } else {
    e_sub_cert_province_must_not_appear_ = NULL;
  }
  if (from.has_e_dnsname_underscore_in_sld()) {
    e_dnsname_underscore_in_sld_ = new ::zsearch::LintResult(*from.e_dnsname_underscore_in_sld_);
  } else {
    e_dnsname_underscore_in_sld_ = NULL;
  }
  if (from.has_e_sub_ca_eku_name_constraints()) {
    e_sub_ca_eku_name_constraints_ = new ::zsearch::LintResult(*from.e_sub_ca_eku_name_constraints_);
  } else {
    e_sub_ca_eku_name_constraints_ = NULL;
  }
  if (from.has_e_sub_cert_not_is_ca()) {
    e_sub_cert_not_is_ca_ = new ::zsearch::LintResult(*from.e_sub_cert_not_is_ca_);
  } else {
    e_sub_cert_not_is_ca_ = NULL;
  }
  if (from.has_e_dsa_unique_correct_representation()) {
    e_dsa_unique_correct_representation_ = new ::zsearch::LintResult(*from.e_dsa_unique_correct_representation_);
  } else {
    e_dsa_unique_correct_representation_ = NULL;
  }
  if (from.has_e_sub_cert_province_must_appear()) {
    e_sub_cert_province_must_appear_ = new ::zsearch::LintResult(*from.e_sub_cert_province_must_appear_);
  } else {
    e_sub_cert_province_must_appear_ = NULL;
  }
  if (from.has_e_root_ca_key_usage_must_be_critical()) {
    e_root_ca_key_usage_must_be_critical_ = new ::zsearch::LintResult(*from.e_root_ca_key_usage_must_be_critical_);
  } else {
    e_root_ca_key_usage_must_be_critical_ = NULL;
  }
  if (from.has_e_ext_san_dns_name_too_long()) {
    e_ext_san_dns_name_too_long_ = new ::zsearch::LintResult(*from.e_ext_san_dns_name_too_long_);
  } else {
    e_ext_san_dns_name_too_long_ = NULL;
  }
  if (from.has_e_dsa_params_missing()) {
    e_dsa_params_missing_ = new ::zsearch::LintResult(*from.e_dsa_params_missing_);
  } else {
    e_dsa_params_missing_ = NULL;
  }
  if (from.has_e_sub_ca_aia_marked_critical()) {
    e_sub_ca_aia_marked_critical_ = new ::zsearch::LintResult(*from.e_sub_ca_aia_marked_critical_);
  } else {
    e_sub_ca_aia_marked_critical_ = NULL;
  }
  if (from.has_e_sub_cert_given_name_surname_contains_correct_policy()) {
    e_sub_cert_given_name_surname_contains_correct_policy_ = new ::zsearch::LintResult(*from.e_sub_cert_given_name_surname_contains_correct_policy_);
  } else {
    e_sub_cert_given_name_surname_contains_correct_policy_ = NULL;
  }
  if (from.has_e_sub_cert_postal_code_must_not_appear()) {
    e_sub_cert_postal_code_must_not_appear_ = new ::zsearch::LintResult(*from.e_sub_cert_postal_code_must_not_appear_);
  } else {
    e_sub_cert_postal_code_must_not_appear_ = NULL;
  }
  if (from.has_e_dnsname_not_valid_tld()) {
    e_dnsname_not_valid_tld_ = new ::zsearch::LintResult(*from.e_dnsname_not_valid_tld_);
  } else {
    e_dnsname_not_valid_tld_ = NULL;
  }
  if (from.has_n_contains_redacted_dnsname()) {
    n_contains_redacted_dnsname_ = new ::zsearch::LintResult(*from.n_contains_redacted_dnsname_);
  } else {
    n_contains_redacted_dnsname_ = NULL;
  }
  if (from.has_e_dnsname_contains_bare_iana_suffix()) {
    e_dnsname_contains_bare_iana_suffix_ = new ::zsearch::LintResult(*from.e_dnsname_contains_bare_iana_suffix_);
  } else {
    e_dnsname_contains_bare_iana_suffix_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zsearch.Lints)
}

void Lints::SharedCtor() {
  ::memset(&e_basic_constraints_not_critical_, 0, reinterpret_cast<char*>(&e_dnsname_contains_bare_iana_suffix_) -
    reinterpret_cast<char*>(&e_basic_constraints_not_critical_) + sizeof(e_dnsname_contains_bare_iana_suffix_));
  _cached_size_ = 0;
}

Lints::~Lints() {
  // @@protoc_insertion_point(destructor:zsearch.Lints)
  SharedDtor();
}

void Lints::SharedDtor() {
  if (this != internal_default_instance()) {
    delete e_basic_constraints_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ian_bare_wildcard_;
  }
  if (this != internal_default_instance()) {
    delete e_ian_wildcard_not_first_;
  }
  if (this != internal_default_instance()) {
    delete e_san_bare_wildcard_;
  }
  if (this != internal_default_instance()) {
    delete e_san_wildcard_not_first_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_country_name_invalid_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_country_name_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_crl_sign_not_set_;
  }
  if (this != internal_default_instance()) {
    delete n_ca_digital_signature_not_set_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_key_cert_sign_not_set_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_key_usage_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_key_usage_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_organization_name_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_subject_field_empty_;
  }
  if (this != internal_default_instance()) {
    delete e_cert_contains_unique_identifier_;
  }
  if (this != internal_default_instance()) {
    delete e_cert_extensions_version_not_3_;
  }
  if (this != internal_default_instance()) {
    delete e_cab_dv_conflicts_with_locality_;
  }
  if (this != internal_default_instance()) {
    delete e_cab_dv_conflicts_with_org_;
  }
  if (this != internal_default_instance()) {
    delete e_cab_dv_conflicts_with_postal_;
  }
  if (this != internal_default_instance()) {
    delete e_cab_dv_conflicts_with_province_;
  }
  if (this != internal_default_instance()) {
    delete e_cab_dv_conflicts_with_street_;
  }
  if (this != internal_default_instance()) {
    delete e_cert_policy_iv_requires_country_;
  }
  if (this != internal_default_instance()) {
    delete e_cert_policy_iv_requires_province_or_locality_;
  }
  if (this != internal_default_instance()) {
    delete e_cert_policy_ov_requires_country_;
  }
  if (this != internal_default_instance()) {
    delete e_cert_policy_ov_requires_province_or_locality_;
  }
  if (this != internal_default_instance()) {
    delete e_cab_ov_requires_org_;
  }
  if (this != internal_default_instance()) {
    delete e_cab_iv_requires_personal_name_;
  }
  if (this != internal_default_instance()) {
    delete e_cert_unique_identifier_version_not_2_or_3_;
  }
  if (this != internal_default_instance()) {
    delete e_distribution_point_incomplete_;
  }
  if (this != internal_default_instance()) {
    delete w_distribution_point_missing_ldap_or_uri_;
  }
  if (this != internal_default_instance()) {
    delete e_dsa_improper_modulus_or_divisor_size_;
  }
  if (this != internal_default_instance()) {
    delete e_dsa_shorter_than_2048_bits_;
  }
  if (this != internal_default_instance()) {
    delete e_ec_improper_curves_;
  }
  if (this != internal_default_instance()) {
    delete w_eku_critical_improperly_;
  }
  if (this != internal_default_instance()) {
    delete e_ev_business_category_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ev_country_name_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ev_locality_name_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ev_organization_name_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ev_serial_number_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ev_valid_time_too_long_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_aia_access_location_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_aia_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_authority_key_identifier_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_authority_key_identifier_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_authority_key_identifier_no_key_identifier_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_cert_policy_contains_noticeref_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_cert_policy_disallowed_any_policy_qualifier_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_cert_policy_duplicate_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_cert_policy_explicit_text_ia5_string_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_cert_policy_explicit_text_includes_control_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_cert_policy_explicit_text_not_nfc_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_cert_policy_explicit_text_not_utf8_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_cert_policy_explicit_text_too_long_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_crl_distribution_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_duplicate_extension_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_freshest_crl_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_ian_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_dns_not_ia5_string_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_empty_name_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_no_entries_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_rfc822_format_invalid_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_space_dns_name_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_uri_format_invalid_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_uri_host_not_fqdn_or_ip_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_uri_not_ia5_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_ian_uri_relative_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_key_usage_cert_sign_without_ca_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_key_usage_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_key_usage_without_bits_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_name_constraints_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_name_constraints_not_in_ca_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_policy_constraints_empty_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_policy_constraints_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_policy_map_any_policy_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_policy_map_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_policy_map_not_in_cert_policy_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_contains_reserved_ip_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_san_critical_with_subject_dn_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_directory_name_present_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_dns_not_ia5_string_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_edi_party_name_present_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_empty_name_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_no_entries_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_not_critical_without_subject_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_other_name_present_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_registered_id_present_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_rfc822_format_invalid_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_rfc822_name_present_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_space_dns_name_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_uniform_resource_identifier_present_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_uri_format_invalid_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_uri_host_not_fqdn_or_ip_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_uri_not_ia5_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_uri_relative_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_subject_directory_attr_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_subject_key_identifier_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_subject_key_identifier_missing_ca_;
  }
  if (this != internal_default_instance()) {
    delete w_ext_subject_key_identifier_missing_sub_cert_;
  }
  if (this != internal_default_instance()) {
    delete e_generalized_time_does_not_include_seconds_;
  }
  if (this != internal_default_instance()) {
    delete e_generalized_time_includes_fraction_seconds_;
  }
  if (this != internal_default_instance()) {
    delete e_generalized_time_not_in_zulu_;
  }
  if (this != internal_default_instance()) {
    delete e_ian_dns_name_includes_null_char_;
  }
  if (this != internal_default_instance()) {
    delete e_ian_dns_name_starts_with_period_;
  }
  if (this != internal_default_instance()) {
    delete w_ian_iana_pub_suffix_empty_;
  }
  if (this != internal_default_instance()) {
    delete e_inhibit_any_policy_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_invalid_certificate_version_;
  }
  if (this != internal_default_instance()) {
    delete e_issuer_field_empty_;
  }
  if (this != internal_default_instance()) {
    delete e_name_constraint_empty_;
  }
  if (this != internal_default_instance()) {
    delete e_name_constraint_maximum_not_absent_;
  }
  if (this != internal_default_instance()) {
    delete e_name_constraint_minimum_non_zero_;
  }
  if (this != internal_default_instance()) {
    delete w_name_constraint_on_edi_party_name_;
  }
  if (this != internal_default_instance()) {
    delete w_name_constraint_on_registered_id_;
  }
  if (this != internal_default_instance()) {
    delete w_name_constraint_on_x400_;
  }
  if (this != internal_default_instance()) {
    delete e_old_root_ca_rsa_mod_less_than_2048_bits_;
  }
  if (this != internal_default_instance()) {
    delete e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  }
  if (this != internal_default_instance()) {
    delete e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  }
  if (this != internal_default_instance()) {
    delete e_path_len_constraint_improperly_included_;
  }
  if (this != internal_default_instance()) {
    delete e_path_len_constraint_zero_or_less_;
  }
  if (this != internal_default_instance()) {
    delete e_public_key_type_not_allowed_;
  }
  if (this != internal_default_instance()) {
    delete w_root_ca_basic_constraints_path_len_constraint_field_present_;
  }
  if (this != internal_default_instance()) {
    delete w_root_ca_contains_cert_policy_;
  }
  if (this != internal_default_instance()) {
    delete e_root_ca_extended_key_usage_present_;
  }
  if (this != internal_default_instance()) {
    delete e_rsa_exp_negative_;
  }
  if (this != internal_default_instance()) {
    delete w_rsa_mod_factors_smaller_than_752_;
  }
  if (this != internal_default_instance()) {
    delete e_rsa_mod_less_than_2048_bits_;
  }
  if (this != internal_default_instance()) {
    delete w_rsa_mod_not_odd_;
  }
  if (this != internal_default_instance()) {
    delete w_rsa_public_exponent_not_in_range_;
  }
  if (this != internal_default_instance()) {
    delete e_rsa_public_exponent_not_odd_;
  }
  if (this != internal_default_instance()) {
    delete e_rsa_public_exponent_too_small_;
  }
  if (this != internal_default_instance()) {
    delete e_san_dns_name_includes_null_char_;
  }
  if (this != internal_default_instance()) {
    delete e_san_dns_name_starts_with_period_;
  }
  if (this != internal_default_instance()) {
    delete w_san_iana_pub_suffix_empty_;
  }
  if (this != internal_default_instance()) {
    delete e_serial_number_longer_than_20_octets_;
  }
  if (this != internal_default_instance()) {
    delete e_serial_number_not_positive_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_aia_does_not_contain_ocsp_url_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_aia_missing_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_ca_certificate_policies_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_certificate_policies_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_crl_distribution_points_does_not_contain_url_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_crl_distribution_points_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_crl_distribution_points_missing_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_ca_eku_critical_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_ca_name_constraints_not_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_aia_does_not_contain_ocsp_url_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_aia_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_cert_policy_empty_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_cert_certificate_policies_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_crl_distribution_points_does_not_contain_url_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_crl_distribution_points_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_cert_eku_extra_values_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_eku_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_eku_server_auth_client_auth_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_key_usage_cert_sign_bit_set_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_or_sub_ca_using_sha1_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_cert_sha1_expiration_too_long_;
  }
  if (this != internal_default_instance()) {
    delete n_subject_common_name_included_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_common_name_not_from_san_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_contains_noninformational_value_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_contains_reserved_ip_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_country_not_iso_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_empty_without_san_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_info_access_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_not_dn_;
  }
  if (this != internal_default_instance()) {
    delete e_utc_time_does_not_include_seconds_;
  }
  if (this != internal_default_instance()) {
    delete e_utc_time_not_in_zulu_;
  }
  if (this != internal_default_instance()) {
    delete e_validity_time_not_positive_;
  }
  if (this != internal_default_instance()) {
    delete e_wrong_time_format_pre2050_;
  }
  if (this != internal_default_instance()) {
    delete e_rsa_no_public_key_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_certificate_policies_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_key_usage_crl_sign_bit_set_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_common_name_max_length_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_locality_name_max_length_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_organization_name_max_length_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_organizational_unit_name_max_length_;
  }
  if (this != internal_default_instance()) {
    delete e_subject_state_name_max_length_;
  }
  if (this != internal_default_instance()) {
    delete w_multiple_subject_rdn_;
  }
  if (this != internal_default_instance()) {
    delete w_multiple_issuer_rdn_;
  }
  if (this != internal_default_instance()) {
    delete w_issuer_dn_trailing_whitespace_;
  }
  if (this != internal_default_instance()) {
    delete w_issuer_dn_leading_whitespace_;
  }
  if (this != internal_default_instance()) {
    delete w_subject_dn_trailing_whitespace_;
  }
  if (this != internal_default_instance()) {
    delete w_subject_dn_leading_whitespace_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_locality_name_must_appear_;
  }
  if (this != internal_default_instance()) {
    delete e_signature_algorithm_not_supported_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_hyphen_in_sld_;
  }
  if (this != internal_default_instance()) {
    delete e_dsa_correct_order_in_subgroup_;
  }
  if (this != internal_default_instance()) {
    delete n_sub_ca_eku_not_technically_constrained_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_empty_label_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_common_name_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_wildcard_only_in_left_label_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_valid_time_too_long_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_left_label_wildcard_correct_;
  }
  if (this != internal_default_instance()) {
    delete w_serial_number_low_entropy_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_label_too_long_;
  }
  if (this != internal_default_instance()) {
    delete e_root_ca_key_usage_present_;
  }
  if (this != internal_default_instance()) {
    delete w_dnsname_wildcard_left_of_public_suffix_;
  }
  if (this != internal_default_instance()) {
    delete e_international_dns_name_not_unicode_;
  }
  if (this != internal_default_instance()) {
    delete w_dnsname_underscore_in_trd_;
  }
  if (this != internal_default_instance()) {
    delete w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_locality_name_must_not_appear_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_country_name_must_appear_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_bad_character_in_label_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_must_not_contain_any_policy_;
  }
  if (this != internal_default_instance()) {
    delete e_international_dns_name_not_nfkc_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_aia_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ca_is_ca_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_street_address_should_not_exist_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_eku_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_province_must_not_appear_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_underscore_in_sld_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_eku_name_constraints_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_not_is_ca_;
  }
  if (this != internal_default_instance()) {
    delete e_dsa_unique_correct_representation_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_province_must_appear_;
  }
  if (this != internal_default_instance()) {
    delete e_root_ca_key_usage_must_be_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_ext_san_dns_name_too_long_;
  }
  if (this != internal_default_instance()) {
    delete e_dsa_params_missing_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_ca_aia_marked_critical_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_given_name_surname_contains_correct_policy_;
  }
  if (this != internal_default_instance()) {
    delete e_sub_cert_postal_code_must_not_appear_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_not_valid_tld_;
  }
  if (this != internal_default_instance()) {
    delete n_contains_redacted_dnsname_;
  }
  if (this != internal_default_instance()) {
    delete e_dnsname_contains_bare_iana_suffix_;
  }
}

void Lints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lints::descriptor() {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_metadata[2].descriptor;
}

const Lints& Lints::default_instance() {
  protobuf_zlint_2eproto::InitDefaults();
  return *internal_default_instance();
}

Lints* Lints::New(::google::protobuf::Arena* arena) const {
  Lints* n = new Lints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lints::Clear() {
// @@protoc_insertion_point(message_clear_start:zsearch.Lints)
  if (GetArenaNoVirtual() == NULL && e_basic_constraints_not_critical_ != NULL) {
    delete e_basic_constraints_not_critical_;
  }
  e_basic_constraints_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ian_bare_wildcard_ != NULL) {
    delete e_ian_bare_wildcard_;
  }
  e_ian_bare_wildcard_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ian_wildcard_not_first_ != NULL) {
    delete e_ian_wildcard_not_first_;
  }
  e_ian_wildcard_not_first_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_san_bare_wildcard_ != NULL) {
    delete e_san_bare_wildcard_;
  }
  e_san_bare_wildcard_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_san_wildcard_not_first_ != NULL) {
    delete e_san_wildcard_not_first_;
  }
  e_san_wildcard_not_first_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_country_name_invalid_ != NULL) {
    delete e_ca_country_name_invalid_;
  }
  e_ca_country_name_invalid_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_country_name_missing_ != NULL) {
    delete e_ca_country_name_missing_;
  }
  e_ca_country_name_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_crl_sign_not_set_ != NULL) {
    delete e_ca_crl_sign_not_set_;
  }
  e_ca_crl_sign_not_set_ = NULL;
  if (GetArenaNoVirtual() == NULL && n_ca_digital_signature_not_set_ != NULL) {
    delete n_ca_digital_signature_not_set_;
  }
  n_ca_digital_signature_not_set_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_key_cert_sign_not_set_ != NULL) {
    delete e_ca_key_cert_sign_not_set_;
  }
  e_ca_key_cert_sign_not_set_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_key_usage_missing_ != NULL) {
    delete e_ca_key_usage_missing_;
  }
  e_ca_key_usage_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_key_usage_not_critical_ != NULL) {
    delete e_ca_key_usage_not_critical_;
  }
  e_ca_key_usage_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_organization_name_missing_ != NULL) {
    delete e_ca_organization_name_missing_;
  }
  e_ca_organization_name_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_subject_field_empty_ != NULL) {
    delete e_ca_subject_field_empty_;
  }
  e_ca_subject_field_empty_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cert_contains_unique_identifier_ != NULL) {
    delete e_cert_contains_unique_identifier_;
  }
  e_cert_contains_unique_identifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cert_extensions_version_not_3_ != NULL) {
    delete e_cert_extensions_version_not_3_;
  }
  e_cert_extensions_version_not_3_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_locality_ != NULL) {
    delete e_cab_dv_conflicts_with_locality_;
  }
  e_cab_dv_conflicts_with_locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_org_ != NULL) {
    delete e_cab_dv_conflicts_with_org_;
  }
  e_cab_dv_conflicts_with_org_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_postal_ != NULL) {
    delete e_cab_dv_conflicts_with_postal_;
  }
  e_cab_dv_conflicts_with_postal_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_province_ != NULL) {
    delete e_cab_dv_conflicts_with_province_;
  }
  e_cab_dv_conflicts_with_province_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_street_ != NULL) {
    delete e_cab_dv_conflicts_with_street_;
  }
  e_cab_dv_conflicts_with_street_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cert_policy_iv_requires_country_ != NULL) {
    delete e_cert_policy_iv_requires_country_;
  }
  e_cert_policy_iv_requires_country_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cert_policy_iv_requires_province_or_locality_ != NULL) {
    delete e_cert_policy_iv_requires_province_or_locality_;
  }
  e_cert_policy_iv_requires_province_or_locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cert_policy_ov_requires_country_ != NULL) {
    delete e_cert_policy_ov_requires_country_;
  }
  e_cert_policy_ov_requires_country_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cert_policy_ov_requires_province_or_locality_ != NULL) {
    delete e_cert_policy_ov_requires_province_or_locality_;
  }
  e_cert_policy_ov_requires_province_or_locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cab_ov_requires_org_ != NULL) {
    delete e_cab_ov_requires_org_;
  }
  e_cab_ov_requires_org_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cab_iv_requires_personal_name_ != NULL) {
    delete e_cab_iv_requires_personal_name_;
  }
  e_cab_iv_requires_personal_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_cert_unique_identifier_version_not_2_or_3_ != NULL) {
    delete e_cert_unique_identifier_version_not_2_or_3_;
  }
  e_cert_unique_identifier_version_not_2_or_3_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_distribution_point_incomplete_ != NULL) {
    delete e_distribution_point_incomplete_;
  }
  e_distribution_point_incomplete_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_distribution_point_missing_ldap_or_uri_ != NULL) {
    delete w_distribution_point_missing_ldap_or_uri_;
  }
  w_distribution_point_missing_ldap_or_uri_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dsa_improper_modulus_or_divisor_size_ != NULL) {
    delete e_dsa_improper_modulus_or_divisor_size_;
  }
  e_dsa_improper_modulus_or_divisor_size_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dsa_shorter_than_2048_bits_ != NULL) {
    delete e_dsa_shorter_than_2048_bits_;
  }
  e_dsa_shorter_than_2048_bits_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ec_improper_curves_ != NULL) {
    delete e_ec_improper_curves_;
  }
  e_ec_improper_curves_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_eku_critical_improperly_ != NULL) {
    delete w_eku_critical_improperly_;
  }
  w_eku_critical_improperly_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ev_business_category_missing_ != NULL) {
    delete e_ev_business_category_missing_;
  }
  e_ev_business_category_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ev_country_name_missing_ != NULL) {
    delete e_ev_country_name_missing_;
  }
  e_ev_country_name_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ev_locality_name_missing_ != NULL) {
    delete e_ev_locality_name_missing_;
  }
  e_ev_locality_name_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ev_organization_name_missing_ != NULL) {
    delete e_ev_organization_name_missing_;
  }
  e_ev_organization_name_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ev_serial_number_missing_ != NULL) {
    delete e_ev_serial_number_missing_;
  }
  e_ev_serial_number_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ev_valid_time_too_long_ != NULL) {
    delete e_ev_valid_time_too_long_;
  }
  e_ev_valid_time_too_long_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_aia_access_location_missing_ != NULL) {
    delete w_ext_aia_access_location_missing_;
  }
  w_ext_aia_access_location_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_aia_marked_critical_ != NULL) {
    delete e_ext_aia_marked_critical_;
  }
  e_ext_aia_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_critical_ != NULL) {
    delete e_ext_authority_key_identifier_critical_;
  }
  e_ext_authority_key_identifier_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_missing_ != NULL) {
    delete e_ext_authority_key_identifier_missing_;
  }
  e_ext_authority_key_identifier_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_no_key_identifier_ != NULL) {
    delete e_ext_authority_key_identifier_no_key_identifier_;
  }
  e_ext_authority_key_identifier_no_key_identifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_contains_noticeref_ != NULL) {
    delete w_ext_cert_policy_contains_noticeref_;
  }
  w_ext_cert_policy_contains_noticeref_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_disallowed_any_policy_qualifier_ != NULL) {
    delete e_ext_cert_policy_disallowed_any_policy_qualifier_;
  }
  e_ext_cert_policy_disallowed_any_policy_qualifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_duplicate_ != NULL) {
    delete e_ext_cert_policy_duplicate_;
  }
  e_ext_cert_policy_duplicate_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_explicit_text_ia5_string_ != NULL) {
    delete e_ext_cert_policy_explicit_text_ia5_string_;
  }
  e_ext_cert_policy_explicit_text_ia5_string_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_includes_control_ != NULL) {
    delete w_ext_cert_policy_explicit_text_includes_control_;
  }
  w_ext_cert_policy_explicit_text_includes_control_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_not_nfc_ != NULL) {
    delete w_ext_cert_policy_explicit_text_not_nfc_;
  }
  w_ext_cert_policy_explicit_text_not_nfc_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_not_utf8_ != NULL) {
    delete w_ext_cert_policy_explicit_text_not_utf8_;
  }
  w_ext_cert_policy_explicit_text_not_utf8_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_explicit_text_too_long_ != NULL) {
    delete e_ext_cert_policy_explicit_text_too_long_;
  }
  e_ext_cert_policy_explicit_text_too_long_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_crl_distribution_marked_critical_ != NULL) {
    delete w_ext_crl_distribution_marked_critical_;
  }
  w_ext_crl_distribution_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_duplicate_extension_ != NULL) {
    delete e_ext_duplicate_extension_;
  }
  e_ext_duplicate_extension_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_freshest_crl_marked_critical_ != NULL) {
    delete e_ext_freshest_crl_marked_critical_;
  }
  e_ext_freshest_crl_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_ian_critical_ != NULL) {
    delete w_ext_ian_critical_;
  }
  w_ext_ian_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_dns_not_ia5_string_ != NULL) {
    delete e_ext_ian_dns_not_ia5_string_;
  }
  e_ext_ian_dns_not_ia5_string_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_empty_name_ != NULL) {
    delete e_ext_ian_empty_name_;
  }
  e_ext_ian_empty_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_no_entries_ != NULL) {
    delete e_ext_ian_no_entries_;
  }
  e_ext_ian_no_entries_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_rfc822_format_invalid_ != NULL) {
    delete e_ext_ian_rfc822_format_invalid_;
  }
  e_ext_ian_rfc822_format_invalid_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_space_dns_name_ != NULL) {
    delete e_ext_ian_space_dns_name_;
  }
  e_ext_ian_space_dns_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_format_invalid_ != NULL) {
    delete e_ext_ian_uri_format_invalid_;
  }
  e_ext_ian_uri_format_invalid_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_host_not_fqdn_or_ip_ != NULL) {
    delete e_ext_ian_uri_host_not_fqdn_or_ip_;
  }
  e_ext_ian_uri_host_not_fqdn_or_ip_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_not_ia5_ != NULL) {
    delete e_ext_ian_uri_not_ia5_;
  }
  e_ext_ian_uri_not_ia5_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_relative_ != NULL) {
    delete e_ext_ian_uri_relative_;
  }
  e_ext_ian_uri_relative_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_key_usage_cert_sign_without_ca_ != NULL) {
    delete e_ext_key_usage_cert_sign_without_ca_;
  }
  e_ext_key_usage_cert_sign_without_ca_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_key_usage_not_critical_ != NULL) {
    delete w_ext_key_usage_not_critical_;
  }
  w_ext_key_usage_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_key_usage_without_bits_ != NULL) {
    delete e_ext_key_usage_without_bits_;
  }
  e_ext_key_usage_without_bits_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_name_constraints_not_critical_ != NULL) {
    delete e_ext_name_constraints_not_critical_;
  }
  e_ext_name_constraints_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_name_constraints_not_in_ca_ != NULL) {
    delete e_ext_name_constraints_not_in_ca_;
  }
  e_ext_name_constraints_not_in_ca_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_policy_constraints_empty_ != NULL) {
    delete e_ext_policy_constraints_empty_;
  }
  e_ext_policy_constraints_empty_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_policy_constraints_not_critical_ != NULL) {
    delete e_ext_policy_constraints_not_critical_;
  }
  e_ext_policy_constraints_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_policy_map_any_policy_ != NULL) {
    delete e_ext_policy_map_any_policy_;
  }
  e_ext_policy_map_any_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_policy_map_not_critical_ != NULL) {
    delete w_ext_policy_map_not_critical_;
  }
  w_ext_policy_map_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_policy_map_not_in_cert_policy_ != NULL) {
    delete w_ext_policy_map_not_in_cert_policy_;
  }
  w_ext_policy_map_not_in_cert_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_contains_reserved_ip_ != NULL) {
    delete e_ext_san_contains_reserved_ip_;
  }
  e_ext_san_contains_reserved_ip_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_san_critical_with_subject_dn_ != NULL) {
    delete w_ext_san_critical_with_subject_dn_;
  }
  w_ext_san_critical_with_subject_dn_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_directory_name_present_ != NULL) {
    delete e_ext_san_directory_name_present_;
  }
  e_ext_san_directory_name_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_dns_not_ia5_string_ != NULL) {
    delete e_ext_san_dns_not_ia5_string_;
  }
  e_ext_san_dns_not_ia5_string_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_edi_party_name_present_ != NULL) {
    delete e_ext_san_edi_party_name_present_;
  }
  e_ext_san_edi_party_name_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_empty_name_ != NULL) {
    delete e_ext_san_empty_name_;
  }
  e_ext_san_empty_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_missing_ != NULL) {
    delete e_ext_san_missing_;
  }
  e_ext_san_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_no_entries_ != NULL) {
    delete e_ext_san_no_entries_;
  }
  e_ext_san_no_entries_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_not_critical_without_subject_ != NULL) {
    delete e_ext_san_not_critical_without_subject_;
  }
  e_ext_san_not_critical_without_subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_other_name_present_ != NULL) {
    delete e_ext_san_other_name_present_;
  }
  e_ext_san_other_name_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_registered_id_present_ != NULL) {
    delete e_ext_san_registered_id_present_;
  }
  e_ext_san_registered_id_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_rfc822_format_invalid_ != NULL) {
    delete e_ext_san_rfc822_format_invalid_;
  }
  e_ext_san_rfc822_format_invalid_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_rfc822_name_present_ != NULL) {
    delete e_ext_san_rfc822_name_present_;
  }
  e_ext_san_rfc822_name_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_space_dns_name_ != NULL) {
    delete e_ext_san_space_dns_name_;
  }
  e_ext_san_space_dns_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_uniform_resource_identifier_present_ != NULL) {
    delete e_ext_san_uniform_resource_identifier_present_;
  }
  e_ext_san_uniform_resource_identifier_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_format_invalid_ != NULL) {
    delete e_ext_san_uri_format_invalid_;
  }
  e_ext_san_uri_format_invalid_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_host_not_fqdn_or_ip_ != NULL) {
    delete e_ext_san_uri_host_not_fqdn_or_ip_;
  }
  e_ext_san_uri_host_not_fqdn_or_ip_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_not_ia5_ != NULL) {
    delete e_ext_san_uri_not_ia5_;
  }
  e_ext_san_uri_not_ia5_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_relative_ != NULL) {
    delete e_ext_san_uri_relative_;
  }
  e_ext_san_uri_relative_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_subject_directory_attr_critical_ != NULL) {
    delete e_ext_subject_directory_attr_critical_;
  }
  e_ext_subject_directory_attr_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_subject_key_identifier_critical_ != NULL) {
    delete e_ext_subject_key_identifier_critical_;
  }
  e_ext_subject_key_identifier_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_subject_key_identifier_missing_ca_ != NULL) {
    delete e_ext_subject_key_identifier_missing_ca_;
  }
  e_ext_subject_key_identifier_missing_ca_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ext_subject_key_identifier_missing_sub_cert_ != NULL) {
    delete w_ext_subject_key_identifier_missing_sub_cert_;
  }
  w_ext_subject_key_identifier_missing_sub_cert_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_generalized_time_does_not_include_seconds_ != NULL) {
    delete e_generalized_time_does_not_include_seconds_;
  }
  e_generalized_time_does_not_include_seconds_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_generalized_time_includes_fraction_seconds_ != NULL) {
    delete e_generalized_time_includes_fraction_seconds_;
  }
  e_generalized_time_includes_fraction_seconds_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_generalized_time_not_in_zulu_ != NULL) {
    delete e_generalized_time_not_in_zulu_;
  }
  e_generalized_time_not_in_zulu_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ian_dns_name_includes_null_char_ != NULL) {
    delete e_ian_dns_name_includes_null_char_;
  }
  e_ian_dns_name_includes_null_char_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ian_dns_name_starts_with_period_ != NULL) {
    delete e_ian_dns_name_starts_with_period_;
  }
  e_ian_dns_name_starts_with_period_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_ian_iana_pub_suffix_empty_ != NULL) {
    delete w_ian_iana_pub_suffix_empty_;
  }
  w_ian_iana_pub_suffix_empty_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_inhibit_any_policy_not_critical_ != NULL) {
    delete e_inhibit_any_policy_not_critical_;
  }
  e_inhibit_any_policy_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_invalid_certificate_version_ != NULL) {
    delete e_invalid_certificate_version_;
  }
  e_invalid_certificate_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_issuer_field_empty_ != NULL) {
    delete e_issuer_field_empty_;
  }
  e_issuer_field_empty_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_name_constraint_empty_ != NULL) {
    delete e_name_constraint_empty_;
  }
  e_name_constraint_empty_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_name_constraint_maximum_not_absent_ != NULL) {
    delete e_name_constraint_maximum_not_absent_;
  }
  e_name_constraint_maximum_not_absent_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_name_constraint_minimum_non_zero_ != NULL) {
    delete e_name_constraint_minimum_non_zero_;
  }
  e_name_constraint_minimum_non_zero_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_edi_party_name_ != NULL) {
    delete w_name_constraint_on_edi_party_name_;
  }
  w_name_constraint_on_edi_party_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_registered_id_ != NULL) {
    delete w_name_constraint_on_registered_id_;
  }
  w_name_constraint_on_registered_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_x400_ != NULL) {
    delete w_name_constraint_on_x400_;
  }
  w_name_constraint_on_x400_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_old_root_ca_rsa_mod_less_than_2048_bits_ != NULL) {
    delete e_old_root_ca_rsa_mod_less_than_2048_bits_;
  }
  e_old_root_ca_rsa_mod_less_than_2048_bits_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_old_sub_ca_rsa_mod_less_than_1024_bits_ != NULL) {
    delete e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  }
  e_old_sub_ca_rsa_mod_less_than_1024_bits_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_old_sub_cert_rsa_mod_less_than_1024_bits_ != NULL) {
    delete e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  }
  e_old_sub_cert_rsa_mod_less_than_1024_bits_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_path_len_constraint_improperly_included_ != NULL) {
    delete e_path_len_constraint_improperly_included_;
  }
  e_path_len_constraint_improperly_included_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_path_len_constraint_zero_or_less_ != NULL) {
    delete e_path_len_constraint_zero_or_less_;
  }
  e_path_len_constraint_zero_or_less_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_public_key_type_not_allowed_ != NULL) {
    delete e_public_key_type_not_allowed_;
  }
  e_public_key_type_not_allowed_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_root_ca_basic_constraints_path_len_constraint_field_present_ != NULL) {
    delete w_root_ca_basic_constraints_path_len_constraint_field_present_;
  }
  w_root_ca_basic_constraints_path_len_constraint_field_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_root_ca_contains_cert_policy_ != NULL) {
    delete w_root_ca_contains_cert_policy_;
  }
  w_root_ca_contains_cert_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_root_ca_extended_key_usage_present_ != NULL) {
    delete e_root_ca_extended_key_usage_present_;
  }
  e_root_ca_extended_key_usage_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_rsa_exp_negative_ != NULL) {
    delete e_rsa_exp_negative_;
  }
  e_rsa_exp_negative_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_rsa_mod_factors_smaller_than_752_ != NULL) {
    delete w_rsa_mod_factors_smaller_than_752_;
  }
  w_rsa_mod_factors_smaller_than_752_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_rsa_mod_less_than_2048_bits_ != NULL) {
    delete e_rsa_mod_less_than_2048_bits_;
  }
  e_rsa_mod_less_than_2048_bits_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_rsa_mod_not_odd_ != NULL) {
    delete w_rsa_mod_not_odd_;
  }
  w_rsa_mod_not_odd_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_rsa_public_exponent_not_in_range_ != NULL) {
    delete w_rsa_public_exponent_not_in_range_;
  }
  w_rsa_public_exponent_not_in_range_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_rsa_public_exponent_not_odd_ != NULL) {
    delete e_rsa_public_exponent_not_odd_;
  }
  e_rsa_public_exponent_not_odd_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_rsa_public_exponent_too_small_ != NULL) {
    delete e_rsa_public_exponent_too_small_;
  }
  e_rsa_public_exponent_too_small_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_san_dns_name_includes_null_char_ != NULL) {
    delete e_san_dns_name_includes_null_char_;
  }
  e_san_dns_name_includes_null_char_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_san_dns_name_starts_with_period_ != NULL) {
    delete e_san_dns_name_starts_with_period_;
  }
  e_san_dns_name_starts_with_period_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_san_iana_pub_suffix_empty_ != NULL) {
    delete w_san_iana_pub_suffix_empty_;
  }
  w_san_iana_pub_suffix_empty_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_serial_number_longer_than_20_octets_ != NULL) {
    delete e_serial_number_longer_than_20_octets_;
  }
  e_serial_number_longer_than_20_octets_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_serial_number_not_positive_ != NULL) {
    delete e_serial_number_not_positive_;
  }
  e_serial_number_not_positive_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_ca_aia_does_not_contain_issuing_ca_url_ != NULL) {
    delete w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  }
  w_sub_ca_aia_does_not_contain_issuing_ca_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_does_not_contain_ocsp_url_ != NULL) {
    delete e_sub_ca_aia_does_not_contain_ocsp_url_;
  }
  e_sub_ca_aia_does_not_contain_ocsp_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_missing_ != NULL) {
    delete e_sub_ca_aia_missing_;
  }
  e_sub_ca_aia_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_ca_certificate_policies_marked_critical_ != NULL) {
    delete w_sub_ca_certificate_policies_marked_critical_;
  }
  w_sub_ca_certificate_policies_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_certificate_policies_missing_ != NULL) {
    delete e_sub_ca_certificate_policies_missing_;
  }
  e_sub_ca_certificate_policies_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_does_not_contain_url_ != NULL) {
    delete e_sub_ca_crl_distribution_points_does_not_contain_url_;
  }
  e_sub_ca_crl_distribution_points_does_not_contain_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_marked_critical_ != NULL) {
    delete e_sub_ca_crl_distribution_points_marked_critical_;
  }
  e_sub_ca_crl_distribution_points_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_missing_ != NULL) {
    delete e_sub_ca_crl_distribution_points_missing_;
  }
  e_sub_ca_crl_distribution_points_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_ca_eku_critical_ != NULL) {
    delete w_sub_ca_eku_critical_;
  }
  w_sub_ca_eku_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_ca_name_constraints_not_critical_ != NULL) {
    delete w_sub_ca_name_constraints_not_critical_;
  }
  w_sub_ca_name_constraints_not_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_does_not_contain_ocsp_url_ != NULL) {
    delete e_sub_cert_aia_does_not_contain_ocsp_url_;
  }
  e_sub_cert_aia_does_not_contain_ocsp_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_missing_ != NULL) {
    delete e_sub_cert_aia_missing_;
  }
  e_sub_cert_aia_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_cert_policy_empty_ != NULL) {
    delete e_sub_cert_cert_policy_empty_;
  }
  e_sub_cert_cert_policy_empty_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_cert_certificate_policies_marked_critical_ != NULL) {
    delete w_sub_cert_certificate_policies_marked_critical_;
  }
  w_sub_cert_certificate_policies_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_crl_distribution_points_does_not_contain_url_ != NULL) {
    delete e_sub_cert_crl_distribution_points_does_not_contain_url_;
  }
  e_sub_cert_crl_distribution_points_does_not_contain_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_crl_distribution_points_marked_critical_ != NULL) {
    delete e_sub_cert_crl_distribution_points_marked_critical_;
  }
  e_sub_cert_crl_distribution_points_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_cert_eku_extra_values_ != NULL) {
    delete w_sub_cert_eku_extra_values_;
  }
  w_sub_cert_eku_extra_values_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_eku_missing_ != NULL) {
    delete e_sub_cert_eku_missing_;
  }
  e_sub_cert_eku_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_eku_server_auth_client_auth_missing_ != NULL) {
    delete e_sub_cert_eku_server_auth_client_auth_missing_;
  }
  e_sub_cert_eku_server_auth_client_auth_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_key_usage_cert_sign_bit_set_ != NULL) {
    delete e_sub_cert_key_usage_cert_sign_bit_set_;
  }
  e_sub_cert_key_usage_cert_sign_bit_set_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_or_sub_ca_using_sha1_ != NULL) {
    delete e_sub_cert_or_sub_ca_using_sha1_;
  }
  e_sub_cert_or_sub_ca_using_sha1_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_cert_sha1_expiration_too_long_ != NULL) {
    delete w_sub_cert_sha1_expiration_too_long_;
  }
  w_sub_cert_sha1_expiration_too_long_ = NULL;
  if (GetArenaNoVirtual() == NULL && n_subject_common_name_included_ != NULL) {
    delete n_subject_common_name_included_;
  }
  n_subject_common_name_included_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_common_name_not_from_san_ != NULL) {
    delete e_subject_common_name_not_from_san_;
  }
  e_subject_common_name_not_from_san_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_contains_noninformational_value_ != NULL) {
    delete e_subject_contains_noninformational_value_;
  }
  e_subject_contains_noninformational_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_contains_reserved_ip_ != NULL) {
    delete e_subject_contains_reserved_ip_;
  }
  e_subject_contains_reserved_ip_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_country_not_iso_ != NULL) {
    delete e_subject_country_not_iso_;
  }
  e_subject_country_not_iso_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_empty_without_san_ != NULL) {
    delete e_subject_empty_without_san_;
  }
  e_subject_empty_without_san_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_info_access_marked_critical_ != NULL) {
    delete e_subject_info_access_marked_critical_;
  }
  e_subject_info_access_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_not_dn_ != NULL) {
    delete e_subject_not_dn_;
  }
  e_subject_not_dn_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_utc_time_does_not_include_seconds_ != NULL) {
    delete e_utc_time_does_not_include_seconds_;
  }
  e_utc_time_does_not_include_seconds_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_utc_time_not_in_zulu_ != NULL) {
    delete e_utc_time_not_in_zulu_;
  }
  e_utc_time_not_in_zulu_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_validity_time_not_positive_ != NULL) {
    delete e_validity_time_not_positive_;
  }
  e_validity_time_not_positive_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_wrong_time_format_pre2050_ != NULL) {
    delete e_wrong_time_format_pre2050_;
  }
  e_wrong_time_format_pre2050_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_rsa_no_public_key_ != NULL) {
    delete e_rsa_no_public_key_;
  }
  e_rsa_no_public_key_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_certificate_policies_missing_ != NULL) {
    delete e_sub_cert_certificate_policies_missing_;
  }
  e_sub_cert_certificate_policies_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_key_usage_crl_sign_bit_set_ != NULL) {
    delete e_sub_cert_key_usage_crl_sign_bit_set_;
  }
  e_sub_cert_key_usage_crl_sign_bit_set_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_common_name_max_length_ != NULL) {
    delete e_subject_common_name_max_length_;
  }
  e_subject_common_name_max_length_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_locality_name_max_length_ != NULL) {
    delete e_subject_locality_name_max_length_;
  }
  e_subject_locality_name_max_length_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_organization_name_max_length_ != NULL) {
    delete e_subject_organization_name_max_length_;
  }
  e_subject_organization_name_max_length_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_organizational_unit_name_max_length_ != NULL) {
    delete e_subject_organizational_unit_name_max_length_;
  }
  e_subject_organizational_unit_name_max_length_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_subject_state_name_max_length_ != NULL) {
    delete e_subject_state_name_max_length_;
  }
  e_subject_state_name_max_length_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_multiple_subject_rdn_ != NULL) {
    delete w_multiple_subject_rdn_;
  }
  w_multiple_subject_rdn_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_multiple_issuer_rdn_ != NULL) {
    delete w_multiple_issuer_rdn_;
  }
  w_multiple_issuer_rdn_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_issuer_dn_trailing_whitespace_ != NULL) {
    delete w_issuer_dn_trailing_whitespace_;
  }
  w_issuer_dn_trailing_whitespace_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_issuer_dn_leading_whitespace_ != NULL) {
    delete w_issuer_dn_leading_whitespace_;
  }
  w_issuer_dn_leading_whitespace_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_subject_dn_trailing_whitespace_ != NULL) {
    delete w_subject_dn_trailing_whitespace_;
  }
  w_subject_dn_trailing_whitespace_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_subject_dn_leading_whitespace_ != NULL) {
    delete w_subject_dn_leading_whitespace_;
  }
  w_subject_dn_leading_whitespace_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_locality_name_must_appear_ != NULL) {
    delete e_sub_cert_locality_name_must_appear_;
  }
  e_sub_cert_locality_name_must_appear_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_signature_algorithm_not_supported_ != NULL) {
    delete e_signature_algorithm_not_supported_;
  }
  e_signature_algorithm_not_supported_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_hyphen_in_sld_ != NULL) {
    delete e_dnsname_hyphen_in_sld_;
  }
  e_dnsname_hyphen_in_sld_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dsa_correct_order_in_subgroup_ != NULL) {
    delete e_dsa_correct_order_in_subgroup_;
  }
  e_dsa_correct_order_in_subgroup_ = NULL;
  if (GetArenaNoVirtual() == NULL && n_sub_ca_eku_not_technically_constrained_ != NULL) {
    delete n_sub_ca_eku_not_technically_constrained_;
  }
  n_sub_ca_eku_not_technically_constrained_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_empty_label_ != NULL) {
    delete e_dnsname_empty_label_;
  }
  e_dnsname_empty_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_common_name_missing_ != NULL) {
    delete e_ca_common_name_missing_;
  }
  e_ca_common_name_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_wildcard_only_in_left_label_ != NULL) {
    delete e_dnsname_wildcard_only_in_left_label_;
  }
  e_dnsname_wildcard_only_in_left_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_valid_time_too_long_ != NULL) {
    delete e_sub_cert_valid_time_too_long_;
  }
  e_sub_cert_valid_time_too_long_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_left_label_wildcard_correct_ != NULL) {
    delete e_dnsname_left_label_wildcard_correct_;
  }
  e_dnsname_left_label_wildcard_correct_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_serial_number_low_entropy_ != NULL) {
    delete w_serial_number_low_entropy_;
  }
  w_serial_number_low_entropy_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_label_too_long_ != NULL) {
    delete e_dnsname_label_too_long_;
  }
  e_dnsname_label_too_long_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_root_ca_key_usage_present_ != NULL) {
    delete e_root_ca_key_usage_present_;
  }
  e_root_ca_key_usage_present_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_dnsname_wildcard_left_of_public_suffix_ != NULL) {
    delete w_dnsname_wildcard_left_of_public_suffix_;
  }
  w_dnsname_wildcard_left_of_public_suffix_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_international_dns_name_not_unicode_ != NULL) {
    delete e_international_dns_name_not_unicode_;
  }
  e_international_dns_name_not_unicode_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_dnsname_underscore_in_trd_ != NULL) {
    delete w_dnsname_underscore_in_trd_;
  }
  w_dnsname_underscore_in_trd_ = NULL;
  if (GetArenaNoVirtual() == NULL && w_sub_cert_aia_does_not_contain_issuing_ca_url_ != NULL) {
    delete w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  }
  w_sub_cert_aia_does_not_contain_issuing_ca_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_locality_name_must_not_appear_ != NULL) {
    delete e_sub_cert_locality_name_must_not_appear_;
  }
  e_sub_cert_locality_name_must_not_appear_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_country_name_must_appear_ != NULL) {
    delete e_sub_cert_country_name_must_appear_;
  }
  e_sub_cert_country_name_must_appear_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_bad_character_in_label_ != NULL) {
    delete e_dnsname_bad_character_in_label_;
  }
  e_dnsname_bad_character_in_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_must_not_contain_any_policy_ != NULL) {
    delete e_sub_ca_must_not_contain_any_policy_;
  }
  e_sub_ca_must_not_contain_any_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_international_dns_name_not_nfkc_ != NULL) {
    delete e_international_dns_name_not_nfkc_;
  }
  e_international_dns_name_not_nfkc_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_marked_critical_ != NULL) {
    delete e_sub_cert_aia_marked_critical_;
  }
  e_sub_cert_aia_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ca_is_ca_ != NULL) {
    delete e_ca_is_ca_;
  }
  e_ca_is_ca_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_street_address_should_not_exist_ != NULL) {
    delete e_sub_cert_street_address_should_not_exist_;
  }
  e_sub_cert_street_address_should_not_exist_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_eku_missing_ != NULL) {
    delete e_sub_ca_eku_missing_;
  }
  e_sub_ca_eku_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_province_must_not_appear_ != NULL) {
    delete e_sub_cert_province_must_not_appear_;
  }
  e_sub_cert_province_must_not_appear_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_underscore_in_sld_ != NULL) {
    delete e_dnsname_underscore_in_sld_;
  }
  e_dnsname_underscore_in_sld_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_eku_name_constraints_ != NULL) {
    delete e_sub_ca_eku_name_constraints_;
  }
  e_sub_ca_eku_name_constraints_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_not_is_ca_ != NULL) {
    delete e_sub_cert_not_is_ca_;
  }
  e_sub_cert_not_is_ca_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dsa_unique_correct_representation_ != NULL) {
    delete e_dsa_unique_correct_representation_;
  }
  e_dsa_unique_correct_representation_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_province_must_appear_ != NULL) {
    delete e_sub_cert_province_must_appear_;
  }
  e_sub_cert_province_must_appear_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_root_ca_key_usage_must_be_critical_ != NULL) {
    delete e_root_ca_key_usage_must_be_critical_;
  }
  e_root_ca_key_usage_must_be_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ext_san_dns_name_too_long_ != NULL) {
    delete e_ext_san_dns_name_too_long_;
  }
  e_ext_san_dns_name_too_long_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dsa_params_missing_ != NULL) {
    delete e_dsa_params_missing_;
  }
  e_dsa_params_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_marked_critical_ != NULL) {
    delete e_sub_ca_aia_marked_critical_;
  }
  e_sub_ca_aia_marked_critical_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_given_name_surname_contains_correct_policy_ != NULL) {
    delete e_sub_cert_given_name_surname_contains_correct_policy_;
  }
  e_sub_cert_given_name_surname_contains_correct_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_sub_cert_postal_code_must_not_appear_ != NULL) {
    delete e_sub_cert_postal_code_must_not_appear_;
  }
  e_sub_cert_postal_code_must_not_appear_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_not_valid_tld_ != NULL) {
    delete e_dnsname_not_valid_tld_;
  }
  e_dnsname_not_valid_tld_ = NULL;
  if (GetArenaNoVirtual() == NULL && n_contains_redacted_dnsname_ != NULL) {
    delete n_contains_redacted_dnsname_;
  }
  n_contains_redacted_dnsname_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_dnsname_contains_bare_iana_suffix_ != NULL) {
    delete e_dnsname_contains_bare_iana_suffix_;
  }
  e_dnsname_contains_bare_iana_suffix_ = NULL;
}

bool Lints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zsearch.Lints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .zsearch.LintResult e_basic_constraints_not_critical = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_basic_constraints_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ian_bare_wildcard = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ian_bare_wildcard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ian_wildcard_not_first = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ian_wildcard_not_first()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_san_bare_wildcard = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_san_bare_wildcard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_san_wildcard_not_first = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_san_wildcard_not_first()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_country_name_invalid = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_country_name_invalid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_country_name_missing = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_country_name_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_crl_sign_not_set = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_crl_sign_not_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult n_ca_digital_signature_not_set = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_n_ca_digital_signature_not_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_key_cert_sign_not_set = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_key_cert_sign_not_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_key_usage_missing = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_key_usage_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_key_usage_not_critical = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_key_usage_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_organization_name_missing = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_organization_name_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_subject_field_empty = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_subject_field_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cert_contains_unique_identifier = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cert_contains_unique_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cert_extensions_version_not_3 = 16;
      case 16: {
        if (tag == 130u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cert_extensions_version_not_3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cab_dv_conflicts_with_locality = 17;
      case 17: {
        if (tag == 138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cab_dv_conflicts_with_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cab_dv_conflicts_with_org = 18;
      case 18: {
        if (tag == 146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cab_dv_conflicts_with_org()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cab_dv_conflicts_with_postal = 19;
      case 19: {
        if (tag == 154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cab_dv_conflicts_with_postal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cab_dv_conflicts_with_province = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cab_dv_conflicts_with_province()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cab_dv_conflicts_with_street = 21;
      case 21: {
        if (tag == 170u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cab_dv_conflicts_with_street()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cert_policy_iv_requires_country = 22;
      case 22: {
        if (tag == 178u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cert_policy_iv_requires_country()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cert_policy_iv_requires_province_or_locality = 23;
      case 23: {
        if (tag == 186u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cert_policy_iv_requires_province_or_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cert_policy_ov_requires_country = 24;
      case 24: {
        if (tag == 194u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cert_policy_ov_requires_country()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cert_policy_ov_requires_province_or_locality = 25;
      case 25: {
        if (tag == 202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cert_policy_ov_requires_province_or_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cab_ov_requires_org = 26;
      case 26: {
        if (tag == 210u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cab_ov_requires_org()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cab_iv_requires_personal_name = 27;
      case 27: {
        if (tag == 218u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cab_iv_requires_personal_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_cert_unique_identifier_version_not_2_or_3 = 28;
      case 28: {
        if (tag == 226u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_cert_unique_identifier_version_not_2_or_3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_distribution_point_incomplete = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_distribution_point_incomplete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_distribution_point_missing_ldap_or_uri = 31;
      case 31: {
        if (tag == 250u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_distribution_point_missing_ldap_or_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dsa_improper_modulus_or_divisor_size = 32;
      case 32: {
        if (tag == 258u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dsa_improper_modulus_or_divisor_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dsa_shorter_than_2048_bits = 33;
      case 33: {
        if (tag == 266u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dsa_shorter_than_2048_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ec_improper_curves = 34;
      case 34: {
        if (tag == 274u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ec_improper_curves()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_eku_critical_improperly = 35;
      case 35: {
        if (tag == 282u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_eku_critical_improperly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ev_business_category_missing = 36;
      case 36: {
        if (tag == 290u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ev_business_category_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ev_country_name_missing = 37;
      case 37: {
        if (tag == 298u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ev_country_name_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ev_locality_name_missing = 38;
      case 38: {
        if (tag == 306u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ev_locality_name_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ev_organization_name_missing = 39;
      case 39: {
        if (tag == 314u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ev_organization_name_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ev_serial_number_missing = 40;
      case 40: {
        if (tag == 322u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ev_serial_number_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ev_valid_time_too_long = 41;
      case 41: {
        if (tag == 330u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ev_valid_time_too_long()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_aia_access_location_missing = 42;
      case 42: {
        if (tag == 338u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_aia_access_location_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_aia_marked_critical = 43;
      case 43: {
        if (tag == 346u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_aia_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_authority_key_identifier_critical = 44;
      case 44: {
        if (tag == 354u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_authority_key_identifier_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_authority_key_identifier_missing = 45;
      case 45: {
        if (tag == 362u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_authority_key_identifier_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_authority_key_identifier_no_key_identifier = 46;
      case 46: {
        if (tag == 370u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_authority_key_identifier_no_key_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_cert_policy_contains_noticeref = 47;
      case 47: {
        if (tag == 378u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_cert_policy_contains_noticeref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_cert_policy_disallowed_any_policy_qualifier = 48;
      case 48: {
        if (tag == 386u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_cert_policy_disallowed_any_policy_qualifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_cert_policy_duplicate = 49;
      case 49: {
        if (tag == 394u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_cert_policy_duplicate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_cert_policy_explicit_text_ia5_string = 50;
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_cert_policy_explicit_text_ia5_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_cert_policy_explicit_text_includes_control = 51;
      case 51: {
        if (tag == 410u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_cert_policy_explicit_text_includes_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_nfc = 52;
      case 52: {
        if (tag == 418u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_cert_policy_explicit_text_not_nfc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_utf8 = 53;
      case 53: {
        if (tag == 426u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_cert_policy_explicit_text_not_utf8()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_cert_policy_explicit_text_too_long = 54;
      case 54: {
        if (tag == 434u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_cert_policy_explicit_text_too_long()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_crl_distribution_marked_critical = 55;
      case 55: {
        if (tag == 442u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_crl_distribution_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_duplicate_extension = 56;
      case 56: {
        if (tag == 450u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_duplicate_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_freshest_crl_marked_critical = 57;
      case 57: {
        if (tag == 458u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_freshest_crl_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_ian_critical = 58;
      case 58: {
        if (tag == 466u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_ian_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_dns_not_ia5_string = 59;
      case 59: {
        if (tag == 474u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_dns_not_ia5_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_empty_name = 60;
      case 60: {
        if (tag == 482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_empty_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_no_entries = 61;
      case 61: {
        if (tag == 490u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_no_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_rfc822_format_invalid = 62;
      case 62: {
        if (tag == 498u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_rfc822_format_invalid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_space_dns_name = 63;
      case 63: {
        if (tag == 506u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_space_dns_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_uri_format_invalid = 64;
      case 64: {
        if (tag == 514u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_uri_format_invalid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_uri_host_not_fqdn_or_ip = 65;
      case 65: {
        if (tag == 522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_uri_host_not_fqdn_or_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_uri_not_ia5 = 66;
      case 66: {
        if (tag == 530u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_uri_not_ia5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_ian_uri_relative = 67;
      case 67: {
        if (tag == 538u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_ian_uri_relative()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_key_usage_cert_sign_without_ca = 68;
      case 68: {
        if (tag == 546u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_key_usage_cert_sign_without_ca()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_key_usage_not_critical = 69;
      case 69: {
        if (tag == 554u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_key_usage_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_key_usage_without_bits = 70;
      case 70: {
        if (tag == 562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_key_usage_without_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_name_constraints_not_critical = 71;
      case 71: {
        if (tag == 570u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_name_constraints_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_name_constraints_not_in_ca = 72;
      case 72: {
        if (tag == 578u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_name_constraints_not_in_ca()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_policy_constraints_empty = 73;
      case 73: {
        if (tag == 586u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_policy_constraints_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_policy_constraints_not_critical = 74;
      case 74: {
        if (tag == 594u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_policy_constraints_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_policy_map_any_policy = 75;
      case 75: {
        if (tag == 602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_policy_map_any_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_policy_map_not_critical = 76;
      case 76: {
        if (tag == 610u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_policy_map_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_policy_map_not_in_cert_policy = 77;
      case 77: {
        if (tag == 618u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_policy_map_not_in_cert_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_contains_reserved_ip = 78;
      case 78: {
        if (tag == 626u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_contains_reserved_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_san_critical_with_subject_dn = 79;
      case 79: {
        if (tag == 634u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_san_critical_with_subject_dn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_directory_name_present = 80;
      case 80: {
        if (tag == 642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_directory_name_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_dns_not_ia5_string = 81;
      case 81: {
        if (tag == 650u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_dns_not_ia5_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_edi_party_name_present = 84;
      case 84: {
        if (tag == 674u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_edi_party_name_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_empty_name = 85;
      case 85: {
        if (tag == 682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_empty_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_missing = 86;
      case 86: {
        if (tag == 690u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_no_entries = 87;
      case 87: {
        if (tag == 698u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_no_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_not_critical_without_subject = 88;
      case 88: {
        if (tag == 706u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_not_critical_without_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_other_name_present = 89;
      case 89: {
        if (tag == 714u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_other_name_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_registered_id_present = 90;
      case 90: {
        if (tag == 722u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_registered_id_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_rfc822_format_invalid = 91;
      case 91: {
        if (tag == 730u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_rfc822_format_invalid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_rfc822_name_present = 92;
      case 92: {
        if (tag == 738u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_rfc822_name_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_space_dns_name = 93;
      case 93: {
        if (tag == 746u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_space_dns_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_uniform_resource_identifier_present = 94;
      case 94: {
        if (tag == 754u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_uniform_resource_identifier_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_uri_format_invalid = 95;
      case 95: {
        if (tag == 762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_uri_format_invalid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_uri_host_not_fqdn_or_ip = 96;
      case 96: {
        if (tag == 770u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_uri_host_not_fqdn_or_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_uri_not_ia5 = 97;
      case 97: {
        if (tag == 778u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_uri_not_ia5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_uri_relative = 98;
      case 98: {
        if (tag == 786u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_uri_relative()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_subject_directory_attr_critical = 99;
      case 99: {
        if (tag == 794u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_subject_directory_attr_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_subject_key_identifier_critical = 100;
      case 100: {
        if (tag == 802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_subject_key_identifier_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_subject_key_identifier_missing_ca = 101;
      case 101: {
        if (tag == 810u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_subject_key_identifier_missing_ca()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ext_subject_key_identifier_missing_sub_cert = 102;
      case 102: {
        if (tag == 818u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ext_subject_key_identifier_missing_sub_cert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_generalized_time_does_not_include_seconds = 103;
      case 103: {
        if (tag == 826u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_generalized_time_does_not_include_seconds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_generalized_time_includes_fraction_seconds = 104;
      case 104: {
        if (tag == 834u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_generalized_time_includes_fraction_seconds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_generalized_time_not_in_zulu = 105;
      case 105: {
        if (tag == 842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_generalized_time_not_in_zulu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ian_dns_name_includes_null_char = 107;
      case 107: {
        if (tag == 858u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ian_dns_name_includes_null_char()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ian_dns_name_starts_with_period = 108;
      case 108: {
        if (tag == 866u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ian_dns_name_starts_with_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_ian_iana_pub_suffix_empty = 109;
      case 109: {
        if (tag == 874u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_ian_iana_pub_suffix_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_inhibit_any_policy_not_critical = 110;
      case 110: {
        if (tag == 882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_inhibit_any_policy_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_invalid_certificate_version = 111;
      case 111: {
        if (tag == 890u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_invalid_certificate_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_issuer_field_empty = 112;
      case 112: {
        if (tag == 898u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_issuer_field_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_name_constraint_empty = 113;
      case 113: {
        if (tag == 906u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_name_constraint_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_name_constraint_maximum_not_absent = 114;
      case 114: {
        if (tag == 914u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_name_constraint_maximum_not_absent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_name_constraint_minimum_non_zero = 115;
      case 115: {
        if (tag == 922u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_name_constraint_minimum_non_zero()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_name_constraint_on_edi_party_name = 116;
      case 116: {
        if (tag == 930u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_name_constraint_on_edi_party_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_name_constraint_on_registered_id = 117;
      case 117: {
        if (tag == 938u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_name_constraint_on_registered_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_name_constraint_on_x400 = 118;
      case 118: {
        if (tag == 946u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_name_constraint_on_x400()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_old_root_ca_rsa_mod_less_than_2048_bits = 119;
      case 119: {
        if (tag == 954u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_old_root_ca_rsa_mod_less_than_2048_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_old_sub_ca_rsa_mod_less_than_1024_bits = 120;
      case 120: {
        if (tag == 962u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_old_sub_ca_rsa_mod_less_than_1024_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_old_sub_cert_rsa_mod_less_than_1024_bits = 121;
      case 121: {
        if (tag == 970u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_old_sub_cert_rsa_mod_less_than_1024_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_path_len_constraint_improperly_included = 122;
      case 122: {
        if (tag == 978u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_path_len_constraint_improperly_included()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_path_len_constraint_zero_or_less = 123;
      case 123: {
        if (tag == 986u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_path_len_constraint_zero_or_less()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_public_key_type_not_allowed = 124;
      case 124: {
        if (tag == 994u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_public_key_type_not_allowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_root_ca_basic_constraints_path_len_constraint_field_present = 125;
      case 125: {
        if (tag == 1002u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_root_ca_basic_constraints_path_len_constraint_field_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_root_ca_contains_cert_policy = 126;
      case 126: {
        if (tag == 1010u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_root_ca_contains_cert_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_root_ca_extended_key_usage_present = 127;
      case 127: {
        if (tag == 1018u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_root_ca_extended_key_usage_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_rsa_exp_negative = 128;
      case 128: {
        if (tag == 1026u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_rsa_exp_negative()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_rsa_mod_factors_smaller_than_752 = 129;
      case 129: {
        if (tag == 1034u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_rsa_mod_factors_smaller_than_752()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_rsa_mod_less_than_2048_bits = 130;
      case 130: {
        if (tag == 1042u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_rsa_mod_less_than_2048_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_rsa_mod_not_odd = 131;
      case 131: {
        if (tag == 1050u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_rsa_mod_not_odd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_rsa_public_exponent_not_in_range = 132;
      case 132: {
        if (tag == 1058u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_rsa_public_exponent_not_in_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_rsa_public_exponent_not_odd = 133;
      case 133: {
        if (tag == 1066u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_rsa_public_exponent_not_odd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_rsa_public_exponent_too_small = 134;
      case 134: {
        if (tag == 1074u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_rsa_public_exponent_too_small()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_san_dns_name_includes_null_char = 135;
      case 135: {
        if (tag == 1082u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_san_dns_name_includes_null_char()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_san_dns_name_starts_with_period = 136;
      case 136: {
        if (tag == 1090u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_san_dns_name_starts_with_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_san_iana_pub_suffix_empty = 137;
      case 137: {
        if (tag == 1098u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_san_iana_pub_suffix_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_serial_number_longer_than_20_octets = 138;
      case 138: {
        if (tag == 1106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_serial_number_longer_than_20_octets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_serial_number_not_positive = 139;
      case 139: {
        if (tag == 1114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_serial_number_not_positive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_ca_aia_does_not_contain_issuing_ca_url = 140;
      case 140: {
        if (tag == 1122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_ca_aia_does_not_contain_issuing_ca_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_aia_does_not_contain_ocsp_url = 141;
      case 141: {
        if (tag == 1130u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_aia_does_not_contain_ocsp_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_aia_missing = 142;
      case 142: {
        if (tag == 1138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_aia_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_ca_certificate_policies_marked_critical = 143;
      case 143: {
        if (tag == 1146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_ca_certificate_policies_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_certificate_policies_missing = 144;
      case 144: {
        if (tag == 1154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_certificate_policies_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_crl_distribution_points_does_not_contain_url = 145;
      case 145: {
        if (tag == 1162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_crl_distribution_points_does_not_contain_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_crl_distribution_points_marked_critical = 146;
      case 146: {
        if (tag == 1170u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_crl_distribution_points_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_crl_distribution_points_missing = 147;
      case 147: {
        if (tag == 1178u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_crl_distribution_points_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_ca_eku_critical = 148;
      case 148: {
        if (tag == 1186u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_ca_eku_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_ca_name_constraints_not_critical = 149;
      case 149: {
        if (tag == 1194u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_ca_name_constraints_not_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_aia_does_not_contain_ocsp_url = 153;
      case 153: {
        if (tag == 1226u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_aia_does_not_contain_ocsp_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_aia_missing = 154;
      case 154: {
        if (tag == 1234u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_aia_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_cert_policy_empty = 155;
      case 155: {
        if (tag == 1242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_cert_policy_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_cert_certificate_policies_marked_critical = 156;
      case 156: {
        if (tag == 1250u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_cert_certificate_policies_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_crl_distribution_points_does_not_contain_url = 157;
      case 157: {
        if (tag == 1258u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_crl_distribution_points_does_not_contain_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_crl_distribution_points_marked_critical = 158;
      case 158: {
        if (tag == 1266u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_crl_distribution_points_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_cert_eku_extra_values = 159;
      case 159: {
        if (tag == 1274u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_cert_eku_extra_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_eku_missing = 160;
      case 160: {
        if (tag == 1282u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_eku_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_eku_server_auth_client_auth_missing = 161;
      case 161: {
        if (tag == 1290u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_eku_server_auth_client_auth_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_key_usage_cert_sign_bit_set = 162;
      case 162: {
        if (tag == 1298u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_key_usage_cert_sign_bit_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_or_sub_ca_using_sha1 = 163;
      case 163: {
        if (tag == 1306u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_or_sub_ca_using_sha1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_cert_sha1_expiration_too_long = 164;
      case 164: {
        if (tag == 1314u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_cert_sha1_expiration_too_long()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult n_subject_common_name_included = 166;
      case 166: {
        if (tag == 1330u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_n_subject_common_name_included()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_common_name_not_from_san = 167;
      case 167: {
        if (tag == 1338u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_common_name_not_from_san()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_contains_noninformational_value = 168;
      case 168: {
        if (tag == 1346u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_contains_noninformational_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_contains_reserved_ip = 169;
      case 169: {
        if (tag == 1354u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_contains_reserved_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_country_not_iso = 170;
      case 170: {
        if (tag == 1362u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_country_not_iso()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_empty_without_san = 171;
      case 171: {
        if (tag == 1370u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_empty_without_san()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_info_access_marked_critical = 172;
      case 172: {
        if (tag == 1378u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_info_access_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_not_dn = 174;
      case 174: {
        if (tag == 1394u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_not_dn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_utc_time_does_not_include_seconds = 180;
      case 180: {
        if (tag == 1442u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_utc_time_does_not_include_seconds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_utc_time_not_in_zulu = 181;
      case 181: {
        if (tag == 1450u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_utc_time_not_in_zulu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_validity_time_not_positive = 182;
      case 182: {
        if (tag == 1458u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_validity_time_not_positive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_wrong_time_format_pre2050 = 183;
      case 183: {
        if (tag == 1466u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_wrong_time_format_pre2050()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_rsa_no_public_key = 184;
      case 184: {
        if (tag == 1474u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_rsa_no_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_certificate_policies_missing = 185;
      case 185: {
        if (tag == 1482u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_certificate_policies_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_key_usage_crl_sign_bit_set = 186;
      case 186: {
        if (tag == 1490u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_key_usage_crl_sign_bit_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_common_name_max_length = 187;
      case 187: {
        if (tag == 1498u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_common_name_max_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_locality_name_max_length = 188;
      case 188: {
        if (tag == 1506u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_locality_name_max_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_organization_name_max_length = 189;
      case 189: {
        if (tag == 1514u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_organization_name_max_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_organizational_unit_name_max_length = 190;
      case 190: {
        if (tag == 1522u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_organizational_unit_name_max_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_subject_state_name_max_length = 191;
      case 191: {
        if (tag == 1530u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_subject_state_name_max_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_multiple_subject_rdn = 192;
      case 192: {
        if (tag == 1538u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_multiple_subject_rdn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_multiple_issuer_rdn = 193;
      case 193: {
        if (tag == 1546u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_multiple_issuer_rdn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_issuer_dn_trailing_whitespace = 194;
      case 194: {
        if (tag == 1554u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_issuer_dn_trailing_whitespace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_issuer_dn_leading_whitespace = 195;
      case 195: {
        if (tag == 1562u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_issuer_dn_leading_whitespace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_subject_dn_trailing_whitespace = 196;
      case 196: {
        if (tag == 1570u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_subject_dn_trailing_whitespace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_subject_dn_leading_whitespace = 197;
      case 197: {
        if (tag == 1578u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_subject_dn_leading_whitespace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_locality_name_must_appear = 198;
      case 198: {
        if (tag == 1586u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_locality_name_must_appear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_signature_algorithm_not_supported = 199;
      case 199: {
        if (tag == 1594u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_signature_algorithm_not_supported()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_hyphen_in_sld = 200;
      case 200: {
        if (tag == 1602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_hyphen_in_sld()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dsa_correct_order_in_subgroup = 201;
      case 201: {
        if (tag == 1610u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dsa_correct_order_in_subgroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult n_sub_ca_eku_not_technically_constrained = 202;
      case 202: {
        if (tag == 1618u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_n_sub_ca_eku_not_technically_constrained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_empty_label = 203;
      case 203: {
        if (tag == 1626u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_empty_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_common_name_missing = 204;
      case 204: {
        if (tag == 1634u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_common_name_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_wildcard_only_in_left_label = 205;
      case 205: {
        if (tag == 1642u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_wildcard_only_in_left_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_valid_time_too_long = 206;
      case 206: {
        if (tag == 1650u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_valid_time_too_long()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_left_label_wildcard_correct = 207;
      case 207: {
        if (tag == 1658u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_left_label_wildcard_correct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_serial_number_low_entropy = 208;
      case 208: {
        if (tag == 1666u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_serial_number_low_entropy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_label_too_long = 209;
      case 209: {
        if (tag == 1674u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_label_too_long()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_root_ca_key_usage_present = 210;
      case 210: {
        if (tag == 1682u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_root_ca_key_usage_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_dnsname_wildcard_left_of_public_suffix = 211;
      case 211: {
        if (tag == 1690u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_dnsname_wildcard_left_of_public_suffix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_international_dns_name_not_unicode = 212;
      case 212: {
        if (tag == 1698u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_international_dns_name_not_unicode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_dnsname_underscore_in_trd = 213;
      case 213: {
        if (tag == 1706u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_dnsname_underscore_in_trd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult w_sub_cert_aia_does_not_contain_issuing_ca_url = 214;
      case 214: {
        if (tag == 1714u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_w_sub_cert_aia_does_not_contain_issuing_ca_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_locality_name_must_not_appear = 215;
      case 215: {
        if (tag == 1722u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_locality_name_must_not_appear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_country_name_must_appear = 216;
      case 216: {
        if (tag == 1730u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_country_name_must_appear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_bad_character_in_label = 217;
      case 217: {
        if (tag == 1738u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_bad_character_in_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_must_not_contain_any_policy = 218;
      case 218: {
        if (tag == 1746u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_must_not_contain_any_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_international_dns_name_not_nfkc = 219;
      case 219: {
        if (tag == 1754u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_international_dns_name_not_nfkc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_aia_marked_critical = 220;
      case 220: {
        if (tag == 1762u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_aia_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ca_is_ca = 221;
      case 221: {
        if (tag == 1770u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ca_is_ca()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_street_address_should_not_exist = 222;
      case 222: {
        if (tag == 1778u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_street_address_should_not_exist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_eku_missing = 223;
      case 223: {
        if (tag == 1786u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_eku_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_province_must_not_appear = 224;
      case 224: {
        if (tag == 1794u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_province_must_not_appear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_underscore_in_sld = 225;
      case 225: {
        if (tag == 1802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_underscore_in_sld()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_eku_name_constraints = 226;
      case 226: {
        if (tag == 1810u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_eku_name_constraints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_not_is_ca = 227;
      case 227: {
        if (tag == 1818u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_not_is_ca()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dsa_unique_correct_representation = 228;
      case 228: {
        if (tag == 1826u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dsa_unique_correct_representation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_province_must_appear = 229;
      case 229: {
        if (tag == 1834u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_province_must_appear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_root_ca_key_usage_must_be_critical = 230;
      case 230: {
        if (tag == 1842u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_root_ca_key_usage_must_be_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_ext_san_dns_name_too_long = 231;
      case 231: {
        if (tag == 1850u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_ext_san_dns_name_too_long()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dsa_params_missing = 232;
      case 232: {
        if (tag == 1858u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dsa_params_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_ca_aia_marked_critical = 233;
      case 233: {
        if (tag == 1866u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_ca_aia_marked_critical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_given_name_surname_contains_correct_policy = 234;
      case 234: {
        if (tag == 1874u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_given_name_surname_contains_correct_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_sub_cert_postal_code_must_not_appear = 235;
      case 235: {
        if (tag == 1882u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_sub_cert_postal_code_must_not_appear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_not_valid_tld = 236;
      case 236: {
        if (tag == 1890u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_not_valid_tld()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult n_contains_redacted_dnsname = 237;
      case 237: {
        if (tag == 1898u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_n_contains_redacted_dnsname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.LintResult e_dnsname_contains_bare_iana_suffix = 238;
      case 238: {
        if (tag == 1906u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_e_dnsname_contains_bare_iana_suffix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zsearch.Lints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zsearch.Lints)
  return false;
#undef DO_
}

void Lints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zsearch.Lints)
  // .zsearch.LintResult e_basic_constraints_not_critical = 1;
  if (this->has_e_basic_constraints_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->e_basic_constraints_not_critical_, output);
  }

  // .zsearch.LintResult e_ian_bare_wildcard = 2;
  if (this->has_e_ian_bare_wildcard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->e_ian_bare_wildcard_, output);
  }

  // .zsearch.LintResult e_ian_wildcard_not_first = 3;
  if (this->has_e_ian_wildcard_not_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->e_ian_wildcard_not_first_, output);
  }

  // .zsearch.LintResult e_san_bare_wildcard = 4;
  if (this->has_e_san_bare_wildcard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->e_san_bare_wildcard_, output);
  }

  // .zsearch.LintResult e_san_wildcard_not_first = 5;
  if (this->has_e_san_wildcard_not_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->e_san_wildcard_not_first_, output);
  }

  // .zsearch.LintResult e_ca_country_name_invalid = 6;
  if (this->has_e_ca_country_name_invalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->e_ca_country_name_invalid_, output);
  }

  // .zsearch.LintResult e_ca_country_name_missing = 7;
  if (this->has_e_ca_country_name_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->e_ca_country_name_missing_, output);
  }

  // .zsearch.LintResult e_ca_crl_sign_not_set = 8;
  if (this->has_e_ca_crl_sign_not_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->e_ca_crl_sign_not_set_, output);
  }

  // .zsearch.LintResult n_ca_digital_signature_not_set = 9;
  if (this->has_n_ca_digital_signature_not_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->n_ca_digital_signature_not_set_, output);
  }

  // .zsearch.LintResult e_ca_key_cert_sign_not_set = 10;
  if (this->has_e_ca_key_cert_sign_not_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->e_ca_key_cert_sign_not_set_, output);
  }

  // .zsearch.LintResult e_ca_key_usage_missing = 11;
  if (this->has_e_ca_key_usage_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->e_ca_key_usage_missing_, output);
  }

  // .zsearch.LintResult e_ca_key_usage_not_critical = 12;
  if (this->has_e_ca_key_usage_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->e_ca_key_usage_not_critical_, output);
  }

  // .zsearch.LintResult e_ca_organization_name_missing = 13;
  if (this->has_e_ca_organization_name_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->e_ca_organization_name_missing_, output);
  }

  // .zsearch.LintResult e_ca_subject_field_empty = 14;
  if (this->has_e_ca_subject_field_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->e_ca_subject_field_empty_, output);
  }

  // .zsearch.LintResult e_cert_contains_unique_identifier = 15;
  if (this->has_e_cert_contains_unique_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->e_cert_contains_unique_identifier_, output);
  }

  // .zsearch.LintResult e_cert_extensions_version_not_3 = 16;
  if (this->has_e_cert_extensions_version_not_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->e_cert_extensions_version_not_3_, output);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_locality = 17;
  if (this->has_e_cab_dv_conflicts_with_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->e_cab_dv_conflicts_with_locality_, output);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_org = 18;
  if (this->has_e_cab_dv_conflicts_with_org()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->e_cab_dv_conflicts_with_org_, output);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_postal = 19;
  if (this->has_e_cab_dv_conflicts_with_postal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->e_cab_dv_conflicts_with_postal_, output);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_province = 20;
  if (this->has_e_cab_dv_conflicts_with_province()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->e_cab_dv_conflicts_with_province_, output);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_street = 21;
  if (this->has_e_cab_dv_conflicts_with_street()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->e_cab_dv_conflicts_with_street_, output);
  }

  // .zsearch.LintResult e_cert_policy_iv_requires_country = 22;
  if (this->has_e_cert_policy_iv_requires_country()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->e_cert_policy_iv_requires_country_, output);
  }

  // .zsearch.LintResult e_cert_policy_iv_requires_province_or_locality = 23;
  if (this->has_e_cert_policy_iv_requires_province_or_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->e_cert_policy_iv_requires_province_or_locality_, output);
  }

  // .zsearch.LintResult e_cert_policy_ov_requires_country = 24;
  if (this->has_e_cert_policy_ov_requires_country()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->e_cert_policy_ov_requires_country_, output);
  }

  // .zsearch.LintResult e_cert_policy_ov_requires_province_or_locality = 25;
  if (this->has_e_cert_policy_ov_requires_province_or_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->e_cert_policy_ov_requires_province_or_locality_, output);
  }

  // .zsearch.LintResult e_cab_ov_requires_org = 26;
  if (this->has_e_cab_ov_requires_org()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->e_cab_ov_requires_org_, output);
  }

  // .zsearch.LintResult e_cab_iv_requires_personal_name = 27;
  if (this->has_e_cab_iv_requires_personal_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->e_cab_iv_requires_personal_name_, output);
  }

  // .zsearch.LintResult e_cert_unique_identifier_version_not_2_or_3 = 28;
  if (this->has_e_cert_unique_identifier_version_not_2_or_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->e_cert_unique_identifier_version_not_2_or_3_, output);
  }

  // .zsearch.LintResult e_distribution_point_incomplete = 30;
  if (this->has_e_distribution_point_incomplete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->e_distribution_point_incomplete_, output);
  }

  // .zsearch.LintResult w_distribution_point_missing_ldap_or_uri = 31;
  if (this->has_w_distribution_point_missing_ldap_or_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *this->w_distribution_point_missing_ldap_or_uri_, output);
  }

  // .zsearch.LintResult e_dsa_improper_modulus_or_divisor_size = 32;
  if (this->has_e_dsa_improper_modulus_or_divisor_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, *this->e_dsa_improper_modulus_or_divisor_size_, output);
  }

  // .zsearch.LintResult e_dsa_shorter_than_2048_bits = 33;
  if (this->has_e_dsa_shorter_than_2048_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, *this->e_dsa_shorter_than_2048_bits_, output);
  }

  // .zsearch.LintResult e_ec_improper_curves = 34;
  if (this->has_e_ec_improper_curves()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, *this->e_ec_improper_curves_, output);
  }

  // .zsearch.LintResult w_eku_critical_improperly = 35;
  if (this->has_w_eku_critical_improperly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, *this->w_eku_critical_improperly_, output);
  }

  // .zsearch.LintResult e_ev_business_category_missing = 36;
  if (this->has_e_ev_business_category_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, *this->e_ev_business_category_missing_, output);
  }

  // .zsearch.LintResult e_ev_country_name_missing = 37;
  if (this->has_e_ev_country_name_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, *this->e_ev_country_name_missing_, output);
  }

  // .zsearch.LintResult e_ev_locality_name_missing = 38;
  if (this->has_e_ev_locality_name_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, *this->e_ev_locality_name_missing_, output);
  }

  // .zsearch.LintResult e_ev_organization_name_missing = 39;
  if (this->has_e_ev_organization_name_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, *this->e_ev_organization_name_missing_, output);
  }

  // .zsearch.LintResult e_ev_serial_number_missing = 40;
  if (this->has_e_ev_serial_number_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->e_ev_serial_number_missing_, output);
  }

  // .zsearch.LintResult e_ev_valid_time_too_long = 41;
  if (this->has_e_ev_valid_time_too_long()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, *this->e_ev_valid_time_too_long_, output);
  }

  // .zsearch.LintResult w_ext_aia_access_location_missing = 42;
  if (this->has_w_ext_aia_access_location_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, *this->w_ext_aia_access_location_missing_, output);
  }

  // .zsearch.LintResult e_ext_aia_marked_critical = 43;
  if (this->has_e_ext_aia_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, *this->e_ext_aia_marked_critical_, output);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_critical = 44;
  if (this->has_e_ext_authority_key_identifier_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, *this->e_ext_authority_key_identifier_critical_, output);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_missing = 45;
  if (this->has_e_ext_authority_key_identifier_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, *this->e_ext_authority_key_identifier_missing_, output);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_no_key_identifier = 46;
  if (this->has_e_ext_authority_key_identifier_no_key_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, *this->e_ext_authority_key_identifier_no_key_identifier_, output);
  }

  // .zsearch.LintResult w_ext_cert_policy_contains_noticeref = 47;
  if (this->has_w_ext_cert_policy_contains_noticeref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, *this->w_ext_cert_policy_contains_noticeref_, output);
  }

  // .zsearch.LintResult e_ext_cert_policy_disallowed_any_policy_qualifier = 48;
  if (this->has_e_ext_cert_policy_disallowed_any_policy_qualifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, *this->e_ext_cert_policy_disallowed_any_policy_qualifier_, output);
  }

  // .zsearch.LintResult e_ext_cert_policy_duplicate = 49;
  if (this->has_e_ext_cert_policy_duplicate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, *this->e_ext_cert_policy_duplicate_, output);
  }

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_ia5_string = 50;
  if (this->has_e_ext_cert_policy_explicit_text_ia5_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->e_ext_cert_policy_explicit_text_ia5_string_, output);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_includes_control = 51;
  if (this->has_w_ext_cert_policy_explicit_text_includes_control()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, *this->w_ext_cert_policy_explicit_text_includes_control_, output);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_nfc = 52;
  if (this->has_w_ext_cert_policy_explicit_text_not_nfc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, *this->w_ext_cert_policy_explicit_text_not_nfc_, output);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_utf8 = 53;
  if (this->has_w_ext_cert_policy_explicit_text_not_utf8()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, *this->w_ext_cert_policy_explicit_text_not_utf8_, output);
  }

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_too_long = 54;
  if (this->has_e_ext_cert_policy_explicit_text_too_long()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, *this->e_ext_cert_policy_explicit_text_too_long_, output);
  }

  // .zsearch.LintResult w_ext_crl_distribution_marked_critical = 55;
  if (this->has_w_ext_crl_distribution_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, *this->w_ext_crl_distribution_marked_critical_, output);
  }

  // .zsearch.LintResult e_ext_duplicate_extension = 56;
  if (this->has_e_ext_duplicate_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56, *this->e_ext_duplicate_extension_, output);
  }

  // .zsearch.LintResult e_ext_freshest_crl_marked_critical = 57;
  if (this->has_e_ext_freshest_crl_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, *this->e_ext_freshest_crl_marked_critical_, output);
  }

  // .zsearch.LintResult w_ext_ian_critical = 58;
  if (this->has_w_ext_ian_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58, *this->w_ext_ian_critical_, output);
  }

  // .zsearch.LintResult e_ext_ian_dns_not_ia5_string = 59;
  if (this->has_e_ext_ian_dns_not_ia5_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, *this->e_ext_ian_dns_not_ia5_string_, output);
  }

  // .zsearch.LintResult e_ext_ian_empty_name = 60;
  if (this->has_e_ext_ian_empty_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *this->e_ext_ian_empty_name_, output);
  }

  // .zsearch.LintResult e_ext_ian_no_entries = 61;
  if (this->has_e_ext_ian_no_entries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, *this->e_ext_ian_no_entries_, output);
  }

  // .zsearch.LintResult e_ext_ian_rfc822_format_invalid = 62;
  if (this->has_e_ext_ian_rfc822_format_invalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, *this->e_ext_ian_rfc822_format_invalid_, output);
  }

  // .zsearch.LintResult e_ext_ian_space_dns_name = 63;
  if (this->has_e_ext_ian_space_dns_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63, *this->e_ext_ian_space_dns_name_, output);
  }

  // .zsearch.LintResult e_ext_ian_uri_format_invalid = 64;
  if (this->has_e_ext_ian_uri_format_invalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, *this->e_ext_ian_uri_format_invalid_, output);
  }

  // .zsearch.LintResult e_ext_ian_uri_host_not_fqdn_or_ip = 65;
  if (this->has_e_ext_ian_uri_host_not_fqdn_or_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65, *this->e_ext_ian_uri_host_not_fqdn_or_ip_, output);
  }

  // .zsearch.LintResult e_ext_ian_uri_not_ia5 = 66;
  if (this->has_e_ext_ian_uri_not_ia5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      66, *this->e_ext_ian_uri_not_ia5_, output);
  }

  // .zsearch.LintResult e_ext_ian_uri_relative = 67;
  if (this->has_e_ext_ian_uri_relative()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      67, *this->e_ext_ian_uri_relative_, output);
  }

  // .zsearch.LintResult e_ext_key_usage_cert_sign_without_ca = 68;
  if (this->has_e_ext_key_usage_cert_sign_without_ca()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68, *this->e_ext_key_usage_cert_sign_without_ca_, output);
  }

  // .zsearch.LintResult w_ext_key_usage_not_critical = 69;
  if (this->has_w_ext_key_usage_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      69, *this->w_ext_key_usage_not_critical_, output);
  }

  // .zsearch.LintResult e_ext_key_usage_without_bits = 70;
  if (this->has_e_ext_key_usage_without_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, *this->e_ext_key_usage_without_bits_, output);
  }

  // .zsearch.LintResult e_ext_name_constraints_not_critical = 71;
  if (this->has_e_ext_name_constraints_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71, *this->e_ext_name_constraints_not_critical_, output);
  }

  // .zsearch.LintResult e_ext_name_constraints_not_in_ca = 72;
  if (this->has_e_ext_name_constraints_not_in_ca()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72, *this->e_ext_name_constraints_not_in_ca_, output);
  }

  // .zsearch.LintResult e_ext_policy_constraints_empty = 73;
  if (this->has_e_ext_policy_constraints_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73, *this->e_ext_policy_constraints_empty_, output);
  }

  // .zsearch.LintResult e_ext_policy_constraints_not_critical = 74;
  if (this->has_e_ext_policy_constraints_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74, *this->e_ext_policy_constraints_not_critical_, output);
  }

  // .zsearch.LintResult e_ext_policy_map_any_policy = 75;
  if (this->has_e_ext_policy_map_any_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      75, *this->e_ext_policy_map_any_policy_, output);
  }

  // .zsearch.LintResult w_ext_policy_map_not_critical = 76;
  if (this->has_w_ext_policy_map_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      76, *this->w_ext_policy_map_not_critical_, output);
  }

  // .zsearch.LintResult w_ext_policy_map_not_in_cert_policy = 77;
  if (this->has_w_ext_policy_map_not_in_cert_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      77, *this->w_ext_policy_map_not_in_cert_policy_, output);
  }

  // .zsearch.LintResult e_ext_san_contains_reserved_ip = 78;
  if (this->has_e_ext_san_contains_reserved_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78, *this->e_ext_san_contains_reserved_ip_, output);
  }

  // .zsearch.LintResult w_ext_san_critical_with_subject_dn = 79;
  if (this->has_w_ext_san_critical_with_subject_dn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      79, *this->w_ext_san_critical_with_subject_dn_, output);
  }

  // .zsearch.LintResult e_ext_san_directory_name_present = 80;
  if (this->has_e_ext_san_directory_name_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, *this->e_ext_san_directory_name_present_, output);
  }

  // .zsearch.LintResult e_ext_san_dns_not_ia5_string = 81;
  if (this->has_e_ext_san_dns_not_ia5_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      81, *this->e_ext_san_dns_not_ia5_string_, output);
  }

  // .zsearch.LintResult e_ext_san_edi_party_name_present = 84;
  if (this->has_e_ext_san_edi_party_name_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      84, *this->e_ext_san_edi_party_name_present_, output);
  }

  // .zsearch.LintResult e_ext_san_empty_name = 85;
  if (this->has_e_ext_san_empty_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85, *this->e_ext_san_empty_name_, output);
  }

  // .zsearch.LintResult e_ext_san_missing = 86;
  if (this->has_e_ext_san_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      86, *this->e_ext_san_missing_, output);
  }

  // .zsearch.LintResult e_ext_san_no_entries = 87;
  if (this->has_e_ext_san_no_entries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      87, *this->e_ext_san_no_entries_, output);
  }

  // .zsearch.LintResult e_ext_san_not_critical_without_subject = 88;
  if (this->has_e_ext_san_not_critical_without_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      88, *this->e_ext_san_not_critical_without_subject_, output);
  }

  // .zsearch.LintResult e_ext_san_other_name_present = 89;
  if (this->has_e_ext_san_other_name_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      89, *this->e_ext_san_other_name_present_, output);
  }

  // .zsearch.LintResult e_ext_san_registered_id_present = 90;
  if (this->has_e_ext_san_registered_id_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, *this->e_ext_san_registered_id_present_, output);
  }

  // .zsearch.LintResult e_ext_san_rfc822_format_invalid = 91;
  if (this->has_e_ext_san_rfc822_format_invalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      91, *this->e_ext_san_rfc822_format_invalid_, output);
  }

  // .zsearch.LintResult e_ext_san_rfc822_name_present = 92;
  if (this->has_e_ext_san_rfc822_name_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      92, *this->e_ext_san_rfc822_name_present_, output);
  }

  // .zsearch.LintResult e_ext_san_space_dns_name = 93;
  if (this->has_e_ext_san_space_dns_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      93, *this->e_ext_san_space_dns_name_, output);
  }

  // .zsearch.LintResult e_ext_san_uniform_resource_identifier_present = 94;
  if (this->has_e_ext_san_uniform_resource_identifier_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      94, *this->e_ext_san_uniform_resource_identifier_present_, output);
  }

  // .zsearch.LintResult e_ext_san_uri_format_invalid = 95;
  if (this->has_e_ext_san_uri_format_invalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      95, *this->e_ext_san_uri_format_invalid_, output);
  }

  // .zsearch.LintResult e_ext_san_uri_host_not_fqdn_or_ip = 96;
  if (this->has_e_ext_san_uri_host_not_fqdn_or_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      96, *this->e_ext_san_uri_host_not_fqdn_or_ip_, output);
  }

  // .zsearch.LintResult e_ext_san_uri_not_ia5 = 97;
  if (this->has_e_ext_san_uri_not_ia5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      97, *this->e_ext_san_uri_not_ia5_, output);
  }

  // .zsearch.LintResult e_ext_san_uri_relative = 98;
  if (this->has_e_ext_san_uri_relative()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      98, *this->e_ext_san_uri_relative_, output);
  }

  // .zsearch.LintResult e_ext_subject_directory_attr_critical = 99;
  if (this->has_e_ext_subject_directory_attr_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      99, *this->e_ext_subject_directory_attr_critical_, output);
  }

  // .zsearch.LintResult e_ext_subject_key_identifier_critical = 100;
  if (this->has_e_ext_subject_key_identifier_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->e_ext_subject_key_identifier_critical_, output);
  }

  // .zsearch.LintResult e_ext_subject_key_identifier_missing_ca = 101;
  if (this->has_e_ext_subject_key_identifier_missing_ca()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *this->e_ext_subject_key_identifier_missing_ca_, output);
  }

  // .zsearch.LintResult w_ext_subject_key_identifier_missing_sub_cert = 102;
  if (this->has_w_ext_subject_key_identifier_missing_sub_cert()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *this->w_ext_subject_key_identifier_missing_sub_cert_, output);
  }

  // .zsearch.LintResult e_generalized_time_does_not_include_seconds = 103;
  if (this->has_e_generalized_time_does_not_include_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, *this->e_generalized_time_does_not_include_seconds_, output);
  }

  // .zsearch.LintResult e_generalized_time_includes_fraction_seconds = 104;
  if (this->has_e_generalized_time_includes_fraction_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, *this->e_generalized_time_includes_fraction_seconds_, output);
  }

  // .zsearch.LintResult e_generalized_time_not_in_zulu = 105;
  if (this->has_e_generalized_time_not_in_zulu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105, *this->e_generalized_time_not_in_zulu_, output);
  }

  // .zsearch.LintResult e_ian_dns_name_includes_null_char = 107;
  if (this->has_e_ian_dns_name_includes_null_char()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107, *this->e_ian_dns_name_includes_null_char_, output);
  }

  // .zsearch.LintResult e_ian_dns_name_starts_with_period = 108;
  if (this->has_e_ian_dns_name_starts_with_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      108, *this->e_ian_dns_name_starts_with_period_, output);
  }

  // .zsearch.LintResult w_ian_iana_pub_suffix_empty = 109;
  if (this->has_w_ian_iana_pub_suffix_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      109, *this->w_ian_iana_pub_suffix_empty_, output);
  }

  // .zsearch.LintResult e_inhibit_any_policy_not_critical = 110;
  if (this->has_e_inhibit_any_policy_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, *this->e_inhibit_any_policy_not_critical_, output);
  }

  // .zsearch.LintResult e_invalid_certificate_version = 111;
  if (this->has_e_invalid_certificate_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111, *this->e_invalid_certificate_version_, output);
  }

  // .zsearch.LintResult e_issuer_field_empty = 112;
  if (this->has_e_issuer_field_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112, *this->e_issuer_field_empty_, output);
  }

  // .zsearch.LintResult e_name_constraint_empty = 113;
  if (this->has_e_name_constraint_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      113, *this->e_name_constraint_empty_, output);
  }

  // .zsearch.LintResult e_name_constraint_maximum_not_absent = 114;
  if (this->has_e_name_constraint_maximum_not_absent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      114, *this->e_name_constraint_maximum_not_absent_, output);
  }

  // .zsearch.LintResult e_name_constraint_minimum_non_zero = 115;
  if (this->has_e_name_constraint_minimum_non_zero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      115, *this->e_name_constraint_minimum_non_zero_, output);
  }

  // .zsearch.LintResult w_name_constraint_on_edi_party_name = 116;
  if (this->has_w_name_constraint_on_edi_party_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      116, *this->w_name_constraint_on_edi_party_name_, output);
  }

  // .zsearch.LintResult w_name_constraint_on_registered_id = 117;
  if (this->has_w_name_constraint_on_registered_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      117, *this->w_name_constraint_on_registered_id_, output);
  }

  // .zsearch.LintResult w_name_constraint_on_x400 = 118;
  if (this->has_w_name_constraint_on_x400()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118, *this->w_name_constraint_on_x400_, output);
  }

  // .zsearch.LintResult e_old_root_ca_rsa_mod_less_than_2048_bits = 119;
  if (this->has_e_old_root_ca_rsa_mod_less_than_2048_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      119, *this->e_old_root_ca_rsa_mod_less_than_2048_bits_, output);
  }

  // .zsearch.LintResult e_old_sub_ca_rsa_mod_less_than_1024_bits = 120;
  if (this->has_e_old_sub_ca_rsa_mod_less_than_1024_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, *this->e_old_sub_ca_rsa_mod_less_than_1024_bits_, output);
  }

  // .zsearch.LintResult e_old_sub_cert_rsa_mod_less_than_1024_bits = 121;
  if (this->has_e_old_sub_cert_rsa_mod_less_than_1024_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      121, *this->e_old_sub_cert_rsa_mod_less_than_1024_bits_, output);
  }

  // .zsearch.LintResult e_path_len_constraint_improperly_included = 122;
  if (this->has_e_path_len_constraint_improperly_included()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      122, *this->e_path_len_constraint_improperly_included_, output);
  }

  // .zsearch.LintResult e_path_len_constraint_zero_or_less = 123;
  if (this->has_e_path_len_constraint_zero_or_less()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      123, *this->e_path_len_constraint_zero_or_less_, output);
  }

  // .zsearch.LintResult e_public_key_type_not_allowed = 124;
  if (this->has_e_public_key_type_not_allowed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      124, *this->e_public_key_type_not_allowed_, output);
  }

  // .zsearch.LintResult w_root_ca_basic_constraints_path_len_constraint_field_present = 125;
  if (this->has_w_root_ca_basic_constraints_path_len_constraint_field_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      125, *this->w_root_ca_basic_constraints_path_len_constraint_field_present_, output);
  }

  // .zsearch.LintResult w_root_ca_contains_cert_policy = 126;
  if (this->has_w_root_ca_contains_cert_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      126, *this->w_root_ca_contains_cert_policy_, output);
  }

  // .zsearch.LintResult e_root_ca_extended_key_usage_present = 127;
  if (this->has_e_root_ca_extended_key_usage_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      127, *this->e_root_ca_extended_key_usage_present_, output);
  }

  // .zsearch.LintResult e_rsa_exp_negative = 128;
  if (this->has_e_rsa_exp_negative()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128, *this->e_rsa_exp_negative_, output);
  }

  // .zsearch.LintResult w_rsa_mod_factors_smaller_than_752 = 129;
  if (this->has_w_rsa_mod_factors_smaller_than_752()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      129, *this->w_rsa_mod_factors_smaller_than_752_, output);
  }

  // .zsearch.LintResult e_rsa_mod_less_than_2048_bits = 130;
  if (this->has_e_rsa_mod_less_than_2048_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      130, *this->e_rsa_mod_less_than_2048_bits_, output);
  }

  // .zsearch.LintResult w_rsa_mod_not_odd = 131;
  if (this->has_w_rsa_mod_not_odd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      131, *this->w_rsa_mod_not_odd_, output);
  }

  // .zsearch.LintResult w_rsa_public_exponent_not_in_range = 132;
  if (this->has_w_rsa_public_exponent_not_in_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      132, *this->w_rsa_public_exponent_not_in_range_, output);
  }

  // .zsearch.LintResult e_rsa_public_exponent_not_odd = 133;
  if (this->has_e_rsa_public_exponent_not_odd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      133, *this->e_rsa_public_exponent_not_odd_, output);
  }

  // .zsearch.LintResult e_rsa_public_exponent_too_small = 134;
  if (this->has_e_rsa_public_exponent_too_small()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      134, *this->e_rsa_public_exponent_too_small_, output);
  }

  // .zsearch.LintResult e_san_dns_name_includes_null_char = 135;
  if (this->has_e_san_dns_name_includes_null_char()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      135, *this->e_san_dns_name_includes_null_char_, output);
  }

  // .zsearch.LintResult e_san_dns_name_starts_with_period = 136;
  if (this->has_e_san_dns_name_starts_with_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      136, *this->e_san_dns_name_starts_with_period_, output);
  }

  // .zsearch.LintResult w_san_iana_pub_suffix_empty = 137;
  if (this->has_w_san_iana_pub_suffix_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      137, *this->w_san_iana_pub_suffix_empty_, output);
  }

  // .zsearch.LintResult e_serial_number_longer_than_20_octets = 138;
  if (this->has_e_serial_number_longer_than_20_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      138, *this->e_serial_number_longer_than_20_octets_, output);
  }

  // .zsearch.LintResult e_serial_number_not_positive = 139;
  if (this->has_e_serial_number_not_positive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      139, *this->e_serial_number_not_positive_, output);
  }

  // .zsearch.LintResult w_sub_ca_aia_does_not_contain_issuing_ca_url = 140;
  if (this->has_w_sub_ca_aia_does_not_contain_issuing_ca_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140, *this->w_sub_ca_aia_does_not_contain_issuing_ca_url_, output);
  }

  // .zsearch.LintResult e_sub_ca_aia_does_not_contain_ocsp_url = 141;
  if (this->has_e_sub_ca_aia_does_not_contain_ocsp_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      141, *this->e_sub_ca_aia_does_not_contain_ocsp_url_, output);
  }

  // .zsearch.LintResult e_sub_ca_aia_missing = 142;
  if (this->has_e_sub_ca_aia_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      142, *this->e_sub_ca_aia_missing_, output);
  }

  // .zsearch.LintResult w_sub_ca_certificate_policies_marked_critical = 143;
  if (this->has_w_sub_ca_certificate_policies_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      143, *this->w_sub_ca_certificate_policies_marked_critical_, output);
  }

  // .zsearch.LintResult e_sub_ca_certificate_policies_missing = 144;
  if (this->has_e_sub_ca_certificate_policies_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      144, *this->e_sub_ca_certificate_policies_missing_, output);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_does_not_contain_url = 145;
  if (this->has_e_sub_ca_crl_distribution_points_does_not_contain_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      145, *this->e_sub_ca_crl_distribution_points_does_not_contain_url_, output);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_marked_critical = 146;
  if (this->has_e_sub_ca_crl_distribution_points_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      146, *this->e_sub_ca_crl_distribution_points_marked_critical_, output);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_missing = 147;
  if (this->has_e_sub_ca_crl_distribution_points_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      147, *this->e_sub_ca_crl_distribution_points_missing_, output);
  }

  // .zsearch.LintResult w_sub_ca_eku_critical = 148;
  if (this->has_w_sub_ca_eku_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      148, *this->w_sub_ca_eku_critical_, output);
  }

  // .zsearch.LintResult w_sub_ca_name_constraints_not_critical = 149;
  if (this->has_w_sub_ca_name_constraints_not_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      149, *this->w_sub_ca_name_constraints_not_critical_, output);
  }

  // .zsearch.LintResult e_sub_cert_aia_does_not_contain_ocsp_url = 153;
  if (this->has_e_sub_cert_aia_does_not_contain_ocsp_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      153, *this->e_sub_cert_aia_does_not_contain_ocsp_url_, output);
  }

  // .zsearch.LintResult e_sub_cert_aia_missing = 154;
  if (this->has_e_sub_cert_aia_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      154, *this->e_sub_cert_aia_missing_, output);
  }

  // .zsearch.LintResult e_sub_cert_cert_policy_empty = 155;
  if (this->has_e_sub_cert_cert_policy_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      155, *this->e_sub_cert_cert_policy_empty_, output);
  }

  // .zsearch.LintResult w_sub_cert_certificate_policies_marked_critical = 156;
  if (this->has_w_sub_cert_certificate_policies_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      156, *this->w_sub_cert_certificate_policies_marked_critical_, output);
  }

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_does_not_contain_url = 157;
  if (this->has_e_sub_cert_crl_distribution_points_does_not_contain_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      157, *this->e_sub_cert_crl_distribution_points_does_not_contain_url_, output);
  }

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_marked_critical = 158;
  if (this->has_e_sub_cert_crl_distribution_points_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      158, *this->e_sub_cert_crl_distribution_points_marked_critical_, output);
  }

  // .zsearch.LintResult w_sub_cert_eku_extra_values = 159;
  if (this->has_w_sub_cert_eku_extra_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      159, *this->w_sub_cert_eku_extra_values_, output);
  }

  // .zsearch.LintResult e_sub_cert_eku_missing = 160;
  if (this->has_e_sub_cert_eku_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      160, *this->e_sub_cert_eku_missing_, output);
  }

  // .zsearch.LintResult e_sub_cert_eku_server_auth_client_auth_missing = 161;
  if (this->has_e_sub_cert_eku_server_auth_client_auth_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      161, *this->e_sub_cert_eku_server_auth_client_auth_missing_, output);
  }

  // .zsearch.LintResult e_sub_cert_key_usage_cert_sign_bit_set = 162;
  if (this->has_e_sub_cert_key_usage_cert_sign_bit_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      162, *this->e_sub_cert_key_usage_cert_sign_bit_set_, output);
  }

  // .zsearch.LintResult e_sub_cert_or_sub_ca_using_sha1 = 163;
  if (this->has_e_sub_cert_or_sub_ca_using_sha1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      163, *this->e_sub_cert_or_sub_ca_using_sha1_, output);
  }

  // .zsearch.LintResult w_sub_cert_sha1_expiration_too_long = 164;
  if (this->has_w_sub_cert_sha1_expiration_too_long()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      164, *this->w_sub_cert_sha1_expiration_too_long_, output);
  }

  // .zsearch.LintResult n_subject_common_name_included = 166;
  if (this->has_n_subject_common_name_included()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      166, *this->n_subject_common_name_included_, output);
  }

  // .zsearch.LintResult e_subject_common_name_not_from_san = 167;
  if (this->has_e_subject_common_name_not_from_san()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      167, *this->e_subject_common_name_not_from_san_, output);
  }

  // .zsearch.LintResult e_subject_contains_noninformational_value = 168;
  if (this->has_e_subject_contains_noninformational_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      168, *this->e_subject_contains_noninformational_value_, output);
  }

  // .zsearch.LintResult e_subject_contains_reserved_ip = 169;
  if (this->has_e_subject_contains_reserved_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      169, *this->e_subject_contains_reserved_ip_, output);
  }

  // .zsearch.LintResult e_subject_country_not_iso = 170;
  if (this->has_e_subject_country_not_iso()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      170, *this->e_subject_country_not_iso_, output);
  }

  // .zsearch.LintResult e_subject_empty_without_san = 171;
  if (this->has_e_subject_empty_without_san()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      171, *this->e_subject_empty_without_san_, output);
  }

  // .zsearch.LintResult e_subject_info_access_marked_critical = 172;
  if (this->has_e_subject_info_access_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      172, *this->e_subject_info_access_marked_critical_, output);
  }

  // .zsearch.LintResult e_subject_not_dn = 174;
  if (this->has_e_subject_not_dn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      174, *this->e_subject_not_dn_, output);
  }

  // .zsearch.LintResult e_utc_time_does_not_include_seconds = 180;
  if (this->has_e_utc_time_does_not_include_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      180, *this->e_utc_time_does_not_include_seconds_, output);
  }

  // .zsearch.LintResult e_utc_time_not_in_zulu = 181;
  if (this->has_e_utc_time_not_in_zulu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      181, *this->e_utc_time_not_in_zulu_, output);
  }

  // .zsearch.LintResult e_validity_time_not_positive = 182;
  if (this->has_e_validity_time_not_positive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      182, *this->e_validity_time_not_positive_, output);
  }

  // .zsearch.LintResult e_wrong_time_format_pre2050 = 183;
  if (this->has_e_wrong_time_format_pre2050()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      183, *this->e_wrong_time_format_pre2050_, output);
  }

  // .zsearch.LintResult e_rsa_no_public_key = 184;
  if (this->has_e_rsa_no_public_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      184, *this->e_rsa_no_public_key_, output);
  }

  // .zsearch.LintResult e_sub_cert_certificate_policies_missing = 185;
  if (this->has_e_sub_cert_certificate_policies_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      185, *this->e_sub_cert_certificate_policies_missing_, output);
  }

  // .zsearch.LintResult e_sub_cert_key_usage_crl_sign_bit_set = 186;
  if (this->has_e_sub_cert_key_usage_crl_sign_bit_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      186, *this->e_sub_cert_key_usage_crl_sign_bit_set_, output);
  }

  // .zsearch.LintResult e_subject_common_name_max_length = 187;
  if (this->has_e_subject_common_name_max_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      187, *this->e_subject_common_name_max_length_, output);
  }

  // .zsearch.LintResult e_subject_locality_name_max_length = 188;
  if (this->has_e_subject_locality_name_max_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      188, *this->e_subject_locality_name_max_length_, output);
  }

  // .zsearch.LintResult e_subject_organization_name_max_length = 189;
  if (this->has_e_subject_organization_name_max_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      189, *this->e_subject_organization_name_max_length_, output);
  }

  // .zsearch.LintResult e_subject_organizational_unit_name_max_length = 190;
  if (this->has_e_subject_organizational_unit_name_max_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190, *this->e_subject_organizational_unit_name_max_length_, output);
  }

  // .zsearch.LintResult e_subject_state_name_max_length = 191;
  if (this->has_e_subject_state_name_max_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      191, *this->e_subject_state_name_max_length_, output);
  }

  // .zsearch.LintResult w_multiple_subject_rdn = 192;
  if (this->has_w_multiple_subject_rdn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      192, *this->w_multiple_subject_rdn_, output);
  }

  // .zsearch.LintResult w_multiple_issuer_rdn = 193;
  if (this->has_w_multiple_issuer_rdn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      193, *this->w_multiple_issuer_rdn_, output);
  }

  // .zsearch.LintResult w_issuer_dn_trailing_whitespace = 194;
  if (this->has_w_issuer_dn_trailing_whitespace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      194, *this->w_issuer_dn_trailing_whitespace_, output);
  }

  // .zsearch.LintResult w_issuer_dn_leading_whitespace = 195;
  if (this->has_w_issuer_dn_leading_whitespace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      195, *this->w_issuer_dn_leading_whitespace_, output);
  }

  // .zsearch.LintResult w_subject_dn_trailing_whitespace = 196;
  if (this->has_w_subject_dn_trailing_whitespace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      196, *this->w_subject_dn_trailing_whitespace_, output);
  }

  // .zsearch.LintResult w_subject_dn_leading_whitespace = 197;
  if (this->has_w_subject_dn_leading_whitespace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      197, *this->w_subject_dn_leading_whitespace_, output);
  }

  // .zsearch.LintResult e_sub_cert_locality_name_must_appear = 198;
  if (this->has_e_sub_cert_locality_name_must_appear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      198, *this->e_sub_cert_locality_name_must_appear_, output);
  }

  // .zsearch.LintResult e_signature_algorithm_not_supported = 199;
  if (this->has_e_signature_algorithm_not_supported()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      199, *this->e_signature_algorithm_not_supported_, output);
  }

  // .zsearch.LintResult e_dnsname_hyphen_in_sld = 200;
  if (this->has_e_dnsname_hyphen_in_sld()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->e_dnsname_hyphen_in_sld_, output);
  }

  // .zsearch.LintResult e_dsa_correct_order_in_subgroup = 201;
  if (this->has_e_dsa_correct_order_in_subgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      201, *this->e_dsa_correct_order_in_subgroup_, output);
  }

  // .zsearch.LintResult n_sub_ca_eku_not_technically_constrained = 202;
  if (this->has_n_sub_ca_eku_not_technically_constrained()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      202, *this->n_sub_ca_eku_not_technically_constrained_, output);
  }

  // .zsearch.LintResult e_dnsname_empty_label = 203;
  if (this->has_e_dnsname_empty_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      203, *this->e_dnsname_empty_label_, output);
  }

  // .zsearch.LintResult e_ca_common_name_missing = 204;
  if (this->has_e_ca_common_name_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      204, *this->e_ca_common_name_missing_, output);
  }

  // .zsearch.LintResult e_dnsname_wildcard_only_in_left_label = 205;
  if (this->has_e_dnsname_wildcard_only_in_left_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      205, *this->e_dnsname_wildcard_only_in_left_label_, output);
  }

  // .zsearch.LintResult e_sub_cert_valid_time_too_long = 206;
  if (this->has_e_sub_cert_valid_time_too_long()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      206, *this->e_sub_cert_valid_time_too_long_, output);
  }

  // .zsearch.LintResult e_dnsname_left_label_wildcard_correct = 207;
  if (this->has_e_dnsname_left_label_wildcard_correct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      207, *this->e_dnsname_left_label_wildcard_correct_, output);
  }

  // .zsearch.LintResult w_serial_number_low_entropy = 208;
  if (this->has_w_serial_number_low_entropy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      208, *this->w_serial_number_low_entropy_, output);
  }

  // .zsearch.LintResult e_dnsname_label_too_long = 209;
  if (this->has_e_dnsname_label_too_long()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      209, *this->e_dnsname_label_too_long_, output);
  }

  // .zsearch.LintResult e_root_ca_key_usage_present = 210;
  if (this->has_e_root_ca_key_usage_present()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      210, *this->e_root_ca_key_usage_present_, output);
  }

  // .zsearch.LintResult w_dnsname_wildcard_left_of_public_suffix = 211;
  if (this->has_w_dnsname_wildcard_left_of_public_suffix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      211, *this->w_dnsname_wildcard_left_of_public_suffix_, output);
  }

  // .zsearch.LintResult e_international_dns_name_not_unicode = 212;
  if (this->has_e_international_dns_name_not_unicode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      212, *this->e_international_dns_name_not_unicode_, output);
  }

  // .zsearch.LintResult w_dnsname_underscore_in_trd = 213;
  if (this->has_w_dnsname_underscore_in_trd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      213, *this->w_dnsname_underscore_in_trd_, output);
  }

  // .zsearch.LintResult w_sub_cert_aia_does_not_contain_issuing_ca_url = 214;
  if (this->has_w_sub_cert_aia_does_not_contain_issuing_ca_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      214, *this->w_sub_cert_aia_does_not_contain_issuing_ca_url_, output);
  }

  // .zsearch.LintResult e_sub_cert_locality_name_must_not_appear = 215;
  if (this->has_e_sub_cert_locality_name_must_not_appear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      215, *this->e_sub_cert_locality_name_must_not_appear_, output);
  }

  // .zsearch.LintResult e_sub_cert_country_name_must_appear = 216;
  if (this->has_e_sub_cert_country_name_must_appear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      216, *this->e_sub_cert_country_name_must_appear_, output);
  }

  // .zsearch.LintResult e_dnsname_bad_character_in_label = 217;
  if (this->has_e_dnsname_bad_character_in_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      217, *this->e_dnsname_bad_character_in_label_, output);
  }

  // .zsearch.LintResult e_sub_ca_must_not_contain_any_policy = 218;
  if (this->has_e_sub_ca_must_not_contain_any_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      218, *this->e_sub_ca_must_not_contain_any_policy_, output);
  }

  // .zsearch.LintResult e_international_dns_name_not_nfkc = 219;
  if (this->has_e_international_dns_name_not_nfkc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      219, *this->e_international_dns_name_not_nfkc_, output);
  }

  // .zsearch.LintResult e_sub_cert_aia_marked_critical = 220;
  if (this->has_e_sub_cert_aia_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220, *this->e_sub_cert_aia_marked_critical_, output);
  }

  // .zsearch.LintResult e_ca_is_ca = 221;
  if (this->has_e_ca_is_ca()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      221, *this->e_ca_is_ca_, output);
  }

  // .zsearch.LintResult e_sub_cert_street_address_should_not_exist = 222;
  if (this->has_e_sub_cert_street_address_should_not_exist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      222, *this->e_sub_cert_street_address_should_not_exist_, output);
  }

  // .zsearch.LintResult e_sub_ca_eku_missing = 223;
  if (this->has_e_sub_ca_eku_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      223, *this->e_sub_ca_eku_missing_, output);
  }

  // .zsearch.LintResult e_sub_cert_province_must_not_appear = 224;
  if (this->has_e_sub_cert_province_must_not_appear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      224, *this->e_sub_cert_province_must_not_appear_, output);
  }

  // .zsearch.LintResult e_dnsname_underscore_in_sld = 225;
  if (this->has_e_dnsname_underscore_in_sld()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      225, *this->e_dnsname_underscore_in_sld_, output);
  }

  // .zsearch.LintResult e_sub_ca_eku_name_constraints = 226;
  if (this->has_e_sub_ca_eku_name_constraints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      226, *this->e_sub_ca_eku_name_constraints_, output);
  }

  // .zsearch.LintResult e_sub_cert_not_is_ca = 227;
  if (this->has_e_sub_cert_not_is_ca()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      227, *this->e_sub_cert_not_is_ca_, output);
  }

  // .zsearch.LintResult e_dsa_unique_correct_representation = 228;
  if (this->has_e_dsa_unique_correct_representation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      228, *this->e_dsa_unique_correct_representation_, output);
  }

  // .zsearch.LintResult e_sub_cert_province_must_appear = 229;
  if (this->has_e_sub_cert_province_must_appear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      229, *this->e_sub_cert_province_must_appear_, output);
  }

  // .zsearch.LintResult e_root_ca_key_usage_must_be_critical = 230;
  if (this->has_e_root_ca_key_usage_must_be_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      230, *this->e_root_ca_key_usage_must_be_critical_, output);
  }

  // .zsearch.LintResult e_ext_san_dns_name_too_long = 231;
  if (this->has_e_ext_san_dns_name_too_long()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      231, *this->e_ext_san_dns_name_too_long_, output);
  }

  // .zsearch.LintResult e_dsa_params_missing = 232;
  if (this->has_e_dsa_params_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      232, *this->e_dsa_params_missing_, output);
  }

  // .zsearch.LintResult e_sub_ca_aia_marked_critical = 233;
  if (this->has_e_sub_ca_aia_marked_critical()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      233, *this->e_sub_ca_aia_marked_critical_, output);
  }

  // .zsearch.LintResult e_sub_cert_given_name_surname_contains_correct_policy = 234;
  if (this->has_e_sub_cert_given_name_surname_contains_correct_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      234, *this->e_sub_cert_given_name_surname_contains_correct_policy_, output);
  }

  // .zsearch.LintResult e_sub_cert_postal_code_must_not_appear = 235;
  if (this->has_e_sub_cert_postal_code_must_not_appear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      235, *this->e_sub_cert_postal_code_must_not_appear_, output);
  }

  // .zsearch.LintResult e_dnsname_not_valid_tld = 236;
  if (this->has_e_dnsname_not_valid_tld()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      236, *this->e_dnsname_not_valid_tld_, output);
  }

  // .zsearch.LintResult n_contains_redacted_dnsname = 237;
  if (this->has_n_contains_redacted_dnsname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      237, *this->n_contains_redacted_dnsname_, output);
  }

  // .zsearch.LintResult e_dnsname_contains_bare_iana_suffix = 238;
  if (this->has_e_dnsname_contains_bare_iana_suffix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      238, *this->e_dnsname_contains_bare_iana_suffix_, output);
  }

  // @@protoc_insertion_point(serialize_end:zsearch.Lints)
}

::google::protobuf::uint8* Lints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zsearch.Lints)
  // .zsearch.LintResult e_basic_constraints_not_critical = 1;
  if (this->has_e_basic_constraints_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->e_basic_constraints_not_critical_, false, target);
  }

  // .zsearch.LintResult e_ian_bare_wildcard = 2;
  if (this->has_e_ian_bare_wildcard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->e_ian_bare_wildcard_, false, target);
  }

  // .zsearch.LintResult e_ian_wildcard_not_first = 3;
  if (this->has_e_ian_wildcard_not_first()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->e_ian_wildcard_not_first_, false, target);
  }

  // .zsearch.LintResult e_san_bare_wildcard = 4;
  if (this->has_e_san_bare_wildcard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->e_san_bare_wildcard_, false, target);
  }

  // .zsearch.LintResult e_san_wildcard_not_first = 5;
  if (this->has_e_san_wildcard_not_first()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->e_san_wildcard_not_first_, false, target);
  }

  // .zsearch.LintResult e_ca_country_name_invalid = 6;
  if (this->has_e_ca_country_name_invalid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->e_ca_country_name_invalid_, false, target);
  }

  // .zsearch.LintResult e_ca_country_name_missing = 7;
  if (this->has_e_ca_country_name_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->e_ca_country_name_missing_, false, target);
  }

  // .zsearch.LintResult e_ca_crl_sign_not_set = 8;
  if (this->has_e_ca_crl_sign_not_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->e_ca_crl_sign_not_set_, false, target);
  }

  // .zsearch.LintResult n_ca_digital_signature_not_set = 9;
  if (this->has_n_ca_digital_signature_not_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->n_ca_digital_signature_not_set_, false, target);
  }

  // .zsearch.LintResult e_ca_key_cert_sign_not_set = 10;
  if (this->has_e_ca_key_cert_sign_not_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->e_ca_key_cert_sign_not_set_, false, target);
  }

  // .zsearch.LintResult e_ca_key_usage_missing = 11;
  if (this->has_e_ca_key_usage_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->e_ca_key_usage_missing_, false, target);
  }

  // .zsearch.LintResult e_ca_key_usage_not_critical = 12;
  if (this->has_e_ca_key_usage_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->e_ca_key_usage_not_critical_, false, target);
  }

  // .zsearch.LintResult e_ca_organization_name_missing = 13;
  if (this->has_e_ca_organization_name_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->e_ca_organization_name_missing_, false, target);
  }

  // .zsearch.LintResult e_ca_subject_field_empty = 14;
  if (this->has_e_ca_subject_field_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->e_ca_subject_field_empty_, false, target);
  }

  // .zsearch.LintResult e_cert_contains_unique_identifier = 15;
  if (this->has_e_cert_contains_unique_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->e_cert_contains_unique_identifier_, false, target);
  }

  // .zsearch.LintResult e_cert_extensions_version_not_3 = 16;
  if (this->has_e_cert_extensions_version_not_3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->e_cert_extensions_version_not_3_, false, target);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_locality = 17;
  if (this->has_e_cab_dv_conflicts_with_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->e_cab_dv_conflicts_with_locality_, false, target);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_org = 18;
  if (this->has_e_cab_dv_conflicts_with_org()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->e_cab_dv_conflicts_with_org_, false, target);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_postal = 19;
  if (this->has_e_cab_dv_conflicts_with_postal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->e_cab_dv_conflicts_with_postal_, false, target);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_province = 20;
  if (this->has_e_cab_dv_conflicts_with_province()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->e_cab_dv_conflicts_with_province_, false, target);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_street = 21;
  if (this->has_e_cab_dv_conflicts_with_street()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->e_cab_dv_conflicts_with_street_, false, target);
  }

  // .zsearch.LintResult e_cert_policy_iv_requires_country = 22;
  if (this->has_e_cert_policy_iv_requires_country()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->e_cert_policy_iv_requires_country_, false, target);
  }

  // .zsearch.LintResult e_cert_policy_iv_requires_province_or_locality = 23;
  if (this->has_e_cert_policy_iv_requires_province_or_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->e_cert_policy_iv_requires_province_or_locality_, false, target);
  }

  // .zsearch.LintResult e_cert_policy_ov_requires_country = 24;
  if (this->has_e_cert_policy_ov_requires_country()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, *this->e_cert_policy_ov_requires_country_, false, target);
  }

  // .zsearch.LintResult e_cert_policy_ov_requires_province_or_locality = 25;
  if (this->has_e_cert_policy_ov_requires_province_or_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->e_cert_policy_ov_requires_province_or_locality_, false, target);
  }

  // .zsearch.LintResult e_cab_ov_requires_org = 26;
  if (this->has_e_cab_ov_requires_org()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->e_cab_ov_requires_org_, false, target);
  }

  // .zsearch.LintResult e_cab_iv_requires_personal_name = 27;
  if (this->has_e_cab_iv_requires_personal_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->e_cab_iv_requires_personal_name_, false, target);
  }

  // .zsearch.LintResult e_cert_unique_identifier_version_not_2_or_3 = 28;
  if (this->has_e_cert_unique_identifier_version_not_2_or_3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->e_cert_unique_identifier_version_not_2_or_3_, false, target);
  }

  // .zsearch.LintResult e_distribution_point_incomplete = 30;
  if (this->has_e_distribution_point_incomplete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->e_distribution_point_incomplete_, false, target);
  }

  // .zsearch.LintResult w_distribution_point_missing_ldap_or_uri = 31;
  if (this->has_w_distribution_point_missing_ldap_or_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, *this->w_distribution_point_missing_ldap_or_uri_, false, target);
  }

  // .zsearch.LintResult e_dsa_improper_modulus_or_divisor_size = 32;
  if (this->has_e_dsa_improper_modulus_or_divisor_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        32, *this->e_dsa_improper_modulus_or_divisor_size_, false, target);
  }

  // .zsearch.LintResult e_dsa_shorter_than_2048_bits = 33;
  if (this->has_e_dsa_shorter_than_2048_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33, *this->e_dsa_shorter_than_2048_bits_, false, target);
  }

  // .zsearch.LintResult e_ec_improper_curves = 34;
  if (this->has_e_ec_improper_curves()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        34, *this->e_ec_improper_curves_, false, target);
  }

  // .zsearch.LintResult w_eku_critical_improperly = 35;
  if (this->has_w_eku_critical_improperly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        35, *this->w_eku_critical_improperly_, false, target);
  }

  // .zsearch.LintResult e_ev_business_category_missing = 36;
  if (this->has_e_ev_business_category_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        36, *this->e_ev_business_category_missing_, false, target);
  }

  // .zsearch.LintResult e_ev_country_name_missing = 37;
  if (this->has_e_ev_country_name_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        37, *this->e_ev_country_name_missing_, false, target);
  }

  // .zsearch.LintResult e_ev_locality_name_missing = 38;
  if (this->has_e_ev_locality_name_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        38, *this->e_ev_locality_name_missing_, false, target);
  }

  // .zsearch.LintResult e_ev_organization_name_missing = 39;
  if (this->has_e_ev_organization_name_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        39, *this->e_ev_organization_name_missing_, false, target);
  }

  // .zsearch.LintResult e_ev_serial_number_missing = 40;
  if (this->has_e_ev_serial_number_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->e_ev_serial_number_missing_, false, target);
  }

  // .zsearch.LintResult e_ev_valid_time_too_long = 41;
  if (this->has_e_ev_valid_time_too_long()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        41, *this->e_ev_valid_time_too_long_, false, target);
  }

  // .zsearch.LintResult w_ext_aia_access_location_missing = 42;
  if (this->has_w_ext_aia_access_location_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        42, *this->w_ext_aia_access_location_missing_, false, target);
  }

  // .zsearch.LintResult e_ext_aia_marked_critical = 43;
  if (this->has_e_ext_aia_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        43, *this->e_ext_aia_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_critical = 44;
  if (this->has_e_ext_authority_key_identifier_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        44, *this->e_ext_authority_key_identifier_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_missing = 45;
  if (this->has_e_ext_authority_key_identifier_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        45, *this->e_ext_authority_key_identifier_missing_, false, target);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_no_key_identifier = 46;
  if (this->has_e_ext_authority_key_identifier_no_key_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        46, *this->e_ext_authority_key_identifier_no_key_identifier_, false, target);
  }

  // .zsearch.LintResult w_ext_cert_policy_contains_noticeref = 47;
  if (this->has_w_ext_cert_policy_contains_noticeref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        47, *this->w_ext_cert_policy_contains_noticeref_, false, target);
  }

  // .zsearch.LintResult e_ext_cert_policy_disallowed_any_policy_qualifier = 48;
  if (this->has_e_ext_cert_policy_disallowed_any_policy_qualifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        48, *this->e_ext_cert_policy_disallowed_any_policy_qualifier_, false, target);
  }

  // .zsearch.LintResult e_ext_cert_policy_duplicate = 49;
  if (this->has_e_ext_cert_policy_duplicate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        49, *this->e_ext_cert_policy_duplicate_, false, target);
  }

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_ia5_string = 50;
  if (this->has_e_ext_cert_policy_explicit_text_ia5_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *this->e_ext_cert_policy_explicit_text_ia5_string_, false, target);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_includes_control = 51;
  if (this->has_w_ext_cert_policy_explicit_text_includes_control()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        51, *this->w_ext_cert_policy_explicit_text_includes_control_, false, target);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_nfc = 52;
  if (this->has_w_ext_cert_policy_explicit_text_not_nfc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        52, *this->w_ext_cert_policy_explicit_text_not_nfc_, false, target);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_utf8 = 53;
  if (this->has_w_ext_cert_policy_explicit_text_not_utf8()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        53, *this->w_ext_cert_policy_explicit_text_not_utf8_, false, target);
  }

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_too_long = 54;
  if (this->has_e_ext_cert_policy_explicit_text_too_long()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        54, *this->e_ext_cert_policy_explicit_text_too_long_, false, target);
  }

  // .zsearch.LintResult w_ext_crl_distribution_marked_critical = 55;
  if (this->has_w_ext_crl_distribution_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        55, *this->w_ext_crl_distribution_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_duplicate_extension = 56;
  if (this->has_e_ext_duplicate_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        56, *this->e_ext_duplicate_extension_, false, target);
  }

  // .zsearch.LintResult e_ext_freshest_crl_marked_critical = 57;
  if (this->has_e_ext_freshest_crl_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        57, *this->e_ext_freshest_crl_marked_critical_, false, target);
  }

  // .zsearch.LintResult w_ext_ian_critical = 58;
  if (this->has_w_ext_ian_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        58, *this->w_ext_ian_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_dns_not_ia5_string = 59;
  if (this->has_e_ext_ian_dns_not_ia5_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        59, *this->e_ext_ian_dns_not_ia5_string_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_empty_name = 60;
  if (this->has_e_ext_ian_empty_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *this->e_ext_ian_empty_name_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_no_entries = 61;
  if (this->has_e_ext_ian_no_entries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        61, *this->e_ext_ian_no_entries_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_rfc822_format_invalid = 62;
  if (this->has_e_ext_ian_rfc822_format_invalid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        62, *this->e_ext_ian_rfc822_format_invalid_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_space_dns_name = 63;
  if (this->has_e_ext_ian_space_dns_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        63, *this->e_ext_ian_space_dns_name_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_uri_format_invalid = 64;
  if (this->has_e_ext_ian_uri_format_invalid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        64, *this->e_ext_ian_uri_format_invalid_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_uri_host_not_fqdn_or_ip = 65;
  if (this->has_e_ext_ian_uri_host_not_fqdn_or_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        65, *this->e_ext_ian_uri_host_not_fqdn_or_ip_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_uri_not_ia5 = 66;
  if (this->has_e_ext_ian_uri_not_ia5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        66, *this->e_ext_ian_uri_not_ia5_, false, target);
  }

  // .zsearch.LintResult e_ext_ian_uri_relative = 67;
  if (this->has_e_ext_ian_uri_relative()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        67, *this->e_ext_ian_uri_relative_, false, target);
  }

  // .zsearch.LintResult e_ext_key_usage_cert_sign_without_ca = 68;
  if (this->has_e_ext_key_usage_cert_sign_without_ca()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        68, *this->e_ext_key_usage_cert_sign_without_ca_, false, target);
  }

  // .zsearch.LintResult w_ext_key_usage_not_critical = 69;
  if (this->has_w_ext_key_usage_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        69, *this->w_ext_key_usage_not_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_key_usage_without_bits = 70;
  if (this->has_e_ext_key_usage_without_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        70, *this->e_ext_key_usage_without_bits_, false, target);
  }

  // .zsearch.LintResult e_ext_name_constraints_not_critical = 71;
  if (this->has_e_ext_name_constraints_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        71, *this->e_ext_name_constraints_not_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_name_constraints_not_in_ca = 72;
  if (this->has_e_ext_name_constraints_not_in_ca()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        72, *this->e_ext_name_constraints_not_in_ca_, false, target);
  }

  // .zsearch.LintResult e_ext_policy_constraints_empty = 73;
  if (this->has_e_ext_policy_constraints_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        73, *this->e_ext_policy_constraints_empty_, false, target);
  }

  // .zsearch.LintResult e_ext_policy_constraints_not_critical = 74;
  if (this->has_e_ext_policy_constraints_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        74, *this->e_ext_policy_constraints_not_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_policy_map_any_policy = 75;
  if (this->has_e_ext_policy_map_any_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        75, *this->e_ext_policy_map_any_policy_, false, target);
  }

  // .zsearch.LintResult w_ext_policy_map_not_critical = 76;
  if (this->has_w_ext_policy_map_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        76, *this->w_ext_policy_map_not_critical_, false, target);
  }

  // .zsearch.LintResult w_ext_policy_map_not_in_cert_policy = 77;
  if (this->has_w_ext_policy_map_not_in_cert_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        77, *this->w_ext_policy_map_not_in_cert_policy_, false, target);
  }

  // .zsearch.LintResult e_ext_san_contains_reserved_ip = 78;
  if (this->has_e_ext_san_contains_reserved_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        78, *this->e_ext_san_contains_reserved_ip_, false, target);
  }

  // .zsearch.LintResult w_ext_san_critical_with_subject_dn = 79;
  if (this->has_w_ext_san_critical_with_subject_dn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        79, *this->w_ext_san_critical_with_subject_dn_, false, target);
  }

  // .zsearch.LintResult e_ext_san_directory_name_present = 80;
  if (this->has_e_ext_san_directory_name_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        80, *this->e_ext_san_directory_name_present_, false, target);
  }

  // .zsearch.LintResult e_ext_san_dns_not_ia5_string = 81;
  if (this->has_e_ext_san_dns_not_ia5_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        81, *this->e_ext_san_dns_not_ia5_string_, false, target);
  }

  // .zsearch.LintResult e_ext_san_edi_party_name_present = 84;
  if (this->has_e_ext_san_edi_party_name_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        84, *this->e_ext_san_edi_party_name_present_, false, target);
  }

  // .zsearch.LintResult e_ext_san_empty_name = 85;
  if (this->has_e_ext_san_empty_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        85, *this->e_ext_san_empty_name_, false, target);
  }

  // .zsearch.LintResult e_ext_san_missing = 86;
  if (this->has_e_ext_san_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        86, *this->e_ext_san_missing_, false, target);
  }

  // .zsearch.LintResult e_ext_san_no_entries = 87;
  if (this->has_e_ext_san_no_entries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        87, *this->e_ext_san_no_entries_, false, target);
  }

  // .zsearch.LintResult e_ext_san_not_critical_without_subject = 88;
  if (this->has_e_ext_san_not_critical_without_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        88, *this->e_ext_san_not_critical_without_subject_, false, target);
  }

  // .zsearch.LintResult e_ext_san_other_name_present = 89;
  if (this->has_e_ext_san_other_name_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        89, *this->e_ext_san_other_name_present_, false, target);
  }

  // .zsearch.LintResult e_ext_san_registered_id_present = 90;
  if (this->has_e_ext_san_registered_id_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        90, *this->e_ext_san_registered_id_present_, false, target);
  }

  // .zsearch.LintResult e_ext_san_rfc822_format_invalid = 91;
  if (this->has_e_ext_san_rfc822_format_invalid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        91, *this->e_ext_san_rfc822_format_invalid_, false, target);
  }

  // .zsearch.LintResult e_ext_san_rfc822_name_present = 92;
  if (this->has_e_ext_san_rfc822_name_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        92, *this->e_ext_san_rfc822_name_present_, false, target);
  }

  // .zsearch.LintResult e_ext_san_space_dns_name = 93;
  if (this->has_e_ext_san_space_dns_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        93, *this->e_ext_san_space_dns_name_, false, target);
  }

  // .zsearch.LintResult e_ext_san_uniform_resource_identifier_present = 94;
  if (this->has_e_ext_san_uniform_resource_identifier_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        94, *this->e_ext_san_uniform_resource_identifier_present_, false, target);
  }

  // .zsearch.LintResult e_ext_san_uri_format_invalid = 95;
  if (this->has_e_ext_san_uri_format_invalid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        95, *this->e_ext_san_uri_format_invalid_, false, target);
  }

  // .zsearch.LintResult e_ext_san_uri_host_not_fqdn_or_ip = 96;
  if (this->has_e_ext_san_uri_host_not_fqdn_or_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        96, *this->e_ext_san_uri_host_not_fqdn_or_ip_, false, target);
  }

  // .zsearch.LintResult e_ext_san_uri_not_ia5 = 97;
  if (this->has_e_ext_san_uri_not_ia5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        97, *this->e_ext_san_uri_not_ia5_, false, target);
  }

  // .zsearch.LintResult e_ext_san_uri_relative = 98;
  if (this->has_e_ext_san_uri_relative()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        98, *this->e_ext_san_uri_relative_, false, target);
  }

  // .zsearch.LintResult e_ext_subject_directory_attr_critical = 99;
  if (this->has_e_ext_subject_directory_attr_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        99, *this->e_ext_subject_directory_attr_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_subject_key_identifier_critical = 100;
  if (this->has_e_ext_subject_key_identifier_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->e_ext_subject_key_identifier_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_subject_key_identifier_missing_ca = 101;
  if (this->has_e_ext_subject_key_identifier_missing_ca()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101, *this->e_ext_subject_key_identifier_missing_ca_, false, target);
  }

  // .zsearch.LintResult w_ext_subject_key_identifier_missing_sub_cert = 102;
  if (this->has_w_ext_subject_key_identifier_missing_sub_cert()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, *this->w_ext_subject_key_identifier_missing_sub_cert_, false, target);
  }

  // .zsearch.LintResult e_generalized_time_does_not_include_seconds = 103;
  if (this->has_e_generalized_time_does_not_include_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        103, *this->e_generalized_time_does_not_include_seconds_, false, target);
  }

  // .zsearch.LintResult e_generalized_time_includes_fraction_seconds = 104;
  if (this->has_e_generalized_time_includes_fraction_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        104, *this->e_generalized_time_includes_fraction_seconds_, false, target);
  }

  // .zsearch.LintResult e_generalized_time_not_in_zulu = 105;
  if (this->has_e_generalized_time_not_in_zulu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        105, *this->e_generalized_time_not_in_zulu_, false, target);
  }

  // .zsearch.LintResult e_ian_dns_name_includes_null_char = 107;
  if (this->has_e_ian_dns_name_includes_null_char()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        107, *this->e_ian_dns_name_includes_null_char_, false, target);
  }

  // .zsearch.LintResult e_ian_dns_name_starts_with_period = 108;
  if (this->has_e_ian_dns_name_starts_with_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        108, *this->e_ian_dns_name_starts_with_period_, false, target);
  }

  // .zsearch.LintResult w_ian_iana_pub_suffix_empty = 109;
  if (this->has_w_ian_iana_pub_suffix_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        109, *this->w_ian_iana_pub_suffix_empty_, false, target);
  }

  // .zsearch.LintResult e_inhibit_any_policy_not_critical = 110;
  if (this->has_e_inhibit_any_policy_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        110, *this->e_inhibit_any_policy_not_critical_, false, target);
  }

  // .zsearch.LintResult e_invalid_certificate_version = 111;
  if (this->has_e_invalid_certificate_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        111, *this->e_invalid_certificate_version_, false, target);
  }

  // .zsearch.LintResult e_issuer_field_empty = 112;
  if (this->has_e_issuer_field_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        112, *this->e_issuer_field_empty_, false, target);
  }

  // .zsearch.LintResult e_name_constraint_empty = 113;
  if (this->has_e_name_constraint_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        113, *this->e_name_constraint_empty_, false, target);
  }

  // .zsearch.LintResult e_name_constraint_maximum_not_absent = 114;
  if (this->has_e_name_constraint_maximum_not_absent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        114, *this->e_name_constraint_maximum_not_absent_, false, target);
  }

  // .zsearch.LintResult e_name_constraint_minimum_non_zero = 115;
  if (this->has_e_name_constraint_minimum_non_zero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        115, *this->e_name_constraint_minimum_non_zero_, false, target);
  }

  // .zsearch.LintResult w_name_constraint_on_edi_party_name = 116;
  if (this->has_w_name_constraint_on_edi_party_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        116, *this->w_name_constraint_on_edi_party_name_, false, target);
  }

  // .zsearch.LintResult w_name_constraint_on_registered_id = 117;
  if (this->has_w_name_constraint_on_registered_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        117, *this->w_name_constraint_on_registered_id_, false, target);
  }

  // .zsearch.LintResult w_name_constraint_on_x400 = 118;
  if (this->has_w_name_constraint_on_x400()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        118, *this->w_name_constraint_on_x400_, false, target);
  }

  // .zsearch.LintResult e_old_root_ca_rsa_mod_less_than_2048_bits = 119;
  if (this->has_e_old_root_ca_rsa_mod_less_than_2048_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        119, *this->e_old_root_ca_rsa_mod_less_than_2048_bits_, false, target);
  }

  // .zsearch.LintResult e_old_sub_ca_rsa_mod_less_than_1024_bits = 120;
  if (this->has_e_old_sub_ca_rsa_mod_less_than_1024_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        120, *this->e_old_sub_ca_rsa_mod_less_than_1024_bits_, false, target);
  }

  // .zsearch.LintResult e_old_sub_cert_rsa_mod_less_than_1024_bits = 121;
  if (this->has_e_old_sub_cert_rsa_mod_less_than_1024_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        121, *this->e_old_sub_cert_rsa_mod_less_than_1024_bits_, false, target);
  }

  // .zsearch.LintResult e_path_len_constraint_improperly_included = 122;
  if (this->has_e_path_len_constraint_improperly_included()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        122, *this->e_path_len_constraint_improperly_included_, false, target);
  }

  // .zsearch.LintResult e_path_len_constraint_zero_or_less = 123;
  if (this->has_e_path_len_constraint_zero_or_less()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        123, *this->e_path_len_constraint_zero_or_less_, false, target);
  }

  // .zsearch.LintResult e_public_key_type_not_allowed = 124;
  if (this->has_e_public_key_type_not_allowed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        124, *this->e_public_key_type_not_allowed_, false, target);
  }

  // .zsearch.LintResult w_root_ca_basic_constraints_path_len_constraint_field_present = 125;
  if (this->has_w_root_ca_basic_constraints_path_len_constraint_field_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        125, *this->w_root_ca_basic_constraints_path_len_constraint_field_present_, false, target);
  }

  // .zsearch.LintResult w_root_ca_contains_cert_policy = 126;
  if (this->has_w_root_ca_contains_cert_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        126, *this->w_root_ca_contains_cert_policy_, false, target);
  }

  // .zsearch.LintResult e_root_ca_extended_key_usage_present = 127;
  if (this->has_e_root_ca_extended_key_usage_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        127, *this->e_root_ca_extended_key_usage_present_, false, target);
  }

  // .zsearch.LintResult e_rsa_exp_negative = 128;
  if (this->has_e_rsa_exp_negative()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        128, *this->e_rsa_exp_negative_, false, target);
  }

  // .zsearch.LintResult w_rsa_mod_factors_smaller_than_752 = 129;
  if (this->has_w_rsa_mod_factors_smaller_than_752()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        129, *this->w_rsa_mod_factors_smaller_than_752_, false, target);
  }

  // .zsearch.LintResult e_rsa_mod_less_than_2048_bits = 130;
  if (this->has_e_rsa_mod_less_than_2048_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        130, *this->e_rsa_mod_less_than_2048_bits_, false, target);
  }

  // .zsearch.LintResult w_rsa_mod_not_odd = 131;
  if (this->has_w_rsa_mod_not_odd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        131, *this->w_rsa_mod_not_odd_, false, target);
  }

  // .zsearch.LintResult w_rsa_public_exponent_not_in_range = 132;
  if (this->has_w_rsa_public_exponent_not_in_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        132, *this->w_rsa_public_exponent_not_in_range_, false, target);
  }

  // .zsearch.LintResult e_rsa_public_exponent_not_odd = 133;
  if (this->has_e_rsa_public_exponent_not_odd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        133, *this->e_rsa_public_exponent_not_odd_, false, target);
  }

  // .zsearch.LintResult e_rsa_public_exponent_too_small = 134;
  if (this->has_e_rsa_public_exponent_too_small()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        134, *this->e_rsa_public_exponent_too_small_, false, target);
  }

  // .zsearch.LintResult e_san_dns_name_includes_null_char = 135;
  if (this->has_e_san_dns_name_includes_null_char()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        135, *this->e_san_dns_name_includes_null_char_, false, target);
  }

  // .zsearch.LintResult e_san_dns_name_starts_with_period = 136;
  if (this->has_e_san_dns_name_starts_with_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        136, *this->e_san_dns_name_starts_with_period_, false, target);
  }

  // .zsearch.LintResult w_san_iana_pub_suffix_empty = 137;
  if (this->has_w_san_iana_pub_suffix_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        137, *this->w_san_iana_pub_suffix_empty_, false, target);
  }

  // .zsearch.LintResult e_serial_number_longer_than_20_octets = 138;
  if (this->has_e_serial_number_longer_than_20_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        138, *this->e_serial_number_longer_than_20_octets_, false, target);
  }

  // .zsearch.LintResult e_serial_number_not_positive = 139;
  if (this->has_e_serial_number_not_positive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        139, *this->e_serial_number_not_positive_, false, target);
  }

  // .zsearch.LintResult w_sub_ca_aia_does_not_contain_issuing_ca_url = 140;
  if (this->has_w_sub_ca_aia_does_not_contain_issuing_ca_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        140, *this->w_sub_ca_aia_does_not_contain_issuing_ca_url_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_aia_does_not_contain_ocsp_url = 141;
  if (this->has_e_sub_ca_aia_does_not_contain_ocsp_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        141, *this->e_sub_ca_aia_does_not_contain_ocsp_url_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_aia_missing = 142;
  if (this->has_e_sub_ca_aia_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        142, *this->e_sub_ca_aia_missing_, false, target);
  }

  // .zsearch.LintResult w_sub_ca_certificate_policies_marked_critical = 143;
  if (this->has_w_sub_ca_certificate_policies_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        143, *this->w_sub_ca_certificate_policies_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_certificate_policies_missing = 144;
  if (this->has_e_sub_ca_certificate_policies_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        144, *this->e_sub_ca_certificate_policies_missing_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_does_not_contain_url = 145;
  if (this->has_e_sub_ca_crl_distribution_points_does_not_contain_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        145, *this->e_sub_ca_crl_distribution_points_does_not_contain_url_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_marked_critical = 146;
  if (this->has_e_sub_ca_crl_distribution_points_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        146, *this->e_sub_ca_crl_distribution_points_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_missing = 147;
  if (this->has_e_sub_ca_crl_distribution_points_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        147, *this->e_sub_ca_crl_distribution_points_missing_, false, target);
  }

  // .zsearch.LintResult w_sub_ca_eku_critical = 148;
  if (this->has_w_sub_ca_eku_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        148, *this->w_sub_ca_eku_critical_, false, target);
  }

  // .zsearch.LintResult w_sub_ca_name_constraints_not_critical = 149;
  if (this->has_w_sub_ca_name_constraints_not_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        149, *this->w_sub_ca_name_constraints_not_critical_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_aia_does_not_contain_ocsp_url = 153;
  if (this->has_e_sub_cert_aia_does_not_contain_ocsp_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        153, *this->e_sub_cert_aia_does_not_contain_ocsp_url_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_aia_missing = 154;
  if (this->has_e_sub_cert_aia_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        154, *this->e_sub_cert_aia_missing_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_cert_policy_empty = 155;
  if (this->has_e_sub_cert_cert_policy_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        155, *this->e_sub_cert_cert_policy_empty_, false, target);
  }

  // .zsearch.LintResult w_sub_cert_certificate_policies_marked_critical = 156;
  if (this->has_w_sub_cert_certificate_policies_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        156, *this->w_sub_cert_certificate_policies_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_does_not_contain_url = 157;
  if (this->has_e_sub_cert_crl_distribution_points_does_not_contain_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        157, *this->e_sub_cert_crl_distribution_points_does_not_contain_url_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_marked_critical = 158;
  if (this->has_e_sub_cert_crl_distribution_points_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        158, *this->e_sub_cert_crl_distribution_points_marked_critical_, false, target);
  }

  // .zsearch.LintResult w_sub_cert_eku_extra_values = 159;
  if (this->has_w_sub_cert_eku_extra_values()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        159, *this->w_sub_cert_eku_extra_values_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_eku_missing = 160;
  if (this->has_e_sub_cert_eku_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        160, *this->e_sub_cert_eku_missing_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_eku_server_auth_client_auth_missing = 161;
  if (this->has_e_sub_cert_eku_server_auth_client_auth_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        161, *this->e_sub_cert_eku_server_auth_client_auth_missing_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_key_usage_cert_sign_bit_set = 162;
  if (this->has_e_sub_cert_key_usage_cert_sign_bit_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        162, *this->e_sub_cert_key_usage_cert_sign_bit_set_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_or_sub_ca_using_sha1 = 163;
  if (this->has_e_sub_cert_or_sub_ca_using_sha1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        163, *this->e_sub_cert_or_sub_ca_using_sha1_, false, target);
  }

  // .zsearch.LintResult w_sub_cert_sha1_expiration_too_long = 164;
  if (this->has_w_sub_cert_sha1_expiration_too_long()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        164, *this->w_sub_cert_sha1_expiration_too_long_, false, target);
  }

  // .zsearch.LintResult n_subject_common_name_included = 166;
  if (this->has_n_subject_common_name_included()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        166, *this->n_subject_common_name_included_, false, target);
  }

  // .zsearch.LintResult e_subject_common_name_not_from_san = 167;
  if (this->has_e_subject_common_name_not_from_san()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        167, *this->e_subject_common_name_not_from_san_, false, target);
  }

  // .zsearch.LintResult e_subject_contains_noninformational_value = 168;
  if (this->has_e_subject_contains_noninformational_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        168, *this->e_subject_contains_noninformational_value_, false, target);
  }

  // .zsearch.LintResult e_subject_contains_reserved_ip = 169;
  if (this->has_e_subject_contains_reserved_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        169, *this->e_subject_contains_reserved_ip_, false, target);
  }

  // .zsearch.LintResult e_subject_country_not_iso = 170;
  if (this->has_e_subject_country_not_iso()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        170, *this->e_subject_country_not_iso_, false, target);
  }

  // .zsearch.LintResult e_subject_empty_without_san = 171;
  if (this->has_e_subject_empty_without_san()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        171, *this->e_subject_empty_without_san_, false, target);
  }

  // .zsearch.LintResult e_subject_info_access_marked_critical = 172;
  if (this->has_e_subject_info_access_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        172, *this->e_subject_info_access_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_subject_not_dn = 174;
  if (this->has_e_subject_not_dn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        174, *this->e_subject_not_dn_, false, target);
  }

  // .zsearch.LintResult e_utc_time_does_not_include_seconds = 180;
  if (this->has_e_utc_time_does_not_include_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        180, *this->e_utc_time_does_not_include_seconds_, false, target);
  }

  // .zsearch.LintResult e_utc_time_not_in_zulu = 181;
  if (this->has_e_utc_time_not_in_zulu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        181, *this->e_utc_time_not_in_zulu_, false, target);
  }

  // .zsearch.LintResult e_validity_time_not_positive = 182;
  if (this->has_e_validity_time_not_positive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        182, *this->e_validity_time_not_positive_, false, target);
  }

  // .zsearch.LintResult e_wrong_time_format_pre2050 = 183;
  if (this->has_e_wrong_time_format_pre2050()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        183, *this->e_wrong_time_format_pre2050_, false, target);
  }

  // .zsearch.LintResult e_rsa_no_public_key = 184;
  if (this->has_e_rsa_no_public_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        184, *this->e_rsa_no_public_key_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_certificate_policies_missing = 185;
  if (this->has_e_sub_cert_certificate_policies_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        185, *this->e_sub_cert_certificate_policies_missing_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_key_usage_crl_sign_bit_set = 186;
  if (this->has_e_sub_cert_key_usage_crl_sign_bit_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        186, *this->e_sub_cert_key_usage_crl_sign_bit_set_, false, target);
  }

  // .zsearch.LintResult e_subject_common_name_max_length = 187;
  if (this->has_e_subject_common_name_max_length()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        187, *this->e_subject_common_name_max_length_, false, target);
  }

  // .zsearch.LintResult e_subject_locality_name_max_length = 188;
  if (this->has_e_subject_locality_name_max_length()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        188, *this->e_subject_locality_name_max_length_, false, target);
  }

  // .zsearch.LintResult e_subject_organization_name_max_length = 189;
  if (this->has_e_subject_organization_name_max_length()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        189, *this->e_subject_organization_name_max_length_, false, target);
  }

  // .zsearch.LintResult e_subject_organizational_unit_name_max_length = 190;
  if (this->has_e_subject_organizational_unit_name_max_length()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        190, *this->e_subject_organizational_unit_name_max_length_, false, target);
  }

  // .zsearch.LintResult e_subject_state_name_max_length = 191;
  if (this->has_e_subject_state_name_max_length()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        191, *this->e_subject_state_name_max_length_, false, target);
  }

  // .zsearch.LintResult w_multiple_subject_rdn = 192;
  if (this->has_w_multiple_subject_rdn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        192, *this->w_multiple_subject_rdn_, false, target);
  }

  // .zsearch.LintResult w_multiple_issuer_rdn = 193;
  if (this->has_w_multiple_issuer_rdn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        193, *this->w_multiple_issuer_rdn_, false, target);
  }

  // .zsearch.LintResult w_issuer_dn_trailing_whitespace = 194;
  if (this->has_w_issuer_dn_trailing_whitespace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        194, *this->w_issuer_dn_trailing_whitespace_, false, target);
  }

  // .zsearch.LintResult w_issuer_dn_leading_whitespace = 195;
  if (this->has_w_issuer_dn_leading_whitespace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        195, *this->w_issuer_dn_leading_whitespace_, false, target);
  }

  // .zsearch.LintResult w_subject_dn_trailing_whitespace = 196;
  if (this->has_w_subject_dn_trailing_whitespace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        196, *this->w_subject_dn_trailing_whitespace_, false, target);
  }

  // .zsearch.LintResult w_subject_dn_leading_whitespace = 197;
  if (this->has_w_subject_dn_leading_whitespace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        197, *this->w_subject_dn_leading_whitespace_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_locality_name_must_appear = 198;
  if (this->has_e_sub_cert_locality_name_must_appear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        198, *this->e_sub_cert_locality_name_must_appear_, false, target);
  }

  // .zsearch.LintResult e_signature_algorithm_not_supported = 199;
  if (this->has_e_signature_algorithm_not_supported()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        199, *this->e_signature_algorithm_not_supported_, false, target);
  }

  // .zsearch.LintResult e_dnsname_hyphen_in_sld = 200;
  if (this->has_e_dnsname_hyphen_in_sld()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        200, *this->e_dnsname_hyphen_in_sld_, false, target);
  }

  // .zsearch.LintResult e_dsa_correct_order_in_subgroup = 201;
  if (this->has_e_dsa_correct_order_in_subgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        201, *this->e_dsa_correct_order_in_subgroup_, false, target);
  }

  // .zsearch.LintResult n_sub_ca_eku_not_technically_constrained = 202;
  if (this->has_n_sub_ca_eku_not_technically_constrained()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        202, *this->n_sub_ca_eku_not_technically_constrained_, false, target);
  }

  // .zsearch.LintResult e_dnsname_empty_label = 203;
  if (this->has_e_dnsname_empty_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        203, *this->e_dnsname_empty_label_, false, target);
  }

  // .zsearch.LintResult e_ca_common_name_missing = 204;
  if (this->has_e_ca_common_name_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        204, *this->e_ca_common_name_missing_, false, target);
  }

  // .zsearch.LintResult e_dnsname_wildcard_only_in_left_label = 205;
  if (this->has_e_dnsname_wildcard_only_in_left_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        205, *this->e_dnsname_wildcard_only_in_left_label_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_valid_time_too_long = 206;
  if (this->has_e_sub_cert_valid_time_too_long()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        206, *this->e_sub_cert_valid_time_too_long_, false, target);
  }

  // .zsearch.LintResult e_dnsname_left_label_wildcard_correct = 207;
  if (this->has_e_dnsname_left_label_wildcard_correct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        207, *this->e_dnsname_left_label_wildcard_correct_, false, target);
  }

  // .zsearch.LintResult w_serial_number_low_entropy = 208;
  if (this->has_w_serial_number_low_entropy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        208, *this->w_serial_number_low_entropy_, false, target);
  }

  // .zsearch.LintResult e_dnsname_label_too_long = 209;
  if (this->has_e_dnsname_label_too_long()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        209, *this->e_dnsname_label_too_long_, false, target);
  }

  // .zsearch.LintResult e_root_ca_key_usage_present = 210;
  if (this->has_e_root_ca_key_usage_present()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        210, *this->e_root_ca_key_usage_present_, false, target);
  }

  // .zsearch.LintResult w_dnsname_wildcard_left_of_public_suffix = 211;
  if (this->has_w_dnsname_wildcard_left_of_public_suffix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        211, *this->w_dnsname_wildcard_left_of_public_suffix_, false, target);
  }

  // .zsearch.LintResult e_international_dns_name_not_unicode = 212;
  if (this->has_e_international_dns_name_not_unicode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        212, *this->e_international_dns_name_not_unicode_, false, target);
  }

  // .zsearch.LintResult w_dnsname_underscore_in_trd = 213;
  if (this->has_w_dnsname_underscore_in_trd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        213, *this->w_dnsname_underscore_in_trd_, false, target);
  }

  // .zsearch.LintResult w_sub_cert_aia_does_not_contain_issuing_ca_url = 214;
  if (this->has_w_sub_cert_aia_does_not_contain_issuing_ca_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        214, *this->w_sub_cert_aia_does_not_contain_issuing_ca_url_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_locality_name_must_not_appear = 215;
  if (this->has_e_sub_cert_locality_name_must_not_appear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        215, *this->e_sub_cert_locality_name_must_not_appear_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_country_name_must_appear = 216;
  if (this->has_e_sub_cert_country_name_must_appear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        216, *this->e_sub_cert_country_name_must_appear_, false, target);
  }

  // .zsearch.LintResult e_dnsname_bad_character_in_label = 217;
  if (this->has_e_dnsname_bad_character_in_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        217, *this->e_dnsname_bad_character_in_label_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_must_not_contain_any_policy = 218;
  if (this->has_e_sub_ca_must_not_contain_any_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        218, *this->e_sub_ca_must_not_contain_any_policy_, false, target);
  }

  // .zsearch.LintResult e_international_dns_name_not_nfkc = 219;
  if (this->has_e_international_dns_name_not_nfkc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        219, *this->e_international_dns_name_not_nfkc_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_aia_marked_critical = 220;
  if (this->has_e_sub_cert_aia_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        220, *this->e_sub_cert_aia_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_ca_is_ca = 221;
  if (this->has_e_ca_is_ca()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        221, *this->e_ca_is_ca_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_street_address_should_not_exist = 222;
  if (this->has_e_sub_cert_street_address_should_not_exist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        222, *this->e_sub_cert_street_address_should_not_exist_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_eku_missing = 223;
  if (this->has_e_sub_ca_eku_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        223, *this->e_sub_ca_eku_missing_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_province_must_not_appear = 224;
  if (this->has_e_sub_cert_province_must_not_appear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        224, *this->e_sub_cert_province_must_not_appear_, false, target);
  }

  // .zsearch.LintResult e_dnsname_underscore_in_sld = 225;
  if (this->has_e_dnsname_underscore_in_sld()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        225, *this->e_dnsname_underscore_in_sld_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_eku_name_constraints = 226;
  if (this->has_e_sub_ca_eku_name_constraints()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        226, *this->e_sub_ca_eku_name_constraints_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_not_is_ca = 227;
  if (this->has_e_sub_cert_not_is_ca()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        227, *this->e_sub_cert_not_is_ca_, false, target);
  }

  // .zsearch.LintResult e_dsa_unique_correct_representation = 228;
  if (this->has_e_dsa_unique_correct_representation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        228, *this->e_dsa_unique_correct_representation_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_province_must_appear = 229;
  if (this->has_e_sub_cert_province_must_appear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        229, *this->e_sub_cert_province_must_appear_, false, target);
  }

  // .zsearch.LintResult e_root_ca_key_usage_must_be_critical = 230;
  if (this->has_e_root_ca_key_usage_must_be_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        230, *this->e_root_ca_key_usage_must_be_critical_, false, target);
  }

  // .zsearch.LintResult e_ext_san_dns_name_too_long = 231;
  if (this->has_e_ext_san_dns_name_too_long()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        231, *this->e_ext_san_dns_name_too_long_, false, target);
  }

  // .zsearch.LintResult e_dsa_params_missing = 232;
  if (this->has_e_dsa_params_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        232, *this->e_dsa_params_missing_, false, target);
  }

  // .zsearch.LintResult e_sub_ca_aia_marked_critical = 233;
  if (this->has_e_sub_ca_aia_marked_critical()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        233, *this->e_sub_ca_aia_marked_critical_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_given_name_surname_contains_correct_policy = 234;
  if (this->has_e_sub_cert_given_name_surname_contains_correct_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        234, *this->e_sub_cert_given_name_surname_contains_correct_policy_, false, target);
  }

  // .zsearch.LintResult e_sub_cert_postal_code_must_not_appear = 235;
  if (this->has_e_sub_cert_postal_code_must_not_appear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        235, *this->e_sub_cert_postal_code_must_not_appear_, false, target);
  }

  // .zsearch.LintResult e_dnsname_not_valid_tld = 236;
  if (this->has_e_dnsname_not_valid_tld()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        236, *this->e_dnsname_not_valid_tld_, false, target);
  }

  // .zsearch.LintResult n_contains_redacted_dnsname = 237;
  if (this->has_n_contains_redacted_dnsname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        237, *this->n_contains_redacted_dnsname_, false, target);
  }

  // .zsearch.LintResult e_dnsname_contains_bare_iana_suffix = 238;
  if (this->has_e_dnsname_contains_bare_iana_suffix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        238, *this->e_dnsname_contains_bare_iana_suffix_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:zsearch.Lints)
  return target;
}

size_t Lints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zsearch.Lints)
  size_t total_size = 0;

  // .zsearch.LintResult e_basic_constraints_not_critical = 1;
  if (this->has_e_basic_constraints_not_critical()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_basic_constraints_not_critical_);
  }

  // .zsearch.LintResult e_ian_bare_wildcard = 2;
  if (this->has_e_ian_bare_wildcard()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ian_bare_wildcard_);
  }

  // .zsearch.LintResult e_ian_wildcard_not_first = 3;
  if (this->has_e_ian_wildcard_not_first()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ian_wildcard_not_first_);
  }

  // .zsearch.LintResult e_san_bare_wildcard = 4;
  if (this->has_e_san_bare_wildcard()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_san_bare_wildcard_);
  }

  // .zsearch.LintResult e_san_wildcard_not_first = 5;
  if (this->has_e_san_wildcard_not_first()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_san_wildcard_not_first_);
  }

  // .zsearch.LintResult e_ca_country_name_invalid = 6;
  if (this->has_e_ca_country_name_invalid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_country_name_invalid_);
  }

  // .zsearch.LintResult e_ca_country_name_missing = 7;
  if (this->has_e_ca_country_name_missing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_country_name_missing_);
  }

  // .zsearch.LintResult e_ca_crl_sign_not_set = 8;
  if (this->has_e_ca_crl_sign_not_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_crl_sign_not_set_);
  }

  // .zsearch.LintResult n_ca_digital_signature_not_set = 9;
  if (this->has_n_ca_digital_signature_not_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->n_ca_digital_signature_not_set_);
  }

  // .zsearch.LintResult e_ca_key_cert_sign_not_set = 10;
  if (this->has_e_ca_key_cert_sign_not_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_key_cert_sign_not_set_);
  }

  // .zsearch.LintResult e_ca_key_usage_missing = 11;
  if (this->has_e_ca_key_usage_missing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_key_usage_missing_);
  }

  // .zsearch.LintResult e_ca_key_usage_not_critical = 12;
  if (this->has_e_ca_key_usage_not_critical()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_key_usage_not_critical_);
  }

  // .zsearch.LintResult e_ca_organization_name_missing = 13;
  if (this->has_e_ca_organization_name_missing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_organization_name_missing_);
  }

  // .zsearch.LintResult e_ca_subject_field_empty = 14;
  if (this->has_e_ca_subject_field_empty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_subject_field_empty_);
  }

  // .zsearch.LintResult e_cert_contains_unique_identifier = 15;
  if (this->has_e_cert_contains_unique_identifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cert_contains_unique_identifier_);
  }

  // .zsearch.LintResult e_cert_extensions_version_not_3 = 16;
  if (this->has_e_cert_extensions_version_not_3()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cert_extensions_version_not_3_);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_locality = 17;
  if (this->has_e_cab_dv_conflicts_with_locality()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cab_dv_conflicts_with_locality_);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_org = 18;
  if (this->has_e_cab_dv_conflicts_with_org()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cab_dv_conflicts_with_org_);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_postal = 19;
  if (this->has_e_cab_dv_conflicts_with_postal()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cab_dv_conflicts_with_postal_);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_province = 20;
  if (this->has_e_cab_dv_conflicts_with_province()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cab_dv_conflicts_with_province_);
  }

  // .zsearch.LintResult e_cab_dv_conflicts_with_street = 21;
  if (this->has_e_cab_dv_conflicts_with_street()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cab_dv_conflicts_with_street_);
  }

  // .zsearch.LintResult e_cert_policy_iv_requires_country = 22;
  if (this->has_e_cert_policy_iv_requires_country()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cert_policy_iv_requires_country_);
  }

  // .zsearch.LintResult e_cert_policy_iv_requires_province_or_locality = 23;
  if (this->has_e_cert_policy_iv_requires_province_or_locality()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cert_policy_iv_requires_province_or_locality_);
  }

  // .zsearch.LintResult e_cert_policy_ov_requires_country = 24;
  if (this->has_e_cert_policy_ov_requires_country()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cert_policy_ov_requires_country_);
  }

  // .zsearch.LintResult e_cert_policy_ov_requires_province_or_locality = 25;
  if (this->has_e_cert_policy_ov_requires_province_or_locality()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cert_policy_ov_requires_province_or_locality_);
  }

  // .zsearch.LintResult e_cab_ov_requires_org = 26;
  if (this->has_e_cab_ov_requires_org()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cab_ov_requires_org_);
  }

  // .zsearch.LintResult e_cab_iv_requires_personal_name = 27;
  if (this->has_e_cab_iv_requires_personal_name()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cab_iv_requires_personal_name_);
  }

  // .zsearch.LintResult e_cert_unique_identifier_version_not_2_or_3 = 28;
  if (this->has_e_cert_unique_identifier_version_not_2_or_3()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_cert_unique_identifier_version_not_2_or_3_);
  }

  // .zsearch.LintResult e_distribution_point_incomplete = 30;
  if (this->has_e_distribution_point_incomplete()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_distribution_point_incomplete_);
  }

  // .zsearch.LintResult w_distribution_point_missing_ldap_or_uri = 31;
  if (this->has_w_distribution_point_missing_ldap_or_uri()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_distribution_point_missing_ldap_or_uri_);
  }

  // .zsearch.LintResult e_dsa_improper_modulus_or_divisor_size = 32;
  if (this->has_e_dsa_improper_modulus_or_divisor_size()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dsa_improper_modulus_or_divisor_size_);
  }

  // .zsearch.LintResult e_dsa_shorter_than_2048_bits = 33;
  if (this->has_e_dsa_shorter_than_2048_bits()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dsa_shorter_than_2048_bits_);
  }

  // .zsearch.LintResult e_ec_improper_curves = 34;
  if (this->has_e_ec_improper_curves()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ec_improper_curves_);
  }

  // .zsearch.LintResult w_eku_critical_improperly = 35;
  if (this->has_w_eku_critical_improperly()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_eku_critical_improperly_);
  }

  // .zsearch.LintResult e_ev_business_category_missing = 36;
  if (this->has_e_ev_business_category_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ev_business_category_missing_);
  }

  // .zsearch.LintResult e_ev_country_name_missing = 37;
  if (this->has_e_ev_country_name_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ev_country_name_missing_);
  }

  // .zsearch.LintResult e_ev_locality_name_missing = 38;
  if (this->has_e_ev_locality_name_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ev_locality_name_missing_);
  }

  // .zsearch.LintResult e_ev_organization_name_missing = 39;
  if (this->has_e_ev_organization_name_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ev_organization_name_missing_);
  }

  // .zsearch.LintResult e_ev_serial_number_missing = 40;
  if (this->has_e_ev_serial_number_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ev_serial_number_missing_);
  }

  // .zsearch.LintResult e_ev_valid_time_too_long = 41;
  if (this->has_e_ev_valid_time_too_long()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ev_valid_time_too_long_);
  }

  // .zsearch.LintResult w_ext_aia_access_location_missing = 42;
  if (this->has_w_ext_aia_access_location_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_aia_access_location_missing_);
  }

  // .zsearch.LintResult e_ext_aia_marked_critical = 43;
  if (this->has_e_ext_aia_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_aia_marked_critical_);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_critical = 44;
  if (this->has_e_ext_authority_key_identifier_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_authority_key_identifier_critical_);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_missing = 45;
  if (this->has_e_ext_authority_key_identifier_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_authority_key_identifier_missing_);
  }

  // .zsearch.LintResult e_ext_authority_key_identifier_no_key_identifier = 46;
  if (this->has_e_ext_authority_key_identifier_no_key_identifier()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_authority_key_identifier_no_key_identifier_);
  }

  // .zsearch.LintResult w_ext_cert_policy_contains_noticeref = 47;
  if (this->has_w_ext_cert_policy_contains_noticeref()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_cert_policy_contains_noticeref_);
  }

  // .zsearch.LintResult e_ext_cert_policy_disallowed_any_policy_qualifier = 48;
  if (this->has_e_ext_cert_policy_disallowed_any_policy_qualifier()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_cert_policy_disallowed_any_policy_qualifier_);
  }

  // .zsearch.LintResult e_ext_cert_policy_duplicate = 49;
  if (this->has_e_ext_cert_policy_duplicate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_cert_policy_duplicate_);
  }

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_ia5_string = 50;
  if (this->has_e_ext_cert_policy_explicit_text_ia5_string()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_cert_policy_explicit_text_ia5_string_);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_includes_control = 51;
  if (this->has_w_ext_cert_policy_explicit_text_includes_control()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_cert_policy_explicit_text_includes_control_);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_nfc = 52;
  if (this->has_w_ext_cert_policy_explicit_text_not_nfc()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_cert_policy_explicit_text_not_nfc_);
  }

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_utf8 = 53;
  if (this->has_w_ext_cert_policy_explicit_text_not_utf8()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_cert_policy_explicit_text_not_utf8_);
  }

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_too_long = 54;
  if (this->has_e_ext_cert_policy_explicit_text_too_long()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_cert_policy_explicit_text_too_long_);
  }

  // .zsearch.LintResult w_ext_crl_distribution_marked_critical = 55;
  if (this->has_w_ext_crl_distribution_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_crl_distribution_marked_critical_);
  }

  // .zsearch.LintResult e_ext_duplicate_extension = 56;
  if (this->has_e_ext_duplicate_extension()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_duplicate_extension_);
  }

  // .zsearch.LintResult e_ext_freshest_crl_marked_critical = 57;
  if (this->has_e_ext_freshest_crl_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_freshest_crl_marked_critical_);
  }

  // .zsearch.LintResult w_ext_ian_critical = 58;
  if (this->has_w_ext_ian_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_ian_critical_);
  }

  // .zsearch.LintResult e_ext_ian_dns_not_ia5_string = 59;
  if (this->has_e_ext_ian_dns_not_ia5_string()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_dns_not_ia5_string_);
  }

  // .zsearch.LintResult e_ext_ian_empty_name = 60;
  if (this->has_e_ext_ian_empty_name()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_empty_name_);
  }

  // .zsearch.LintResult e_ext_ian_no_entries = 61;
  if (this->has_e_ext_ian_no_entries()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_no_entries_);
  }

  // .zsearch.LintResult e_ext_ian_rfc822_format_invalid = 62;
  if (this->has_e_ext_ian_rfc822_format_invalid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_rfc822_format_invalid_);
  }

  // .zsearch.LintResult e_ext_ian_space_dns_name = 63;
  if (this->has_e_ext_ian_space_dns_name()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_space_dns_name_);
  }

  // .zsearch.LintResult e_ext_ian_uri_format_invalid = 64;
  if (this->has_e_ext_ian_uri_format_invalid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_uri_format_invalid_);
  }

  // .zsearch.LintResult e_ext_ian_uri_host_not_fqdn_or_ip = 65;
  if (this->has_e_ext_ian_uri_host_not_fqdn_or_ip()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_uri_host_not_fqdn_or_ip_);
  }

  // .zsearch.LintResult e_ext_ian_uri_not_ia5 = 66;
  if (this->has_e_ext_ian_uri_not_ia5()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_uri_not_ia5_);
  }

  // .zsearch.LintResult e_ext_ian_uri_relative = 67;
  if (this->has_e_ext_ian_uri_relative()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_ian_uri_relative_);
  }

  // .zsearch.LintResult e_ext_key_usage_cert_sign_without_ca = 68;
  if (this->has_e_ext_key_usage_cert_sign_without_ca()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_key_usage_cert_sign_without_ca_);
  }

  // .zsearch.LintResult w_ext_key_usage_not_critical = 69;
  if (this->has_w_ext_key_usage_not_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_key_usage_not_critical_);
  }

  // .zsearch.LintResult e_ext_key_usage_without_bits = 70;
  if (this->has_e_ext_key_usage_without_bits()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_key_usage_without_bits_);
  }

  // .zsearch.LintResult e_ext_name_constraints_not_critical = 71;
  if (this->has_e_ext_name_constraints_not_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_name_constraints_not_critical_);
  }

  // .zsearch.LintResult e_ext_name_constraints_not_in_ca = 72;
  if (this->has_e_ext_name_constraints_not_in_ca()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_name_constraints_not_in_ca_);
  }

  // .zsearch.LintResult e_ext_policy_constraints_empty = 73;
  if (this->has_e_ext_policy_constraints_empty()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_policy_constraints_empty_);
  }

  // .zsearch.LintResult e_ext_policy_constraints_not_critical = 74;
  if (this->has_e_ext_policy_constraints_not_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_policy_constraints_not_critical_);
  }

  // .zsearch.LintResult e_ext_policy_map_any_policy = 75;
  if (this->has_e_ext_policy_map_any_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_policy_map_any_policy_);
  }

  // .zsearch.LintResult w_ext_policy_map_not_critical = 76;
  if (this->has_w_ext_policy_map_not_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_policy_map_not_critical_);
  }

  // .zsearch.LintResult w_ext_policy_map_not_in_cert_policy = 77;
  if (this->has_w_ext_policy_map_not_in_cert_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_policy_map_not_in_cert_policy_);
  }

  // .zsearch.LintResult e_ext_san_contains_reserved_ip = 78;
  if (this->has_e_ext_san_contains_reserved_ip()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_contains_reserved_ip_);
  }

  // .zsearch.LintResult w_ext_san_critical_with_subject_dn = 79;
  if (this->has_w_ext_san_critical_with_subject_dn()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_san_critical_with_subject_dn_);
  }

  // .zsearch.LintResult e_ext_san_directory_name_present = 80;
  if (this->has_e_ext_san_directory_name_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_directory_name_present_);
  }

  // .zsearch.LintResult e_ext_san_dns_not_ia5_string = 81;
  if (this->has_e_ext_san_dns_not_ia5_string()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_dns_not_ia5_string_);
  }

  // .zsearch.LintResult e_ext_san_edi_party_name_present = 84;
  if (this->has_e_ext_san_edi_party_name_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_edi_party_name_present_);
  }

  // .zsearch.LintResult e_ext_san_empty_name = 85;
  if (this->has_e_ext_san_empty_name()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_empty_name_);
  }

  // .zsearch.LintResult e_ext_san_missing = 86;
  if (this->has_e_ext_san_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_missing_);
  }

  // .zsearch.LintResult e_ext_san_no_entries = 87;
  if (this->has_e_ext_san_no_entries()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_no_entries_);
  }

  // .zsearch.LintResult e_ext_san_not_critical_without_subject = 88;
  if (this->has_e_ext_san_not_critical_without_subject()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_not_critical_without_subject_);
  }

  // .zsearch.LintResult e_ext_san_other_name_present = 89;
  if (this->has_e_ext_san_other_name_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_other_name_present_);
  }

  // .zsearch.LintResult e_ext_san_registered_id_present = 90;
  if (this->has_e_ext_san_registered_id_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_registered_id_present_);
  }

  // .zsearch.LintResult e_ext_san_rfc822_format_invalid = 91;
  if (this->has_e_ext_san_rfc822_format_invalid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_rfc822_format_invalid_);
  }

  // .zsearch.LintResult e_ext_san_rfc822_name_present = 92;
  if (this->has_e_ext_san_rfc822_name_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_rfc822_name_present_);
  }

  // .zsearch.LintResult e_ext_san_space_dns_name = 93;
  if (this->has_e_ext_san_space_dns_name()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_space_dns_name_);
  }

  // .zsearch.LintResult e_ext_san_uniform_resource_identifier_present = 94;
  if (this->has_e_ext_san_uniform_resource_identifier_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_uniform_resource_identifier_present_);
  }

  // .zsearch.LintResult e_ext_san_uri_format_invalid = 95;
  if (this->has_e_ext_san_uri_format_invalid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_uri_format_invalid_);
  }

  // .zsearch.LintResult e_ext_san_uri_host_not_fqdn_or_ip = 96;
  if (this->has_e_ext_san_uri_host_not_fqdn_or_ip()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_uri_host_not_fqdn_or_ip_);
  }

  // .zsearch.LintResult e_ext_san_uri_not_ia5 = 97;
  if (this->has_e_ext_san_uri_not_ia5()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_uri_not_ia5_);
  }

  // .zsearch.LintResult e_ext_san_uri_relative = 98;
  if (this->has_e_ext_san_uri_relative()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_uri_relative_);
  }

  // .zsearch.LintResult e_ext_subject_directory_attr_critical = 99;
  if (this->has_e_ext_subject_directory_attr_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_subject_directory_attr_critical_);
  }

  // .zsearch.LintResult e_ext_subject_key_identifier_critical = 100;
  if (this->has_e_ext_subject_key_identifier_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_subject_key_identifier_critical_);
  }

  // .zsearch.LintResult e_ext_subject_key_identifier_missing_ca = 101;
  if (this->has_e_ext_subject_key_identifier_missing_ca()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_subject_key_identifier_missing_ca_);
  }

  // .zsearch.LintResult w_ext_subject_key_identifier_missing_sub_cert = 102;
  if (this->has_w_ext_subject_key_identifier_missing_sub_cert()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ext_subject_key_identifier_missing_sub_cert_);
  }

  // .zsearch.LintResult e_generalized_time_does_not_include_seconds = 103;
  if (this->has_e_generalized_time_does_not_include_seconds()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_generalized_time_does_not_include_seconds_);
  }

  // .zsearch.LintResult e_generalized_time_includes_fraction_seconds = 104;
  if (this->has_e_generalized_time_includes_fraction_seconds()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_generalized_time_includes_fraction_seconds_);
  }

  // .zsearch.LintResult e_generalized_time_not_in_zulu = 105;
  if (this->has_e_generalized_time_not_in_zulu()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_generalized_time_not_in_zulu_);
  }

  // .zsearch.LintResult e_ian_dns_name_includes_null_char = 107;
  if (this->has_e_ian_dns_name_includes_null_char()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ian_dns_name_includes_null_char_);
  }

  // .zsearch.LintResult e_ian_dns_name_starts_with_period = 108;
  if (this->has_e_ian_dns_name_starts_with_period()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ian_dns_name_starts_with_period_);
  }

  // .zsearch.LintResult w_ian_iana_pub_suffix_empty = 109;
  if (this->has_w_ian_iana_pub_suffix_empty()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_ian_iana_pub_suffix_empty_);
  }

  // .zsearch.LintResult e_inhibit_any_policy_not_critical = 110;
  if (this->has_e_inhibit_any_policy_not_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_inhibit_any_policy_not_critical_);
  }

  // .zsearch.LintResult e_invalid_certificate_version = 111;
  if (this->has_e_invalid_certificate_version()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_invalid_certificate_version_);
  }

  // .zsearch.LintResult e_issuer_field_empty = 112;
  if (this->has_e_issuer_field_empty()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_issuer_field_empty_);
  }

  // .zsearch.LintResult e_name_constraint_empty = 113;
  if (this->has_e_name_constraint_empty()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_name_constraint_empty_);
  }

  // .zsearch.LintResult e_name_constraint_maximum_not_absent = 114;
  if (this->has_e_name_constraint_maximum_not_absent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_name_constraint_maximum_not_absent_);
  }

  // .zsearch.LintResult e_name_constraint_minimum_non_zero = 115;
  if (this->has_e_name_constraint_minimum_non_zero()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_name_constraint_minimum_non_zero_);
  }

  // .zsearch.LintResult w_name_constraint_on_edi_party_name = 116;
  if (this->has_w_name_constraint_on_edi_party_name()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_name_constraint_on_edi_party_name_);
  }

  // .zsearch.LintResult w_name_constraint_on_registered_id = 117;
  if (this->has_w_name_constraint_on_registered_id()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_name_constraint_on_registered_id_);
  }

  // .zsearch.LintResult w_name_constraint_on_x400 = 118;
  if (this->has_w_name_constraint_on_x400()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_name_constraint_on_x400_);
  }

  // .zsearch.LintResult e_old_root_ca_rsa_mod_less_than_2048_bits = 119;
  if (this->has_e_old_root_ca_rsa_mod_less_than_2048_bits()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_old_root_ca_rsa_mod_less_than_2048_bits_);
  }

  // .zsearch.LintResult e_old_sub_ca_rsa_mod_less_than_1024_bits = 120;
  if (this->has_e_old_sub_ca_rsa_mod_less_than_1024_bits()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_old_sub_ca_rsa_mod_less_than_1024_bits_);
  }

  // .zsearch.LintResult e_old_sub_cert_rsa_mod_less_than_1024_bits = 121;
  if (this->has_e_old_sub_cert_rsa_mod_less_than_1024_bits()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_old_sub_cert_rsa_mod_less_than_1024_bits_);
  }

  // .zsearch.LintResult e_path_len_constraint_improperly_included = 122;
  if (this->has_e_path_len_constraint_improperly_included()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_path_len_constraint_improperly_included_);
  }

  // .zsearch.LintResult e_path_len_constraint_zero_or_less = 123;
  if (this->has_e_path_len_constraint_zero_or_less()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_path_len_constraint_zero_or_less_);
  }

  // .zsearch.LintResult e_public_key_type_not_allowed = 124;
  if (this->has_e_public_key_type_not_allowed()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_public_key_type_not_allowed_);
  }

  // .zsearch.LintResult w_root_ca_basic_constraints_path_len_constraint_field_present = 125;
  if (this->has_w_root_ca_basic_constraints_path_len_constraint_field_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_root_ca_basic_constraints_path_len_constraint_field_present_);
  }

  // .zsearch.LintResult w_root_ca_contains_cert_policy = 126;
  if (this->has_w_root_ca_contains_cert_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_root_ca_contains_cert_policy_);
  }

  // .zsearch.LintResult e_root_ca_extended_key_usage_present = 127;
  if (this->has_e_root_ca_extended_key_usage_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_root_ca_extended_key_usage_present_);
  }

  // .zsearch.LintResult e_rsa_exp_negative = 128;
  if (this->has_e_rsa_exp_negative()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_rsa_exp_negative_);
  }

  // .zsearch.LintResult w_rsa_mod_factors_smaller_than_752 = 129;
  if (this->has_w_rsa_mod_factors_smaller_than_752()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_rsa_mod_factors_smaller_than_752_);
  }

  // .zsearch.LintResult e_rsa_mod_less_than_2048_bits = 130;
  if (this->has_e_rsa_mod_less_than_2048_bits()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_rsa_mod_less_than_2048_bits_);
  }

  // .zsearch.LintResult w_rsa_mod_not_odd = 131;
  if (this->has_w_rsa_mod_not_odd()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_rsa_mod_not_odd_);
  }

  // .zsearch.LintResult w_rsa_public_exponent_not_in_range = 132;
  if (this->has_w_rsa_public_exponent_not_in_range()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_rsa_public_exponent_not_in_range_);
  }

  // .zsearch.LintResult e_rsa_public_exponent_not_odd = 133;
  if (this->has_e_rsa_public_exponent_not_odd()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_rsa_public_exponent_not_odd_);
  }

  // .zsearch.LintResult e_rsa_public_exponent_too_small = 134;
  if (this->has_e_rsa_public_exponent_too_small()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_rsa_public_exponent_too_small_);
  }

  // .zsearch.LintResult e_san_dns_name_includes_null_char = 135;
  if (this->has_e_san_dns_name_includes_null_char()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_san_dns_name_includes_null_char_);
  }

  // .zsearch.LintResult e_san_dns_name_starts_with_period = 136;
  if (this->has_e_san_dns_name_starts_with_period()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_san_dns_name_starts_with_period_);
  }

  // .zsearch.LintResult w_san_iana_pub_suffix_empty = 137;
  if (this->has_w_san_iana_pub_suffix_empty()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_san_iana_pub_suffix_empty_);
  }

  // .zsearch.LintResult e_serial_number_longer_than_20_octets = 138;
  if (this->has_e_serial_number_longer_than_20_octets()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_serial_number_longer_than_20_octets_);
  }

  // .zsearch.LintResult e_serial_number_not_positive = 139;
  if (this->has_e_serial_number_not_positive()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_serial_number_not_positive_);
  }

  // .zsearch.LintResult w_sub_ca_aia_does_not_contain_issuing_ca_url = 140;
  if (this->has_w_sub_ca_aia_does_not_contain_issuing_ca_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_ca_aia_does_not_contain_issuing_ca_url_);
  }

  // .zsearch.LintResult e_sub_ca_aia_does_not_contain_ocsp_url = 141;
  if (this->has_e_sub_ca_aia_does_not_contain_ocsp_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_aia_does_not_contain_ocsp_url_);
  }

  // .zsearch.LintResult e_sub_ca_aia_missing = 142;
  if (this->has_e_sub_ca_aia_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_aia_missing_);
  }

  // .zsearch.LintResult w_sub_ca_certificate_policies_marked_critical = 143;
  if (this->has_w_sub_ca_certificate_policies_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_ca_certificate_policies_marked_critical_);
  }

  // .zsearch.LintResult e_sub_ca_certificate_policies_missing = 144;
  if (this->has_e_sub_ca_certificate_policies_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_certificate_policies_missing_);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_does_not_contain_url = 145;
  if (this->has_e_sub_ca_crl_distribution_points_does_not_contain_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_crl_distribution_points_does_not_contain_url_);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_marked_critical = 146;
  if (this->has_e_sub_ca_crl_distribution_points_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_crl_distribution_points_marked_critical_);
  }

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_missing = 147;
  if (this->has_e_sub_ca_crl_distribution_points_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_crl_distribution_points_missing_);
  }

  // .zsearch.LintResult w_sub_ca_eku_critical = 148;
  if (this->has_w_sub_ca_eku_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_ca_eku_critical_);
  }

  // .zsearch.LintResult w_sub_ca_name_constraints_not_critical = 149;
  if (this->has_w_sub_ca_name_constraints_not_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_ca_name_constraints_not_critical_);
  }

  // .zsearch.LintResult e_sub_cert_aia_does_not_contain_ocsp_url = 153;
  if (this->has_e_sub_cert_aia_does_not_contain_ocsp_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_aia_does_not_contain_ocsp_url_);
  }

  // .zsearch.LintResult e_sub_cert_aia_missing = 154;
  if (this->has_e_sub_cert_aia_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_aia_missing_);
  }

  // .zsearch.LintResult e_sub_cert_cert_policy_empty = 155;
  if (this->has_e_sub_cert_cert_policy_empty()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_cert_policy_empty_);
  }

  // .zsearch.LintResult w_sub_cert_certificate_policies_marked_critical = 156;
  if (this->has_w_sub_cert_certificate_policies_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_cert_certificate_policies_marked_critical_);
  }

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_does_not_contain_url = 157;
  if (this->has_e_sub_cert_crl_distribution_points_does_not_contain_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_crl_distribution_points_does_not_contain_url_);
  }

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_marked_critical = 158;
  if (this->has_e_sub_cert_crl_distribution_points_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_crl_distribution_points_marked_critical_);
  }

  // .zsearch.LintResult w_sub_cert_eku_extra_values = 159;
  if (this->has_w_sub_cert_eku_extra_values()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_cert_eku_extra_values_);
  }

  // .zsearch.LintResult e_sub_cert_eku_missing = 160;
  if (this->has_e_sub_cert_eku_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_eku_missing_);
  }

  // .zsearch.LintResult e_sub_cert_eku_server_auth_client_auth_missing = 161;
  if (this->has_e_sub_cert_eku_server_auth_client_auth_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_eku_server_auth_client_auth_missing_);
  }

  // .zsearch.LintResult e_sub_cert_key_usage_cert_sign_bit_set = 162;
  if (this->has_e_sub_cert_key_usage_cert_sign_bit_set()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_key_usage_cert_sign_bit_set_);
  }

  // .zsearch.LintResult e_sub_cert_or_sub_ca_using_sha1 = 163;
  if (this->has_e_sub_cert_or_sub_ca_using_sha1()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_or_sub_ca_using_sha1_);
  }

  // .zsearch.LintResult w_sub_cert_sha1_expiration_too_long = 164;
  if (this->has_w_sub_cert_sha1_expiration_too_long()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_cert_sha1_expiration_too_long_);
  }

  // .zsearch.LintResult n_subject_common_name_included = 166;
  if (this->has_n_subject_common_name_included()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->n_subject_common_name_included_);
  }

  // .zsearch.LintResult e_subject_common_name_not_from_san = 167;
  if (this->has_e_subject_common_name_not_from_san()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_common_name_not_from_san_);
  }

  // .zsearch.LintResult e_subject_contains_noninformational_value = 168;
  if (this->has_e_subject_contains_noninformational_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_contains_noninformational_value_);
  }

  // .zsearch.LintResult e_subject_contains_reserved_ip = 169;
  if (this->has_e_subject_contains_reserved_ip()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_contains_reserved_ip_);
  }

  // .zsearch.LintResult e_subject_country_not_iso = 170;
  if (this->has_e_subject_country_not_iso()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_country_not_iso_);
  }

  // .zsearch.LintResult e_subject_empty_without_san = 171;
  if (this->has_e_subject_empty_without_san()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_empty_without_san_);
  }

  // .zsearch.LintResult e_subject_info_access_marked_critical = 172;
  if (this->has_e_subject_info_access_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_info_access_marked_critical_);
  }

  // .zsearch.LintResult e_subject_not_dn = 174;
  if (this->has_e_subject_not_dn()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_not_dn_);
  }

  // .zsearch.LintResult e_utc_time_does_not_include_seconds = 180;
  if (this->has_e_utc_time_does_not_include_seconds()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_utc_time_does_not_include_seconds_);
  }

  // .zsearch.LintResult e_utc_time_not_in_zulu = 181;
  if (this->has_e_utc_time_not_in_zulu()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_utc_time_not_in_zulu_);
  }

  // .zsearch.LintResult e_validity_time_not_positive = 182;
  if (this->has_e_validity_time_not_positive()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_validity_time_not_positive_);
  }

  // .zsearch.LintResult e_wrong_time_format_pre2050 = 183;
  if (this->has_e_wrong_time_format_pre2050()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_wrong_time_format_pre2050_);
  }

  // .zsearch.LintResult e_rsa_no_public_key = 184;
  if (this->has_e_rsa_no_public_key()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_rsa_no_public_key_);
  }

  // .zsearch.LintResult e_sub_cert_certificate_policies_missing = 185;
  if (this->has_e_sub_cert_certificate_policies_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_certificate_policies_missing_);
  }

  // .zsearch.LintResult e_sub_cert_key_usage_crl_sign_bit_set = 186;
  if (this->has_e_sub_cert_key_usage_crl_sign_bit_set()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_key_usage_crl_sign_bit_set_);
  }

  // .zsearch.LintResult e_subject_common_name_max_length = 187;
  if (this->has_e_subject_common_name_max_length()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_common_name_max_length_);
  }

  // .zsearch.LintResult e_subject_locality_name_max_length = 188;
  if (this->has_e_subject_locality_name_max_length()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_locality_name_max_length_);
  }

  // .zsearch.LintResult e_subject_organization_name_max_length = 189;
  if (this->has_e_subject_organization_name_max_length()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_organization_name_max_length_);
  }

  // .zsearch.LintResult e_subject_organizational_unit_name_max_length = 190;
  if (this->has_e_subject_organizational_unit_name_max_length()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_organizational_unit_name_max_length_);
  }

  // .zsearch.LintResult e_subject_state_name_max_length = 191;
  if (this->has_e_subject_state_name_max_length()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_subject_state_name_max_length_);
  }

  // .zsearch.LintResult w_multiple_subject_rdn = 192;
  if (this->has_w_multiple_subject_rdn()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_multiple_subject_rdn_);
  }

  // .zsearch.LintResult w_multiple_issuer_rdn = 193;
  if (this->has_w_multiple_issuer_rdn()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_multiple_issuer_rdn_);
  }

  // .zsearch.LintResult w_issuer_dn_trailing_whitespace = 194;
  if (this->has_w_issuer_dn_trailing_whitespace()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_issuer_dn_trailing_whitespace_);
  }

  // .zsearch.LintResult w_issuer_dn_leading_whitespace = 195;
  if (this->has_w_issuer_dn_leading_whitespace()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_issuer_dn_leading_whitespace_);
  }

  // .zsearch.LintResult w_subject_dn_trailing_whitespace = 196;
  if (this->has_w_subject_dn_trailing_whitespace()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_subject_dn_trailing_whitespace_);
  }

  // .zsearch.LintResult w_subject_dn_leading_whitespace = 197;
  if (this->has_w_subject_dn_leading_whitespace()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_subject_dn_leading_whitespace_);
  }

  // .zsearch.LintResult e_sub_cert_locality_name_must_appear = 198;
  if (this->has_e_sub_cert_locality_name_must_appear()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_locality_name_must_appear_);
  }

  // .zsearch.LintResult e_signature_algorithm_not_supported = 199;
  if (this->has_e_signature_algorithm_not_supported()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_signature_algorithm_not_supported_);
  }

  // .zsearch.LintResult e_dnsname_hyphen_in_sld = 200;
  if (this->has_e_dnsname_hyphen_in_sld()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_hyphen_in_sld_);
  }

  // .zsearch.LintResult e_dsa_correct_order_in_subgroup = 201;
  if (this->has_e_dsa_correct_order_in_subgroup()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dsa_correct_order_in_subgroup_);
  }

  // .zsearch.LintResult n_sub_ca_eku_not_technically_constrained = 202;
  if (this->has_n_sub_ca_eku_not_technically_constrained()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->n_sub_ca_eku_not_technically_constrained_);
  }

  // .zsearch.LintResult e_dnsname_empty_label = 203;
  if (this->has_e_dnsname_empty_label()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_empty_label_);
  }

  // .zsearch.LintResult e_ca_common_name_missing = 204;
  if (this->has_e_ca_common_name_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_common_name_missing_);
  }

  // .zsearch.LintResult e_dnsname_wildcard_only_in_left_label = 205;
  if (this->has_e_dnsname_wildcard_only_in_left_label()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_wildcard_only_in_left_label_);
  }

  // .zsearch.LintResult e_sub_cert_valid_time_too_long = 206;
  if (this->has_e_sub_cert_valid_time_too_long()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_valid_time_too_long_);
  }

  // .zsearch.LintResult e_dnsname_left_label_wildcard_correct = 207;
  if (this->has_e_dnsname_left_label_wildcard_correct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_left_label_wildcard_correct_);
  }

  // .zsearch.LintResult w_serial_number_low_entropy = 208;
  if (this->has_w_serial_number_low_entropy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_serial_number_low_entropy_);
  }

  // .zsearch.LintResult e_dnsname_label_too_long = 209;
  if (this->has_e_dnsname_label_too_long()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_label_too_long_);
  }

  // .zsearch.LintResult e_root_ca_key_usage_present = 210;
  if (this->has_e_root_ca_key_usage_present()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_root_ca_key_usage_present_);
  }

  // .zsearch.LintResult w_dnsname_wildcard_left_of_public_suffix = 211;
  if (this->has_w_dnsname_wildcard_left_of_public_suffix()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_dnsname_wildcard_left_of_public_suffix_);
  }

  // .zsearch.LintResult e_international_dns_name_not_unicode = 212;
  if (this->has_e_international_dns_name_not_unicode()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_international_dns_name_not_unicode_);
  }

  // .zsearch.LintResult w_dnsname_underscore_in_trd = 213;
  if (this->has_w_dnsname_underscore_in_trd()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_dnsname_underscore_in_trd_);
  }

  // .zsearch.LintResult w_sub_cert_aia_does_not_contain_issuing_ca_url = 214;
  if (this->has_w_sub_cert_aia_does_not_contain_issuing_ca_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->w_sub_cert_aia_does_not_contain_issuing_ca_url_);
  }

  // .zsearch.LintResult e_sub_cert_locality_name_must_not_appear = 215;
  if (this->has_e_sub_cert_locality_name_must_not_appear()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_locality_name_must_not_appear_);
  }

  // .zsearch.LintResult e_sub_cert_country_name_must_appear = 216;
  if (this->has_e_sub_cert_country_name_must_appear()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_country_name_must_appear_);
  }

  // .zsearch.LintResult e_dnsname_bad_character_in_label = 217;
  if (this->has_e_dnsname_bad_character_in_label()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_bad_character_in_label_);
  }

  // .zsearch.LintResult e_sub_ca_must_not_contain_any_policy = 218;
  if (this->has_e_sub_ca_must_not_contain_any_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_must_not_contain_any_policy_);
  }

  // .zsearch.LintResult e_international_dns_name_not_nfkc = 219;
  if (this->has_e_international_dns_name_not_nfkc()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_international_dns_name_not_nfkc_);
  }

  // .zsearch.LintResult e_sub_cert_aia_marked_critical = 220;
  if (this->has_e_sub_cert_aia_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_aia_marked_critical_);
  }

  // .zsearch.LintResult e_ca_is_ca = 221;
  if (this->has_e_ca_is_ca()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ca_is_ca_);
  }

  // .zsearch.LintResult e_sub_cert_street_address_should_not_exist = 222;
  if (this->has_e_sub_cert_street_address_should_not_exist()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_street_address_should_not_exist_);
  }

  // .zsearch.LintResult e_sub_ca_eku_missing = 223;
  if (this->has_e_sub_ca_eku_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_eku_missing_);
  }

  // .zsearch.LintResult e_sub_cert_province_must_not_appear = 224;
  if (this->has_e_sub_cert_province_must_not_appear()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_province_must_not_appear_);
  }

  // .zsearch.LintResult e_dnsname_underscore_in_sld = 225;
  if (this->has_e_dnsname_underscore_in_sld()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_underscore_in_sld_);
  }

  // .zsearch.LintResult e_sub_ca_eku_name_constraints = 226;
  if (this->has_e_sub_ca_eku_name_constraints()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_eku_name_constraints_);
  }

  // .zsearch.LintResult e_sub_cert_not_is_ca = 227;
  if (this->has_e_sub_cert_not_is_ca()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_not_is_ca_);
  }

  // .zsearch.LintResult e_dsa_unique_correct_representation = 228;
  if (this->has_e_dsa_unique_correct_representation()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dsa_unique_correct_representation_);
  }

  // .zsearch.LintResult e_sub_cert_province_must_appear = 229;
  if (this->has_e_sub_cert_province_must_appear()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_province_must_appear_);
  }

  // .zsearch.LintResult e_root_ca_key_usage_must_be_critical = 230;
  if (this->has_e_root_ca_key_usage_must_be_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_root_ca_key_usage_must_be_critical_);
  }

  // .zsearch.LintResult e_ext_san_dns_name_too_long = 231;
  if (this->has_e_ext_san_dns_name_too_long()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_ext_san_dns_name_too_long_);
  }

  // .zsearch.LintResult e_dsa_params_missing = 232;
  if (this->has_e_dsa_params_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dsa_params_missing_);
  }

  // .zsearch.LintResult e_sub_ca_aia_marked_critical = 233;
  if (this->has_e_sub_ca_aia_marked_critical()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_ca_aia_marked_critical_);
  }

  // .zsearch.LintResult e_sub_cert_given_name_surname_contains_correct_policy = 234;
  if (this->has_e_sub_cert_given_name_surname_contains_correct_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_given_name_surname_contains_correct_policy_);
  }

  // .zsearch.LintResult e_sub_cert_postal_code_must_not_appear = 235;
  if (this->has_e_sub_cert_postal_code_must_not_appear()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_sub_cert_postal_code_must_not_appear_);
  }

  // .zsearch.LintResult e_dnsname_not_valid_tld = 236;
  if (this->has_e_dnsname_not_valid_tld()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_not_valid_tld_);
  }

  // .zsearch.LintResult n_contains_redacted_dnsname = 237;
  if (this->has_n_contains_redacted_dnsname()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->n_contains_redacted_dnsname_);
  }

  // .zsearch.LintResult e_dnsname_contains_bare_iana_suffix = 238;
  if (this->has_e_dnsname_contains_bare_iana_suffix()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->e_dnsname_contains_bare_iana_suffix_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zsearch.Lints)
  GOOGLE_DCHECK_NE(&from, this);
  const Lints* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zsearch.Lints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zsearch.Lints)
    MergeFrom(*source);
  }
}

void Lints::MergeFrom(const Lints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zsearch.Lints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_e_basic_constraints_not_critical()) {
    mutable_e_basic_constraints_not_critical()->::zsearch::LintResult::MergeFrom(from.e_basic_constraints_not_critical());
  }
  if (from.has_e_ian_bare_wildcard()) {
    mutable_e_ian_bare_wildcard()->::zsearch::LintResult::MergeFrom(from.e_ian_bare_wildcard());
  }
  if (from.has_e_ian_wildcard_not_first()) {
    mutable_e_ian_wildcard_not_first()->::zsearch::LintResult::MergeFrom(from.e_ian_wildcard_not_first());
  }
  if (from.has_e_san_bare_wildcard()) {
    mutable_e_san_bare_wildcard()->::zsearch::LintResult::MergeFrom(from.e_san_bare_wildcard());
  }
  if (from.has_e_san_wildcard_not_first()) {
    mutable_e_san_wildcard_not_first()->::zsearch::LintResult::MergeFrom(from.e_san_wildcard_not_first());
  }
  if (from.has_e_ca_country_name_invalid()) {
    mutable_e_ca_country_name_invalid()->::zsearch::LintResult::MergeFrom(from.e_ca_country_name_invalid());
  }
  if (from.has_e_ca_country_name_missing()) {
    mutable_e_ca_country_name_missing()->::zsearch::LintResult::MergeFrom(from.e_ca_country_name_missing());
  }
  if (from.has_e_ca_crl_sign_not_set()) {
    mutable_e_ca_crl_sign_not_set()->::zsearch::LintResult::MergeFrom(from.e_ca_crl_sign_not_set());
  }
  if (from.has_n_ca_digital_signature_not_set()) {
    mutable_n_ca_digital_signature_not_set()->::zsearch::LintResult::MergeFrom(from.n_ca_digital_signature_not_set());
  }
  if (from.has_e_ca_key_cert_sign_not_set()) {
    mutable_e_ca_key_cert_sign_not_set()->::zsearch::LintResult::MergeFrom(from.e_ca_key_cert_sign_not_set());
  }
  if (from.has_e_ca_key_usage_missing()) {
    mutable_e_ca_key_usage_missing()->::zsearch::LintResult::MergeFrom(from.e_ca_key_usage_missing());
  }
  if (from.has_e_ca_key_usage_not_critical()) {
    mutable_e_ca_key_usage_not_critical()->::zsearch::LintResult::MergeFrom(from.e_ca_key_usage_not_critical());
  }
  if (from.has_e_ca_organization_name_missing()) {
    mutable_e_ca_organization_name_missing()->::zsearch::LintResult::MergeFrom(from.e_ca_organization_name_missing());
  }
  if (from.has_e_ca_subject_field_empty()) {
    mutable_e_ca_subject_field_empty()->::zsearch::LintResult::MergeFrom(from.e_ca_subject_field_empty());
  }
  if (from.has_e_cert_contains_unique_identifier()) {
    mutable_e_cert_contains_unique_identifier()->::zsearch::LintResult::MergeFrom(from.e_cert_contains_unique_identifier());
  }
  if (from.has_e_cert_extensions_version_not_3()) {
    mutable_e_cert_extensions_version_not_3()->::zsearch::LintResult::MergeFrom(from.e_cert_extensions_version_not_3());
  }
  if (from.has_e_cab_dv_conflicts_with_locality()) {
    mutable_e_cab_dv_conflicts_with_locality()->::zsearch::LintResult::MergeFrom(from.e_cab_dv_conflicts_with_locality());
  }
  if (from.has_e_cab_dv_conflicts_with_org()) {
    mutable_e_cab_dv_conflicts_with_org()->::zsearch::LintResult::MergeFrom(from.e_cab_dv_conflicts_with_org());
  }
  if (from.has_e_cab_dv_conflicts_with_postal()) {
    mutable_e_cab_dv_conflicts_with_postal()->::zsearch::LintResult::MergeFrom(from.e_cab_dv_conflicts_with_postal());
  }
  if (from.has_e_cab_dv_conflicts_with_province()) {
    mutable_e_cab_dv_conflicts_with_province()->::zsearch::LintResult::MergeFrom(from.e_cab_dv_conflicts_with_province());
  }
  if (from.has_e_cab_dv_conflicts_with_street()) {
    mutable_e_cab_dv_conflicts_with_street()->::zsearch::LintResult::MergeFrom(from.e_cab_dv_conflicts_with_street());
  }
  if (from.has_e_cert_policy_iv_requires_country()) {
    mutable_e_cert_policy_iv_requires_country()->::zsearch::LintResult::MergeFrom(from.e_cert_policy_iv_requires_country());
  }
  if (from.has_e_cert_policy_iv_requires_province_or_locality()) {
    mutable_e_cert_policy_iv_requires_province_or_locality()->::zsearch::LintResult::MergeFrom(from.e_cert_policy_iv_requires_province_or_locality());
  }
  if (from.has_e_cert_policy_ov_requires_country()) {
    mutable_e_cert_policy_ov_requires_country()->::zsearch::LintResult::MergeFrom(from.e_cert_policy_ov_requires_country());
  }
  if (from.has_e_cert_policy_ov_requires_province_or_locality()) {
    mutable_e_cert_policy_ov_requires_province_or_locality()->::zsearch::LintResult::MergeFrom(from.e_cert_policy_ov_requires_province_or_locality());
  }
  if (from.has_e_cab_ov_requires_org()) {
    mutable_e_cab_ov_requires_org()->::zsearch::LintResult::MergeFrom(from.e_cab_ov_requires_org());
  }
  if (from.has_e_cab_iv_requires_personal_name()) {
    mutable_e_cab_iv_requires_personal_name()->::zsearch::LintResult::MergeFrom(from.e_cab_iv_requires_personal_name());
  }
  if (from.has_e_cert_unique_identifier_version_not_2_or_3()) {
    mutable_e_cert_unique_identifier_version_not_2_or_3()->::zsearch::LintResult::MergeFrom(from.e_cert_unique_identifier_version_not_2_or_3());
  }
  if (from.has_e_distribution_point_incomplete()) {
    mutable_e_distribution_point_incomplete()->::zsearch::LintResult::MergeFrom(from.e_distribution_point_incomplete());
  }
  if (from.has_w_distribution_point_missing_ldap_or_uri()) {
    mutable_w_distribution_point_missing_ldap_or_uri()->::zsearch::LintResult::MergeFrom(from.w_distribution_point_missing_ldap_or_uri());
  }
  if (from.has_e_dsa_improper_modulus_or_divisor_size()) {
    mutable_e_dsa_improper_modulus_or_divisor_size()->::zsearch::LintResult::MergeFrom(from.e_dsa_improper_modulus_or_divisor_size());
  }
  if (from.has_e_dsa_shorter_than_2048_bits()) {
    mutable_e_dsa_shorter_than_2048_bits()->::zsearch::LintResult::MergeFrom(from.e_dsa_shorter_than_2048_bits());
  }
  if (from.has_e_ec_improper_curves()) {
    mutable_e_ec_improper_curves()->::zsearch::LintResult::MergeFrom(from.e_ec_improper_curves());
  }
  if (from.has_w_eku_critical_improperly()) {
    mutable_w_eku_critical_improperly()->::zsearch::LintResult::MergeFrom(from.w_eku_critical_improperly());
  }
  if (from.has_e_ev_business_category_missing()) {
    mutable_e_ev_business_category_missing()->::zsearch::LintResult::MergeFrom(from.e_ev_business_category_missing());
  }
  if (from.has_e_ev_country_name_missing()) {
    mutable_e_ev_country_name_missing()->::zsearch::LintResult::MergeFrom(from.e_ev_country_name_missing());
  }
  if (from.has_e_ev_locality_name_missing()) {
    mutable_e_ev_locality_name_missing()->::zsearch::LintResult::MergeFrom(from.e_ev_locality_name_missing());
  }
  if (from.has_e_ev_organization_name_missing()) {
    mutable_e_ev_organization_name_missing()->::zsearch::LintResult::MergeFrom(from.e_ev_organization_name_missing());
  }
  if (from.has_e_ev_serial_number_missing()) {
    mutable_e_ev_serial_number_missing()->::zsearch::LintResult::MergeFrom(from.e_ev_serial_number_missing());
  }
  if (from.has_e_ev_valid_time_too_long()) {
    mutable_e_ev_valid_time_too_long()->::zsearch::LintResult::MergeFrom(from.e_ev_valid_time_too_long());
  }
  if (from.has_w_ext_aia_access_location_missing()) {
    mutable_w_ext_aia_access_location_missing()->::zsearch::LintResult::MergeFrom(from.w_ext_aia_access_location_missing());
  }
  if (from.has_e_ext_aia_marked_critical()) {
    mutable_e_ext_aia_marked_critical()->::zsearch::LintResult::MergeFrom(from.e_ext_aia_marked_critical());
  }
  if (from.has_e_ext_authority_key_identifier_critical()) {
    mutable_e_ext_authority_key_identifier_critical()->::zsearch::LintResult::MergeFrom(from.e_ext_authority_key_identifier_critical());
  }
  if (from.has_e_ext_authority_key_identifier_missing()) {
    mutable_e_ext_authority_key_identifier_missing()->::zsearch::LintResult::MergeFrom(from.e_ext_authority_key_identifier_missing());
  }
  if (from.has_e_ext_authority_key_identifier_no_key_identifier()) {
    mutable_e_ext_authority_key_identifier_no_key_identifier()->::zsearch::LintResult::MergeFrom(from.e_ext_authority_key_identifier_no_key_identifier());
  }
  if (from.has_w_ext_cert_policy_contains_noticeref()) {
    mutable_w_ext_cert_policy_contains_noticeref()->::zsearch::LintResult::MergeFrom(from.w_ext_cert_policy_contains_noticeref());
  }
  if (from.has_e_ext_cert_policy_disallowed_any_policy_qualifier()) {
    mutable_e_ext_cert_policy_disallowed_any_policy_qualifier()->::zsearch::LintResult::MergeFrom(from.e_ext_cert_policy_disallowed_any_policy_qualifier());
  }
  if (from.has_e_ext_cert_policy_duplicate()) {
    mutable_e_ext_cert_policy_duplicate()->::zsearch::LintResult::MergeFrom(from.e_ext_cert_policy_duplicate());
  }
  if (from.has_e_ext_cert_policy_explicit_text_ia5_string()) {
    mutable_e_ext_cert_policy_explicit_text_ia5_string()->::zsearch::LintResult::MergeFrom(from.e_ext_cert_policy_explicit_text_ia5_string());
  }
  if (from.has_w_ext_cert_policy_explicit_text_includes_control()) {
    mutable_w_ext_cert_policy_explicit_text_includes_control()->::zsearch::LintResult::MergeFrom(from.w_ext_cert_policy_explicit_text_includes_control());
  }
  if (from.has_w_ext_cert_policy_explicit_text_not_nfc()) {
    mutable_w_ext_cert_policy_explicit_text_not_nfc()->::zsearch::LintResult::MergeFrom(from.w_ext_cert_policy_explicit_text_not_nfc());
  }
  if (from.has_w_ext_cert_policy_explicit_text_not_utf8()) {
    mutable_w_ext_cert_policy_explicit_text_not_utf8()->::zsearch::LintResult::MergeFrom(from.w_ext_cert_policy_explicit_text_not_utf8());
  }
  if (from.has_e_ext_cert_policy_explicit_text_too_long()) {
    mutable_e_ext_cert_policy_explicit_text_too_long()->::zsearch::LintResult::MergeFrom(from.e_ext_cert_policy_explicit_text_too_long());
  }
  if (from.has_w_ext_crl_distribution_marked_critical()) {
    mutable_w_ext_crl_distribution_marked_critical()->::zsearch::LintResult::MergeFrom(from.w_ext_crl_distribution_marked_critical());
  }
  if (from.has_e_ext_duplicate_extension()) {
    mutable_e_ext_duplicate_extension()->::zsearch::LintResult::MergeFrom(from.e_ext_duplicate_extension());
  }
  if (from.has_e_ext_freshest_crl_marked_critical()) {
    mutable_e_ext_freshest_crl_marked_critical()->::zsearch::LintResult::MergeFrom(from.e_ext_freshest_crl_marked_critical());
  }
  if (from.has_w_ext_ian_critical()) {
    mutable_w_ext_ian_critical()->::zsearch::LintResult::MergeFrom(from.w_ext_ian_critical());
  }
  if (from.has_e_ext_ian_dns_not_ia5_string()) {
    mutable_e_ext_ian_dns_not_ia5_string()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_dns_not_ia5_string());
  }
  if (from.has_e_ext_ian_empty_name()) {
    mutable_e_ext_ian_empty_name()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_empty_name());
  }
  if (from.has_e_ext_ian_no_entries()) {
    mutable_e_ext_ian_no_entries()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_no_entries());
  }
  if (from.has_e_ext_ian_rfc822_format_invalid()) {
    mutable_e_ext_ian_rfc822_format_invalid()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_rfc822_format_invalid());
  }
  if (from.has_e_ext_ian_space_dns_name()) {
    mutable_e_ext_ian_space_dns_name()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_space_dns_name());
  }
  if (from.has_e_ext_ian_uri_format_invalid()) {
    mutable_e_ext_ian_uri_format_invalid()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_uri_format_invalid());
  }
  if (from.has_e_ext_ian_uri_host_not_fqdn_or_ip()) {
    mutable_e_ext_ian_uri_host_not_fqdn_or_ip()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_uri_host_not_fqdn_or_ip());
  }
  if (from.has_e_ext_ian_uri_not_ia5()) {
    mutable_e_ext_ian_uri_not_ia5()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_uri_not_ia5());
  }
  if (from.has_e_ext_ian_uri_relative()) {
    mutable_e_ext_ian_uri_relative()->::zsearch::LintResult::MergeFrom(from.e_ext_ian_uri_relative());
  }
  if (from.has_e_ext_key_usage_cert_sign_without_ca()) {
    mutable_e_ext_key_usage_cert_sign_without_ca()->::zsearch::LintResult::MergeFrom(from.e_ext_key_usage_cert_sign_without_ca());
  }
  if (from.has_w_ext_key_usage_not_critical()) {
    mutable_w_ext_key_usage_not_critical()->::zsearch::LintResult::MergeFrom(from.w_ext_key_usage_not_critical());
  }
  if (from.has_e_ext_key_usage_without_bits()) {
    mutable_e_ext_key_usage_without_bits()->::zsearch::LintResult::MergeFrom(from.e_ext_key_usage_without_bits());
  }
  if (from.has_e_ext_name_constraints_not_critical()) {
    mutable_e_ext_name_constraints_not_critical()->::zsearch::LintResult::MergeFrom(from.e_ext_name_constraints_not_critical());
  }
  if (from.has_e_ext_name_constraints_not_in_ca()) {
    mutable_e_ext_name_constraints_not_in_ca()->::zsearch::LintResult::MergeFrom(from.e_ext_name_constraints_not_in_ca());
  }
  if (from.has_e_ext_policy_constraints_empty()) {
    mutable_e_ext_policy_constraints_empty()->::zsearch::LintResult::MergeFrom(from.e_ext_policy_constraints_empty());
  }
  if (from.has_e_ext_policy_constraints_not_critical()) {
    mutable_e_ext_policy_constraints_not_critical()->::zsearch::LintResult::MergeFrom(from.e_ext_policy_constraints_not_critical());
  }
  if (from.has_e_ext_policy_map_any_policy()) {
    mutable_e_ext_policy_map_any_policy()->::zsearch::LintResult::MergeFrom(from.e_ext_policy_map_any_policy());
  }
  if (from.has_w_ext_policy_map_not_critical()) {
    mutable_w_ext_policy_map_not_critical()->::zsearch::LintResult::MergeFrom(from.w_ext_policy_map_not_critical());
  }
  if (from.has_w_ext_policy_map_not_in_cert_policy()) {
    mutable_w_ext_policy_map_not_in_cert_policy()->::zsearch::LintResult::MergeFrom(from.w_ext_policy_map_not_in_cert_policy());
  }
  if (from.has_e_ext_san_contains_reserved_ip()) {
    mutable_e_ext_san_contains_reserved_ip()->::zsearch::LintResult::MergeFrom(from.e_ext_san_contains_reserved_ip());
  }
  if (from.has_w_ext_san_critical_with_subject_dn()) {
    mutable_w_ext_san_critical_with_subject_dn()->::zsearch::LintResult::MergeFrom(from.w_ext_san_critical_with_subject_dn());
  }
  if (from.has_e_ext_san_directory_name_present()) {
    mutable_e_ext_san_directory_name_present()->::zsearch::LintResult::MergeFrom(from.e_ext_san_directory_name_present());
  }
  if (from.has_e_ext_san_dns_not_ia5_string()) {
    mutable_e_ext_san_dns_not_ia5_string()->::zsearch::LintResult::MergeFrom(from.e_ext_san_dns_not_ia5_string());
  }
  if (from.has_e_ext_san_edi_party_name_present()) {
    mutable_e_ext_san_edi_party_name_present()->::zsearch::LintResult::MergeFrom(from.e_ext_san_edi_party_name_present());
  }
  if (from.has_e_ext_san_empty_name()) {
    mutable_e_ext_san_empty_name()->::zsearch::LintResult::MergeFrom(from.e_ext_san_empty_name());
  }
  if (from.has_e_ext_san_missing()) {
    mutable_e_ext_san_missing()->::zsearch::LintResult::MergeFrom(from.e_ext_san_missing());
  }
  if (from.has_e_ext_san_no_entries()) {
    mutable_e_ext_san_no_entries()->::zsearch::LintResult::MergeFrom(from.e_ext_san_no_entries());
  }
  if (from.has_e_ext_san_not_critical_without_subject()) {
    mutable_e_ext_san_not_critical_without_subject()->::zsearch::LintResult::MergeFrom(from.e_ext_san_not_critical_without_subject());
  }
  if (from.has_e_ext_san_other_name_present()) {
    mutable_e_ext_san_other_name_present()->::zsearch::LintResult::MergeFrom(from.e_ext_san_other_name_present());
  }
  if (from.has_e_ext_san_registered_id_present()) {
    mutable_e_ext_san_registered_id_present()->::zsearch::LintResult::MergeFrom(from.e_ext_san_registered_id_present());
  }
  if (from.has_e_ext_san_rfc822_format_invalid()) {
    mutable_e_ext_san_rfc822_format_invalid()->::zsearch::LintResult::MergeFrom(from.e_ext_san_rfc822_format_invalid());
  }
  if (from.has_e_ext_san_rfc822_name_present()) {
    mutable_e_ext_san_rfc822_name_present()->::zsearch::LintResult::MergeFrom(from.e_ext_san_rfc822_name_present());
  }
  if (from.has_e_ext_san_space_dns_name()) {
    mutable_e_ext_san_space_dns_name()->::zsearch::LintResult::MergeFrom(from.e_ext_san_space_dns_name());
  }
  if (from.has_e_ext_san_uniform_resource_identifier_present()) {
    mutable_e_ext_san_uniform_resource_identifier_present()->::zsearch::LintResult::MergeFrom(from.e_ext_san_uniform_resource_identifier_present());
  }
  if (from.has_e_ext_san_uri_format_invalid()) {
    mutable_e_ext_san_uri_format_invalid()->::zsearch::LintResult::MergeFrom(from.e_ext_san_uri_format_invalid());
  }
  if (from.has_e_ext_san_uri_host_not_fqdn_or_ip()) {
    mutable_e_ext_san_uri_host_not_fqdn_or_ip()->::zsearch::LintResult::MergeFrom(from.e_ext_san_uri_host_not_fqdn_or_ip());
  }
  if (from.has_e_ext_san_uri_not_ia5()) {
    mutable_e_ext_san_uri_not_ia5()->::zsearch::LintResult::MergeFrom(from.e_ext_san_uri_not_ia5());
  }
  if (from.has_e_ext_san_uri_relative()) {
    mutable_e_ext_san_uri_relative()->::zsearch::LintResult::MergeFrom(from.e_ext_san_uri_relative());
  }
  if (from.has_e_ext_subject_directory_attr_critical()) {
    mutable_e_ext_subject_directory_attr_critical()->::zsearch::LintResult::MergeFrom(from.e_ext_subject_directory_attr_critical());
  }
  if (from.has_e_ext_subject_key_identifier_critical()) {
    mutable_e_ext_subject_key_identifier_critical()->::zsearch::LintResult::MergeFrom(from.e_ext_subject_key_identifier_critical());
  }
  if (from.has_e_ext_subject_key_identifier_missing_ca()) {
    mutable_e_ext_subject_key_identifier_missing_ca()->::zsearch::LintResult::MergeFrom(from.e_ext_subject_key_identifier_missing_ca());
  }
  if (from.has_w_ext_subject_key_identifier_missing_sub_cert()) {
    mutable_w_ext_subject_key_identifier_missing_sub_cert()->::zsearch::LintResult::MergeFrom(from.w_ext_subject_key_identifier_missing_sub_cert());
  }
  if (from.has_e_generalized_time_does_not_include_seconds()) {
    mutable_e_generalized_time_does_not_include_seconds()->::zsearch::LintResult::MergeFrom(from.e_generalized_time_does_not_include_seconds());
  }
  if (from.has_e_generalized_time_includes_fraction_seconds()) {
    mutable_e_generalized_time_includes_fraction_seconds()->::zsearch::LintResult::MergeFrom(from.e_generalized_time_includes_fraction_seconds());
  }
  if (from.has_e_generalized_time_not_in_zulu()) {
    mutable_e_generalized_time_not_in_zulu()->::zsearch::LintResult::MergeFrom(from.e_generalized_time_not_in_zulu());
  }
  if (from.has_e_ian_dns_name_includes_null_char()) {
    mutable_e_ian_dns_name_includes_null_char()->::zsearch::LintResult::MergeFrom(from.e_ian_dns_name_includes_null_char());
  }
  if (from.has_e_ian_dns_name_starts_with_period()) {
    mutable_e_ian_dns_name_starts_with_period()->::zsearch::LintResult::MergeFrom(from.e_ian_dns_name_starts_with_period());
  }
  if (from.has_w_ian_iana_pub_suffix_empty()) {
    mutable_w_ian_iana_pub_suffix_empty()->::zsearch::LintResult::MergeFrom(from.w_ian_iana_pub_suffix_empty());
  }
  if (from.has_e_inhibit_any_policy_not_critical()) {
    mutable_e_inhibit_any_policy_not_critical()->::zsearch::LintResult::MergeFrom(from.e_inhibit_any_policy_not_critical());
  }
  if (from.has_e_invalid_certificate_version()) {
    mutable_e_invalid_certificate_version()->::zsearch::LintResult::MergeFrom(from.e_invalid_certificate_version());
  }
  if (from.has_e_issuer_field_empty()) {
    mutable_e_issuer_field_empty()->::zsearch::LintResult::MergeFrom(from.e_issuer_field_empty());
  }
  if (from.has_e_name_constraint_empty()) {
    mutable_e_name_constraint_empty()->::zsearch::LintResult::MergeFrom(from.e_name_constraint_empty());
  }
  if (from.has_e_name_constraint_maximum_not_absent()) {
    mutable_e_name_constraint_maximum_not_absent()->::zsearch::LintResult::MergeFrom(from.e_name_constraint_maximum_not_absent());
  }
  if (from.has_e_name_constraint_minimum_non_zero()) {
    mutable_e_name_constraint_minimum_non_zero()->::zsearch::LintResult::MergeFrom(from.e_name_constraint_minimum_non_zero());
  }
  if (from.has_w_name_constraint_on_edi_party_name()) {
    mutable_w_name_constraint_on_edi_party_name()->::zsearch::LintResult::MergeFrom(from.w_name_constraint_on_edi_party_name());
  }
  if (from.has_w_name_constraint_on_registered_id()) {
    mutable_w_name_constraint_on_registered_id()->::zsearch::LintResult::MergeFrom(from.w_name_constraint_on_registered_id());
  }
  if (from.has_w_name_constraint_on_x400()) {
    mutable_w_name_constraint_on_x400()->::zsearch::LintResult::MergeFrom(from.w_name_constraint_on_x400());
  }
  if (from.has_e_old_root_ca_rsa_mod_less_than_2048_bits()) {
    mutable_e_old_root_ca_rsa_mod_less_than_2048_bits()->::zsearch::LintResult::MergeFrom(from.e_old_root_ca_rsa_mod_less_than_2048_bits());
  }
  if (from.has_e_old_sub_ca_rsa_mod_less_than_1024_bits()) {
    mutable_e_old_sub_ca_rsa_mod_less_than_1024_bits()->::zsearch::LintResult::MergeFrom(from.e_old_sub_ca_rsa_mod_less_than_1024_bits());
  }
  if (from.has_e_old_sub_cert_rsa_mod_less_than_1024_bits()) {
    mutable_e_old_sub_cert_rsa_mod_less_than_1024_bits()->::zsearch::LintResult::MergeFrom(from.e_old_sub_cert_rsa_mod_less_than_1024_bits());
  }
  if (from.has_e_path_len_constraint_improperly_included()) {
    mutable_e_path_len_constraint_improperly_included()->::zsearch::LintResult::MergeFrom(from.e_path_len_constraint_improperly_included());
  }
  if (from.has_e_path_len_constraint_zero_or_less()) {
    mutable_e_path_len_constraint_zero_or_less()->::zsearch::LintResult::MergeFrom(from.e_path_len_constraint_zero_or_less());
  }
  if (from.has_e_public_key_type_not_allowed()) {
    mutable_e_public_key_type_not_allowed()->::zsearch::LintResult::MergeFrom(from.e_public_key_type_not_allowed());
  }
  if (from.has_w_root_ca_basic_constraints_path_len_constraint_field_present()) {
    mutable_w_root_ca_basic_constraints_path_len_constraint_field_present()->::zsearch::LintResult::MergeFrom(from.w_root_ca_basic_constraints_path_len_constraint_field_present());
  }
  if (from.has_w_root_ca_contains_cert_policy()) {
    mutable_w_root_ca_contains_cert_policy()->::zsearch::LintResult::MergeFrom(from.w_root_ca_contains_cert_policy());
  }
  if (from.has_e_root_ca_extended_key_usage_present()) {
    mutable_e_root_ca_extended_key_usage_present()->::zsearch::LintResult::MergeFrom(from.e_root_ca_extended_key_usage_present());
  }
  if (from.has_e_rsa_exp_negative()) {
    mutable_e_rsa_exp_negative()->::zsearch::LintResult::MergeFrom(from.e_rsa_exp_negative());
  }
  if (from.has_w_rsa_mod_factors_smaller_than_752()) {
    mutable_w_rsa_mod_factors_smaller_than_752()->::zsearch::LintResult::MergeFrom(from.w_rsa_mod_factors_smaller_than_752());
  }
  if (from.has_e_rsa_mod_less_than_2048_bits()) {
    mutable_e_rsa_mod_less_than_2048_bits()->::zsearch::LintResult::MergeFrom(from.e_rsa_mod_less_than_2048_bits());
  }
  if (from.has_w_rsa_mod_not_odd()) {
    mutable_w_rsa_mod_not_odd()->::zsearch::LintResult::MergeFrom(from.w_rsa_mod_not_odd());
  }
  if (from.has_w_rsa_public_exponent_not_in_range()) {
    mutable_w_rsa_public_exponent_not_in_range()->::zsearch::LintResult::MergeFrom(from.w_rsa_public_exponent_not_in_range());
  }
  if (from.has_e_rsa_public_exponent_not_odd()) {
    mutable_e_rsa_public_exponent_not_odd()->::zsearch::LintResult::MergeFrom(from.e_rsa_public_exponent_not_odd());
  }
  if (from.has_e_rsa_public_exponent_too_small()) {
    mutable_e_rsa_public_exponent_too_small()->::zsearch::LintResult::MergeFrom(from.e_rsa_public_exponent_too_small());
  }
  if (from.has_e_san_dns_name_includes_null_char()) {
    mutable_e_san_dns_name_includes_null_char()->::zsearch::LintResult::MergeFrom(from.e_san_dns_name_includes_null_char());
  }
  if (from.has_e_san_dns_name_starts_with_period()) {
    mutable_e_san_dns_name_starts_with_period()->::zsearch::LintResult::MergeFrom(from.e_san_dns_name_starts_with_period());
  }
  if (from.has_w_san_iana_pub_suffix_empty()) {
    mutable_w_san_iana_pub_suffix_empty()->::zsearch::LintResult::MergeFrom(from.w_san_iana_pub_suffix_empty());
  }
  if (from.has_e_serial_number_longer_than_20_octets()) {
    mutable_e_serial_number_longer_than_20_octets()->::zsearch::LintResult::MergeFrom(from.e_serial_number_longer_than_20_octets());
  }
  if (from.has_e_serial_number_not_positive()) {
    mutable_e_serial_number_not_positive()->::zsearch::LintResult::MergeFrom(from.e_serial_number_not_positive());
  }
  if (from.has_w_sub_ca_aia_does_not_contain_issuing_ca_url()) {
    mutable_w_sub_ca_aia_does_not_contain_issuing_ca_url()->::zsearch::LintResult::MergeFrom(from.w_sub_ca_aia_does_not_contain_issuing_ca_url());
  }
  if (from.has_e_sub_ca_aia_does_not_contain_ocsp_url()) {
    mutable_e_sub_ca_aia_does_not_contain_ocsp_url()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_aia_does_not_contain_ocsp_url());
  }
  if (from.has_e_sub_ca_aia_missing()) {
    mutable_e_sub_ca_aia_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_aia_missing());
  }
  if (from.has_w_sub_ca_certificate_policies_marked_critical()) {
    mutable_w_sub_ca_certificate_policies_marked_critical()->::zsearch::LintResult::MergeFrom(from.w_sub_ca_certificate_policies_marked_critical());
  }
  if (from.has_e_sub_ca_certificate_policies_missing()) {
    mutable_e_sub_ca_certificate_policies_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_certificate_policies_missing());
  }
  if (from.has_e_sub_ca_crl_distribution_points_does_not_contain_url()) {
    mutable_e_sub_ca_crl_distribution_points_does_not_contain_url()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_crl_distribution_points_does_not_contain_url());
  }
  if (from.has_e_sub_ca_crl_distribution_points_marked_critical()) {
    mutable_e_sub_ca_crl_distribution_points_marked_critical()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_crl_distribution_points_marked_critical());
  }
  if (from.has_e_sub_ca_crl_distribution_points_missing()) {
    mutable_e_sub_ca_crl_distribution_points_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_crl_distribution_points_missing());
  }
  if (from.has_w_sub_ca_eku_critical()) {
    mutable_w_sub_ca_eku_critical()->::zsearch::LintResult::MergeFrom(from.w_sub_ca_eku_critical());
  }
  if (from.has_w_sub_ca_name_constraints_not_critical()) {
    mutable_w_sub_ca_name_constraints_not_critical()->::zsearch::LintResult::MergeFrom(from.w_sub_ca_name_constraints_not_critical());
  }
  if (from.has_e_sub_cert_aia_does_not_contain_ocsp_url()) {
    mutable_e_sub_cert_aia_does_not_contain_ocsp_url()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_aia_does_not_contain_ocsp_url());
  }
  if (from.has_e_sub_cert_aia_missing()) {
    mutable_e_sub_cert_aia_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_aia_missing());
  }
  if (from.has_e_sub_cert_cert_policy_empty()) {
    mutable_e_sub_cert_cert_policy_empty()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_cert_policy_empty());
  }
  if (from.has_w_sub_cert_certificate_policies_marked_critical()) {
    mutable_w_sub_cert_certificate_policies_marked_critical()->::zsearch::LintResult::MergeFrom(from.w_sub_cert_certificate_policies_marked_critical());
  }
  if (from.has_e_sub_cert_crl_distribution_points_does_not_contain_url()) {
    mutable_e_sub_cert_crl_distribution_points_does_not_contain_url()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_crl_distribution_points_does_not_contain_url());
  }
  if (from.has_e_sub_cert_crl_distribution_points_marked_critical()) {
    mutable_e_sub_cert_crl_distribution_points_marked_critical()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_crl_distribution_points_marked_critical());
  }
  if (from.has_w_sub_cert_eku_extra_values()) {
    mutable_w_sub_cert_eku_extra_values()->::zsearch::LintResult::MergeFrom(from.w_sub_cert_eku_extra_values());
  }
  if (from.has_e_sub_cert_eku_missing()) {
    mutable_e_sub_cert_eku_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_eku_missing());
  }
  if (from.has_e_sub_cert_eku_server_auth_client_auth_missing()) {
    mutable_e_sub_cert_eku_server_auth_client_auth_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_eku_server_auth_client_auth_missing());
  }
  if (from.has_e_sub_cert_key_usage_cert_sign_bit_set()) {
    mutable_e_sub_cert_key_usage_cert_sign_bit_set()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_key_usage_cert_sign_bit_set());
  }
  if (from.has_e_sub_cert_or_sub_ca_using_sha1()) {
    mutable_e_sub_cert_or_sub_ca_using_sha1()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_or_sub_ca_using_sha1());
  }
  if (from.has_w_sub_cert_sha1_expiration_too_long()) {
    mutable_w_sub_cert_sha1_expiration_too_long()->::zsearch::LintResult::MergeFrom(from.w_sub_cert_sha1_expiration_too_long());
  }
  if (from.has_n_subject_common_name_included()) {
    mutable_n_subject_common_name_included()->::zsearch::LintResult::MergeFrom(from.n_subject_common_name_included());
  }
  if (from.has_e_subject_common_name_not_from_san()) {
    mutable_e_subject_common_name_not_from_san()->::zsearch::LintResult::MergeFrom(from.e_subject_common_name_not_from_san());
  }
  if (from.has_e_subject_contains_noninformational_value()) {
    mutable_e_subject_contains_noninformational_value()->::zsearch::LintResult::MergeFrom(from.e_subject_contains_noninformational_value());
  }
  if (from.has_e_subject_contains_reserved_ip()) {
    mutable_e_subject_contains_reserved_ip()->::zsearch::LintResult::MergeFrom(from.e_subject_contains_reserved_ip());
  }
  if (from.has_e_subject_country_not_iso()) {
    mutable_e_subject_country_not_iso()->::zsearch::LintResult::MergeFrom(from.e_subject_country_not_iso());
  }
  if (from.has_e_subject_empty_without_san()) {
    mutable_e_subject_empty_without_san()->::zsearch::LintResult::MergeFrom(from.e_subject_empty_without_san());
  }
  if (from.has_e_subject_info_access_marked_critical()) {
    mutable_e_subject_info_access_marked_critical()->::zsearch::LintResult::MergeFrom(from.e_subject_info_access_marked_critical());
  }
  if (from.has_e_subject_not_dn()) {
    mutable_e_subject_not_dn()->::zsearch::LintResult::MergeFrom(from.e_subject_not_dn());
  }
  if (from.has_e_utc_time_does_not_include_seconds()) {
    mutable_e_utc_time_does_not_include_seconds()->::zsearch::LintResult::MergeFrom(from.e_utc_time_does_not_include_seconds());
  }
  if (from.has_e_utc_time_not_in_zulu()) {
    mutable_e_utc_time_not_in_zulu()->::zsearch::LintResult::MergeFrom(from.e_utc_time_not_in_zulu());
  }
  if (from.has_e_validity_time_not_positive()) {
    mutable_e_validity_time_not_positive()->::zsearch::LintResult::MergeFrom(from.e_validity_time_not_positive());
  }
  if (from.has_e_wrong_time_format_pre2050()) {
    mutable_e_wrong_time_format_pre2050()->::zsearch::LintResult::MergeFrom(from.e_wrong_time_format_pre2050());
  }
  if (from.has_e_rsa_no_public_key()) {
    mutable_e_rsa_no_public_key()->::zsearch::LintResult::MergeFrom(from.e_rsa_no_public_key());
  }
  if (from.has_e_sub_cert_certificate_policies_missing()) {
    mutable_e_sub_cert_certificate_policies_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_certificate_policies_missing());
  }
  if (from.has_e_sub_cert_key_usage_crl_sign_bit_set()) {
    mutable_e_sub_cert_key_usage_crl_sign_bit_set()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_key_usage_crl_sign_bit_set());
  }
  if (from.has_e_subject_common_name_max_length()) {
    mutable_e_subject_common_name_max_length()->::zsearch::LintResult::MergeFrom(from.e_subject_common_name_max_length());
  }
  if (from.has_e_subject_locality_name_max_length()) {
    mutable_e_subject_locality_name_max_length()->::zsearch::LintResult::MergeFrom(from.e_subject_locality_name_max_length());
  }
  if (from.has_e_subject_organization_name_max_length()) {
    mutable_e_subject_organization_name_max_length()->::zsearch::LintResult::MergeFrom(from.e_subject_organization_name_max_length());
  }
  if (from.has_e_subject_organizational_unit_name_max_length()) {
    mutable_e_subject_organizational_unit_name_max_length()->::zsearch::LintResult::MergeFrom(from.e_subject_organizational_unit_name_max_length());
  }
  if (from.has_e_subject_state_name_max_length()) {
    mutable_e_subject_state_name_max_length()->::zsearch::LintResult::MergeFrom(from.e_subject_state_name_max_length());
  }
  if (from.has_w_multiple_subject_rdn()) {
    mutable_w_multiple_subject_rdn()->::zsearch::LintResult::MergeFrom(from.w_multiple_subject_rdn());
  }
  if (from.has_w_multiple_issuer_rdn()) {
    mutable_w_multiple_issuer_rdn()->::zsearch::LintResult::MergeFrom(from.w_multiple_issuer_rdn());
  }
  if (from.has_w_issuer_dn_trailing_whitespace()) {
    mutable_w_issuer_dn_trailing_whitespace()->::zsearch::LintResult::MergeFrom(from.w_issuer_dn_trailing_whitespace());
  }
  if (from.has_w_issuer_dn_leading_whitespace()) {
    mutable_w_issuer_dn_leading_whitespace()->::zsearch::LintResult::MergeFrom(from.w_issuer_dn_leading_whitespace());
  }
  if (from.has_w_subject_dn_trailing_whitespace()) {
    mutable_w_subject_dn_trailing_whitespace()->::zsearch::LintResult::MergeFrom(from.w_subject_dn_trailing_whitespace());
  }
  if (from.has_w_subject_dn_leading_whitespace()) {
    mutable_w_subject_dn_leading_whitespace()->::zsearch::LintResult::MergeFrom(from.w_subject_dn_leading_whitespace());
  }
  if (from.has_e_sub_cert_locality_name_must_appear()) {
    mutable_e_sub_cert_locality_name_must_appear()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_locality_name_must_appear());
  }
  if (from.has_e_signature_algorithm_not_supported()) {
    mutable_e_signature_algorithm_not_supported()->::zsearch::LintResult::MergeFrom(from.e_signature_algorithm_not_supported());
  }
  if (from.has_e_dnsname_hyphen_in_sld()) {
    mutable_e_dnsname_hyphen_in_sld()->::zsearch::LintResult::MergeFrom(from.e_dnsname_hyphen_in_sld());
  }
  if (from.has_e_dsa_correct_order_in_subgroup()) {
    mutable_e_dsa_correct_order_in_subgroup()->::zsearch::LintResult::MergeFrom(from.e_dsa_correct_order_in_subgroup());
  }
  if (from.has_n_sub_ca_eku_not_technically_constrained()) {
    mutable_n_sub_ca_eku_not_technically_constrained()->::zsearch::LintResult::MergeFrom(from.n_sub_ca_eku_not_technically_constrained());
  }
  if (from.has_e_dnsname_empty_label()) {
    mutable_e_dnsname_empty_label()->::zsearch::LintResult::MergeFrom(from.e_dnsname_empty_label());
  }
  if (from.has_e_ca_common_name_missing()) {
    mutable_e_ca_common_name_missing()->::zsearch::LintResult::MergeFrom(from.e_ca_common_name_missing());
  }
  if (from.has_e_dnsname_wildcard_only_in_left_label()) {
    mutable_e_dnsname_wildcard_only_in_left_label()->::zsearch::LintResult::MergeFrom(from.e_dnsname_wildcard_only_in_left_label());
  }
  if (from.has_e_sub_cert_valid_time_too_long()) {
    mutable_e_sub_cert_valid_time_too_long()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_valid_time_too_long());
  }
  if (from.has_e_dnsname_left_label_wildcard_correct()) {
    mutable_e_dnsname_left_label_wildcard_correct()->::zsearch::LintResult::MergeFrom(from.e_dnsname_left_label_wildcard_correct());
  }
  if (from.has_w_serial_number_low_entropy()) {
    mutable_w_serial_number_low_entropy()->::zsearch::LintResult::MergeFrom(from.w_serial_number_low_entropy());
  }
  if (from.has_e_dnsname_label_too_long()) {
    mutable_e_dnsname_label_too_long()->::zsearch::LintResult::MergeFrom(from.e_dnsname_label_too_long());
  }
  if (from.has_e_root_ca_key_usage_present()) {
    mutable_e_root_ca_key_usage_present()->::zsearch::LintResult::MergeFrom(from.e_root_ca_key_usage_present());
  }
  if (from.has_w_dnsname_wildcard_left_of_public_suffix()) {
    mutable_w_dnsname_wildcard_left_of_public_suffix()->::zsearch::LintResult::MergeFrom(from.w_dnsname_wildcard_left_of_public_suffix());
  }
  if (from.has_e_international_dns_name_not_unicode()) {
    mutable_e_international_dns_name_not_unicode()->::zsearch::LintResult::MergeFrom(from.e_international_dns_name_not_unicode());
  }
  if (from.has_w_dnsname_underscore_in_trd()) {
    mutable_w_dnsname_underscore_in_trd()->::zsearch::LintResult::MergeFrom(from.w_dnsname_underscore_in_trd());
  }
  if (from.has_w_sub_cert_aia_does_not_contain_issuing_ca_url()) {
    mutable_w_sub_cert_aia_does_not_contain_issuing_ca_url()->::zsearch::LintResult::MergeFrom(from.w_sub_cert_aia_does_not_contain_issuing_ca_url());
  }
  if (from.has_e_sub_cert_locality_name_must_not_appear()) {
    mutable_e_sub_cert_locality_name_must_not_appear()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_locality_name_must_not_appear());
  }
  if (from.has_e_sub_cert_country_name_must_appear()) {
    mutable_e_sub_cert_country_name_must_appear()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_country_name_must_appear());
  }
  if (from.has_e_dnsname_bad_character_in_label()) {
    mutable_e_dnsname_bad_character_in_label()->::zsearch::LintResult::MergeFrom(from.e_dnsname_bad_character_in_label());
  }
  if (from.has_e_sub_ca_must_not_contain_any_policy()) {
    mutable_e_sub_ca_must_not_contain_any_policy()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_must_not_contain_any_policy());
  }
  if (from.has_e_international_dns_name_not_nfkc()) {
    mutable_e_international_dns_name_not_nfkc()->::zsearch::LintResult::MergeFrom(from.e_international_dns_name_not_nfkc());
  }
  if (from.has_e_sub_cert_aia_marked_critical()) {
    mutable_e_sub_cert_aia_marked_critical()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_aia_marked_critical());
  }
  if (from.has_e_ca_is_ca()) {
    mutable_e_ca_is_ca()->::zsearch::LintResult::MergeFrom(from.e_ca_is_ca());
  }
  if (from.has_e_sub_cert_street_address_should_not_exist()) {
    mutable_e_sub_cert_street_address_should_not_exist()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_street_address_should_not_exist());
  }
  if (from.has_e_sub_ca_eku_missing()) {
    mutable_e_sub_ca_eku_missing()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_eku_missing());
  }
  if (from.has_e_sub_cert_province_must_not_appear()) {
    mutable_e_sub_cert_province_must_not_appear()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_province_must_not_appear());
  }
  if (from.has_e_dnsname_underscore_in_sld()) {
    mutable_e_dnsname_underscore_in_sld()->::zsearch::LintResult::MergeFrom(from.e_dnsname_underscore_in_sld());
  }
  if (from.has_e_sub_ca_eku_name_constraints()) {
    mutable_e_sub_ca_eku_name_constraints()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_eku_name_constraints());
  }
  if (from.has_e_sub_cert_not_is_ca()) {
    mutable_e_sub_cert_not_is_ca()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_not_is_ca());
  }
  if (from.has_e_dsa_unique_correct_representation()) {
    mutable_e_dsa_unique_correct_representation()->::zsearch::LintResult::MergeFrom(from.e_dsa_unique_correct_representation());
  }
  if (from.has_e_sub_cert_province_must_appear()) {
    mutable_e_sub_cert_province_must_appear()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_province_must_appear());
  }
  if (from.has_e_root_ca_key_usage_must_be_critical()) {
    mutable_e_root_ca_key_usage_must_be_critical()->::zsearch::LintResult::MergeFrom(from.e_root_ca_key_usage_must_be_critical());
  }
  if (from.has_e_ext_san_dns_name_too_long()) {
    mutable_e_ext_san_dns_name_too_long()->::zsearch::LintResult::MergeFrom(from.e_ext_san_dns_name_too_long());
  }
  if (from.has_e_dsa_params_missing()) {
    mutable_e_dsa_params_missing()->::zsearch::LintResult::MergeFrom(from.e_dsa_params_missing());
  }
  if (from.has_e_sub_ca_aia_marked_critical()) {
    mutable_e_sub_ca_aia_marked_critical()->::zsearch::LintResult::MergeFrom(from.e_sub_ca_aia_marked_critical());
  }
  if (from.has_e_sub_cert_given_name_surname_contains_correct_policy()) {
    mutable_e_sub_cert_given_name_surname_contains_correct_policy()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_given_name_surname_contains_correct_policy());
  }
  if (from.has_e_sub_cert_postal_code_must_not_appear()) {
    mutable_e_sub_cert_postal_code_must_not_appear()->::zsearch::LintResult::MergeFrom(from.e_sub_cert_postal_code_must_not_appear());
  }
  if (from.has_e_dnsname_not_valid_tld()) {
    mutable_e_dnsname_not_valid_tld()->::zsearch::LintResult::MergeFrom(from.e_dnsname_not_valid_tld());
  }
  if (from.has_n_contains_redacted_dnsname()) {
    mutable_n_contains_redacted_dnsname()->::zsearch::LintResult::MergeFrom(from.n_contains_redacted_dnsname());
  }
  if (from.has_e_dnsname_contains_bare_iana_suffix()) {
    mutable_e_dnsname_contains_bare_iana_suffix()->::zsearch::LintResult::MergeFrom(from.e_dnsname_contains_bare_iana_suffix());
  }
}

void Lints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zsearch.Lints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lints::CopyFrom(const Lints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zsearch.Lints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lints::IsInitialized() const {
  return true;
}

void Lints::Swap(Lints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lints::InternalSwap(Lints* other) {
  std::swap(e_basic_constraints_not_critical_, other->e_basic_constraints_not_critical_);
  std::swap(e_ian_bare_wildcard_, other->e_ian_bare_wildcard_);
  std::swap(e_ian_wildcard_not_first_, other->e_ian_wildcard_not_first_);
  std::swap(e_san_bare_wildcard_, other->e_san_bare_wildcard_);
  std::swap(e_san_wildcard_not_first_, other->e_san_wildcard_not_first_);
  std::swap(e_ca_country_name_invalid_, other->e_ca_country_name_invalid_);
  std::swap(e_ca_country_name_missing_, other->e_ca_country_name_missing_);
  std::swap(e_ca_crl_sign_not_set_, other->e_ca_crl_sign_not_set_);
  std::swap(n_ca_digital_signature_not_set_, other->n_ca_digital_signature_not_set_);
  std::swap(e_ca_key_cert_sign_not_set_, other->e_ca_key_cert_sign_not_set_);
  std::swap(e_ca_key_usage_missing_, other->e_ca_key_usage_missing_);
  std::swap(e_ca_key_usage_not_critical_, other->e_ca_key_usage_not_critical_);
  std::swap(e_ca_organization_name_missing_, other->e_ca_organization_name_missing_);
  std::swap(e_ca_subject_field_empty_, other->e_ca_subject_field_empty_);
  std::swap(e_cert_contains_unique_identifier_, other->e_cert_contains_unique_identifier_);
  std::swap(e_cert_extensions_version_not_3_, other->e_cert_extensions_version_not_3_);
  std::swap(e_cab_dv_conflicts_with_locality_, other->e_cab_dv_conflicts_with_locality_);
  std::swap(e_cab_dv_conflicts_with_org_, other->e_cab_dv_conflicts_with_org_);
  std::swap(e_cab_dv_conflicts_with_postal_, other->e_cab_dv_conflicts_with_postal_);
  std::swap(e_cab_dv_conflicts_with_province_, other->e_cab_dv_conflicts_with_province_);
  std::swap(e_cab_dv_conflicts_with_street_, other->e_cab_dv_conflicts_with_street_);
  std::swap(e_cert_policy_iv_requires_country_, other->e_cert_policy_iv_requires_country_);
  std::swap(e_cert_policy_iv_requires_province_or_locality_, other->e_cert_policy_iv_requires_province_or_locality_);
  std::swap(e_cert_policy_ov_requires_country_, other->e_cert_policy_ov_requires_country_);
  std::swap(e_cert_policy_ov_requires_province_or_locality_, other->e_cert_policy_ov_requires_province_or_locality_);
  std::swap(e_cab_ov_requires_org_, other->e_cab_ov_requires_org_);
  std::swap(e_cab_iv_requires_personal_name_, other->e_cab_iv_requires_personal_name_);
  std::swap(e_cert_unique_identifier_version_not_2_or_3_, other->e_cert_unique_identifier_version_not_2_or_3_);
  std::swap(e_distribution_point_incomplete_, other->e_distribution_point_incomplete_);
  std::swap(w_distribution_point_missing_ldap_or_uri_, other->w_distribution_point_missing_ldap_or_uri_);
  std::swap(e_dsa_improper_modulus_or_divisor_size_, other->e_dsa_improper_modulus_or_divisor_size_);
  std::swap(e_dsa_shorter_than_2048_bits_, other->e_dsa_shorter_than_2048_bits_);
  std::swap(e_ec_improper_curves_, other->e_ec_improper_curves_);
  std::swap(w_eku_critical_improperly_, other->w_eku_critical_improperly_);
  std::swap(e_ev_business_category_missing_, other->e_ev_business_category_missing_);
  std::swap(e_ev_country_name_missing_, other->e_ev_country_name_missing_);
  std::swap(e_ev_locality_name_missing_, other->e_ev_locality_name_missing_);
  std::swap(e_ev_organization_name_missing_, other->e_ev_organization_name_missing_);
  std::swap(e_ev_serial_number_missing_, other->e_ev_serial_number_missing_);
  std::swap(e_ev_valid_time_too_long_, other->e_ev_valid_time_too_long_);
  std::swap(w_ext_aia_access_location_missing_, other->w_ext_aia_access_location_missing_);
  std::swap(e_ext_aia_marked_critical_, other->e_ext_aia_marked_critical_);
  std::swap(e_ext_authority_key_identifier_critical_, other->e_ext_authority_key_identifier_critical_);
  std::swap(e_ext_authority_key_identifier_missing_, other->e_ext_authority_key_identifier_missing_);
  std::swap(e_ext_authority_key_identifier_no_key_identifier_, other->e_ext_authority_key_identifier_no_key_identifier_);
  std::swap(w_ext_cert_policy_contains_noticeref_, other->w_ext_cert_policy_contains_noticeref_);
  std::swap(e_ext_cert_policy_disallowed_any_policy_qualifier_, other->e_ext_cert_policy_disallowed_any_policy_qualifier_);
  std::swap(e_ext_cert_policy_duplicate_, other->e_ext_cert_policy_duplicate_);
  std::swap(e_ext_cert_policy_explicit_text_ia5_string_, other->e_ext_cert_policy_explicit_text_ia5_string_);
  std::swap(w_ext_cert_policy_explicit_text_includes_control_, other->w_ext_cert_policy_explicit_text_includes_control_);
  std::swap(w_ext_cert_policy_explicit_text_not_nfc_, other->w_ext_cert_policy_explicit_text_not_nfc_);
  std::swap(w_ext_cert_policy_explicit_text_not_utf8_, other->w_ext_cert_policy_explicit_text_not_utf8_);
  std::swap(e_ext_cert_policy_explicit_text_too_long_, other->e_ext_cert_policy_explicit_text_too_long_);
  std::swap(w_ext_crl_distribution_marked_critical_, other->w_ext_crl_distribution_marked_critical_);
  std::swap(e_ext_duplicate_extension_, other->e_ext_duplicate_extension_);
  std::swap(e_ext_freshest_crl_marked_critical_, other->e_ext_freshest_crl_marked_critical_);
  std::swap(w_ext_ian_critical_, other->w_ext_ian_critical_);
  std::swap(e_ext_ian_dns_not_ia5_string_, other->e_ext_ian_dns_not_ia5_string_);
  std::swap(e_ext_ian_empty_name_, other->e_ext_ian_empty_name_);
  std::swap(e_ext_ian_no_entries_, other->e_ext_ian_no_entries_);
  std::swap(e_ext_ian_rfc822_format_invalid_, other->e_ext_ian_rfc822_format_invalid_);
  std::swap(e_ext_ian_space_dns_name_, other->e_ext_ian_space_dns_name_);
  std::swap(e_ext_ian_uri_format_invalid_, other->e_ext_ian_uri_format_invalid_);
  std::swap(e_ext_ian_uri_host_not_fqdn_or_ip_, other->e_ext_ian_uri_host_not_fqdn_or_ip_);
  std::swap(e_ext_ian_uri_not_ia5_, other->e_ext_ian_uri_not_ia5_);
  std::swap(e_ext_ian_uri_relative_, other->e_ext_ian_uri_relative_);
  std::swap(e_ext_key_usage_cert_sign_without_ca_, other->e_ext_key_usage_cert_sign_without_ca_);
  std::swap(w_ext_key_usage_not_critical_, other->w_ext_key_usage_not_critical_);
  std::swap(e_ext_key_usage_without_bits_, other->e_ext_key_usage_without_bits_);
  std::swap(e_ext_name_constraints_not_critical_, other->e_ext_name_constraints_not_critical_);
  std::swap(e_ext_name_constraints_not_in_ca_, other->e_ext_name_constraints_not_in_ca_);
  std::swap(e_ext_policy_constraints_empty_, other->e_ext_policy_constraints_empty_);
  std::swap(e_ext_policy_constraints_not_critical_, other->e_ext_policy_constraints_not_critical_);
  std::swap(e_ext_policy_map_any_policy_, other->e_ext_policy_map_any_policy_);
  std::swap(w_ext_policy_map_not_critical_, other->w_ext_policy_map_not_critical_);
  std::swap(w_ext_policy_map_not_in_cert_policy_, other->w_ext_policy_map_not_in_cert_policy_);
  std::swap(e_ext_san_contains_reserved_ip_, other->e_ext_san_contains_reserved_ip_);
  std::swap(w_ext_san_critical_with_subject_dn_, other->w_ext_san_critical_with_subject_dn_);
  std::swap(e_ext_san_directory_name_present_, other->e_ext_san_directory_name_present_);
  std::swap(e_ext_san_dns_not_ia5_string_, other->e_ext_san_dns_not_ia5_string_);
  std::swap(e_ext_san_edi_party_name_present_, other->e_ext_san_edi_party_name_present_);
  std::swap(e_ext_san_empty_name_, other->e_ext_san_empty_name_);
  std::swap(e_ext_san_missing_, other->e_ext_san_missing_);
  std::swap(e_ext_san_no_entries_, other->e_ext_san_no_entries_);
  std::swap(e_ext_san_not_critical_without_subject_, other->e_ext_san_not_critical_without_subject_);
  std::swap(e_ext_san_other_name_present_, other->e_ext_san_other_name_present_);
  std::swap(e_ext_san_registered_id_present_, other->e_ext_san_registered_id_present_);
  std::swap(e_ext_san_rfc822_format_invalid_, other->e_ext_san_rfc822_format_invalid_);
  std::swap(e_ext_san_rfc822_name_present_, other->e_ext_san_rfc822_name_present_);
  std::swap(e_ext_san_space_dns_name_, other->e_ext_san_space_dns_name_);
  std::swap(e_ext_san_uniform_resource_identifier_present_, other->e_ext_san_uniform_resource_identifier_present_);
  std::swap(e_ext_san_uri_format_invalid_, other->e_ext_san_uri_format_invalid_);
  std::swap(e_ext_san_uri_host_not_fqdn_or_ip_, other->e_ext_san_uri_host_not_fqdn_or_ip_);
  std::swap(e_ext_san_uri_not_ia5_, other->e_ext_san_uri_not_ia5_);
  std::swap(e_ext_san_uri_relative_, other->e_ext_san_uri_relative_);
  std::swap(e_ext_subject_directory_attr_critical_, other->e_ext_subject_directory_attr_critical_);
  std::swap(e_ext_subject_key_identifier_critical_, other->e_ext_subject_key_identifier_critical_);
  std::swap(e_ext_subject_key_identifier_missing_ca_, other->e_ext_subject_key_identifier_missing_ca_);
  std::swap(w_ext_subject_key_identifier_missing_sub_cert_, other->w_ext_subject_key_identifier_missing_sub_cert_);
  std::swap(e_generalized_time_does_not_include_seconds_, other->e_generalized_time_does_not_include_seconds_);
  std::swap(e_generalized_time_includes_fraction_seconds_, other->e_generalized_time_includes_fraction_seconds_);
  std::swap(e_generalized_time_not_in_zulu_, other->e_generalized_time_not_in_zulu_);
  std::swap(e_ian_dns_name_includes_null_char_, other->e_ian_dns_name_includes_null_char_);
  std::swap(e_ian_dns_name_starts_with_period_, other->e_ian_dns_name_starts_with_period_);
  std::swap(w_ian_iana_pub_suffix_empty_, other->w_ian_iana_pub_suffix_empty_);
  std::swap(e_inhibit_any_policy_not_critical_, other->e_inhibit_any_policy_not_critical_);
  std::swap(e_invalid_certificate_version_, other->e_invalid_certificate_version_);
  std::swap(e_issuer_field_empty_, other->e_issuer_field_empty_);
  std::swap(e_name_constraint_empty_, other->e_name_constraint_empty_);
  std::swap(e_name_constraint_maximum_not_absent_, other->e_name_constraint_maximum_not_absent_);
  std::swap(e_name_constraint_minimum_non_zero_, other->e_name_constraint_minimum_non_zero_);
  std::swap(w_name_constraint_on_edi_party_name_, other->w_name_constraint_on_edi_party_name_);
  std::swap(w_name_constraint_on_registered_id_, other->w_name_constraint_on_registered_id_);
  std::swap(w_name_constraint_on_x400_, other->w_name_constraint_on_x400_);
  std::swap(e_old_root_ca_rsa_mod_less_than_2048_bits_, other->e_old_root_ca_rsa_mod_less_than_2048_bits_);
  std::swap(e_old_sub_ca_rsa_mod_less_than_1024_bits_, other->e_old_sub_ca_rsa_mod_less_than_1024_bits_);
  std::swap(e_old_sub_cert_rsa_mod_less_than_1024_bits_, other->e_old_sub_cert_rsa_mod_less_than_1024_bits_);
  std::swap(e_path_len_constraint_improperly_included_, other->e_path_len_constraint_improperly_included_);
  std::swap(e_path_len_constraint_zero_or_less_, other->e_path_len_constraint_zero_or_less_);
  std::swap(e_public_key_type_not_allowed_, other->e_public_key_type_not_allowed_);
  std::swap(w_root_ca_basic_constraints_path_len_constraint_field_present_, other->w_root_ca_basic_constraints_path_len_constraint_field_present_);
  std::swap(w_root_ca_contains_cert_policy_, other->w_root_ca_contains_cert_policy_);
  std::swap(e_root_ca_extended_key_usage_present_, other->e_root_ca_extended_key_usage_present_);
  std::swap(e_rsa_exp_negative_, other->e_rsa_exp_negative_);
  std::swap(w_rsa_mod_factors_smaller_than_752_, other->w_rsa_mod_factors_smaller_than_752_);
  std::swap(e_rsa_mod_less_than_2048_bits_, other->e_rsa_mod_less_than_2048_bits_);
  std::swap(w_rsa_mod_not_odd_, other->w_rsa_mod_not_odd_);
  std::swap(w_rsa_public_exponent_not_in_range_, other->w_rsa_public_exponent_not_in_range_);
  std::swap(e_rsa_public_exponent_not_odd_, other->e_rsa_public_exponent_not_odd_);
  std::swap(e_rsa_public_exponent_too_small_, other->e_rsa_public_exponent_too_small_);
  std::swap(e_san_dns_name_includes_null_char_, other->e_san_dns_name_includes_null_char_);
  std::swap(e_san_dns_name_starts_with_period_, other->e_san_dns_name_starts_with_period_);
  std::swap(w_san_iana_pub_suffix_empty_, other->w_san_iana_pub_suffix_empty_);
  std::swap(e_serial_number_longer_than_20_octets_, other->e_serial_number_longer_than_20_octets_);
  std::swap(e_serial_number_not_positive_, other->e_serial_number_not_positive_);
  std::swap(w_sub_ca_aia_does_not_contain_issuing_ca_url_, other->w_sub_ca_aia_does_not_contain_issuing_ca_url_);
  std::swap(e_sub_ca_aia_does_not_contain_ocsp_url_, other->e_sub_ca_aia_does_not_contain_ocsp_url_);
  std::swap(e_sub_ca_aia_missing_, other->e_sub_ca_aia_missing_);
  std::swap(w_sub_ca_certificate_policies_marked_critical_, other->w_sub_ca_certificate_policies_marked_critical_);
  std::swap(e_sub_ca_certificate_policies_missing_, other->e_sub_ca_certificate_policies_missing_);
  std::swap(e_sub_ca_crl_distribution_points_does_not_contain_url_, other->e_sub_ca_crl_distribution_points_does_not_contain_url_);
  std::swap(e_sub_ca_crl_distribution_points_marked_critical_, other->e_sub_ca_crl_distribution_points_marked_critical_);
  std::swap(e_sub_ca_crl_distribution_points_missing_, other->e_sub_ca_crl_distribution_points_missing_);
  std::swap(w_sub_ca_eku_critical_, other->w_sub_ca_eku_critical_);
  std::swap(w_sub_ca_name_constraints_not_critical_, other->w_sub_ca_name_constraints_not_critical_);
  std::swap(e_sub_cert_aia_does_not_contain_ocsp_url_, other->e_sub_cert_aia_does_not_contain_ocsp_url_);
  std::swap(e_sub_cert_aia_missing_, other->e_sub_cert_aia_missing_);
  std::swap(e_sub_cert_cert_policy_empty_, other->e_sub_cert_cert_policy_empty_);
  std::swap(w_sub_cert_certificate_policies_marked_critical_, other->w_sub_cert_certificate_policies_marked_critical_);
  std::swap(e_sub_cert_crl_distribution_points_does_not_contain_url_, other->e_sub_cert_crl_distribution_points_does_not_contain_url_);
  std::swap(e_sub_cert_crl_distribution_points_marked_critical_, other->e_sub_cert_crl_distribution_points_marked_critical_);
  std::swap(w_sub_cert_eku_extra_values_, other->w_sub_cert_eku_extra_values_);
  std::swap(e_sub_cert_eku_missing_, other->e_sub_cert_eku_missing_);
  std::swap(e_sub_cert_eku_server_auth_client_auth_missing_, other->e_sub_cert_eku_server_auth_client_auth_missing_);
  std::swap(e_sub_cert_key_usage_cert_sign_bit_set_, other->e_sub_cert_key_usage_cert_sign_bit_set_);
  std::swap(e_sub_cert_or_sub_ca_using_sha1_, other->e_sub_cert_or_sub_ca_using_sha1_);
  std::swap(w_sub_cert_sha1_expiration_too_long_, other->w_sub_cert_sha1_expiration_too_long_);
  std::swap(n_subject_common_name_included_, other->n_subject_common_name_included_);
  std::swap(e_subject_common_name_not_from_san_, other->e_subject_common_name_not_from_san_);
  std::swap(e_subject_contains_noninformational_value_, other->e_subject_contains_noninformational_value_);
  std::swap(e_subject_contains_reserved_ip_, other->e_subject_contains_reserved_ip_);
  std::swap(e_subject_country_not_iso_, other->e_subject_country_not_iso_);
  std::swap(e_subject_empty_without_san_, other->e_subject_empty_without_san_);
  std::swap(e_subject_info_access_marked_critical_, other->e_subject_info_access_marked_critical_);
  std::swap(e_subject_not_dn_, other->e_subject_not_dn_);
  std::swap(e_utc_time_does_not_include_seconds_, other->e_utc_time_does_not_include_seconds_);
  std::swap(e_utc_time_not_in_zulu_, other->e_utc_time_not_in_zulu_);
  std::swap(e_validity_time_not_positive_, other->e_validity_time_not_positive_);
  std::swap(e_wrong_time_format_pre2050_, other->e_wrong_time_format_pre2050_);
  std::swap(e_rsa_no_public_key_, other->e_rsa_no_public_key_);
  std::swap(e_sub_cert_certificate_policies_missing_, other->e_sub_cert_certificate_policies_missing_);
  std::swap(e_sub_cert_key_usage_crl_sign_bit_set_, other->e_sub_cert_key_usage_crl_sign_bit_set_);
  std::swap(e_subject_common_name_max_length_, other->e_subject_common_name_max_length_);
  std::swap(e_subject_locality_name_max_length_, other->e_subject_locality_name_max_length_);
  std::swap(e_subject_organization_name_max_length_, other->e_subject_organization_name_max_length_);
  std::swap(e_subject_organizational_unit_name_max_length_, other->e_subject_organizational_unit_name_max_length_);
  std::swap(e_subject_state_name_max_length_, other->e_subject_state_name_max_length_);
  std::swap(w_multiple_subject_rdn_, other->w_multiple_subject_rdn_);
  std::swap(w_multiple_issuer_rdn_, other->w_multiple_issuer_rdn_);
  std::swap(w_issuer_dn_trailing_whitespace_, other->w_issuer_dn_trailing_whitespace_);
  std::swap(w_issuer_dn_leading_whitespace_, other->w_issuer_dn_leading_whitespace_);
  std::swap(w_subject_dn_trailing_whitespace_, other->w_subject_dn_trailing_whitespace_);
  std::swap(w_subject_dn_leading_whitespace_, other->w_subject_dn_leading_whitespace_);
  std::swap(e_sub_cert_locality_name_must_appear_, other->e_sub_cert_locality_name_must_appear_);
  std::swap(e_signature_algorithm_not_supported_, other->e_signature_algorithm_not_supported_);
  std::swap(e_dnsname_hyphen_in_sld_, other->e_dnsname_hyphen_in_sld_);
  std::swap(e_dsa_correct_order_in_subgroup_, other->e_dsa_correct_order_in_subgroup_);
  std::swap(n_sub_ca_eku_not_technically_constrained_, other->n_sub_ca_eku_not_technically_constrained_);
  std::swap(e_dnsname_empty_label_, other->e_dnsname_empty_label_);
  std::swap(e_ca_common_name_missing_, other->e_ca_common_name_missing_);
  std::swap(e_dnsname_wildcard_only_in_left_label_, other->e_dnsname_wildcard_only_in_left_label_);
  std::swap(e_sub_cert_valid_time_too_long_, other->e_sub_cert_valid_time_too_long_);
  std::swap(e_dnsname_left_label_wildcard_correct_, other->e_dnsname_left_label_wildcard_correct_);
  std::swap(w_serial_number_low_entropy_, other->w_serial_number_low_entropy_);
  std::swap(e_dnsname_label_too_long_, other->e_dnsname_label_too_long_);
  std::swap(e_root_ca_key_usage_present_, other->e_root_ca_key_usage_present_);
  std::swap(w_dnsname_wildcard_left_of_public_suffix_, other->w_dnsname_wildcard_left_of_public_suffix_);
  std::swap(e_international_dns_name_not_unicode_, other->e_international_dns_name_not_unicode_);
  std::swap(w_dnsname_underscore_in_trd_, other->w_dnsname_underscore_in_trd_);
  std::swap(w_sub_cert_aia_does_not_contain_issuing_ca_url_, other->w_sub_cert_aia_does_not_contain_issuing_ca_url_);
  std::swap(e_sub_cert_locality_name_must_not_appear_, other->e_sub_cert_locality_name_must_not_appear_);
  std::swap(e_sub_cert_country_name_must_appear_, other->e_sub_cert_country_name_must_appear_);
  std::swap(e_dnsname_bad_character_in_label_, other->e_dnsname_bad_character_in_label_);
  std::swap(e_sub_ca_must_not_contain_any_policy_, other->e_sub_ca_must_not_contain_any_policy_);
  std::swap(e_international_dns_name_not_nfkc_, other->e_international_dns_name_not_nfkc_);
  std::swap(e_sub_cert_aia_marked_critical_, other->e_sub_cert_aia_marked_critical_);
  std::swap(e_ca_is_ca_, other->e_ca_is_ca_);
  std::swap(e_sub_cert_street_address_should_not_exist_, other->e_sub_cert_street_address_should_not_exist_);
  std::swap(e_sub_ca_eku_missing_, other->e_sub_ca_eku_missing_);
  std::swap(e_sub_cert_province_must_not_appear_, other->e_sub_cert_province_must_not_appear_);
  std::swap(e_dnsname_underscore_in_sld_, other->e_dnsname_underscore_in_sld_);
  std::swap(e_sub_ca_eku_name_constraints_, other->e_sub_ca_eku_name_constraints_);
  std::swap(e_sub_cert_not_is_ca_, other->e_sub_cert_not_is_ca_);
  std::swap(e_dsa_unique_correct_representation_, other->e_dsa_unique_correct_representation_);
  std::swap(e_sub_cert_province_must_appear_, other->e_sub_cert_province_must_appear_);
  std::swap(e_root_ca_key_usage_must_be_critical_, other->e_root_ca_key_usage_must_be_critical_);
  std::swap(e_ext_san_dns_name_too_long_, other->e_ext_san_dns_name_too_long_);
  std::swap(e_dsa_params_missing_, other->e_dsa_params_missing_);
  std::swap(e_sub_ca_aia_marked_critical_, other->e_sub_ca_aia_marked_critical_);
  std::swap(e_sub_cert_given_name_surname_contains_correct_policy_, other->e_sub_cert_given_name_surname_contains_correct_policy_);
  std::swap(e_sub_cert_postal_code_must_not_appear_, other->e_sub_cert_postal_code_must_not_appear_);
  std::swap(e_dnsname_not_valid_tld_, other->e_dnsname_not_valid_tld_);
  std::swap(n_contains_redacted_dnsname_, other->n_contains_redacted_dnsname_);
  std::swap(e_dnsname_contains_bare_iana_suffix_, other->e_dnsname_contains_bare_iana_suffix_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lints::GetMetadata() const {
  protobuf_zlint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zlint_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Lints

// .zsearch.LintResult e_basic_constraints_not_critical = 1;
bool Lints::has_e_basic_constraints_not_critical() const {
  return this != internal_default_instance() && e_basic_constraints_not_critical_ != NULL;
}
void Lints::clear_e_basic_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_basic_constraints_not_critical_ != NULL) delete e_basic_constraints_not_critical_;
  e_basic_constraints_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_basic_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_basic_constraints_not_critical)
  return e_basic_constraints_not_critical_ != NULL ? *e_basic_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_basic_constraints_not_critical() {
  
  if (e_basic_constraints_not_critical_ == NULL) {
    e_basic_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_basic_constraints_not_critical)
  return e_basic_constraints_not_critical_;
}
::zsearch::LintResult* Lints::release_e_basic_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_basic_constraints_not_critical)
  
  ::zsearch::LintResult* temp = e_basic_constraints_not_critical_;
  e_basic_constraints_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_basic_constraints_not_critical(::zsearch::LintResult* e_basic_constraints_not_critical) {
  delete e_basic_constraints_not_critical_;
  e_basic_constraints_not_critical_ = e_basic_constraints_not_critical;
  if (e_basic_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_basic_constraints_not_critical)
}

// .zsearch.LintResult e_ian_bare_wildcard = 2;
bool Lints::has_e_ian_bare_wildcard() const {
  return this != internal_default_instance() && e_ian_bare_wildcard_ != NULL;
}
void Lints::clear_e_ian_bare_wildcard() {
  if (GetArenaNoVirtual() == NULL && e_ian_bare_wildcard_ != NULL) delete e_ian_bare_wildcard_;
  e_ian_bare_wildcard_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ian_bare_wildcard() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_bare_wildcard)
  return e_ian_bare_wildcard_ != NULL ? *e_ian_bare_wildcard_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ian_bare_wildcard() {
  
  if (e_ian_bare_wildcard_ == NULL) {
    e_ian_bare_wildcard_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_bare_wildcard)
  return e_ian_bare_wildcard_;
}
::zsearch::LintResult* Lints::release_e_ian_bare_wildcard() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_bare_wildcard)
  
  ::zsearch::LintResult* temp = e_ian_bare_wildcard_;
  e_ian_bare_wildcard_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ian_bare_wildcard(::zsearch::LintResult* e_ian_bare_wildcard) {
  delete e_ian_bare_wildcard_;
  e_ian_bare_wildcard_ = e_ian_bare_wildcard;
  if (e_ian_bare_wildcard) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_bare_wildcard)
}

// .zsearch.LintResult e_ian_wildcard_not_first = 3;
bool Lints::has_e_ian_wildcard_not_first() const {
  return this != internal_default_instance() && e_ian_wildcard_not_first_ != NULL;
}
void Lints::clear_e_ian_wildcard_not_first() {
  if (GetArenaNoVirtual() == NULL && e_ian_wildcard_not_first_ != NULL) delete e_ian_wildcard_not_first_;
  e_ian_wildcard_not_first_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ian_wildcard_not_first() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_wildcard_not_first)
  return e_ian_wildcard_not_first_ != NULL ? *e_ian_wildcard_not_first_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ian_wildcard_not_first() {
  
  if (e_ian_wildcard_not_first_ == NULL) {
    e_ian_wildcard_not_first_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_wildcard_not_first)
  return e_ian_wildcard_not_first_;
}
::zsearch::LintResult* Lints::release_e_ian_wildcard_not_first() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_wildcard_not_first)
  
  ::zsearch::LintResult* temp = e_ian_wildcard_not_first_;
  e_ian_wildcard_not_first_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ian_wildcard_not_first(::zsearch::LintResult* e_ian_wildcard_not_first) {
  delete e_ian_wildcard_not_first_;
  e_ian_wildcard_not_first_ = e_ian_wildcard_not_first;
  if (e_ian_wildcard_not_first) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_wildcard_not_first)
}

// .zsearch.LintResult e_san_bare_wildcard = 4;
bool Lints::has_e_san_bare_wildcard() const {
  return this != internal_default_instance() && e_san_bare_wildcard_ != NULL;
}
void Lints::clear_e_san_bare_wildcard() {
  if (GetArenaNoVirtual() == NULL && e_san_bare_wildcard_ != NULL) delete e_san_bare_wildcard_;
  e_san_bare_wildcard_ = NULL;
}
const ::zsearch::LintResult& Lints::e_san_bare_wildcard() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_bare_wildcard)
  return e_san_bare_wildcard_ != NULL ? *e_san_bare_wildcard_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_san_bare_wildcard() {
  
  if (e_san_bare_wildcard_ == NULL) {
    e_san_bare_wildcard_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_bare_wildcard)
  return e_san_bare_wildcard_;
}
::zsearch::LintResult* Lints::release_e_san_bare_wildcard() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_bare_wildcard)
  
  ::zsearch::LintResult* temp = e_san_bare_wildcard_;
  e_san_bare_wildcard_ = NULL;
  return temp;
}
void Lints::set_allocated_e_san_bare_wildcard(::zsearch::LintResult* e_san_bare_wildcard) {
  delete e_san_bare_wildcard_;
  e_san_bare_wildcard_ = e_san_bare_wildcard;
  if (e_san_bare_wildcard) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_bare_wildcard)
}

// .zsearch.LintResult e_san_wildcard_not_first = 5;
bool Lints::has_e_san_wildcard_not_first() const {
  return this != internal_default_instance() && e_san_wildcard_not_first_ != NULL;
}
void Lints::clear_e_san_wildcard_not_first() {
  if (GetArenaNoVirtual() == NULL && e_san_wildcard_not_first_ != NULL) delete e_san_wildcard_not_first_;
  e_san_wildcard_not_first_ = NULL;
}
const ::zsearch::LintResult& Lints::e_san_wildcard_not_first() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_wildcard_not_first)
  return e_san_wildcard_not_first_ != NULL ? *e_san_wildcard_not_first_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_san_wildcard_not_first() {
  
  if (e_san_wildcard_not_first_ == NULL) {
    e_san_wildcard_not_first_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_wildcard_not_first)
  return e_san_wildcard_not_first_;
}
::zsearch::LintResult* Lints::release_e_san_wildcard_not_first() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_wildcard_not_first)
  
  ::zsearch::LintResult* temp = e_san_wildcard_not_first_;
  e_san_wildcard_not_first_ = NULL;
  return temp;
}
void Lints::set_allocated_e_san_wildcard_not_first(::zsearch::LintResult* e_san_wildcard_not_first) {
  delete e_san_wildcard_not_first_;
  e_san_wildcard_not_first_ = e_san_wildcard_not_first;
  if (e_san_wildcard_not_first) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_wildcard_not_first)
}

// .zsearch.LintResult e_ca_country_name_invalid = 6;
bool Lints::has_e_ca_country_name_invalid() const {
  return this != internal_default_instance() && e_ca_country_name_invalid_ != NULL;
}
void Lints::clear_e_ca_country_name_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ca_country_name_invalid_ != NULL) delete e_ca_country_name_invalid_;
  e_ca_country_name_invalid_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_country_name_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_country_name_invalid)
  return e_ca_country_name_invalid_ != NULL ? *e_ca_country_name_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_country_name_invalid() {
  
  if (e_ca_country_name_invalid_ == NULL) {
    e_ca_country_name_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_country_name_invalid)
  return e_ca_country_name_invalid_;
}
::zsearch::LintResult* Lints::release_e_ca_country_name_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_country_name_invalid)
  
  ::zsearch::LintResult* temp = e_ca_country_name_invalid_;
  e_ca_country_name_invalid_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_country_name_invalid(::zsearch::LintResult* e_ca_country_name_invalid) {
  delete e_ca_country_name_invalid_;
  e_ca_country_name_invalid_ = e_ca_country_name_invalid;
  if (e_ca_country_name_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_country_name_invalid)
}

// .zsearch.LintResult e_ca_country_name_missing = 7;
bool Lints::has_e_ca_country_name_missing() const {
  return this != internal_default_instance() && e_ca_country_name_missing_ != NULL;
}
void Lints::clear_e_ca_country_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_country_name_missing_ != NULL) delete e_ca_country_name_missing_;
  e_ca_country_name_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_country_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_country_name_missing)
  return e_ca_country_name_missing_ != NULL ? *e_ca_country_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_country_name_missing() {
  
  if (e_ca_country_name_missing_ == NULL) {
    e_ca_country_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_country_name_missing)
  return e_ca_country_name_missing_;
}
::zsearch::LintResult* Lints::release_e_ca_country_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_country_name_missing)
  
  ::zsearch::LintResult* temp = e_ca_country_name_missing_;
  e_ca_country_name_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_country_name_missing(::zsearch::LintResult* e_ca_country_name_missing) {
  delete e_ca_country_name_missing_;
  e_ca_country_name_missing_ = e_ca_country_name_missing;
  if (e_ca_country_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_country_name_missing)
}

// .zsearch.LintResult e_ca_crl_sign_not_set = 8;
bool Lints::has_e_ca_crl_sign_not_set() const {
  return this != internal_default_instance() && e_ca_crl_sign_not_set_ != NULL;
}
void Lints::clear_e_ca_crl_sign_not_set() {
  if (GetArenaNoVirtual() == NULL && e_ca_crl_sign_not_set_ != NULL) delete e_ca_crl_sign_not_set_;
  e_ca_crl_sign_not_set_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_crl_sign_not_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_crl_sign_not_set)
  return e_ca_crl_sign_not_set_ != NULL ? *e_ca_crl_sign_not_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_crl_sign_not_set() {
  
  if (e_ca_crl_sign_not_set_ == NULL) {
    e_ca_crl_sign_not_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_crl_sign_not_set)
  return e_ca_crl_sign_not_set_;
}
::zsearch::LintResult* Lints::release_e_ca_crl_sign_not_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_crl_sign_not_set)
  
  ::zsearch::LintResult* temp = e_ca_crl_sign_not_set_;
  e_ca_crl_sign_not_set_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_crl_sign_not_set(::zsearch::LintResult* e_ca_crl_sign_not_set) {
  delete e_ca_crl_sign_not_set_;
  e_ca_crl_sign_not_set_ = e_ca_crl_sign_not_set;
  if (e_ca_crl_sign_not_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_crl_sign_not_set)
}

// .zsearch.LintResult n_ca_digital_signature_not_set = 9;
bool Lints::has_n_ca_digital_signature_not_set() const {
  return this != internal_default_instance() && n_ca_digital_signature_not_set_ != NULL;
}
void Lints::clear_n_ca_digital_signature_not_set() {
  if (GetArenaNoVirtual() == NULL && n_ca_digital_signature_not_set_ != NULL) delete n_ca_digital_signature_not_set_;
  n_ca_digital_signature_not_set_ = NULL;
}
const ::zsearch::LintResult& Lints::n_ca_digital_signature_not_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_ca_digital_signature_not_set)
  return n_ca_digital_signature_not_set_ != NULL ? *n_ca_digital_signature_not_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_n_ca_digital_signature_not_set() {
  
  if (n_ca_digital_signature_not_set_ == NULL) {
    n_ca_digital_signature_not_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_ca_digital_signature_not_set)
  return n_ca_digital_signature_not_set_;
}
::zsearch::LintResult* Lints::release_n_ca_digital_signature_not_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_ca_digital_signature_not_set)
  
  ::zsearch::LintResult* temp = n_ca_digital_signature_not_set_;
  n_ca_digital_signature_not_set_ = NULL;
  return temp;
}
void Lints::set_allocated_n_ca_digital_signature_not_set(::zsearch::LintResult* n_ca_digital_signature_not_set) {
  delete n_ca_digital_signature_not_set_;
  n_ca_digital_signature_not_set_ = n_ca_digital_signature_not_set;
  if (n_ca_digital_signature_not_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_ca_digital_signature_not_set)
}

// .zsearch.LintResult e_ca_key_cert_sign_not_set = 10;
bool Lints::has_e_ca_key_cert_sign_not_set() const {
  return this != internal_default_instance() && e_ca_key_cert_sign_not_set_ != NULL;
}
void Lints::clear_e_ca_key_cert_sign_not_set() {
  if (GetArenaNoVirtual() == NULL && e_ca_key_cert_sign_not_set_ != NULL) delete e_ca_key_cert_sign_not_set_;
  e_ca_key_cert_sign_not_set_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_key_cert_sign_not_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_key_cert_sign_not_set)
  return e_ca_key_cert_sign_not_set_ != NULL ? *e_ca_key_cert_sign_not_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_key_cert_sign_not_set() {
  
  if (e_ca_key_cert_sign_not_set_ == NULL) {
    e_ca_key_cert_sign_not_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_key_cert_sign_not_set)
  return e_ca_key_cert_sign_not_set_;
}
::zsearch::LintResult* Lints::release_e_ca_key_cert_sign_not_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_key_cert_sign_not_set)
  
  ::zsearch::LintResult* temp = e_ca_key_cert_sign_not_set_;
  e_ca_key_cert_sign_not_set_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_key_cert_sign_not_set(::zsearch::LintResult* e_ca_key_cert_sign_not_set) {
  delete e_ca_key_cert_sign_not_set_;
  e_ca_key_cert_sign_not_set_ = e_ca_key_cert_sign_not_set;
  if (e_ca_key_cert_sign_not_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_key_cert_sign_not_set)
}

// .zsearch.LintResult e_ca_key_usage_missing = 11;
bool Lints::has_e_ca_key_usage_missing() const {
  return this != internal_default_instance() && e_ca_key_usage_missing_ != NULL;
}
void Lints::clear_e_ca_key_usage_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_key_usage_missing_ != NULL) delete e_ca_key_usage_missing_;
  e_ca_key_usage_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_key_usage_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_key_usage_missing)
  return e_ca_key_usage_missing_ != NULL ? *e_ca_key_usage_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_key_usage_missing() {
  
  if (e_ca_key_usage_missing_ == NULL) {
    e_ca_key_usage_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_key_usage_missing)
  return e_ca_key_usage_missing_;
}
::zsearch::LintResult* Lints::release_e_ca_key_usage_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_key_usage_missing)
  
  ::zsearch::LintResult* temp = e_ca_key_usage_missing_;
  e_ca_key_usage_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_key_usage_missing(::zsearch::LintResult* e_ca_key_usage_missing) {
  delete e_ca_key_usage_missing_;
  e_ca_key_usage_missing_ = e_ca_key_usage_missing;
  if (e_ca_key_usage_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_key_usage_missing)
}

// .zsearch.LintResult e_ca_key_usage_not_critical = 12;
bool Lints::has_e_ca_key_usage_not_critical() const {
  return this != internal_default_instance() && e_ca_key_usage_not_critical_ != NULL;
}
void Lints::clear_e_ca_key_usage_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_ca_key_usage_not_critical_ != NULL) delete e_ca_key_usage_not_critical_;
  e_ca_key_usage_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_key_usage_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_key_usage_not_critical)
  return e_ca_key_usage_not_critical_ != NULL ? *e_ca_key_usage_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_key_usage_not_critical() {
  
  if (e_ca_key_usage_not_critical_ == NULL) {
    e_ca_key_usage_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_key_usage_not_critical)
  return e_ca_key_usage_not_critical_;
}
::zsearch::LintResult* Lints::release_e_ca_key_usage_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_key_usage_not_critical)
  
  ::zsearch::LintResult* temp = e_ca_key_usage_not_critical_;
  e_ca_key_usage_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_key_usage_not_critical(::zsearch::LintResult* e_ca_key_usage_not_critical) {
  delete e_ca_key_usage_not_critical_;
  e_ca_key_usage_not_critical_ = e_ca_key_usage_not_critical;
  if (e_ca_key_usage_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_key_usage_not_critical)
}

// .zsearch.LintResult e_ca_organization_name_missing = 13;
bool Lints::has_e_ca_organization_name_missing() const {
  return this != internal_default_instance() && e_ca_organization_name_missing_ != NULL;
}
void Lints::clear_e_ca_organization_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_organization_name_missing_ != NULL) delete e_ca_organization_name_missing_;
  e_ca_organization_name_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_organization_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_organization_name_missing)
  return e_ca_organization_name_missing_ != NULL ? *e_ca_organization_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_organization_name_missing() {
  
  if (e_ca_organization_name_missing_ == NULL) {
    e_ca_organization_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_organization_name_missing)
  return e_ca_organization_name_missing_;
}
::zsearch::LintResult* Lints::release_e_ca_organization_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_organization_name_missing)
  
  ::zsearch::LintResult* temp = e_ca_organization_name_missing_;
  e_ca_organization_name_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_organization_name_missing(::zsearch::LintResult* e_ca_organization_name_missing) {
  delete e_ca_organization_name_missing_;
  e_ca_organization_name_missing_ = e_ca_organization_name_missing;
  if (e_ca_organization_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_organization_name_missing)
}

// .zsearch.LintResult e_ca_subject_field_empty = 14;
bool Lints::has_e_ca_subject_field_empty() const {
  return this != internal_default_instance() && e_ca_subject_field_empty_ != NULL;
}
void Lints::clear_e_ca_subject_field_empty() {
  if (GetArenaNoVirtual() == NULL && e_ca_subject_field_empty_ != NULL) delete e_ca_subject_field_empty_;
  e_ca_subject_field_empty_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_subject_field_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_subject_field_empty)
  return e_ca_subject_field_empty_ != NULL ? *e_ca_subject_field_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_subject_field_empty() {
  
  if (e_ca_subject_field_empty_ == NULL) {
    e_ca_subject_field_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_subject_field_empty)
  return e_ca_subject_field_empty_;
}
::zsearch::LintResult* Lints::release_e_ca_subject_field_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_subject_field_empty)
  
  ::zsearch::LintResult* temp = e_ca_subject_field_empty_;
  e_ca_subject_field_empty_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_subject_field_empty(::zsearch::LintResult* e_ca_subject_field_empty) {
  delete e_ca_subject_field_empty_;
  e_ca_subject_field_empty_ = e_ca_subject_field_empty;
  if (e_ca_subject_field_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_subject_field_empty)
}

// .zsearch.LintResult e_cert_contains_unique_identifier = 15;
bool Lints::has_e_cert_contains_unique_identifier() const {
  return this != internal_default_instance() && e_cert_contains_unique_identifier_ != NULL;
}
void Lints::clear_e_cert_contains_unique_identifier() {
  if (GetArenaNoVirtual() == NULL && e_cert_contains_unique_identifier_ != NULL) delete e_cert_contains_unique_identifier_;
  e_cert_contains_unique_identifier_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cert_contains_unique_identifier() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_contains_unique_identifier)
  return e_cert_contains_unique_identifier_ != NULL ? *e_cert_contains_unique_identifier_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cert_contains_unique_identifier() {
  
  if (e_cert_contains_unique_identifier_ == NULL) {
    e_cert_contains_unique_identifier_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_contains_unique_identifier)
  return e_cert_contains_unique_identifier_;
}
::zsearch::LintResult* Lints::release_e_cert_contains_unique_identifier() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_contains_unique_identifier)
  
  ::zsearch::LintResult* temp = e_cert_contains_unique_identifier_;
  e_cert_contains_unique_identifier_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cert_contains_unique_identifier(::zsearch::LintResult* e_cert_contains_unique_identifier) {
  delete e_cert_contains_unique_identifier_;
  e_cert_contains_unique_identifier_ = e_cert_contains_unique_identifier;
  if (e_cert_contains_unique_identifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_contains_unique_identifier)
}

// .zsearch.LintResult e_cert_extensions_version_not_3 = 16;
bool Lints::has_e_cert_extensions_version_not_3() const {
  return this != internal_default_instance() && e_cert_extensions_version_not_3_ != NULL;
}
void Lints::clear_e_cert_extensions_version_not_3() {
  if (GetArenaNoVirtual() == NULL && e_cert_extensions_version_not_3_ != NULL) delete e_cert_extensions_version_not_3_;
  e_cert_extensions_version_not_3_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cert_extensions_version_not_3() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_extensions_version_not_3)
  return e_cert_extensions_version_not_3_ != NULL ? *e_cert_extensions_version_not_3_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cert_extensions_version_not_3() {
  
  if (e_cert_extensions_version_not_3_ == NULL) {
    e_cert_extensions_version_not_3_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_extensions_version_not_3)
  return e_cert_extensions_version_not_3_;
}
::zsearch::LintResult* Lints::release_e_cert_extensions_version_not_3() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_extensions_version_not_3)
  
  ::zsearch::LintResult* temp = e_cert_extensions_version_not_3_;
  e_cert_extensions_version_not_3_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cert_extensions_version_not_3(::zsearch::LintResult* e_cert_extensions_version_not_3) {
  delete e_cert_extensions_version_not_3_;
  e_cert_extensions_version_not_3_ = e_cert_extensions_version_not_3;
  if (e_cert_extensions_version_not_3) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_extensions_version_not_3)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_locality = 17;
bool Lints::has_e_cab_dv_conflicts_with_locality() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_locality_ != NULL;
}
void Lints::clear_e_cab_dv_conflicts_with_locality() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_locality_ != NULL) delete e_cab_dv_conflicts_with_locality_;
  e_cab_dv_conflicts_with_locality_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_locality() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_locality)
  return e_cab_dv_conflicts_with_locality_ != NULL ? *e_cab_dv_conflicts_with_locality_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_locality() {
  
  if (e_cab_dv_conflicts_with_locality_ == NULL) {
    e_cab_dv_conflicts_with_locality_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_locality)
  return e_cab_dv_conflicts_with_locality_;
}
::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_locality() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_locality)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_locality_;
  e_cab_dv_conflicts_with_locality_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cab_dv_conflicts_with_locality(::zsearch::LintResult* e_cab_dv_conflicts_with_locality) {
  delete e_cab_dv_conflicts_with_locality_;
  e_cab_dv_conflicts_with_locality_ = e_cab_dv_conflicts_with_locality;
  if (e_cab_dv_conflicts_with_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_locality)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_org = 18;
bool Lints::has_e_cab_dv_conflicts_with_org() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_org_ != NULL;
}
void Lints::clear_e_cab_dv_conflicts_with_org() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_org_ != NULL) delete e_cab_dv_conflicts_with_org_;
  e_cab_dv_conflicts_with_org_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_org() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_org)
  return e_cab_dv_conflicts_with_org_ != NULL ? *e_cab_dv_conflicts_with_org_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_org() {
  
  if (e_cab_dv_conflicts_with_org_ == NULL) {
    e_cab_dv_conflicts_with_org_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_org)
  return e_cab_dv_conflicts_with_org_;
}
::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_org() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_org)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_org_;
  e_cab_dv_conflicts_with_org_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cab_dv_conflicts_with_org(::zsearch::LintResult* e_cab_dv_conflicts_with_org) {
  delete e_cab_dv_conflicts_with_org_;
  e_cab_dv_conflicts_with_org_ = e_cab_dv_conflicts_with_org;
  if (e_cab_dv_conflicts_with_org) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_org)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_postal = 19;
bool Lints::has_e_cab_dv_conflicts_with_postal() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_postal_ != NULL;
}
void Lints::clear_e_cab_dv_conflicts_with_postal() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_postal_ != NULL) delete e_cab_dv_conflicts_with_postal_;
  e_cab_dv_conflicts_with_postal_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_postal() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_postal)
  return e_cab_dv_conflicts_with_postal_ != NULL ? *e_cab_dv_conflicts_with_postal_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_postal() {
  
  if (e_cab_dv_conflicts_with_postal_ == NULL) {
    e_cab_dv_conflicts_with_postal_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_postal)
  return e_cab_dv_conflicts_with_postal_;
}
::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_postal() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_postal)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_postal_;
  e_cab_dv_conflicts_with_postal_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cab_dv_conflicts_with_postal(::zsearch::LintResult* e_cab_dv_conflicts_with_postal) {
  delete e_cab_dv_conflicts_with_postal_;
  e_cab_dv_conflicts_with_postal_ = e_cab_dv_conflicts_with_postal;
  if (e_cab_dv_conflicts_with_postal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_postal)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_province = 20;
bool Lints::has_e_cab_dv_conflicts_with_province() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_province_ != NULL;
}
void Lints::clear_e_cab_dv_conflicts_with_province() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_province_ != NULL) delete e_cab_dv_conflicts_with_province_;
  e_cab_dv_conflicts_with_province_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_province() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_province)
  return e_cab_dv_conflicts_with_province_ != NULL ? *e_cab_dv_conflicts_with_province_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_province() {
  
  if (e_cab_dv_conflicts_with_province_ == NULL) {
    e_cab_dv_conflicts_with_province_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_province)
  return e_cab_dv_conflicts_with_province_;
}
::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_province() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_province)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_province_;
  e_cab_dv_conflicts_with_province_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cab_dv_conflicts_with_province(::zsearch::LintResult* e_cab_dv_conflicts_with_province) {
  delete e_cab_dv_conflicts_with_province_;
  e_cab_dv_conflicts_with_province_ = e_cab_dv_conflicts_with_province;
  if (e_cab_dv_conflicts_with_province) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_province)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_street = 21;
bool Lints::has_e_cab_dv_conflicts_with_street() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_street_ != NULL;
}
void Lints::clear_e_cab_dv_conflicts_with_street() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_street_ != NULL) delete e_cab_dv_conflicts_with_street_;
  e_cab_dv_conflicts_with_street_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_street() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_street)
  return e_cab_dv_conflicts_with_street_ != NULL ? *e_cab_dv_conflicts_with_street_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_street() {
  
  if (e_cab_dv_conflicts_with_street_ == NULL) {
    e_cab_dv_conflicts_with_street_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_street)
  return e_cab_dv_conflicts_with_street_;
}
::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_street() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_street)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_street_;
  e_cab_dv_conflicts_with_street_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cab_dv_conflicts_with_street(::zsearch::LintResult* e_cab_dv_conflicts_with_street) {
  delete e_cab_dv_conflicts_with_street_;
  e_cab_dv_conflicts_with_street_ = e_cab_dv_conflicts_with_street;
  if (e_cab_dv_conflicts_with_street) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_street)
}

// .zsearch.LintResult e_cert_policy_iv_requires_country = 22;
bool Lints::has_e_cert_policy_iv_requires_country() const {
  return this != internal_default_instance() && e_cert_policy_iv_requires_country_ != NULL;
}
void Lints::clear_e_cert_policy_iv_requires_country() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_iv_requires_country_ != NULL) delete e_cert_policy_iv_requires_country_;
  e_cert_policy_iv_requires_country_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cert_policy_iv_requires_country() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_iv_requires_country)
  return e_cert_policy_iv_requires_country_ != NULL ? *e_cert_policy_iv_requires_country_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cert_policy_iv_requires_country() {
  
  if (e_cert_policy_iv_requires_country_ == NULL) {
    e_cert_policy_iv_requires_country_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_iv_requires_country)
  return e_cert_policy_iv_requires_country_;
}
::zsearch::LintResult* Lints::release_e_cert_policy_iv_requires_country() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_iv_requires_country)
  
  ::zsearch::LintResult* temp = e_cert_policy_iv_requires_country_;
  e_cert_policy_iv_requires_country_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cert_policy_iv_requires_country(::zsearch::LintResult* e_cert_policy_iv_requires_country) {
  delete e_cert_policy_iv_requires_country_;
  e_cert_policy_iv_requires_country_ = e_cert_policy_iv_requires_country;
  if (e_cert_policy_iv_requires_country) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_iv_requires_country)
}

// .zsearch.LintResult e_cert_policy_iv_requires_province_or_locality = 23;
bool Lints::has_e_cert_policy_iv_requires_province_or_locality() const {
  return this != internal_default_instance() && e_cert_policy_iv_requires_province_or_locality_ != NULL;
}
void Lints::clear_e_cert_policy_iv_requires_province_or_locality() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_iv_requires_province_or_locality_ != NULL) delete e_cert_policy_iv_requires_province_or_locality_;
  e_cert_policy_iv_requires_province_or_locality_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cert_policy_iv_requires_province_or_locality() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
  return e_cert_policy_iv_requires_province_or_locality_ != NULL ? *e_cert_policy_iv_requires_province_or_locality_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cert_policy_iv_requires_province_or_locality() {
  
  if (e_cert_policy_iv_requires_province_or_locality_ == NULL) {
    e_cert_policy_iv_requires_province_or_locality_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
  return e_cert_policy_iv_requires_province_or_locality_;
}
::zsearch::LintResult* Lints::release_e_cert_policy_iv_requires_province_or_locality() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
  
  ::zsearch::LintResult* temp = e_cert_policy_iv_requires_province_or_locality_;
  e_cert_policy_iv_requires_province_or_locality_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cert_policy_iv_requires_province_or_locality(::zsearch::LintResult* e_cert_policy_iv_requires_province_or_locality) {
  delete e_cert_policy_iv_requires_province_or_locality_;
  e_cert_policy_iv_requires_province_or_locality_ = e_cert_policy_iv_requires_province_or_locality;
  if (e_cert_policy_iv_requires_province_or_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
}

// .zsearch.LintResult e_cert_policy_ov_requires_country = 24;
bool Lints::has_e_cert_policy_ov_requires_country() const {
  return this != internal_default_instance() && e_cert_policy_ov_requires_country_ != NULL;
}
void Lints::clear_e_cert_policy_ov_requires_country() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_ov_requires_country_ != NULL) delete e_cert_policy_ov_requires_country_;
  e_cert_policy_ov_requires_country_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cert_policy_ov_requires_country() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_ov_requires_country)
  return e_cert_policy_ov_requires_country_ != NULL ? *e_cert_policy_ov_requires_country_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cert_policy_ov_requires_country() {
  
  if (e_cert_policy_ov_requires_country_ == NULL) {
    e_cert_policy_ov_requires_country_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_ov_requires_country)
  return e_cert_policy_ov_requires_country_;
}
::zsearch::LintResult* Lints::release_e_cert_policy_ov_requires_country() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_ov_requires_country)
  
  ::zsearch::LintResult* temp = e_cert_policy_ov_requires_country_;
  e_cert_policy_ov_requires_country_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cert_policy_ov_requires_country(::zsearch::LintResult* e_cert_policy_ov_requires_country) {
  delete e_cert_policy_ov_requires_country_;
  e_cert_policy_ov_requires_country_ = e_cert_policy_ov_requires_country;
  if (e_cert_policy_ov_requires_country) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_ov_requires_country)
}

// .zsearch.LintResult e_cert_policy_ov_requires_province_or_locality = 25;
bool Lints::has_e_cert_policy_ov_requires_province_or_locality() const {
  return this != internal_default_instance() && e_cert_policy_ov_requires_province_or_locality_ != NULL;
}
void Lints::clear_e_cert_policy_ov_requires_province_or_locality() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_ov_requires_province_or_locality_ != NULL) delete e_cert_policy_ov_requires_province_or_locality_;
  e_cert_policy_ov_requires_province_or_locality_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cert_policy_ov_requires_province_or_locality() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
  return e_cert_policy_ov_requires_province_or_locality_ != NULL ? *e_cert_policy_ov_requires_province_or_locality_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cert_policy_ov_requires_province_or_locality() {
  
  if (e_cert_policy_ov_requires_province_or_locality_ == NULL) {
    e_cert_policy_ov_requires_province_or_locality_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
  return e_cert_policy_ov_requires_province_or_locality_;
}
::zsearch::LintResult* Lints::release_e_cert_policy_ov_requires_province_or_locality() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
  
  ::zsearch::LintResult* temp = e_cert_policy_ov_requires_province_or_locality_;
  e_cert_policy_ov_requires_province_or_locality_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cert_policy_ov_requires_province_or_locality(::zsearch::LintResult* e_cert_policy_ov_requires_province_or_locality) {
  delete e_cert_policy_ov_requires_province_or_locality_;
  e_cert_policy_ov_requires_province_or_locality_ = e_cert_policy_ov_requires_province_or_locality;
  if (e_cert_policy_ov_requires_province_or_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
}

// .zsearch.LintResult e_cab_ov_requires_org = 26;
bool Lints::has_e_cab_ov_requires_org() const {
  return this != internal_default_instance() && e_cab_ov_requires_org_ != NULL;
}
void Lints::clear_e_cab_ov_requires_org() {
  if (GetArenaNoVirtual() == NULL && e_cab_ov_requires_org_ != NULL) delete e_cab_ov_requires_org_;
  e_cab_ov_requires_org_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cab_ov_requires_org() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_ov_requires_org)
  return e_cab_ov_requires_org_ != NULL ? *e_cab_ov_requires_org_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cab_ov_requires_org() {
  
  if (e_cab_ov_requires_org_ == NULL) {
    e_cab_ov_requires_org_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_ov_requires_org)
  return e_cab_ov_requires_org_;
}
::zsearch::LintResult* Lints::release_e_cab_ov_requires_org() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_ov_requires_org)
  
  ::zsearch::LintResult* temp = e_cab_ov_requires_org_;
  e_cab_ov_requires_org_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cab_ov_requires_org(::zsearch::LintResult* e_cab_ov_requires_org) {
  delete e_cab_ov_requires_org_;
  e_cab_ov_requires_org_ = e_cab_ov_requires_org;
  if (e_cab_ov_requires_org) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_ov_requires_org)
}

// .zsearch.LintResult e_cab_iv_requires_personal_name = 27;
bool Lints::has_e_cab_iv_requires_personal_name() const {
  return this != internal_default_instance() && e_cab_iv_requires_personal_name_ != NULL;
}
void Lints::clear_e_cab_iv_requires_personal_name() {
  if (GetArenaNoVirtual() == NULL && e_cab_iv_requires_personal_name_ != NULL) delete e_cab_iv_requires_personal_name_;
  e_cab_iv_requires_personal_name_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cab_iv_requires_personal_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_iv_requires_personal_name)
  return e_cab_iv_requires_personal_name_ != NULL ? *e_cab_iv_requires_personal_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cab_iv_requires_personal_name() {
  
  if (e_cab_iv_requires_personal_name_ == NULL) {
    e_cab_iv_requires_personal_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_iv_requires_personal_name)
  return e_cab_iv_requires_personal_name_;
}
::zsearch::LintResult* Lints::release_e_cab_iv_requires_personal_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_iv_requires_personal_name)
  
  ::zsearch::LintResult* temp = e_cab_iv_requires_personal_name_;
  e_cab_iv_requires_personal_name_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cab_iv_requires_personal_name(::zsearch::LintResult* e_cab_iv_requires_personal_name) {
  delete e_cab_iv_requires_personal_name_;
  e_cab_iv_requires_personal_name_ = e_cab_iv_requires_personal_name;
  if (e_cab_iv_requires_personal_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_iv_requires_personal_name)
}

// .zsearch.LintResult e_cert_unique_identifier_version_not_2_or_3 = 28;
bool Lints::has_e_cert_unique_identifier_version_not_2_or_3() const {
  return this != internal_default_instance() && e_cert_unique_identifier_version_not_2_or_3_ != NULL;
}
void Lints::clear_e_cert_unique_identifier_version_not_2_or_3() {
  if (GetArenaNoVirtual() == NULL && e_cert_unique_identifier_version_not_2_or_3_ != NULL) delete e_cert_unique_identifier_version_not_2_or_3_;
  e_cert_unique_identifier_version_not_2_or_3_ = NULL;
}
const ::zsearch::LintResult& Lints::e_cert_unique_identifier_version_not_2_or_3() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
  return e_cert_unique_identifier_version_not_2_or_3_ != NULL ? *e_cert_unique_identifier_version_not_2_or_3_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_cert_unique_identifier_version_not_2_or_3() {
  
  if (e_cert_unique_identifier_version_not_2_or_3_ == NULL) {
    e_cert_unique_identifier_version_not_2_or_3_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
  return e_cert_unique_identifier_version_not_2_or_3_;
}
::zsearch::LintResult* Lints::release_e_cert_unique_identifier_version_not_2_or_3() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
  
  ::zsearch::LintResult* temp = e_cert_unique_identifier_version_not_2_or_3_;
  e_cert_unique_identifier_version_not_2_or_3_ = NULL;
  return temp;
}
void Lints::set_allocated_e_cert_unique_identifier_version_not_2_or_3(::zsearch::LintResult* e_cert_unique_identifier_version_not_2_or_3) {
  delete e_cert_unique_identifier_version_not_2_or_3_;
  e_cert_unique_identifier_version_not_2_or_3_ = e_cert_unique_identifier_version_not_2_or_3;
  if (e_cert_unique_identifier_version_not_2_or_3) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
}

// .zsearch.LintResult e_distribution_point_incomplete = 30;
bool Lints::has_e_distribution_point_incomplete() const {
  return this != internal_default_instance() && e_distribution_point_incomplete_ != NULL;
}
void Lints::clear_e_distribution_point_incomplete() {
  if (GetArenaNoVirtual() == NULL && e_distribution_point_incomplete_ != NULL) delete e_distribution_point_incomplete_;
  e_distribution_point_incomplete_ = NULL;
}
const ::zsearch::LintResult& Lints::e_distribution_point_incomplete() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_distribution_point_incomplete)
  return e_distribution_point_incomplete_ != NULL ? *e_distribution_point_incomplete_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_distribution_point_incomplete() {
  
  if (e_distribution_point_incomplete_ == NULL) {
    e_distribution_point_incomplete_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_distribution_point_incomplete)
  return e_distribution_point_incomplete_;
}
::zsearch::LintResult* Lints::release_e_distribution_point_incomplete() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_distribution_point_incomplete)
  
  ::zsearch::LintResult* temp = e_distribution_point_incomplete_;
  e_distribution_point_incomplete_ = NULL;
  return temp;
}
void Lints::set_allocated_e_distribution_point_incomplete(::zsearch::LintResult* e_distribution_point_incomplete) {
  delete e_distribution_point_incomplete_;
  e_distribution_point_incomplete_ = e_distribution_point_incomplete;
  if (e_distribution_point_incomplete) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_distribution_point_incomplete)
}

// .zsearch.LintResult w_distribution_point_missing_ldap_or_uri = 31;
bool Lints::has_w_distribution_point_missing_ldap_or_uri() const {
  return this != internal_default_instance() && w_distribution_point_missing_ldap_or_uri_ != NULL;
}
void Lints::clear_w_distribution_point_missing_ldap_or_uri() {
  if (GetArenaNoVirtual() == NULL && w_distribution_point_missing_ldap_or_uri_ != NULL) delete w_distribution_point_missing_ldap_or_uri_;
  w_distribution_point_missing_ldap_or_uri_ = NULL;
}
const ::zsearch::LintResult& Lints::w_distribution_point_missing_ldap_or_uri() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
  return w_distribution_point_missing_ldap_or_uri_ != NULL ? *w_distribution_point_missing_ldap_or_uri_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_distribution_point_missing_ldap_or_uri() {
  
  if (w_distribution_point_missing_ldap_or_uri_ == NULL) {
    w_distribution_point_missing_ldap_or_uri_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
  return w_distribution_point_missing_ldap_or_uri_;
}
::zsearch::LintResult* Lints::release_w_distribution_point_missing_ldap_or_uri() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
  
  ::zsearch::LintResult* temp = w_distribution_point_missing_ldap_or_uri_;
  w_distribution_point_missing_ldap_or_uri_ = NULL;
  return temp;
}
void Lints::set_allocated_w_distribution_point_missing_ldap_or_uri(::zsearch::LintResult* w_distribution_point_missing_ldap_or_uri) {
  delete w_distribution_point_missing_ldap_or_uri_;
  w_distribution_point_missing_ldap_or_uri_ = w_distribution_point_missing_ldap_or_uri;
  if (w_distribution_point_missing_ldap_or_uri) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
}

// .zsearch.LintResult e_dsa_improper_modulus_or_divisor_size = 32;
bool Lints::has_e_dsa_improper_modulus_or_divisor_size() const {
  return this != internal_default_instance() && e_dsa_improper_modulus_or_divisor_size_ != NULL;
}
void Lints::clear_e_dsa_improper_modulus_or_divisor_size() {
  if (GetArenaNoVirtual() == NULL && e_dsa_improper_modulus_or_divisor_size_ != NULL) delete e_dsa_improper_modulus_or_divisor_size_;
  e_dsa_improper_modulus_or_divisor_size_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dsa_improper_modulus_or_divisor_size() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
  return e_dsa_improper_modulus_or_divisor_size_ != NULL ? *e_dsa_improper_modulus_or_divisor_size_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dsa_improper_modulus_or_divisor_size() {
  
  if (e_dsa_improper_modulus_or_divisor_size_ == NULL) {
    e_dsa_improper_modulus_or_divisor_size_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
  return e_dsa_improper_modulus_or_divisor_size_;
}
::zsearch::LintResult* Lints::release_e_dsa_improper_modulus_or_divisor_size() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
  
  ::zsearch::LintResult* temp = e_dsa_improper_modulus_or_divisor_size_;
  e_dsa_improper_modulus_or_divisor_size_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dsa_improper_modulus_or_divisor_size(::zsearch::LintResult* e_dsa_improper_modulus_or_divisor_size) {
  delete e_dsa_improper_modulus_or_divisor_size_;
  e_dsa_improper_modulus_or_divisor_size_ = e_dsa_improper_modulus_or_divisor_size;
  if (e_dsa_improper_modulus_or_divisor_size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
}

// .zsearch.LintResult e_dsa_shorter_than_2048_bits = 33;
bool Lints::has_e_dsa_shorter_than_2048_bits() const {
  return this != internal_default_instance() && e_dsa_shorter_than_2048_bits_ != NULL;
}
void Lints::clear_e_dsa_shorter_than_2048_bits() {
  if (GetArenaNoVirtual() == NULL && e_dsa_shorter_than_2048_bits_ != NULL) delete e_dsa_shorter_than_2048_bits_;
  e_dsa_shorter_than_2048_bits_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dsa_shorter_than_2048_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_shorter_than_2048_bits)
  return e_dsa_shorter_than_2048_bits_ != NULL ? *e_dsa_shorter_than_2048_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dsa_shorter_than_2048_bits() {
  
  if (e_dsa_shorter_than_2048_bits_ == NULL) {
    e_dsa_shorter_than_2048_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_shorter_than_2048_bits)
  return e_dsa_shorter_than_2048_bits_;
}
::zsearch::LintResult* Lints::release_e_dsa_shorter_than_2048_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_shorter_than_2048_bits)
  
  ::zsearch::LintResult* temp = e_dsa_shorter_than_2048_bits_;
  e_dsa_shorter_than_2048_bits_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dsa_shorter_than_2048_bits(::zsearch::LintResult* e_dsa_shorter_than_2048_bits) {
  delete e_dsa_shorter_than_2048_bits_;
  e_dsa_shorter_than_2048_bits_ = e_dsa_shorter_than_2048_bits;
  if (e_dsa_shorter_than_2048_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_shorter_than_2048_bits)
}

// .zsearch.LintResult e_ec_improper_curves = 34;
bool Lints::has_e_ec_improper_curves() const {
  return this != internal_default_instance() && e_ec_improper_curves_ != NULL;
}
void Lints::clear_e_ec_improper_curves() {
  if (GetArenaNoVirtual() == NULL && e_ec_improper_curves_ != NULL) delete e_ec_improper_curves_;
  e_ec_improper_curves_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ec_improper_curves() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ec_improper_curves)
  return e_ec_improper_curves_ != NULL ? *e_ec_improper_curves_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ec_improper_curves() {
  
  if (e_ec_improper_curves_ == NULL) {
    e_ec_improper_curves_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ec_improper_curves)
  return e_ec_improper_curves_;
}
::zsearch::LintResult* Lints::release_e_ec_improper_curves() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ec_improper_curves)
  
  ::zsearch::LintResult* temp = e_ec_improper_curves_;
  e_ec_improper_curves_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ec_improper_curves(::zsearch::LintResult* e_ec_improper_curves) {
  delete e_ec_improper_curves_;
  e_ec_improper_curves_ = e_ec_improper_curves;
  if (e_ec_improper_curves) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ec_improper_curves)
}

// .zsearch.LintResult w_eku_critical_improperly = 35;
bool Lints::has_w_eku_critical_improperly() const {
  return this != internal_default_instance() && w_eku_critical_improperly_ != NULL;
}
void Lints::clear_w_eku_critical_improperly() {
  if (GetArenaNoVirtual() == NULL && w_eku_critical_improperly_ != NULL) delete w_eku_critical_improperly_;
  w_eku_critical_improperly_ = NULL;
}
const ::zsearch::LintResult& Lints::w_eku_critical_improperly() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_eku_critical_improperly)
  return w_eku_critical_improperly_ != NULL ? *w_eku_critical_improperly_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_eku_critical_improperly() {
  
  if (w_eku_critical_improperly_ == NULL) {
    w_eku_critical_improperly_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_eku_critical_improperly)
  return w_eku_critical_improperly_;
}
::zsearch::LintResult* Lints::release_w_eku_critical_improperly() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_eku_critical_improperly)
  
  ::zsearch::LintResult* temp = w_eku_critical_improperly_;
  w_eku_critical_improperly_ = NULL;
  return temp;
}
void Lints::set_allocated_w_eku_critical_improperly(::zsearch::LintResult* w_eku_critical_improperly) {
  delete w_eku_critical_improperly_;
  w_eku_critical_improperly_ = w_eku_critical_improperly;
  if (w_eku_critical_improperly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_eku_critical_improperly)
}

// .zsearch.LintResult e_ev_business_category_missing = 36;
bool Lints::has_e_ev_business_category_missing() const {
  return this != internal_default_instance() && e_ev_business_category_missing_ != NULL;
}
void Lints::clear_e_ev_business_category_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_business_category_missing_ != NULL) delete e_ev_business_category_missing_;
  e_ev_business_category_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ev_business_category_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_business_category_missing)
  return e_ev_business_category_missing_ != NULL ? *e_ev_business_category_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ev_business_category_missing() {
  
  if (e_ev_business_category_missing_ == NULL) {
    e_ev_business_category_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_business_category_missing)
  return e_ev_business_category_missing_;
}
::zsearch::LintResult* Lints::release_e_ev_business_category_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_business_category_missing)
  
  ::zsearch::LintResult* temp = e_ev_business_category_missing_;
  e_ev_business_category_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ev_business_category_missing(::zsearch::LintResult* e_ev_business_category_missing) {
  delete e_ev_business_category_missing_;
  e_ev_business_category_missing_ = e_ev_business_category_missing;
  if (e_ev_business_category_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_business_category_missing)
}

// .zsearch.LintResult e_ev_country_name_missing = 37;
bool Lints::has_e_ev_country_name_missing() const {
  return this != internal_default_instance() && e_ev_country_name_missing_ != NULL;
}
void Lints::clear_e_ev_country_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_country_name_missing_ != NULL) delete e_ev_country_name_missing_;
  e_ev_country_name_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ev_country_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_country_name_missing)
  return e_ev_country_name_missing_ != NULL ? *e_ev_country_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ev_country_name_missing() {
  
  if (e_ev_country_name_missing_ == NULL) {
    e_ev_country_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_country_name_missing)
  return e_ev_country_name_missing_;
}
::zsearch::LintResult* Lints::release_e_ev_country_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_country_name_missing)
  
  ::zsearch::LintResult* temp = e_ev_country_name_missing_;
  e_ev_country_name_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ev_country_name_missing(::zsearch::LintResult* e_ev_country_name_missing) {
  delete e_ev_country_name_missing_;
  e_ev_country_name_missing_ = e_ev_country_name_missing;
  if (e_ev_country_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_country_name_missing)
}

// .zsearch.LintResult e_ev_locality_name_missing = 38;
bool Lints::has_e_ev_locality_name_missing() const {
  return this != internal_default_instance() && e_ev_locality_name_missing_ != NULL;
}
void Lints::clear_e_ev_locality_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_locality_name_missing_ != NULL) delete e_ev_locality_name_missing_;
  e_ev_locality_name_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ev_locality_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_locality_name_missing)
  return e_ev_locality_name_missing_ != NULL ? *e_ev_locality_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ev_locality_name_missing() {
  
  if (e_ev_locality_name_missing_ == NULL) {
    e_ev_locality_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_locality_name_missing)
  return e_ev_locality_name_missing_;
}
::zsearch::LintResult* Lints::release_e_ev_locality_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_locality_name_missing)
  
  ::zsearch::LintResult* temp = e_ev_locality_name_missing_;
  e_ev_locality_name_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ev_locality_name_missing(::zsearch::LintResult* e_ev_locality_name_missing) {
  delete e_ev_locality_name_missing_;
  e_ev_locality_name_missing_ = e_ev_locality_name_missing;
  if (e_ev_locality_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_locality_name_missing)
}

// .zsearch.LintResult e_ev_organization_name_missing = 39;
bool Lints::has_e_ev_organization_name_missing() const {
  return this != internal_default_instance() && e_ev_organization_name_missing_ != NULL;
}
void Lints::clear_e_ev_organization_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_organization_name_missing_ != NULL) delete e_ev_organization_name_missing_;
  e_ev_organization_name_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ev_organization_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_organization_name_missing)
  return e_ev_organization_name_missing_ != NULL ? *e_ev_organization_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ev_organization_name_missing() {
  
  if (e_ev_organization_name_missing_ == NULL) {
    e_ev_organization_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_organization_name_missing)
  return e_ev_organization_name_missing_;
}
::zsearch::LintResult* Lints::release_e_ev_organization_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_organization_name_missing)
  
  ::zsearch::LintResult* temp = e_ev_organization_name_missing_;
  e_ev_organization_name_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ev_organization_name_missing(::zsearch::LintResult* e_ev_organization_name_missing) {
  delete e_ev_organization_name_missing_;
  e_ev_organization_name_missing_ = e_ev_organization_name_missing;
  if (e_ev_organization_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_organization_name_missing)
}

// .zsearch.LintResult e_ev_serial_number_missing = 40;
bool Lints::has_e_ev_serial_number_missing() const {
  return this != internal_default_instance() && e_ev_serial_number_missing_ != NULL;
}
void Lints::clear_e_ev_serial_number_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_serial_number_missing_ != NULL) delete e_ev_serial_number_missing_;
  e_ev_serial_number_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ev_serial_number_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_serial_number_missing)
  return e_ev_serial_number_missing_ != NULL ? *e_ev_serial_number_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ev_serial_number_missing() {
  
  if (e_ev_serial_number_missing_ == NULL) {
    e_ev_serial_number_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_serial_number_missing)
  return e_ev_serial_number_missing_;
}
::zsearch::LintResult* Lints::release_e_ev_serial_number_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_serial_number_missing)
  
  ::zsearch::LintResult* temp = e_ev_serial_number_missing_;
  e_ev_serial_number_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ev_serial_number_missing(::zsearch::LintResult* e_ev_serial_number_missing) {
  delete e_ev_serial_number_missing_;
  e_ev_serial_number_missing_ = e_ev_serial_number_missing;
  if (e_ev_serial_number_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_serial_number_missing)
}

// .zsearch.LintResult e_ev_valid_time_too_long = 41;
bool Lints::has_e_ev_valid_time_too_long() const {
  return this != internal_default_instance() && e_ev_valid_time_too_long_ != NULL;
}
void Lints::clear_e_ev_valid_time_too_long() {
  if (GetArenaNoVirtual() == NULL && e_ev_valid_time_too_long_ != NULL) delete e_ev_valid_time_too_long_;
  e_ev_valid_time_too_long_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ev_valid_time_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_valid_time_too_long)
  return e_ev_valid_time_too_long_ != NULL ? *e_ev_valid_time_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ev_valid_time_too_long() {
  
  if (e_ev_valid_time_too_long_ == NULL) {
    e_ev_valid_time_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_valid_time_too_long)
  return e_ev_valid_time_too_long_;
}
::zsearch::LintResult* Lints::release_e_ev_valid_time_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_valid_time_too_long)
  
  ::zsearch::LintResult* temp = e_ev_valid_time_too_long_;
  e_ev_valid_time_too_long_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ev_valid_time_too_long(::zsearch::LintResult* e_ev_valid_time_too_long) {
  delete e_ev_valid_time_too_long_;
  e_ev_valid_time_too_long_ = e_ev_valid_time_too_long;
  if (e_ev_valid_time_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_valid_time_too_long)
}

// .zsearch.LintResult w_ext_aia_access_location_missing = 42;
bool Lints::has_w_ext_aia_access_location_missing() const {
  return this != internal_default_instance() && w_ext_aia_access_location_missing_ != NULL;
}
void Lints::clear_w_ext_aia_access_location_missing() {
  if (GetArenaNoVirtual() == NULL && w_ext_aia_access_location_missing_ != NULL) delete w_ext_aia_access_location_missing_;
  w_ext_aia_access_location_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_aia_access_location_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_aia_access_location_missing)
  return w_ext_aia_access_location_missing_ != NULL ? *w_ext_aia_access_location_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_aia_access_location_missing() {
  
  if (w_ext_aia_access_location_missing_ == NULL) {
    w_ext_aia_access_location_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_aia_access_location_missing)
  return w_ext_aia_access_location_missing_;
}
::zsearch::LintResult* Lints::release_w_ext_aia_access_location_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_aia_access_location_missing)
  
  ::zsearch::LintResult* temp = w_ext_aia_access_location_missing_;
  w_ext_aia_access_location_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_aia_access_location_missing(::zsearch::LintResult* w_ext_aia_access_location_missing) {
  delete w_ext_aia_access_location_missing_;
  w_ext_aia_access_location_missing_ = w_ext_aia_access_location_missing;
  if (w_ext_aia_access_location_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_aia_access_location_missing)
}

// .zsearch.LintResult e_ext_aia_marked_critical = 43;
bool Lints::has_e_ext_aia_marked_critical() const {
  return this != internal_default_instance() && e_ext_aia_marked_critical_ != NULL;
}
void Lints::clear_e_ext_aia_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_aia_marked_critical_ != NULL) delete e_ext_aia_marked_critical_;
  e_ext_aia_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_aia_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_aia_marked_critical)
  return e_ext_aia_marked_critical_ != NULL ? *e_ext_aia_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_aia_marked_critical() {
  
  if (e_ext_aia_marked_critical_ == NULL) {
    e_ext_aia_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_aia_marked_critical)
  return e_ext_aia_marked_critical_;
}
::zsearch::LintResult* Lints::release_e_ext_aia_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_aia_marked_critical)
  
  ::zsearch::LintResult* temp = e_ext_aia_marked_critical_;
  e_ext_aia_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_aia_marked_critical(::zsearch::LintResult* e_ext_aia_marked_critical) {
  delete e_ext_aia_marked_critical_;
  e_ext_aia_marked_critical_ = e_ext_aia_marked_critical;
  if (e_ext_aia_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_aia_marked_critical)
}

// .zsearch.LintResult e_ext_authority_key_identifier_critical = 44;
bool Lints::has_e_ext_authority_key_identifier_critical() const {
  return this != internal_default_instance() && e_ext_authority_key_identifier_critical_ != NULL;
}
void Lints::clear_e_ext_authority_key_identifier_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_critical_ != NULL) delete e_ext_authority_key_identifier_critical_;
  e_ext_authority_key_identifier_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_authority_key_identifier_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_authority_key_identifier_critical)
  return e_ext_authority_key_identifier_critical_ != NULL ? *e_ext_authority_key_identifier_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_authority_key_identifier_critical() {
  
  if (e_ext_authority_key_identifier_critical_ == NULL) {
    e_ext_authority_key_identifier_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_authority_key_identifier_critical)
  return e_ext_authority_key_identifier_critical_;
}
::zsearch::LintResult* Lints::release_e_ext_authority_key_identifier_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_authority_key_identifier_critical)
  
  ::zsearch::LintResult* temp = e_ext_authority_key_identifier_critical_;
  e_ext_authority_key_identifier_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_authority_key_identifier_critical(::zsearch::LintResult* e_ext_authority_key_identifier_critical) {
  delete e_ext_authority_key_identifier_critical_;
  e_ext_authority_key_identifier_critical_ = e_ext_authority_key_identifier_critical;
  if (e_ext_authority_key_identifier_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_authority_key_identifier_critical)
}

// .zsearch.LintResult e_ext_authority_key_identifier_missing = 45;
bool Lints::has_e_ext_authority_key_identifier_missing() const {
  return this != internal_default_instance() && e_ext_authority_key_identifier_missing_ != NULL;
}
void Lints::clear_e_ext_authority_key_identifier_missing() {
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_missing_ != NULL) delete e_ext_authority_key_identifier_missing_;
  e_ext_authority_key_identifier_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_authority_key_identifier_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_authority_key_identifier_missing)
  return e_ext_authority_key_identifier_missing_ != NULL ? *e_ext_authority_key_identifier_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_authority_key_identifier_missing() {
  
  if (e_ext_authority_key_identifier_missing_ == NULL) {
    e_ext_authority_key_identifier_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_authority_key_identifier_missing)
  return e_ext_authority_key_identifier_missing_;
}
::zsearch::LintResult* Lints::release_e_ext_authority_key_identifier_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_authority_key_identifier_missing)
  
  ::zsearch::LintResult* temp = e_ext_authority_key_identifier_missing_;
  e_ext_authority_key_identifier_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_authority_key_identifier_missing(::zsearch::LintResult* e_ext_authority_key_identifier_missing) {
  delete e_ext_authority_key_identifier_missing_;
  e_ext_authority_key_identifier_missing_ = e_ext_authority_key_identifier_missing;
  if (e_ext_authority_key_identifier_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_authority_key_identifier_missing)
}

// .zsearch.LintResult e_ext_authority_key_identifier_no_key_identifier = 46;
bool Lints::has_e_ext_authority_key_identifier_no_key_identifier() const {
  return this != internal_default_instance() && e_ext_authority_key_identifier_no_key_identifier_ != NULL;
}
void Lints::clear_e_ext_authority_key_identifier_no_key_identifier() {
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_no_key_identifier_ != NULL) delete e_ext_authority_key_identifier_no_key_identifier_;
  e_ext_authority_key_identifier_no_key_identifier_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_authority_key_identifier_no_key_identifier() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
  return e_ext_authority_key_identifier_no_key_identifier_ != NULL ? *e_ext_authority_key_identifier_no_key_identifier_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_authority_key_identifier_no_key_identifier() {
  
  if (e_ext_authority_key_identifier_no_key_identifier_ == NULL) {
    e_ext_authority_key_identifier_no_key_identifier_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
  return e_ext_authority_key_identifier_no_key_identifier_;
}
::zsearch::LintResult* Lints::release_e_ext_authority_key_identifier_no_key_identifier() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
  
  ::zsearch::LintResult* temp = e_ext_authority_key_identifier_no_key_identifier_;
  e_ext_authority_key_identifier_no_key_identifier_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_authority_key_identifier_no_key_identifier(::zsearch::LintResult* e_ext_authority_key_identifier_no_key_identifier) {
  delete e_ext_authority_key_identifier_no_key_identifier_;
  e_ext_authority_key_identifier_no_key_identifier_ = e_ext_authority_key_identifier_no_key_identifier;
  if (e_ext_authority_key_identifier_no_key_identifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
}

// .zsearch.LintResult w_ext_cert_policy_contains_noticeref = 47;
bool Lints::has_w_ext_cert_policy_contains_noticeref() const {
  return this != internal_default_instance() && w_ext_cert_policy_contains_noticeref_ != NULL;
}
void Lints::clear_w_ext_cert_policy_contains_noticeref() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_contains_noticeref_ != NULL) delete w_ext_cert_policy_contains_noticeref_;
  w_ext_cert_policy_contains_noticeref_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_cert_policy_contains_noticeref() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
  return w_ext_cert_policy_contains_noticeref_ != NULL ? *w_ext_cert_policy_contains_noticeref_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_contains_noticeref() {
  
  if (w_ext_cert_policy_contains_noticeref_ == NULL) {
    w_ext_cert_policy_contains_noticeref_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
  return w_ext_cert_policy_contains_noticeref_;
}
::zsearch::LintResult* Lints::release_w_ext_cert_policy_contains_noticeref() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_contains_noticeref_;
  w_ext_cert_policy_contains_noticeref_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_cert_policy_contains_noticeref(::zsearch::LintResult* w_ext_cert_policy_contains_noticeref) {
  delete w_ext_cert_policy_contains_noticeref_;
  w_ext_cert_policy_contains_noticeref_ = w_ext_cert_policy_contains_noticeref;
  if (w_ext_cert_policy_contains_noticeref) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
}

// .zsearch.LintResult e_ext_cert_policy_disallowed_any_policy_qualifier = 48;
bool Lints::has_e_ext_cert_policy_disallowed_any_policy_qualifier() const {
  return this != internal_default_instance() && e_ext_cert_policy_disallowed_any_policy_qualifier_ != NULL;
}
void Lints::clear_e_ext_cert_policy_disallowed_any_policy_qualifier() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_disallowed_any_policy_qualifier_ != NULL) delete e_ext_cert_policy_disallowed_any_policy_qualifier_;
  e_ext_cert_policy_disallowed_any_policy_qualifier_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_cert_policy_disallowed_any_policy_qualifier() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
  return e_ext_cert_policy_disallowed_any_policy_qualifier_ != NULL ? *e_ext_cert_policy_disallowed_any_policy_qualifier_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_disallowed_any_policy_qualifier() {
  
  if (e_ext_cert_policy_disallowed_any_policy_qualifier_ == NULL) {
    e_ext_cert_policy_disallowed_any_policy_qualifier_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
  return e_ext_cert_policy_disallowed_any_policy_qualifier_;
}
::zsearch::LintResult* Lints::release_e_ext_cert_policy_disallowed_any_policy_qualifier() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_disallowed_any_policy_qualifier_;
  e_ext_cert_policy_disallowed_any_policy_qualifier_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_cert_policy_disallowed_any_policy_qualifier(::zsearch::LintResult* e_ext_cert_policy_disallowed_any_policy_qualifier) {
  delete e_ext_cert_policy_disallowed_any_policy_qualifier_;
  e_ext_cert_policy_disallowed_any_policy_qualifier_ = e_ext_cert_policy_disallowed_any_policy_qualifier;
  if (e_ext_cert_policy_disallowed_any_policy_qualifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
}

// .zsearch.LintResult e_ext_cert_policy_duplicate = 49;
bool Lints::has_e_ext_cert_policy_duplicate() const {
  return this != internal_default_instance() && e_ext_cert_policy_duplicate_ != NULL;
}
void Lints::clear_e_ext_cert_policy_duplicate() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_duplicate_ != NULL) delete e_ext_cert_policy_duplicate_;
  e_ext_cert_policy_duplicate_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_cert_policy_duplicate() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_duplicate)
  return e_ext_cert_policy_duplicate_ != NULL ? *e_ext_cert_policy_duplicate_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_duplicate() {
  
  if (e_ext_cert_policy_duplicate_ == NULL) {
    e_ext_cert_policy_duplicate_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_duplicate)
  return e_ext_cert_policy_duplicate_;
}
::zsearch::LintResult* Lints::release_e_ext_cert_policy_duplicate() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_duplicate)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_duplicate_;
  e_ext_cert_policy_duplicate_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_cert_policy_duplicate(::zsearch::LintResult* e_ext_cert_policy_duplicate) {
  delete e_ext_cert_policy_duplicate_;
  e_ext_cert_policy_duplicate_ = e_ext_cert_policy_duplicate;
  if (e_ext_cert_policy_duplicate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_duplicate)
}

// .zsearch.LintResult e_ext_cert_policy_explicit_text_ia5_string = 50;
bool Lints::has_e_ext_cert_policy_explicit_text_ia5_string() const {
  return this != internal_default_instance() && e_ext_cert_policy_explicit_text_ia5_string_ != NULL;
}
void Lints::clear_e_ext_cert_policy_explicit_text_ia5_string() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_explicit_text_ia5_string_ != NULL) delete e_ext_cert_policy_explicit_text_ia5_string_;
  e_ext_cert_policy_explicit_text_ia5_string_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_cert_policy_explicit_text_ia5_string() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
  return e_ext_cert_policy_explicit_text_ia5_string_ != NULL ? *e_ext_cert_policy_explicit_text_ia5_string_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_explicit_text_ia5_string() {
  
  if (e_ext_cert_policy_explicit_text_ia5_string_ == NULL) {
    e_ext_cert_policy_explicit_text_ia5_string_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
  return e_ext_cert_policy_explicit_text_ia5_string_;
}
::zsearch::LintResult* Lints::release_e_ext_cert_policy_explicit_text_ia5_string() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_explicit_text_ia5_string_;
  e_ext_cert_policy_explicit_text_ia5_string_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_cert_policy_explicit_text_ia5_string(::zsearch::LintResult* e_ext_cert_policy_explicit_text_ia5_string) {
  delete e_ext_cert_policy_explicit_text_ia5_string_;
  e_ext_cert_policy_explicit_text_ia5_string_ = e_ext_cert_policy_explicit_text_ia5_string;
  if (e_ext_cert_policy_explicit_text_ia5_string) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
}

// .zsearch.LintResult w_ext_cert_policy_explicit_text_includes_control = 51;
bool Lints::has_w_ext_cert_policy_explicit_text_includes_control() const {
  return this != internal_default_instance() && w_ext_cert_policy_explicit_text_includes_control_ != NULL;
}
void Lints::clear_w_ext_cert_policy_explicit_text_includes_control() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_includes_control_ != NULL) delete w_ext_cert_policy_explicit_text_includes_control_;
  w_ext_cert_policy_explicit_text_includes_control_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_cert_policy_explicit_text_includes_control() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
  return w_ext_cert_policy_explicit_text_includes_control_ != NULL ? *w_ext_cert_policy_explicit_text_includes_control_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_explicit_text_includes_control() {
  
  if (w_ext_cert_policy_explicit_text_includes_control_ == NULL) {
    w_ext_cert_policy_explicit_text_includes_control_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
  return w_ext_cert_policy_explicit_text_includes_control_;
}
::zsearch::LintResult* Lints::release_w_ext_cert_policy_explicit_text_includes_control() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_explicit_text_includes_control_;
  w_ext_cert_policy_explicit_text_includes_control_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_cert_policy_explicit_text_includes_control(::zsearch::LintResult* w_ext_cert_policy_explicit_text_includes_control) {
  delete w_ext_cert_policy_explicit_text_includes_control_;
  w_ext_cert_policy_explicit_text_includes_control_ = w_ext_cert_policy_explicit_text_includes_control;
  if (w_ext_cert_policy_explicit_text_includes_control) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
}

// .zsearch.LintResult w_ext_cert_policy_explicit_text_not_nfc = 52;
bool Lints::has_w_ext_cert_policy_explicit_text_not_nfc() const {
  return this != internal_default_instance() && w_ext_cert_policy_explicit_text_not_nfc_ != NULL;
}
void Lints::clear_w_ext_cert_policy_explicit_text_not_nfc() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_not_nfc_ != NULL) delete w_ext_cert_policy_explicit_text_not_nfc_;
  w_ext_cert_policy_explicit_text_not_nfc_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_cert_policy_explicit_text_not_nfc() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
  return w_ext_cert_policy_explicit_text_not_nfc_ != NULL ? *w_ext_cert_policy_explicit_text_not_nfc_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_explicit_text_not_nfc() {
  
  if (w_ext_cert_policy_explicit_text_not_nfc_ == NULL) {
    w_ext_cert_policy_explicit_text_not_nfc_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
  return w_ext_cert_policy_explicit_text_not_nfc_;
}
::zsearch::LintResult* Lints::release_w_ext_cert_policy_explicit_text_not_nfc() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_explicit_text_not_nfc_;
  w_ext_cert_policy_explicit_text_not_nfc_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_cert_policy_explicit_text_not_nfc(::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_nfc) {
  delete w_ext_cert_policy_explicit_text_not_nfc_;
  w_ext_cert_policy_explicit_text_not_nfc_ = w_ext_cert_policy_explicit_text_not_nfc;
  if (w_ext_cert_policy_explicit_text_not_nfc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
}

// .zsearch.LintResult w_ext_cert_policy_explicit_text_not_utf8 = 53;
bool Lints::has_w_ext_cert_policy_explicit_text_not_utf8() const {
  return this != internal_default_instance() && w_ext_cert_policy_explicit_text_not_utf8_ != NULL;
}
void Lints::clear_w_ext_cert_policy_explicit_text_not_utf8() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_not_utf8_ != NULL) delete w_ext_cert_policy_explicit_text_not_utf8_;
  w_ext_cert_policy_explicit_text_not_utf8_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_cert_policy_explicit_text_not_utf8() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
  return w_ext_cert_policy_explicit_text_not_utf8_ != NULL ? *w_ext_cert_policy_explicit_text_not_utf8_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_explicit_text_not_utf8() {
  
  if (w_ext_cert_policy_explicit_text_not_utf8_ == NULL) {
    w_ext_cert_policy_explicit_text_not_utf8_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
  return w_ext_cert_policy_explicit_text_not_utf8_;
}
::zsearch::LintResult* Lints::release_w_ext_cert_policy_explicit_text_not_utf8() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_explicit_text_not_utf8_;
  w_ext_cert_policy_explicit_text_not_utf8_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_cert_policy_explicit_text_not_utf8(::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_utf8) {
  delete w_ext_cert_policy_explicit_text_not_utf8_;
  w_ext_cert_policy_explicit_text_not_utf8_ = w_ext_cert_policy_explicit_text_not_utf8;
  if (w_ext_cert_policy_explicit_text_not_utf8) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
}

// .zsearch.LintResult e_ext_cert_policy_explicit_text_too_long = 54;
bool Lints::has_e_ext_cert_policy_explicit_text_too_long() const {
  return this != internal_default_instance() && e_ext_cert_policy_explicit_text_too_long_ != NULL;
}
void Lints::clear_e_ext_cert_policy_explicit_text_too_long() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_explicit_text_too_long_ != NULL) delete e_ext_cert_policy_explicit_text_too_long_;
  e_ext_cert_policy_explicit_text_too_long_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_cert_policy_explicit_text_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
  return e_ext_cert_policy_explicit_text_too_long_ != NULL ? *e_ext_cert_policy_explicit_text_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_explicit_text_too_long() {
  
  if (e_ext_cert_policy_explicit_text_too_long_ == NULL) {
    e_ext_cert_policy_explicit_text_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
  return e_ext_cert_policy_explicit_text_too_long_;
}
::zsearch::LintResult* Lints::release_e_ext_cert_policy_explicit_text_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_explicit_text_too_long_;
  e_ext_cert_policy_explicit_text_too_long_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_cert_policy_explicit_text_too_long(::zsearch::LintResult* e_ext_cert_policy_explicit_text_too_long) {
  delete e_ext_cert_policy_explicit_text_too_long_;
  e_ext_cert_policy_explicit_text_too_long_ = e_ext_cert_policy_explicit_text_too_long;
  if (e_ext_cert_policy_explicit_text_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
}

// .zsearch.LintResult w_ext_crl_distribution_marked_critical = 55;
bool Lints::has_w_ext_crl_distribution_marked_critical() const {
  return this != internal_default_instance() && w_ext_crl_distribution_marked_critical_ != NULL;
}
void Lints::clear_w_ext_crl_distribution_marked_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_crl_distribution_marked_critical_ != NULL) delete w_ext_crl_distribution_marked_critical_;
  w_ext_crl_distribution_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_crl_distribution_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_crl_distribution_marked_critical)
  return w_ext_crl_distribution_marked_critical_ != NULL ? *w_ext_crl_distribution_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_crl_distribution_marked_critical() {
  
  if (w_ext_crl_distribution_marked_critical_ == NULL) {
    w_ext_crl_distribution_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_crl_distribution_marked_critical)
  return w_ext_crl_distribution_marked_critical_;
}
::zsearch::LintResult* Lints::release_w_ext_crl_distribution_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_crl_distribution_marked_critical)
  
  ::zsearch::LintResult* temp = w_ext_crl_distribution_marked_critical_;
  w_ext_crl_distribution_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_crl_distribution_marked_critical(::zsearch::LintResult* w_ext_crl_distribution_marked_critical) {
  delete w_ext_crl_distribution_marked_critical_;
  w_ext_crl_distribution_marked_critical_ = w_ext_crl_distribution_marked_critical;
  if (w_ext_crl_distribution_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_crl_distribution_marked_critical)
}

// .zsearch.LintResult e_ext_duplicate_extension = 56;
bool Lints::has_e_ext_duplicate_extension() const {
  return this != internal_default_instance() && e_ext_duplicate_extension_ != NULL;
}
void Lints::clear_e_ext_duplicate_extension() {
  if (GetArenaNoVirtual() == NULL && e_ext_duplicate_extension_ != NULL) delete e_ext_duplicate_extension_;
  e_ext_duplicate_extension_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_duplicate_extension() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_duplicate_extension)
  return e_ext_duplicate_extension_ != NULL ? *e_ext_duplicate_extension_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_duplicate_extension() {
  
  if (e_ext_duplicate_extension_ == NULL) {
    e_ext_duplicate_extension_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_duplicate_extension)
  return e_ext_duplicate_extension_;
}
::zsearch::LintResult* Lints::release_e_ext_duplicate_extension() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_duplicate_extension)
  
  ::zsearch::LintResult* temp = e_ext_duplicate_extension_;
  e_ext_duplicate_extension_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_duplicate_extension(::zsearch::LintResult* e_ext_duplicate_extension) {
  delete e_ext_duplicate_extension_;
  e_ext_duplicate_extension_ = e_ext_duplicate_extension;
  if (e_ext_duplicate_extension) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_duplicate_extension)
}

// .zsearch.LintResult e_ext_freshest_crl_marked_critical = 57;
bool Lints::has_e_ext_freshest_crl_marked_critical() const {
  return this != internal_default_instance() && e_ext_freshest_crl_marked_critical_ != NULL;
}
void Lints::clear_e_ext_freshest_crl_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_freshest_crl_marked_critical_ != NULL) delete e_ext_freshest_crl_marked_critical_;
  e_ext_freshest_crl_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_freshest_crl_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_freshest_crl_marked_critical)
  return e_ext_freshest_crl_marked_critical_ != NULL ? *e_ext_freshest_crl_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_freshest_crl_marked_critical() {
  
  if (e_ext_freshest_crl_marked_critical_ == NULL) {
    e_ext_freshest_crl_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_freshest_crl_marked_critical)
  return e_ext_freshest_crl_marked_critical_;
}
::zsearch::LintResult* Lints::release_e_ext_freshest_crl_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_freshest_crl_marked_critical)
  
  ::zsearch::LintResult* temp = e_ext_freshest_crl_marked_critical_;
  e_ext_freshest_crl_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_freshest_crl_marked_critical(::zsearch::LintResult* e_ext_freshest_crl_marked_critical) {
  delete e_ext_freshest_crl_marked_critical_;
  e_ext_freshest_crl_marked_critical_ = e_ext_freshest_crl_marked_critical;
  if (e_ext_freshest_crl_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_freshest_crl_marked_critical)
}

// .zsearch.LintResult w_ext_ian_critical = 58;
bool Lints::has_w_ext_ian_critical() const {
  return this != internal_default_instance() && w_ext_ian_critical_ != NULL;
}
void Lints::clear_w_ext_ian_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_ian_critical_ != NULL) delete w_ext_ian_critical_;
  w_ext_ian_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_ian_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_ian_critical)
  return w_ext_ian_critical_ != NULL ? *w_ext_ian_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_ian_critical() {
  
  if (w_ext_ian_critical_ == NULL) {
    w_ext_ian_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_ian_critical)
  return w_ext_ian_critical_;
}
::zsearch::LintResult* Lints::release_w_ext_ian_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_ian_critical)
  
  ::zsearch::LintResult* temp = w_ext_ian_critical_;
  w_ext_ian_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_ian_critical(::zsearch::LintResult* w_ext_ian_critical) {
  delete w_ext_ian_critical_;
  w_ext_ian_critical_ = w_ext_ian_critical;
  if (w_ext_ian_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_ian_critical)
}

// .zsearch.LintResult e_ext_ian_dns_not_ia5_string = 59;
bool Lints::has_e_ext_ian_dns_not_ia5_string() const {
  return this != internal_default_instance() && e_ext_ian_dns_not_ia5_string_ != NULL;
}
void Lints::clear_e_ext_ian_dns_not_ia5_string() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_dns_not_ia5_string_ != NULL) delete e_ext_ian_dns_not_ia5_string_;
  e_ext_ian_dns_not_ia5_string_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_dns_not_ia5_string() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
  return e_ext_ian_dns_not_ia5_string_ != NULL ? *e_ext_ian_dns_not_ia5_string_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_dns_not_ia5_string() {
  
  if (e_ext_ian_dns_not_ia5_string_ == NULL) {
    e_ext_ian_dns_not_ia5_string_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
  return e_ext_ian_dns_not_ia5_string_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_dns_not_ia5_string() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
  
  ::zsearch::LintResult* temp = e_ext_ian_dns_not_ia5_string_;
  e_ext_ian_dns_not_ia5_string_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_dns_not_ia5_string(::zsearch::LintResult* e_ext_ian_dns_not_ia5_string) {
  delete e_ext_ian_dns_not_ia5_string_;
  e_ext_ian_dns_not_ia5_string_ = e_ext_ian_dns_not_ia5_string;
  if (e_ext_ian_dns_not_ia5_string) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
}

// .zsearch.LintResult e_ext_ian_empty_name = 60;
bool Lints::has_e_ext_ian_empty_name() const {
  return this != internal_default_instance() && e_ext_ian_empty_name_ != NULL;
}
void Lints::clear_e_ext_ian_empty_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_empty_name_ != NULL) delete e_ext_ian_empty_name_;
  e_ext_ian_empty_name_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_empty_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_empty_name)
  return e_ext_ian_empty_name_ != NULL ? *e_ext_ian_empty_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_empty_name() {
  
  if (e_ext_ian_empty_name_ == NULL) {
    e_ext_ian_empty_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_empty_name)
  return e_ext_ian_empty_name_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_empty_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_empty_name)
  
  ::zsearch::LintResult* temp = e_ext_ian_empty_name_;
  e_ext_ian_empty_name_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_empty_name(::zsearch::LintResult* e_ext_ian_empty_name) {
  delete e_ext_ian_empty_name_;
  e_ext_ian_empty_name_ = e_ext_ian_empty_name;
  if (e_ext_ian_empty_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_empty_name)
}

// .zsearch.LintResult e_ext_ian_no_entries = 61;
bool Lints::has_e_ext_ian_no_entries() const {
  return this != internal_default_instance() && e_ext_ian_no_entries_ != NULL;
}
void Lints::clear_e_ext_ian_no_entries() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_no_entries_ != NULL) delete e_ext_ian_no_entries_;
  e_ext_ian_no_entries_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_no_entries() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_no_entries)
  return e_ext_ian_no_entries_ != NULL ? *e_ext_ian_no_entries_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_no_entries() {
  
  if (e_ext_ian_no_entries_ == NULL) {
    e_ext_ian_no_entries_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_no_entries)
  return e_ext_ian_no_entries_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_no_entries() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_no_entries)
  
  ::zsearch::LintResult* temp = e_ext_ian_no_entries_;
  e_ext_ian_no_entries_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_no_entries(::zsearch::LintResult* e_ext_ian_no_entries) {
  delete e_ext_ian_no_entries_;
  e_ext_ian_no_entries_ = e_ext_ian_no_entries;
  if (e_ext_ian_no_entries) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_no_entries)
}

// .zsearch.LintResult e_ext_ian_rfc822_format_invalid = 62;
bool Lints::has_e_ext_ian_rfc822_format_invalid() const {
  return this != internal_default_instance() && e_ext_ian_rfc822_format_invalid_ != NULL;
}
void Lints::clear_e_ext_ian_rfc822_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_rfc822_format_invalid_ != NULL) delete e_ext_ian_rfc822_format_invalid_;
  e_ext_ian_rfc822_format_invalid_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_rfc822_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
  return e_ext_ian_rfc822_format_invalid_ != NULL ? *e_ext_ian_rfc822_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_rfc822_format_invalid() {
  
  if (e_ext_ian_rfc822_format_invalid_ == NULL) {
    e_ext_ian_rfc822_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
  return e_ext_ian_rfc822_format_invalid_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_rfc822_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_ian_rfc822_format_invalid_;
  e_ext_ian_rfc822_format_invalid_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_rfc822_format_invalid(::zsearch::LintResult* e_ext_ian_rfc822_format_invalid) {
  delete e_ext_ian_rfc822_format_invalid_;
  e_ext_ian_rfc822_format_invalid_ = e_ext_ian_rfc822_format_invalid;
  if (e_ext_ian_rfc822_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
}

// .zsearch.LintResult e_ext_ian_space_dns_name = 63;
bool Lints::has_e_ext_ian_space_dns_name() const {
  return this != internal_default_instance() && e_ext_ian_space_dns_name_ != NULL;
}
void Lints::clear_e_ext_ian_space_dns_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_space_dns_name_ != NULL) delete e_ext_ian_space_dns_name_;
  e_ext_ian_space_dns_name_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_space_dns_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_space_dns_name)
  return e_ext_ian_space_dns_name_ != NULL ? *e_ext_ian_space_dns_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_space_dns_name() {
  
  if (e_ext_ian_space_dns_name_ == NULL) {
    e_ext_ian_space_dns_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_space_dns_name)
  return e_ext_ian_space_dns_name_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_space_dns_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_space_dns_name)
  
  ::zsearch::LintResult* temp = e_ext_ian_space_dns_name_;
  e_ext_ian_space_dns_name_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_space_dns_name(::zsearch::LintResult* e_ext_ian_space_dns_name) {
  delete e_ext_ian_space_dns_name_;
  e_ext_ian_space_dns_name_ = e_ext_ian_space_dns_name;
  if (e_ext_ian_space_dns_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_space_dns_name)
}

// .zsearch.LintResult e_ext_ian_uri_format_invalid = 64;
bool Lints::has_e_ext_ian_uri_format_invalid() const {
  return this != internal_default_instance() && e_ext_ian_uri_format_invalid_ != NULL;
}
void Lints::clear_e_ext_ian_uri_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_format_invalid_ != NULL) delete e_ext_ian_uri_format_invalid_;
  e_ext_ian_uri_format_invalid_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_uri_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_format_invalid)
  return e_ext_ian_uri_format_invalid_ != NULL ? *e_ext_ian_uri_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_format_invalid() {
  
  if (e_ext_ian_uri_format_invalid_ == NULL) {
    e_ext_ian_uri_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_format_invalid)
  return e_ext_ian_uri_format_invalid_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_uri_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_format_invalid_;
  e_ext_ian_uri_format_invalid_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_uri_format_invalid(::zsearch::LintResult* e_ext_ian_uri_format_invalid) {
  delete e_ext_ian_uri_format_invalid_;
  e_ext_ian_uri_format_invalid_ = e_ext_ian_uri_format_invalid;
  if (e_ext_ian_uri_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_format_invalid)
}

// .zsearch.LintResult e_ext_ian_uri_host_not_fqdn_or_ip = 65;
bool Lints::has_e_ext_ian_uri_host_not_fqdn_or_ip() const {
  return this != internal_default_instance() && e_ext_ian_uri_host_not_fqdn_or_ip_ != NULL;
}
void Lints::clear_e_ext_ian_uri_host_not_fqdn_or_ip() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_host_not_fqdn_or_ip_ != NULL) delete e_ext_ian_uri_host_not_fqdn_or_ip_;
  e_ext_ian_uri_host_not_fqdn_or_ip_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_uri_host_not_fqdn_or_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
  return e_ext_ian_uri_host_not_fqdn_or_ip_ != NULL ? *e_ext_ian_uri_host_not_fqdn_or_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_host_not_fqdn_or_ip() {
  
  if (e_ext_ian_uri_host_not_fqdn_or_ip_ == NULL) {
    e_ext_ian_uri_host_not_fqdn_or_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
  return e_ext_ian_uri_host_not_fqdn_or_ip_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_uri_host_not_fqdn_or_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_host_not_fqdn_or_ip_;
  e_ext_ian_uri_host_not_fqdn_or_ip_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_uri_host_not_fqdn_or_ip(::zsearch::LintResult* e_ext_ian_uri_host_not_fqdn_or_ip) {
  delete e_ext_ian_uri_host_not_fqdn_or_ip_;
  e_ext_ian_uri_host_not_fqdn_or_ip_ = e_ext_ian_uri_host_not_fqdn_or_ip;
  if (e_ext_ian_uri_host_not_fqdn_or_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
}

// .zsearch.LintResult e_ext_ian_uri_not_ia5 = 66;
bool Lints::has_e_ext_ian_uri_not_ia5() const {
  return this != internal_default_instance() && e_ext_ian_uri_not_ia5_ != NULL;
}
void Lints::clear_e_ext_ian_uri_not_ia5() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_not_ia5_ != NULL) delete e_ext_ian_uri_not_ia5_;
  e_ext_ian_uri_not_ia5_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_uri_not_ia5() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_not_ia5)
  return e_ext_ian_uri_not_ia5_ != NULL ? *e_ext_ian_uri_not_ia5_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_not_ia5() {
  
  if (e_ext_ian_uri_not_ia5_ == NULL) {
    e_ext_ian_uri_not_ia5_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_not_ia5)
  return e_ext_ian_uri_not_ia5_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_uri_not_ia5() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_not_ia5)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_not_ia5_;
  e_ext_ian_uri_not_ia5_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_uri_not_ia5(::zsearch::LintResult* e_ext_ian_uri_not_ia5) {
  delete e_ext_ian_uri_not_ia5_;
  e_ext_ian_uri_not_ia5_ = e_ext_ian_uri_not_ia5;
  if (e_ext_ian_uri_not_ia5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_not_ia5)
}

// .zsearch.LintResult e_ext_ian_uri_relative = 67;
bool Lints::has_e_ext_ian_uri_relative() const {
  return this != internal_default_instance() && e_ext_ian_uri_relative_ != NULL;
}
void Lints::clear_e_ext_ian_uri_relative() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_relative_ != NULL) delete e_ext_ian_uri_relative_;
  e_ext_ian_uri_relative_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_ian_uri_relative() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_relative)
  return e_ext_ian_uri_relative_ != NULL ? *e_ext_ian_uri_relative_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_relative() {
  
  if (e_ext_ian_uri_relative_ == NULL) {
    e_ext_ian_uri_relative_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_relative)
  return e_ext_ian_uri_relative_;
}
::zsearch::LintResult* Lints::release_e_ext_ian_uri_relative() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_relative)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_relative_;
  e_ext_ian_uri_relative_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_ian_uri_relative(::zsearch::LintResult* e_ext_ian_uri_relative) {
  delete e_ext_ian_uri_relative_;
  e_ext_ian_uri_relative_ = e_ext_ian_uri_relative;
  if (e_ext_ian_uri_relative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_relative)
}

// .zsearch.LintResult e_ext_key_usage_cert_sign_without_ca = 68;
bool Lints::has_e_ext_key_usage_cert_sign_without_ca() const {
  return this != internal_default_instance() && e_ext_key_usage_cert_sign_without_ca_ != NULL;
}
void Lints::clear_e_ext_key_usage_cert_sign_without_ca() {
  if (GetArenaNoVirtual() == NULL && e_ext_key_usage_cert_sign_without_ca_ != NULL) delete e_ext_key_usage_cert_sign_without_ca_;
  e_ext_key_usage_cert_sign_without_ca_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_key_usage_cert_sign_without_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
  return e_ext_key_usage_cert_sign_without_ca_ != NULL ? *e_ext_key_usage_cert_sign_without_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_key_usage_cert_sign_without_ca() {
  
  if (e_ext_key_usage_cert_sign_without_ca_ == NULL) {
    e_ext_key_usage_cert_sign_without_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
  return e_ext_key_usage_cert_sign_without_ca_;
}
::zsearch::LintResult* Lints::release_e_ext_key_usage_cert_sign_without_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
  
  ::zsearch::LintResult* temp = e_ext_key_usage_cert_sign_without_ca_;
  e_ext_key_usage_cert_sign_without_ca_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_key_usage_cert_sign_without_ca(::zsearch::LintResult* e_ext_key_usage_cert_sign_without_ca) {
  delete e_ext_key_usage_cert_sign_without_ca_;
  e_ext_key_usage_cert_sign_without_ca_ = e_ext_key_usage_cert_sign_without_ca;
  if (e_ext_key_usage_cert_sign_without_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
}

// .zsearch.LintResult w_ext_key_usage_not_critical = 69;
bool Lints::has_w_ext_key_usage_not_critical() const {
  return this != internal_default_instance() && w_ext_key_usage_not_critical_ != NULL;
}
void Lints::clear_w_ext_key_usage_not_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_key_usage_not_critical_ != NULL) delete w_ext_key_usage_not_critical_;
  w_ext_key_usage_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_key_usage_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_key_usage_not_critical)
  return w_ext_key_usage_not_critical_ != NULL ? *w_ext_key_usage_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_key_usage_not_critical() {
  
  if (w_ext_key_usage_not_critical_ == NULL) {
    w_ext_key_usage_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_key_usage_not_critical)
  return w_ext_key_usage_not_critical_;
}
::zsearch::LintResult* Lints::release_w_ext_key_usage_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_key_usage_not_critical)
  
  ::zsearch::LintResult* temp = w_ext_key_usage_not_critical_;
  w_ext_key_usage_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_key_usage_not_critical(::zsearch::LintResult* w_ext_key_usage_not_critical) {
  delete w_ext_key_usage_not_critical_;
  w_ext_key_usage_not_critical_ = w_ext_key_usage_not_critical;
  if (w_ext_key_usage_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_key_usage_not_critical)
}

// .zsearch.LintResult e_ext_key_usage_without_bits = 70;
bool Lints::has_e_ext_key_usage_without_bits() const {
  return this != internal_default_instance() && e_ext_key_usage_without_bits_ != NULL;
}
void Lints::clear_e_ext_key_usage_without_bits() {
  if (GetArenaNoVirtual() == NULL && e_ext_key_usage_without_bits_ != NULL) delete e_ext_key_usage_without_bits_;
  e_ext_key_usage_without_bits_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_key_usage_without_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_key_usage_without_bits)
  return e_ext_key_usage_without_bits_ != NULL ? *e_ext_key_usage_without_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_key_usage_without_bits() {
  
  if (e_ext_key_usage_without_bits_ == NULL) {
    e_ext_key_usage_without_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_key_usage_without_bits)
  return e_ext_key_usage_without_bits_;
}
::zsearch::LintResult* Lints::release_e_ext_key_usage_without_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_key_usage_without_bits)
  
  ::zsearch::LintResult* temp = e_ext_key_usage_without_bits_;
  e_ext_key_usage_without_bits_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_key_usage_without_bits(::zsearch::LintResult* e_ext_key_usage_without_bits) {
  delete e_ext_key_usage_without_bits_;
  e_ext_key_usage_without_bits_ = e_ext_key_usage_without_bits;
  if (e_ext_key_usage_without_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_key_usage_without_bits)
}

// .zsearch.LintResult e_ext_name_constraints_not_critical = 71;
bool Lints::has_e_ext_name_constraints_not_critical() const {
  return this != internal_default_instance() && e_ext_name_constraints_not_critical_ != NULL;
}
void Lints::clear_e_ext_name_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_name_constraints_not_critical_ != NULL) delete e_ext_name_constraints_not_critical_;
  e_ext_name_constraints_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_name_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_name_constraints_not_critical)
  return e_ext_name_constraints_not_critical_ != NULL ? *e_ext_name_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_name_constraints_not_critical() {
  
  if (e_ext_name_constraints_not_critical_ == NULL) {
    e_ext_name_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_name_constraints_not_critical)
  return e_ext_name_constraints_not_critical_;
}
::zsearch::LintResult* Lints::release_e_ext_name_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_name_constraints_not_critical)
  
  ::zsearch::LintResult* temp = e_ext_name_constraints_not_critical_;
  e_ext_name_constraints_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_name_constraints_not_critical(::zsearch::LintResult* e_ext_name_constraints_not_critical) {
  delete e_ext_name_constraints_not_critical_;
  e_ext_name_constraints_not_critical_ = e_ext_name_constraints_not_critical;
  if (e_ext_name_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_name_constraints_not_critical)
}

// .zsearch.LintResult e_ext_name_constraints_not_in_ca = 72;
bool Lints::has_e_ext_name_constraints_not_in_ca() const {
  return this != internal_default_instance() && e_ext_name_constraints_not_in_ca_ != NULL;
}
void Lints::clear_e_ext_name_constraints_not_in_ca() {
  if (GetArenaNoVirtual() == NULL && e_ext_name_constraints_not_in_ca_ != NULL) delete e_ext_name_constraints_not_in_ca_;
  e_ext_name_constraints_not_in_ca_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_name_constraints_not_in_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_name_constraints_not_in_ca)
  return e_ext_name_constraints_not_in_ca_ != NULL ? *e_ext_name_constraints_not_in_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_name_constraints_not_in_ca() {
  
  if (e_ext_name_constraints_not_in_ca_ == NULL) {
    e_ext_name_constraints_not_in_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_name_constraints_not_in_ca)
  return e_ext_name_constraints_not_in_ca_;
}
::zsearch::LintResult* Lints::release_e_ext_name_constraints_not_in_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_name_constraints_not_in_ca)
  
  ::zsearch::LintResult* temp = e_ext_name_constraints_not_in_ca_;
  e_ext_name_constraints_not_in_ca_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_name_constraints_not_in_ca(::zsearch::LintResult* e_ext_name_constraints_not_in_ca) {
  delete e_ext_name_constraints_not_in_ca_;
  e_ext_name_constraints_not_in_ca_ = e_ext_name_constraints_not_in_ca;
  if (e_ext_name_constraints_not_in_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_name_constraints_not_in_ca)
}

// .zsearch.LintResult e_ext_policy_constraints_empty = 73;
bool Lints::has_e_ext_policy_constraints_empty() const {
  return this != internal_default_instance() && e_ext_policy_constraints_empty_ != NULL;
}
void Lints::clear_e_ext_policy_constraints_empty() {
  if (GetArenaNoVirtual() == NULL && e_ext_policy_constraints_empty_ != NULL) delete e_ext_policy_constraints_empty_;
  e_ext_policy_constraints_empty_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_policy_constraints_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_policy_constraints_empty)
  return e_ext_policy_constraints_empty_ != NULL ? *e_ext_policy_constraints_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_policy_constraints_empty() {
  
  if (e_ext_policy_constraints_empty_ == NULL) {
    e_ext_policy_constraints_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_policy_constraints_empty)
  return e_ext_policy_constraints_empty_;
}
::zsearch::LintResult* Lints::release_e_ext_policy_constraints_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_policy_constraints_empty)
  
  ::zsearch::LintResult* temp = e_ext_policy_constraints_empty_;
  e_ext_policy_constraints_empty_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_policy_constraints_empty(::zsearch::LintResult* e_ext_policy_constraints_empty) {
  delete e_ext_policy_constraints_empty_;
  e_ext_policy_constraints_empty_ = e_ext_policy_constraints_empty;
  if (e_ext_policy_constraints_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_policy_constraints_empty)
}

// .zsearch.LintResult e_ext_policy_constraints_not_critical = 74;
bool Lints::has_e_ext_policy_constraints_not_critical() const {
  return this != internal_default_instance() && e_ext_policy_constraints_not_critical_ != NULL;
}
void Lints::clear_e_ext_policy_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_policy_constraints_not_critical_ != NULL) delete e_ext_policy_constraints_not_critical_;
  e_ext_policy_constraints_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_policy_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_policy_constraints_not_critical)
  return e_ext_policy_constraints_not_critical_ != NULL ? *e_ext_policy_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_policy_constraints_not_critical() {
  
  if (e_ext_policy_constraints_not_critical_ == NULL) {
    e_ext_policy_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_policy_constraints_not_critical)
  return e_ext_policy_constraints_not_critical_;
}
::zsearch::LintResult* Lints::release_e_ext_policy_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_policy_constraints_not_critical)
  
  ::zsearch::LintResult* temp = e_ext_policy_constraints_not_critical_;
  e_ext_policy_constraints_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_policy_constraints_not_critical(::zsearch::LintResult* e_ext_policy_constraints_not_critical) {
  delete e_ext_policy_constraints_not_critical_;
  e_ext_policy_constraints_not_critical_ = e_ext_policy_constraints_not_critical;
  if (e_ext_policy_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_policy_constraints_not_critical)
}

// .zsearch.LintResult e_ext_policy_map_any_policy = 75;
bool Lints::has_e_ext_policy_map_any_policy() const {
  return this != internal_default_instance() && e_ext_policy_map_any_policy_ != NULL;
}
void Lints::clear_e_ext_policy_map_any_policy() {
  if (GetArenaNoVirtual() == NULL && e_ext_policy_map_any_policy_ != NULL) delete e_ext_policy_map_any_policy_;
  e_ext_policy_map_any_policy_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_policy_map_any_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_policy_map_any_policy)
  return e_ext_policy_map_any_policy_ != NULL ? *e_ext_policy_map_any_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_policy_map_any_policy() {
  
  if (e_ext_policy_map_any_policy_ == NULL) {
    e_ext_policy_map_any_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_policy_map_any_policy)
  return e_ext_policy_map_any_policy_;
}
::zsearch::LintResult* Lints::release_e_ext_policy_map_any_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_policy_map_any_policy)
  
  ::zsearch::LintResult* temp = e_ext_policy_map_any_policy_;
  e_ext_policy_map_any_policy_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_policy_map_any_policy(::zsearch::LintResult* e_ext_policy_map_any_policy) {
  delete e_ext_policy_map_any_policy_;
  e_ext_policy_map_any_policy_ = e_ext_policy_map_any_policy;
  if (e_ext_policy_map_any_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_policy_map_any_policy)
}

// .zsearch.LintResult w_ext_policy_map_not_critical = 76;
bool Lints::has_w_ext_policy_map_not_critical() const {
  return this != internal_default_instance() && w_ext_policy_map_not_critical_ != NULL;
}
void Lints::clear_w_ext_policy_map_not_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_policy_map_not_critical_ != NULL) delete w_ext_policy_map_not_critical_;
  w_ext_policy_map_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_policy_map_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_policy_map_not_critical)
  return w_ext_policy_map_not_critical_ != NULL ? *w_ext_policy_map_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_policy_map_not_critical() {
  
  if (w_ext_policy_map_not_critical_ == NULL) {
    w_ext_policy_map_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_policy_map_not_critical)
  return w_ext_policy_map_not_critical_;
}
::zsearch::LintResult* Lints::release_w_ext_policy_map_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_policy_map_not_critical)
  
  ::zsearch::LintResult* temp = w_ext_policy_map_not_critical_;
  w_ext_policy_map_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_policy_map_not_critical(::zsearch::LintResult* w_ext_policy_map_not_critical) {
  delete w_ext_policy_map_not_critical_;
  w_ext_policy_map_not_critical_ = w_ext_policy_map_not_critical;
  if (w_ext_policy_map_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_policy_map_not_critical)
}

// .zsearch.LintResult w_ext_policy_map_not_in_cert_policy = 77;
bool Lints::has_w_ext_policy_map_not_in_cert_policy() const {
  return this != internal_default_instance() && w_ext_policy_map_not_in_cert_policy_ != NULL;
}
void Lints::clear_w_ext_policy_map_not_in_cert_policy() {
  if (GetArenaNoVirtual() == NULL && w_ext_policy_map_not_in_cert_policy_ != NULL) delete w_ext_policy_map_not_in_cert_policy_;
  w_ext_policy_map_not_in_cert_policy_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_policy_map_not_in_cert_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
  return w_ext_policy_map_not_in_cert_policy_ != NULL ? *w_ext_policy_map_not_in_cert_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_policy_map_not_in_cert_policy() {
  
  if (w_ext_policy_map_not_in_cert_policy_ == NULL) {
    w_ext_policy_map_not_in_cert_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
  return w_ext_policy_map_not_in_cert_policy_;
}
::zsearch::LintResult* Lints::release_w_ext_policy_map_not_in_cert_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
  
  ::zsearch::LintResult* temp = w_ext_policy_map_not_in_cert_policy_;
  w_ext_policy_map_not_in_cert_policy_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_policy_map_not_in_cert_policy(::zsearch::LintResult* w_ext_policy_map_not_in_cert_policy) {
  delete w_ext_policy_map_not_in_cert_policy_;
  w_ext_policy_map_not_in_cert_policy_ = w_ext_policy_map_not_in_cert_policy;
  if (w_ext_policy_map_not_in_cert_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
}

// .zsearch.LintResult e_ext_san_contains_reserved_ip = 78;
bool Lints::has_e_ext_san_contains_reserved_ip() const {
  return this != internal_default_instance() && e_ext_san_contains_reserved_ip_ != NULL;
}
void Lints::clear_e_ext_san_contains_reserved_ip() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_contains_reserved_ip_ != NULL) delete e_ext_san_contains_reserved_ip_;
  e_ext_san_contains_reserved_ip_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_contains_reserved_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_contains_reserved_ip)
  return e_ext_san_contains_reserved_ip_ != NULL ? *e_ext_san_contains_reserved_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_contains_reserved_ip() {
  
  if (e_ext_san_contains_reserved_ip_ == NULL) {
    e_ext_san_contains_reserved_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_contains_reserved_ip)
  return e_ext_san_contains_reserved_ip_;
}
::zsearch::LintResult* Lints::release_e_ext_san_contains_reserved_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_contains_reserved_ip)
  
  ::zsearch::LintResult* temp = e_ext_san_contains_reserved_ip_;
  e_ext_san_contains_reserved_ip_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_contains_reserved_ip(::zsearch::LintResult* e_ext_san_contains_reserved_ip) {
  delete e_ext_san_contains_reserved_ip_;
  e_ext_san_contains_reserved_ip_ = e_ext_san_contains_reserved_ip;
  if (e_ext_san_contains_reserved_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_contains_reserved_ip)
}

// .zsearch.LintResult w_ext_san_critical_with_subject_dn = 79;
bool Lints::has_w_ext_san_critical_with_subject_dn() const {
  return this != internal_default_instance() && w_ext_san_critical_with_subject_dn_ != NULL;
}
void Lints::clear_w_ext_san_critical_with_subject_dn() {
  if (GetArenaNoVirtual() == NULL && w_ext_san_critical_with_subject_dn_ != NULL) delete w_ext_san_critical_with_subject_dn_;
  w_ext_san_critical_with_subject_dn_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_san_critical_with_subject_dn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_san_critical_with_subject_dn)
  return w_ext_san_critical_with_subject_dn_ != NULL ? *w_ext_san_critical_with_subject_dn_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_san_critical_with_subject_dn() {
  
  if (w_ext_san_critical_with_subject_dn_ == NULL) {
    w_ext_san_critical_with_subject_dn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_san_critical_with_subject_dn)
  return w_ext_san_critical_with_subject_dn_;
}
::zsearch::LintResult* Lints::release_w_ext_san_critical_with_subject_dn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_san_critical_with_subject_dn)
  
  ::zsearch::LintResult* temp = w_ext_san_critical_with_subject_dn_;
  w_ext_san_critical_with_subject_dn_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_san_critical_with_subject_dn(::zsearch::LintResult* w_ext_san_critical_with_subject_dn) {
  delete w_ext_san_critical_with_subject_dn_;
  w_ext_san_critical_with_subject_dn_ = w_ext_san_critical_with_subject_dn;
  if (w_ext_san_critical_with_subject_dn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_san_critical_with_subject_dn)
}

// .zsearch.LintResult e_ext_san_directory_name_present = 80;
bool Lints::has_e_ext_san_directory_name_present() const {
  return this != internal_default_instance() && e_ext_san_directory_name_present_ != NULL;
}
void Lints::clear_e_ext_san_directory_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_directory_name_present_ != NULL) delete e_ext_san_directory_name_present_;
  e_ext_san_directory_name_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_directory_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_directory_name_present)
  return e_ext_san_directory_name_present_ != NULL ? *e_ext_san_directory_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_directory_name_present() {
  
  if (e_ext_san_directory_name_present_ == NULL) {
    e_ext_san_directory_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_directory_name_present)
  return e_ext_san_directory_name_present_;
}
::zsearch::LintResult* Lints::release_e_ext_san_directory_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_directory_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_directory_name_present_;
  e_ext_san_directory_name_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_directory_name_present(::zsearch::LintResult* e_ext_san_directory_name_present) {
  delete e_ext_san_directory_name_present_;
  e_ext_san_directory_name_present_ = e_ext_san_directory_name_present;
  if (e_ext_san_directory_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_directory_name_present)
}

// .zsearch.LintResult e_ext_san_dns_not_ia5_string = 81;
bool Lints::has_e_ext_san_dns_not_ia5_string() const {
  return this != internal_default_instance() && e_ext_san_dns_not_ia5_string_ != NULL;
}
void Lints::clear_e_ext_san_dns_not_ia5_string() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_dns_not_ia5_string_ != NULL) delete e_ext_san_dns_not_ia5_string_;
  e_ext_san_dns_not_ia5_string_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_dns_not_ia5_string() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_dns_not_ia5_string)
  return e_ext_san_dns_not_ia5_string_ != NULL ? *e_ext_san_dns_not_ia5_string_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_dns_not_ia5_string() {
  
  if (e_ext_san_dns_not_ia5_string_ == NULL) {
    e_ext_san_dns_not_ia5_string_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_dns_not_ia5_string)
  return e_ext_san_dns_not_ia5_string_;
}
::zsearch::LintResult* Lints::release_e_ext_san_dns_not_ia5_string() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_dns_not_ia5_string)
  
  ::zsearch::LintResult* temp = e_ext_san_dns_not_ia5_string_;
  e_ext_san_dns_not_ia5_string_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_dns_not_ia5_string(::zsearch::LintResult* e_ext_san_dns_not_ia5_string) {
  delete e_ext_san_dns_not_ia5_string_;
  e_ext_san_dns_not_ia5_string_ = e_ext_san_dns_not_ia5_string;
  if (e_ext_san_dns_not_ia5_string) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_dns_not_ia5_string)
}

// .zsearch.LintResult e_ext_san_edi_party_name_present = 84;
bool Lints::has_e_ext_san_edi_party_name_present() const {
  return this != internal_default_instance() && e_ext_san_edi_party_name_present_ != NULL;
}
void Lints::clear_e_ext_san_edi_party_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_edi_party_name_present_ != NULL) delete e_ext_san_edi_party_name_present_;
  e_ext_san_edi_party_name_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_edi_party_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_edi_party_name_present)
  return e_ext_san_edi_party_name_present_ != NULL ? *e_ext_san_edi_party_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_edi_party_name_present() {
  
  if (e_ext_san_edi_party_name_present_ == NULL) {
    e_ext_san_edi_party_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_edi_party_name_present)
  return e_ext_san_edi_party_name_present_;
}
::zsearch::LintResult* Lints::release_e_ext_san_edi_party_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_edi_party_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_edi_party_name_present_;
  e_ext_san_edi_party_name_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_edi_party_name_present(::zsearch::LintResult* e_ext_san_edi_party_name_present) {
  delete e_ext_san_edi_party_name_present_;
  e_ext_san_edi_party_name_present_ = e_ext_san_edi_party_name_present;
  if (e_ext_san_edi_party_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_edi_party_name_present)
}

// .zsearch.LintResult e_ext_san_empty_name = 85;
bool Lints::has_e_ext_san_empty_name() const {
  return this != internal_default_instance() && e_ext_san_empty_name_ != NULL;
}
void Lints::clear_e_ext_san_empty_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_empty_name_ != NULL) delete e_ext_san_empty_name_;
  e_ext_san_empty_name_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_empty_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_empty_name)
  return e_ext_san_empty_name_ != NULL ? *e_ext_san_empty_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_empty_name() {
  
  if (e_ext_san_empty_name_ == NULL) {
    e_ext_san_empty_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_empty_name)
  return e_ext_san_empty_name_;
}
::zsearch::LintResult* Lints::release_e_ext_san_empty_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_empty_name)
  
  ::zsearch::LintResult* temp = e_ext_san_empty_name_;
  e_ext_san_empty_name_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_empty_name(::zsearch::LintResult* e_ext_san_empty_name) {
  delete e_ext_san_empty_name_;
  e_ext_san_empty_name_ = e_ext_san_empty_name;
  if (e_ext_san_empty_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_empty_name)
}

// .zsearch.LintResult e_ext_san_missing = 86;
bool Lints::has_e_ext_san_missing() const {
  return this != internal_default_instance() && e_ext_san_missing_ != NULL;
}
void Lints::clear_e_ext_san_missing() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_missing_ != NULL) delete e_ext_san_missing_;
  e_ext_san_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_missing)
  return e_ext_san_missing_ != NULL ? *e_ext_san_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_missing() {
  
  if (e_ext_san_missing_ == NULL) {
    e_ext_san_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_missing)
  return e_ext_san_missing_;
}
::zsearch::LintResult* Lints::release_e_ext_san_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_missing)
  
  ::zsearch::LintResult* temp = e_ext_san_missing_;
  e_ext_san_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_missing(::zsearch::LintResult* e_ext_san_missing) {
  delete e_ext_san_missing_;
  e_ext_san_missing_ = e_ext_san_missing;
  if (e_ext_san_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_missing)
}

// .zsearch.LintResult e_ext_san_no_entries = 87;
bool Lints::has_e_ext_san_no_entries() const {
  return this != internal_default_instance() && e_ext_san_no_entries_ != NULL;
}
void Lints::clear_e_ext_san_no_entries() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_no_entries_ != NULL) delete e_ext_san_no_entries_;
  e_ext_san_no_entries_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_no_entries() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_no_entries)
  return e_ext_san_no_entries_ != NULL ? *e_ext_san_no_entries_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_no_entries() {
  
  if (e_ext_san_no_entries_ == NULL) {
    e_ext_san_no_entries_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_no_entries)
  return e_ext_san_no_entries_;
}
::zsearch::LintResult* Lints::release_e_ext_san_no_entries() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_no_entries)
  
  ::zsearch::LintResult* temp = e_ext_san_no_entries_;
  e_ext_san_no_entries_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_no_entries(::zsearch::LintResult* e_ext_san_no_entries) {
  delete e_ext_san_no_entries_;
  e_ext_san_no_entries_ = e_ext_san_no_entries;
  if (e_ext_san_no_entries) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_no_entries)
}

// .zsearch.LintResult e_ext_san_not_critical_without_subject = 88;
bool Lints::has_e_ext_san_not_critical_without_subject() const {
  return this != internal_default_instance() && e_ext_san_not_critical_without_subject_ != NULL;
}
void Lints::clear_e_ext_san_not_critical_without_subject() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_not_critical_without_subject_ != NULL) delete e_ext_san_not_critical_without_subject_;
  e_ext_san_not_critical_without_subject_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_not_critical_without_subject() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_not_critical_without_subject)
  return e_ext_san_not_critical_without_subject_ != NULL ? *e_ext_san_not_critical_without_subject_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_not_critical_without_subject() {
  
  if (e_ext_san_not_critical_without_subject_ == NULL) {
    e_ext_san_not_critical_without_subject_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_not_critical_without_subject)
  return e_ext_san_not_critical_without_subject_;
}
::zsearch::LintResult* Lints::release_e_ext_san_not_critical_without_subject() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_not_critical_without_subject)
  
  ::zsearch::LintResult* temp = e_ext_san_not_critical_without_subject_;
  e_ext_san_not_critical_without_subject_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_not_critical_without_subject(::zsearch::LintResult* e_ext_san_not_critical_without_subject) {
  delete e_ext_san_not_critical_without_subject_;
  e_ext_san_not_critical_without_subject_ = e_ext_san_not_critical_without_subject;
  if (e_ext_san_not_critical_without_subject) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_not_critical_without_subject)
}

// .zsearch.LintResult e_ext_san_other_name_present = 89;
bool Lints::has_e_ext_san_other_name_present() const {
  return this != internal_default_instance() && e_ext_san_other_name_present_ != NULL;
}
void Lints::clear_e_ext_san_other_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_other_name_present_ != NULL) delete e_ext_san_other_name_present_;
  e_ext_san_other_name_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_other_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_other_name_present)
  return e_ext_san_other_name_present_ != NULL ? *e_ext_san_other_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_other_name_present() {
  
  if (e_ext_san_other_name_present_ == NULL) {
    e_ext_san_other_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_other_name_present)
  return e_ext_san_other_name_present_;
}
::zsearch::LintResult* Lints::release_e_ext_san_other_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_other_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_other_name_present_;
  e_ext_san_other_name_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_other_name_present(::zsearch::LintResult* e_ext_san_other_name_present) {
  delete e_ext_san_other_name_present_;
  e_ext_san_other_name_present_ = e_ext_san_other_name_present;
  if (e_ext_san_other_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_other_name_present)
}

// .zsearch.LintResult e_ext_san_registered_id_present = 90;
bool Lints::has_e_ext_san_registered_id_present() const {
  return this != internal_default_instance() && e_ext_san_registered_id_present_ != NULL;
}
void Lints::clear_e_ext_san_registered_id_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_registered_id_present_ != NULL) delete e_ext_san_registered_id_present_;
  e_ext_san_registered_id_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_registered_id_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_registered_id_present)
  return e_ext_san_registered_id_present_ != NULL ? *e_ext_san_registered_id_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_registered_id_present() {
  
  if (e_ext_san_registered_id_present_ == NULL) {
    e_ext_san_registered_id_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_registered_id_present)
  return e_ext_san_registered_id_present_;
}
::zsearch::LintResult* Lints::release_e_ext_san_registered_id_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_registered_id_present)
  
  ::zsearch::LintResult* temp = e_ext_san_registered_id_present_;
  e_ext_san_registered_id_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_registered_id_present(::zsearch::LintResult* e_ext_san_registered_id_present) {
  delete e_ext_san_registered_id_present_;
  e_ext_san_registered_id_present_ = e_ext_san_registered_id_present;
  if (e_ext_san_registered_id_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_registered_id_present)
}

// .zsearch.LintResult e_ext_san_rfc822_format_invalid = 91;
bool Lints::has_e_ext_san_rfc822_format_invalid() const {
  return this != internal_default_instance() && e_ext_san_rfc822_format_invalid_ != NULL;
}
void Lints::clear_e_ext_san_rfc822_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_rfc822_format_invalid_ != NULL) delete e_ext_san_rfc822_format_invalid_;
  e_ext_san_rfc822_format_invalid_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_rfc822_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_rfc822_format_invalid)
  return e_ext_san_rfc822_format_invalid_ != NULL ? *e_ext_san_rfc822_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_rfc822_format_invalid() {
  
  if (e_ext_san_rfc822_format_invalid_ == NULL) {
    e_ext_san_rfc822_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_rfc822_format_invalid)
  return e_ext_san_rfc822_format_invalid_;
}
::zsearch::LintResult* Lints::release_e_ext_san_rfc822_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_rfc822_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_san_rfc822_format_invalid_;
  e_ext_san_rfc822_format_invalid_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_rfc822_format_invalid(::zsearch::LintResult* e_ext_san_rfc822_format_invalid) {
  delete e_ext_san_rfc822_format_invalid_;
  e_ext_san_rfc822_format_invalid_ = e_ext_san_rfc822_format_invalid;
  if (e_ext_san_rfc822_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_rfc822_format_invalid)
}

// .zsearch.LintResult e_ext_san_rfc822_name_present = 92;
bool Lints::has_e_ext_san_rfc822_name_present() const {
  return this != internal_default_instance() && e_ext_san_rfc822_name_present_ != NULL;
}
void Lints::clear_e_ext_san_rfc822_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_rfc822_name_present_ != NULL) delete e_ext_san_rfc822_name_present_;
  e_ext_san_rfc822_name_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_rfc822_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_rfc822_name_present)
  return e_ext_san_rfc822_name_present_ != NULL ? *e_ext_san_rfc822_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_rfc822_name_present() {
  
  if (e_ext_san_rfc822_name_present_ == NULL) {
    e_ext_san_rfc822_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_rfc822_name_present)
  return e_ext_san_rfc822_name_present_;
}
::zsearch::LintResult* Lints::release_e_ext_san_rfc822_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_rfc822_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_rfc822_name_present_;
  e_ext_san_rfc822_name_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_rfc822_name_present(::zsearch::LintResult* e_ext_san_rfc822_name_present) {
  delete e_ext_san_rfc822_name_present_;
  e_ext_san_rfc822_name_present_ = e_ext_san_rfc822_name_present;
  if (e_ext_san_rfc822_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_rfc822_name_present)
}

// .zsearch.LintResult e_ext_san_space_dns_name = 93;
bool Lints::has_e_ext_san_space_dns_name() const {
  return this != internal_default_instance() && e_ext_san_space_dns_name_ != NULL;
}
void Lints::clear_e_ext_san_space_dns_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_space_dns_name_ != NULL) delete e_ext_san_space_dns_name_;
  e_ext_san_space_dns_name_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_space_dns_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_space_dns_name)
  return e_ext_san_space_dns_name_ != NULL ? *e_ext_san_space_dns_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_space_dns_name() {
  
  if (e_ext_san_space_dns_name_ == NULL) {
    e_ext_san_space_dns_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_space_dns_name)
  return e_ext_san_space_dns_name_;
}
::zsearch::LintResult* Lints::release_e_ext_san_space_dns_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_space_dns_name)
  
  ::zsearch::LintResult* temp = e_ext_san_space_dns_name_;
  e_ext_san_space_dns_name_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_space_dns_name(::zsearch::LintResult* e_ext_san_space_dns_name) {
  delete e_ext_san_space_dns_name_;
  e_ext_san_space_dns_name_ = e_ext_san_space_dns_name;
  if (e_ext_san_space_dns_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_space_dns_name)
}

// .zsearch.LintResult e_ext_san_uniform_resource_identifier_present = 94;
bool Lints::has_e_ext_san_uniform_resource_identifier_present() const {
  return this != internal_default_instance() && e_ext_san_uniform_resource_identifier_present_ != NULL;
}
void Lints::clear_e_ext_san_uniform_resource_identifier_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uniform_resource_identifier_present_ != NULL) delete e_ext_san_uniform_resource_identifier_present_;
  e_ext_san_uniform_resource_identifier_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_uniform_resource_identifier_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
  return e_ext_san_uniform_resource_identifier_present_ != NULL ? *e_ext_san_uniform_resource_identifier_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_uniform_resource_identifier_present() {
  
  if (e_ext_san_uniform_resource_identifier_present_ == NULL) {
    e_ext_san_uniform_resource_identifier_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
  return e_ext_san_uniform_resource_identifier_present_;
}
::zsearch::LintResult* Lints::release_e_ext_san_uniform_resource_identifier_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
  
  ::zsearch::LintResult* temp = e_ext_san_uniform_resource_identifier_present_;
  e_ext_san_uniform_resource_identifier_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_uniform_resource_identifier_present(::zsearch::LintResult* e_ext_san_uniform_resource_identifier_present) {
  delete e_ext_san_uniform_resource_identifier_present_;
  e_ext_san_uniform_resource_identifier_present_ = e_ext_san_uniform_resource_identifier_present;
  if (e_ext_san_uniform_resource_identifier_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
}

// .zsearch.LintResult e_ext_san_uri_format_invalid = 95;
bool Lints::has_e_ext_san_uri_format_invalid() const {
  return this != internal_default_instance() && e_ext_san_uri_format_invalid_ != NULL;
}
void Lints::clear_e_ext_san_uri_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_format_invalid_ != NULL) delete e_ext_san_uri_format_invalid_;
  e_ext_san_uri_format_invalid_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_uri_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_format_invalid)
  return e_ext_san_uri_format_invalid_ != NULL ? *e_ext_san_uri_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_uri_format_invalid() {
  
  if (e_ext_san_uri_format_invalid_ == NULL) {
    e_ext_san_uri_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_format_invalid)
  return e_ext_san_uri_format_invalid_;
}
::zsearch::LintResult* Lints::release_e_ext_san_uri_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_format_invalid_;
  e_ext_san_uri_format_invalid_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_uri_format_invalid(::zsearch::LintResult* e_ext_san_uri_format_invalid) {
  delete e_ext_san_uri_format_invalid_;
  e_ext_san_uri_format_invalid_ = e_ext_san_uri_format_invalid;
  if (e_ext_san_uri_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_format_invalid)
}

// .zsearch.LintResult e_ext_san_uri_host_not_fqdn_or_ip = 96;
bool Lints::has_e_ext_san_uri_host_not_fqdn_or_ip() const {
  return this != internal_default_instance() && e_ext_san_uri_host_not_fqdn_or_ip_ != NULL;
}
void Lints::clear_e_ext_san_uri_host_not_fqdn_or_ip() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_host_not_fqdn_or_ip_ != NULL) delete e_ext_san_uri_host_not_fqdn_or_ip_;
  e_ext_san_uri_host_not_fqdn_or_ip_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_uri_host_not_fqdn_or_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
  return e_ext_san_uri_host_not_fqdn_or_ip_ != NULL ? *e_ext_san_uri_host_not_fqdn_or_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_uri_host_not_fqdn_or_ip() {
  
  if (e_ext_san_uri_host_not_fqdn_or_ip_ == NULL) {
    e_ext_san_uri_host_not_fqdn_or_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
  return e_ext_san_uri_host_not_fqdn_or_ip_;
}
::zsearch::LintResult* Lints::release_e_ext_san_uri_host_not_fqdn_or_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_host_not_fqdn_or_ip_;
  e_ext_san_uri_host_not_fqdn_or_ip_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_uri_host_not_fqdn_or_ip(::zsearch::LintResult* e_ext_san_uri_host_not_fqdn_or_ip) {
  delete e_ext_san_uri_host_not_fqdn_or_ip_;
  e_ext_san_uri_host_not_fqdn_or_ip_ = e_ext_san_uri_host_not_fqdn_or_ip;
  if (e_ext_san_uri_host_not_fqdn_or_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
}

// .zsearch.LintResult e_ext_san_uri_not_ia5 = 97;
bool Lints::has_e_ext_san_uri_not_ia5() const {
  return this != internal_default_instance() && e_ext_san_uri_not_ia5_ != NULL;
}
void Lints::clear_e_ext_san_uri_not_ia5() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_not_ia5_ != NULL) delete e_ext_san_uri_not_ia5_;
  e_ext_san_uri_not_ia5_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_uri_not_ia5() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_not_ia5)
  return e_ext_san_uri_not_ia5_ != NULL ? *e_ext_san_uri_not_ia5_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_uri_not_ia5() {
  
  if (e_ext_san_uri_not_ia5_ == NULL) {
    e_ext_san_uri_not_ia5_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_not_ia5)
  return e_ext_san_uri_not_ia5_;
}
::zsearch::LintResult* Lints::release_e_ext_san_uri_not_ia5() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_not_ia5)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_not_ia5_;
  e_ext_san_uri_not_ia5_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_uri_not_ia5(::zsearch::LintResult* e_ext_san_uri_not_ia5) {
  delete e_ext_san_uri_not_ia5_;
  e_ext_san_uri_not_ia5_ = e_ext_san_uri_not_ia5;
  if (e_ext_san_uri_not_ia5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_not_ia5)
}

// .zsearch.LintResult e_ext_san_uri_relative = 98;
bool Lints::has_e_ext_san_uri_relative() const {
  return this != internal_default_instance() && e_ext_san_uri_relative_ != NULL;
}
void Lints::clear_e_ext_san_uri_relative() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_relative_ != NULL) delete e_ext_san_uri_relative_;
  e_ext_san_uri_relative_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_uri_relative() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_relative)
  return e_ext_san_uri_relative_ != NULL ? *e_ext_san_uri_relative_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_uri_relative() {
  
  if (e_ext_san_uri_relative_ == NULL) {
    e_ext_san_uri_relative_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_relative)
  return e_ext_san_uri_relative_;
}
::zsearch::LintResult* Lints::release_e_ext_san_uri_relative() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_relative)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_relative_;
  e_ext_san_uri_relative_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_uri_relative(::zsearch::LintResult* e_ext_san_uri_relative) {
  delete e_ext_san_uri_relative_;
  e_ext_san_uri_relative_ = e_ext_san_uri_relative;
  if (e_ext_san_uri_relative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_relative)
}

// .zsearch.LintResult e_ext_subject_directory_attr_critical = 99;
bool Lints::has_e_ext_subject_directory_attr_critical() const {
  return this != internal_default_instance() && e_ext_subject_directory_attr_critical_ != NULL;
}
void Lints::clear_e_ext_subject_directory_attr_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_subject_directory_attr_critical_ != NULL) delete e_ext_subject_directory_attr_critical_;
  e_ext_subject_directory_attr_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_subject_directory_attr_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_subject_directory_attr_critical)
  return e_ext_subject_directory_attr_critical_ != NULL ? *e_ext_subject_directory_attr_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_subject_directory_attr_critical() {
  
  if (e_ext_subject_directory_attr_critical_ == NULL) {
    e_ext_subject_directory_attr_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_subject_directory_attr_critical)
  return e_ext_subject_directory_attr_critical_;
}
::zsearch::LintResult* Lints::release_e_ext_subject_directory_attr_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_subject_directory_attr_critical)
  
  ::zsearch::LintResult* temp = e_ext_subject_directory_attr_critical_;
  e_ext_subject_directory_attr_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_subject_directory_attr_critical(::zsearch::LintResult* e_ext_subject_directory_attr_critical) {
  delete e_ext_subject_directory_attr_critical_;
  e_ext_subject_directory_attr_critical_ = e_ext_subject_directory_attr_critical;
  if (e_ext_subject_directory_attr_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_subject_directory_attr_critical)
}

// .zsearch.LintResult e_ext_subject_key_identifier_critical = 100;
bool Lints::has_e_ext_subject_key_identifier_critical() const {
  return this != internal_default_instance() && e_ext_subject_key_identifier_critical_ != NULL;
}
void Lints::clear_e_ext_subject_key_identifier_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_subject_key_identifier_critical_ != NULL) delete e_ext_subject_key_identifier_critical_;
  e_ext_subject_key_identifier_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_subject_key_identifier_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_subject_key_identifier_critical)
  return e_ext_subject_key_identifier_critical_ != NULL ? *e_ext_subject_key_identifier_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_subject_key_identifier_critical() {
  
  if (e_ext_subject_key_identifier_critical_ == NULL) {
    e_ext_subject_key_identifier_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_subject_key_identifier_critical)
  return e_ext_subject_key_identifier_critical_;
}
::zsearch::LintResult* Lints::release_e_ext_subject_key_identifier_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_subject_key_identifier_critical)
  
  ::zsearch::LintResult* temp = e_ext_subject_key_identifier_critical_;
  e_ext_subject_key_identifier_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_subject_key_identifier_critical(::zsearch::LintResult* e_ext_subject_key_identifier_critical) {
  delete e_ext_subject_key_identifier_critical_;
  e_ext_subject_key_identifier_critical_ = e_ext_subject_key_identifier_critical;
  if (e_ext_subject_key_identifier_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_subject_key_identifier_critical)
}

// .zsearch.LintResult e_ext_subject_key_identifier_missing_ca = 101;
bool Lints::has_e_ext_subject_key_identifier_missing_ca() const {
  return this != internal_default_instance() && e_ext_subject_key_identifier_missing_ca_ != NULL;
}
void Lints::clear_e_ext_subject_key_identifier_missing_ca() {
  if (GetArenaNoVirtual() == NULL && e_ext_subject_key_identifier_missing_ca_ != NULL) delete e_ext_subject_key_identifier_missing_ca_;
  e_ext_subject_key_identifier_missing_ca_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_subject_key_identifier_missing_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
  return e_ext_subject_key_identifier_missing_ca_ != NULL ? *e_ext_subject_key_identifier_missing_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_subject_key_identifier_missing_ca() {
  
  if (e_ext_subject_key_identifier_missing_ca_ == NULL) {
    e_ext_subject_key_identifier_missing_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
  return e_ext_subject_key_identifier_missing_ca_;
}
::zsearch::LintResult* Lints::release_e_ext_subject_key_identifier_missing_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
  
  ::zsearch::LintResult* temp = e_ext_subject_key_identifier_missing_ca_;
  e_ext_subject_key_identifier_missing_ca_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_subject_key_identifier_missing_ca(::zsearch::LintResult* e_ext_subject_key_identifier_missing_ca) {
  delete e_ext_subject_key_identifier_missing_ca_;
  e_ext_subject_key_identifier_missing_ca_ = e_ext_subject_key_identifier_missing_ca;
  if (e_ext_subject_key_identifier_missing_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
}

// .zsearch.LintResult w_ext_subject_key_identifier_missing_sub_cert = 102;
bool Lints::has_w_ext_subject_key_identifier_missing_sub_cert() const {
  return this != internal_default_instance() && w_ext_subject_key_identifier_missing_sub_cert_ != NULL;
}
void Lints::clear_w_ext_subject_key_identifier_missing_sub_cert() {
  if (GetArenaNoVirtual() == NULL && w_ext_subject_key_identifier_missing_sub_cert_ != NULL) delete w_ext_subject_key_identifier_missing_sub_cert_;
  w_ext_subject_key_identifier_missing_sub_cert_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ext_subject_key_identifier_missing_sub_cert() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
  return w_ext_subject_key_identifier_missing_sub_cert_ != NULL ? *w_ext_subject_key_identifier_missing_sub_cert_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ext_subject_key_identifier_missing_sub_cert() {
  
  if (w_ext_subject_key_identifier_missing_sub_cert_ == NULL) {
    w_ext_subject_key_identifier_missing_sub_cert_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
  return w_ext_subject_key_identifier_missing_sub_cert_;
}
::zsearch::LintResult* Lints::release_w_ext_subject_key_identifier_missing_sub_cert() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
  
  ::zsearch::LintResult* temp = w_ext_subject_key_identifier_missing_sub_cert_;
  w_ext_subject_key_identifier_missing_sub_cert_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ext_subject_key_identifier_missing_sub_cert(::zsearch::LintResult* w_ext_subject_key_identifier_missing_sub_cert) {
  delete w_ext_subject_key_identifier_missing_sub_cert_;
  w_ext_subject_key_identifier_missing_sub_cert_ = w_ext_subject_key_identifier_missing_sub_cert;
  if (w_ext_subject_key_identifier_missing_sub_cert) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
}

// .zsearch.LintResult e_generalized_time_does_not_include_seconds = 103;
bool Lints::has_e_generalized_time_does_not_include_seconds() const {
  return this != internal_default_instance() && e_generalized_time_does_not_include_seconds_ != NULL;
}
void Lints::clear_e_generalized_time_does_not_include_seconds() {
  if (GetArenaNoVirtual() == NULL && e_generalized_time_does_not_include_seconds_ != NULL) delete e_generalized_time_does_not_include_seconds_;
  e_generalized_time_does_not_include_seconds_ = NULL;
}
const ::zsearch::LintResult& Lints::e_generalized_time_does_not_include_seconds() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_generalized_time_does_not_include_seconds)
  return e_generalized_time_does_not_include_seconds_ != NULL ? *e_generalized_time_does_not_include_seconds_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_generalized_time_does_not_include_seconds() {
  
  if (e_generalized_time_does_not_include_seconds_ == NULL) {
    e_generalized_time_does_not_include_seconds_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_generalized_time_does_not_include_seconds)
  return e_generalized_time_does_not_include_seconds_;
}
::zsearch::LintResult* Lints::release_e_generalized_time_does_not_include_seconds() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_generalized_time_does_not_include_seconds)
  
  ::zsearch::LintResult* temp = e_generalized_time_does_not_include_seconds_;
  e_generalized_time_does_not_include_seconds_ = NULL;
  return temp;
}
void Lints::set_allocated_e_generalized_time_does_not_include_seconds(::zsearch::LintResult* e_generalized_time_does_not_include_seconds) {
  delete e_generalized_time_does_not_include_seconds_;
  e_generalized_time_does_not_include_seconds_ = e_generalized_time_does_not_include_seconds;
  if (e_generalized_time_does_not_include_seconds) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_generalized_time_does_not_include_seconds)
}

// .zsearch.LintResult e_generalized_time_includes_fraction_seconds = 104;
bool Lints::has_e_generalized_time_includes_fraction_seconds() const {
  return this != internal_default_instance() && e_generalized_time_includes_fraction_seconds_ != NULL;
}
void Lints::clear_e_generalized_time_includes_fraction_seconds() {
  if (GetArenaNoVirtual() == NULL && e_generalized_time_includes_fraction_seconds_ != NULL) delete e_generalized_time_includes_fraction_seconds_;
  e_generalized_time_includes_fraction_seconds_ = NULL;
}
const ::zsearch::LintResult& Lints::e_generalized_time_includes_fraction_seconds() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
  return e_generalized_time_includes_fraction_seconds_ != NULL ? *e_generalized_time_includes_fraction_seconds_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_generalized_time_includes_fraction_seconds() {
  
  if (e_generalized_time_includes_fraction_seconds_ == NULL) {
    e_generalized_time_includes_fraction_seconds_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
  return e_generalized_time_includes_fraction_seconds_;
}
::zsearch::LintResult* Lints::release_e_generalized_time_includes_fraction_seconds() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
  
  ::zsearch::LintResult* temp = e_generalized_time_includes_fraction_seconds_;
  e_generalized_time_includes_fraction_seconds_ = NULL;
  return temp;
}
void Lints::set_allocated_e_generalized_time_includes_fraction_seconds(::zsearch::LintResult* e_generalized_time_includes_fraction_seconds) {
  delete e_generalized_time_includes_fraction_seconds_;
  e_generalized_time_includes_fraction_seconds_ = e_generalized_time_includes_fraction_seconds;
  if (e_generalized_time_includes_fraction_seconds) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
}

// .zsearch.LintResult e_generalized_time_not_in_zulu = 105;
bool Lints::has_e_generalized_time_not_in_zulu() const {
  return this != internal_default_instance() && e_generalized_time_not_in_zulu_ != NULL;
}
void Lints::clear_e_generalized_time_not_in_zulu() {
  if (GetArenaNoVirtual() == NULL && e_generalized_time_not_in_zulu_ != NULL) delete e_generalized_time_not_in_zulu_;
  e_generalized_time_not_in_zulu_ = NULL;
}
const ::zsearch::LintResult& Lints::e_generalized_time_not_in_zulu() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_generalized_time_not_in_zulu)
  return e_generalized_time_not_in_zulu_ != NULL ? *e_generalized_time_not_in_zulu_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_generalized_time_not_in_zulu() {
  
  if (e_generalized_time_not_in_zulu_ == NULL) {
    e_generalized_time_not_in_zulu_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_generalized_time_not_in_zulu)
  return e_generalized_time_not_in_zulu_;
}
::zsearch::LintResult* Lints::release_e_generalized_time_not_in_zulu() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_generalized_time_not_in_zulu)
  
  ::zsearch::LintResult* temp = e_generalized_time_not_in_zulu_;
  e_generalized_time_not_in_zulu_ = NULL;
  return temp;
}
void Lints::set_allocated_e_generalized_time_not_in_zulu(::zsearch::LintResult* e_generalized_time_not_in_zulu) {
  delete e_generalized_time_not_in_zulu_;
  e_generalized_time_not_in_zulu_ = e_generalized_time_not_in_zulu;
  if (e_generalized_time_not_in_zulu) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_generalized_time_not_in_zulu)
}

// .zsearch.LintResult e_ian_dns_name_includes_null_char = 107;
bool Lints::has_e_ian_dns_name_includes_null_char() const {
  return this != internal_default_instance() && e_ian_dns_name_includes_null_char_ != NULL;
}
void Lints::clear_e_ian_dns_name_includes_null_char() {
  if (GetArenaNoVirtual() == NULL && e_ian_dns_name_includes_null_char_ != NULL) delete e_ian_dns_name_includes_null_char_;
  e_ian_dns_name_includes_null_char_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ian_dns_name_includes_null_char() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_dns_name_includes_null_char)
  return e_ian_dns_name_includes_null_char_ != NULL ? *e_ian_dns_name_includes_null_char_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ian_dns_name_includes_null_char() {
  
  if (e_ian_dns_name_includes_null_char_ == NULL) {
    e_ian_dns_name_includes_null_char_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_dns_name_includes_null_char)
  return e_ian_dns_name_includes_null_char_;
}
::zsearch::LintResult* Lints::release_e_ian_dns_name_includes_null_char() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_dns_name_includes_null_char)
  
  ::zsearch::LintResult* temp = e_ian_dns_name_includes_null_char_;
  e_ian_dns_name_includes_null_char_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ian_dns_name_includes_null_char(::zsearch::LintResult* e_ian_dns_name_includes_null_char) {
  delete e_ian_dns_name_includes_null_char_;
  e_ian_dns_name_includes_null_char_ = e_ian_dns_name_includes_null_char;
  if (e_ian_dns_name_includes_null_char) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_dns_name_includes_null_char)
}

// .zsearch.LintResult e_ian_dns_name_starts_with_period = 108;
bool Lints::has_e_ian_dns_name_starts_with_period() const {
  return this != internal_default_instance() && e_ian_dns_name_starts_with_period_ != NULL;
}
void Lints::clear_e_ian_dns_name_starts_with_period() {
  if (GetArenaNoVirtual() == NULL && e_ian_dns_name_starts_with_period_ != NULL) delete e_ian_dns_name_starts_with_period_;
  e_ian_dns_name_starts_with_period_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ian_dns_name_starts_with_period() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_dns_name_starts_with_period)
  return e_ian_dns_name_starts_with_period_ != NULL ? *e_ian_dns_name_starts_with_period_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ian_dns_name_starts_with_period() {
  
  if (e_ian_dns_name_starts_with_period_ == NULL) {
    e_ian_dns_name_starts_with_period_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_dns_name_starts_with_period)
  return e_ian_dns_name_starts_with_period_;
}
::zsearch::LintResult* Lints::release_e_ian_dns_name_starts_with_period() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_dns_name_starts_with_period)
  
  ::zsearch::LintResult* temp = e_ian_dns_name_starts_with_period_;
  e_ian_dns_name_starts_with_period_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ian_dns_name_starts_with_period(::zsearch::LintResult* e_ian_dns_name_starts_with_period) {
  delete e_ian_dns_name_starts_with_period_;
  e_ian_dns_name_starts_with_period_ = e_ian_dns_name_starts_with_period;
  if (e_ian_dns_name_starts_with_period) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_dns_name_starts_with_period)
}

// .zsearch.LintResult w_ian_iana_pub_suffix_empty = 109;
bool Lints::has_w_ian_iana_pub_suffix_empty() const {
  return this != internal_default_instance() && w_ian_iana_pub_suffix_empty_ != NULL;
}
void Lints::clear_w_ian_iana_pub_suffix_empty() {
  if (GetArenaNoVirtual() == NULL && w_ian_iana_pub_suffix_empty_ != NULL) delete w_ian_iana_pub_suffix_empty_;
  w_ian_iana_pub_suffix_empty_ = NULL;
}
const ::zsearch::LintResult& Lints::w_ian_iana_pub_suffix_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ian_iana_pub_suffix_empty)
  return w_ian_iana_pub_suffix_empty_ != NULL ? *w_ian_iana_pub_suffix_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_ian_iana_pub_suffix_empty() {
  
  if (w_ian_iana_pub_suffix_empty_ == NULL) {
    w_ian_iana_pub_suffix_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ian_iana_pub_suffix_empty)
  return w_ian_iana_pub_suffix_empty_;
}
::zsearch::LintResult* Lints::release_w_ian_iana_pub_suffix_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ian_iana_pub_suffix_empty)
  
  ::zsearch::LintResult* temp = w_ian_iana_pub_suffix_empty_;
  w_ian_iana_pub_suffix_empty_ = NULL;
  return temp;
}
void Lints::set_allocated_w_ian_iana_pub_suffix_empty(::zsearch::LintResult* w_ian_iana_pub_suffix_empty) {
  delete w_ian_iana_pub_suffix_empty_;
  w_ian_iana_pub_suffix_empty_ = w_ian_iana_pub_suffix_empty;
  if (w_ian_iana_pub_suffix_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ian_iana_pub_suffix_empty)
}

// .zsearch.LintResult e_inhibit_any_policy_not_critical = 110;
bool Lints::has_e_inhibit_any_policy_not_critical() const {
  return this != internal_default_instance() && e_inhibit_any_policy_not_critical_ != NULL;
}
void Lints::clear_e_inhibit_any_policy_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_inhibit_any_policy_not_critical_ != NULL) delete e_inhibit_any_policy_not_critical_;
  e_inhibit_any_policy_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_inhibit_any_policy_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_inhibit_any_policy_not_critical)
  return e_inhibit_any_policy_not_critical_ != NULL ? *e_inhibit_any_policy_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_inhibit_any_policy_not_critical() {
  
  if (e_inhibit_any_policy_not_critical_ == NULL) {
    e_inhibit_any_policy_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_inhibit_any_policy_not_critical)
  return e_inhibit_any_policy_not_critical_;
}
::zsearch::LintResult* Lints::release_e_inhibit_any_policy_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_inhibit_any_policy_not_critical)
  
  ::zsearch::LintResult* temp = e_inhibit_any_policy_not_critical_;
  e_inhibit_any_policy_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_inhibit_any_policy_not_critical(::zsearch::LintResult* e_inhibit_any_policy_not_critical) {
  delete e_inhibit_any_policy_not_critical_;
  e_inhibit_any_policy_not_critical_ = e_inhibit_any_policy_not_critical;
  if (e_inhibit_any_policy_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_inhibit_any_policy_not_critical)
}

// .zsearch.LintResult e_invalid_certificate_version = 111;
bool Lints::has_e_invalid_certificate_version() const {
  return this != internal_default_instance() && e_invalid_certificate_version_ != NULL;
}
void Lints::clear_e_invalid_certificate_version() {
  if (GetArenaNoVirtual() == NULL && e_invalid_certificate_version_ != NULL) delete e_invalid_certificate_version_;
  e_invalid_certificate_version_ = NULL;
}
const ::zsearch::LintResult& Lints::e_invalid_certificate_version() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_invalid_certificate_version)
  return e_invalid_certificate_version_ != NULL ? *e_invalid_certificate_version_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_invalid_certificate_version() {
  
  if (e_invalid_certificate_version_ == NULL) {
    e_invalid_certificate_version_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_invalid_certificate_version)
  return e_invalid_certificate_version_;
}
::zsearch::LintResult* Lints::release_e_invalid_certificate_version() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_invalid_certificate_version)
  
  ::zsearch::LintResult* temp = e_invalid_certificate_version_;
  e_invalid_certificate_version_ = NULL;
  return temp;
}
void Lints::set_allocated_e_invalid_certificate_version(::zsearch::LintResult* e_invalid_certificate_version) {
  delete e_invalid_certificate_version_;
  e_invalid_certificate_version_ = e_invalid_certificate_version;
  if (e_invalid_certificate_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_invalid_certificate_version)
}

// .zsearch.LintResult e_issuer_field_empty = 112;
bool Lints::has_e_issuer_field_empty() const {
  return this != internal_default_instance() && e_issuer_field_empty_ != NULL;
}
void Lints::clear_e_issuer_field_empty() {
  if (GetArenaNoVirtual() == NULL && e_issuer_field_empty_ != NULL) delete e_issuer_field_empty_;
  e_issuer_field_empty_ = NULL;
}
const ::zsearch::LintResult& Lints::e_issuer_field_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_issuer_field_empty)
  return e_issuer_field_empty_ != NULL ? *e_issuer_field_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_issuer_field_empty() {
  
  if (e_issuer_field_empty_ == NULL) {
    e_issuer_field_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_issuer_field_empty)
  return e_issuer_field_empty_;
}
::zsearch::LintResult* Lints::release_e_issuer_field_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_issuer_field_empty)
  
  ::zsearch::LintResult* temp = e_issuer_field_empty_;
  e_issuer_field_empty_ = NULL;
  return temp;
}
void Lints::set_allocated_e_issuer_field_empty(::zsearch::LintResult* e_issuer_field_empty) {
  delete e_issuer_field_empty_;
  e_issuer_field_empty_ = e_issuer_field_empty;
  if (e_issuer_field_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_issuer_field_empty)
}

// .zsearch.LintResult e_name_constraint_empty = 113;
bool Lints::has_e_name_constraint_empty() const {
  return this != internal_default_instance() && e_name_constraint_empty_ != NULL;
}
void Lints::clear_e_name_constraint_empty() {
  if (GetArenaNoVirtual() == NULL && e_name_constraint_empty_ != NULL) delete e_name_constraint_empty_;
  e_name_constraint_empty_ = NULL;
}
const ::zsearch::LintResult& Lints::e_name_constraint_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_name_constraint_empty)
  return e_name_constraint_empty_ != NULL ? *e_name_constraint_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_name_constraint_empty() {
  
  if (e_name_constraint_empty_ == NULL) {
    e_name_constraint_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_name_constraint_empty)
  return e_name_constraint_empty_;
}
::zsearch::LintResult* Lints::release_e_name_constraint_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_name_constraint_empty)
  
  ::zsearch::LintResult* temp = e_name_constraint_empty_;
  e_name_constraint_empty_ = NULL;
  return temp;
}
void Lints::set_allocated_e_name_constraint_empty(::zsearch::LintResult* e_name_constraint_empty) {
  delete e_name_constraint_empty_;
  e_name_constraint_empty_ = e_name_constraint_empty;
  if (e_name_constraint_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_name_constraint_empty)
}

// .zsearch.LintResult e_name_constraint_maximum_not_absent = 114;
bool Lints::has_e_name_constraint_maximum_not_absent() const {
  return this != internal_default_instance() && e_name_constraint_maximum_not_absent_ != NULL;
}
void Lints::clear_e_name_constraint_maximum_not_absent() {
  if (GetArenaNoVirtual() == NULL && e_name_constraint_maximum_not_absent_ != NULL) delete e_name_constraint_maximum_not_absent_;
  e_name_constraint_maximum_not_absent_ = NULL;
}
const ::zsearch::LintResult& Lints::e_name_constraint_maximum_not_absent() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_name_constraint_maximum_not_absent)
  return e_name_constraint_maximum_not_absent_ != NULL ? *e_name_constraint_maximum_not_absent_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_name_constraint_maximum_not_absent() {
  
  if (e_name_constraint_maximum_not_absent_ == NULL) {
    e_name_constraint_maximum_not_absent_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_name_constraint_maximum_not_absent)
  return e_name_constraint_maximum_not_absent_;
}
::zsearch::LintResult* Lints::release_e_name_constraint_maximum_not_absent() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_name_constraint_maximum_not_absent)
  
  ::zsearch::LintResult* temp = e_name_constraint_maximum_not_absent_;
  e_name_constraint_maximum_not_absent_ = NULL;
  return temp;
}
void Lints::set_allocated_e_name_constraint_maximum_not_absent(::zsearch::LintResult* e_name_constraint_maximum_not_absent) {
  delete e_name_constraint_maximum_not_absent_;
  e_name_constraint_maximum_not_absent_ = e_name_constraint_maximum_not_absent;
  if (e_name_constraint_maximum_not_absent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_name_constraint_maximum_not_absent)
}

// .zsearch.LintResult e_name_constraint_minimum_non_zero = 115;
bool Lints::has_e_name_constraint_minimum_non_zero() const {
  return this != internal_default_instance() && e_name_constraint_minimum_non_zero_ != NULL;
}
void Lints::clear_e_name_constraint_minimum_non_zero() {
  if (GetArenaNoVirtual() == NULL && e_name_constraint_minimum_non_zero_ != NULL) delete e_name_constraint_minimum_non_zero_;
  e_name_constraint_minimum_non_zero_ = NULL;
}
const ::zsearch::LintResult& Lints::e_name_constraint_minimum_non_zero() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_name_constraint_minimum_non_zero)
  return e_name_constraint_minimum_non_zero_ != NULL ? *e_name_constraint_minimum_non_zero_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_name_constraint_minimum_non_zero() {
  
  if (e_name_constraint_minimum_non_zero_ == NULL) {
    e_name_constraint_minimum_non_zero_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_name_constraint_minimum_non_zero)
  return e_name_constraint_minimum_non_zero_;
}
::zsearch::LintResult* Lints::release_e_name_constraint_minimum_non_zero() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_name_constraint_minimum_non_zero)
  
  ::zsearch::LintResult* temp = e_name_constraint_minimum_non_zero_;
  e_name_constraint_minimum_non_zero_ = NULL;
  return temp;
}
void Lints::set_allocated_e_name_constraint_minimum_non_zero(::zsearch::LintResult* e_name_constraint_minimum_non_zero) {
  delete e_name_constraint_minimum_non_zero_;
  e_name_constraint_minimum_non_zero_ = e_name_constraint_minimum_non_zero;
  if (e_name_constraint_minimum_non_zero) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_name_constraint_minimum_non_zero)
}

// .zsearch.LintResult w_name_constraint_on_edi_party_name = 116;
bool Lints::has_w_name_constraint_on_edi_party_name() const {
  return this != internal_default_instance() && w_name_constraint_on_edi_party_name_ != NULL;
}
void Lints::clear_w_name_constraint_on_edi_party_name() {
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_edi_party_name_ != NULL) delete w_name_constraint_on_edi_party_name_;
  w_name_constraint_on_edi_party_name_ = NULL;
}
const ::zsearch::LintResult& Lints::w_name_constraint_on_edi_party_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_name_constraint_on_edi_party_name)
  return w_name_constraint_on_edi_party_name_ != NULL ? *w_name_constraint_on_edi_party_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_name_constraint_on_edi_party_name() {
  
  if (w_name_constraint_on_edi_party_name_ == NULL) {
    w_name_constraint_on_edi_party_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_name_constraint_on_edi_party_name)
  return w_name_constraint_on_edi_party_name_;
}
::zsearch::LintResult* Lints::release_w_name_constraint_on_edi_party_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_name_constraint_on_edi_party_name)
  
  ::zsearch::LintResult* temp = w_name_constraint_on_edi_party_name_;
  w_name_constraint_on_edi_party_name_ = NULL;
  return temp;
}
void Lints::set_allocated_w_name_constraint_on_edi_party_name(::zsearch::LintResult* w_name_constraint_on_edi_party_name) {
  delete w_name_constraint_on_edi_party_name_;
  w_name_constraint_on_edi_party_name_ = w_name_constraint_on_edi_party_name;
  if (w_name_constraint_on_edi_party_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_name_constraint_on_edi_party_name)
}

// .zsearch.LintResult w_name_constraint_on_registered_id = 117;
bool Lints::has_w_name_constraint_on_registered_id() const {
  return this != internal_default_instance() && w_name_constraint_on_registered_id_ != NULL;
}
void Lints::clear_w_name_constraint_on_registered_id() {
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_registered_id_ != NULL) delete w_name_constraint_on_registered_id_;
  w_name_constraint_on_registered_id_ = NULL;
}
const ::zsearch::LintResult& Lints::w_name_constraint_on_registered_id() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_name_constraint_on_registered_id)
  return w_name_constraint_on_registered_id_ != NULL ? *w_name_constraint_on_registered_id_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_name_constraint_on_registered_id() {
  
  if (w_name_constraint_on_registered_id_ == NULL) {
    w_name_constraint_on_registered_id_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_name_constraint_on_registered_id)
  return w_name_constraint_on_registered_id_;
}
::zsearch::LintResult* Lints::release_w_name_constraint_on_registered_id() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_name_constraint_on_registered_id)
  
  ::zsearch::LintResult* temp = w_name_constraint_on_registered_id_;
  w_name_constraint_on_registered_id_ = NULL;
  return temp;
}
void Lints::set_allocated_w_name_constraint_on_registered_id(::zsearch::LintResult* w_name_constraint_on_registered_id) {
  delete w_name_constraint_on_registered_id_;
  w_name_constraint_on_registered_id_ = w_name_constraint_on_registered_id;
  if (w_name_constraint_on_registered_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_name_constraint_on_registered_id)
}

// .zsearch.LintResult w_name_constraint_on_x400 = 118;
bool Lints::has_w_name_constraint_on_x400() const {
  return this != internal_default_instance() && w_name_constraint_on_x400_ != NULL;
}
void Lints::clear_w_name_constraint_on_x400() {
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_x400_ != NULL) delete w_name_constraint_on_x400_;
  w_name_constraint_on_x400_ = NULL;
}
const ::zsearch::LintResult& Lints::w_name_constraint_on_x400() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_name_constraint_on_x400)
  return w_name_constraint_on_x400_ != NULL ? *w_name_constraint_on_x400_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_name_constraint_on_x400() {
  
  if (w_name_constraint_on_x400_ == NULL) {
    w_name_constraint_on_x400_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_name_constraint_on_x400)
  return w_name_constraint_on_x400_;
}
::zsearch::LintResult* Lints::release_w_name_constraint_on_x400() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_name_constraint_on_x400)
  
  ::zsearch::LintResult* temp = w_name_constraint_on_x400_;
  w_name_constraint_on_x400_ = NULL;
  return temp;
}
void Lints::set_allocated_w_name_constraint_on_x400(::zsearch::LintResult* w_name_constraint_on_x400) {
  delete w_name_constraint_on_x400_;
  w_name_constraint_on_x400_ = w_name_constraint_on_x400;
  if (w_name_constraint_on_x400) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_name_constraint_on_x400)
}

// .zsearch.LintResult e_old_root_ca_rsa_mod_less_than_2048_bits = 119;
bool Lints::has_e_old_root_ca_rsa_mod_less_than_2048_bits() const {
  return this != internal_default_instance() && e_old_root_ca_rsa_mod_less_than_2048_bits_ != NULL;
}
void Lints::clear_e_old_root_ca_rsa_mod_less_than_2048_bits() {
  if (GetArenaNoVirtual() == NULL && e_old_root_ca_rsa_mod_less_than_2048_bits_ != NULL) delete e_old_root_ca_rsa_mod_less_than_2048_bits_;
  e_old_root_ca_rsa_mod_less_than_2048_bits_ = NULL;
}
const ::zsearch::LintResult& Lints::e_old_root_ca_rsa_mod_less_than_2048_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
  return e_old_root_ca_rsa_mod_less_than_2048_bits_ != NULL ? *e_old_root_ca_rsa_mod_less_than_2048_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_old_root_ca_rsa_mod_less_than_2048_bits() {
  
  if (e_old_root_ca_rsa_mod_less_than_2048_bits_ == NULL) {
    e_old_root_ca_rsa_mod_less_than_2048_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
  return e_old_root_ca_rsa_mod_less_than_2048_bits_;
}
::zsearch::LintResult* Lints::release_e_old_root_ca_rsa_mod_less_than_2048_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
  
  ::zsearch::LintResult* temp = e_old_root_ca_rsa_mod_less_than_2048_bits_;
  e_old_root_ca_rsa_mod_less_than_2048_bits_ = NULL;
  return temp;
}
void Lints::set_allocated_e_old_root_ca_rsa_mod_less_than_2048_bits(::zsearch::LintResult* e_old_root_ca_rsa_mod_less_than_2048_bits) {
  delete e_old_root_ca_rsa_mod_less_than_2048_bits_;
  e_old_root_ca_rsa_mod_less_than_2048_bits_ = e_old_root_ca_rsa_mod_less_than_2048_bits;
  if (e_old_root_ca_rsa_mod_less_than_2048_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
}

// .zsearch.LintResult e_old_sub_ca_rsa_mod_less_than_1024_bits = 120;
bool Lints::has_e_old_sub_ca_rsa_mod_less_than_1024_bits() const {
  return this != internal_default_instance() && e_old_sub_ca_rsa_mod_less_than_1024_bits_ != NULL;
}
void Lints::clear_e_old_sub_ca_rsa_mod_less_than_1024_bits() {
  if (GetArenaNoVirtual() == NULL && e_old_sub_ca_rsa_mod_less_than_1024_bits_ != NULL) delete e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  e_old_sub_ca_rsa_mod_less_than_1024_bits_ = NULL;
}
const ::zsearch::LintResult& Lints::e_old_sub_ca_rsa_mod_less_than_1024_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
  return e_old_sub_ca_rsa_mod_less_than_1024_bits_ != NULL ? *e_old_sub_ca_rsa_mod_less_than_1024_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_old_sub_ca_rsa_mod_less_than_1024_bits() {
  
  if (e_old_sub_ca_rsa_mod_less_than_1024_bits_ == NULL) {
    e_old_sub_ca_rsa_mod_less_than_1024_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
  return e_old_sub_ca_rsa_mod_less_than_1024_bits_;
}
::zsearch::LintResult* Lints::release_e_old_sub_ca_rsa_mod_less_than_1024_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
  
  ::zsearch::LintResult* temp = e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  e_old_sub_ca_rsa_mod_less_than_1024_bits_ = NULL;
  return temp;
}
void Lints::set_allocated_e_old_sub_ca_rsa_mod_less_than_1024_bits(::zsearch::LintResult* e_old_sub_ca_rsa_mod_less_than_1024_bits) {
  delete e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  e_old_sub_ca_rsa_mod_less_than_1024_bits_ = e_old_sub_ca_rsa_mod_less_than_1024_bits;
  if (e_old_sub_ca_rsa_mod_less_than_1024_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
}

// .zsearch.LintResult e_old_sub_cert_rsa_mod_less_than_1024_bits = 121;
bool Lints::has_e_old_sub_cert_rsa_mod_less_than_1024_bits() const {
  return this != internal_default_instance() && e_old_sub_cert_rsa_mod_less_than_1024_bits_ != NULL;
}
void Lints::clear_e_old_sub_cert_rsa_mod_less_than_1024_bits() {
  if (GetArenaNoVirtual() == NULL && e_old_sub_cert_rsa_mod_less_than_1024_bits_ != NULL) delete e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  e_old_sub_cert_rsa_mod_less_than_1024_bits_ = NULL;
}
const ::zsearch::LintResult& Lints::e_old_sub_cert_rsa_mod_less_than_1024_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
  return e_old_sub_cert_rsa_mod_less_than_1024_bits_ != NULL ? *e_old_sub_cert_rsa_mod_less_than_1024_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_old_sub_cert_rsa_mod_less_than_1024_bits() {
  
  if (e_old_sub_cert_rsa_mod_less_than_1024_bits_ == NULL) {
    e_old_sub_cert_rsa_mod_less_than_1024_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
  return e_old_sub_cert_rsa_mod_less_than_1024_bits_;
}
::zsearch::LintResult* Lints::release_e_old_sub_cert_rsa_mod_less_than_1024_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
  
  ::zsearch::LintResult* temp = e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  e_old_sub_cert_rsa_mod_less_than_1024_bits_ = NULL;
  return temp;
}
void Lints::set_allocated_e_old_sub_cert_rsa_mod_less_than_1024_bits(::zsearch::LintResult* e_old_sub_cert_rsa_mod_less_than_1024_bits) {
  delete e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  e_old_sub_cert_rsa_mod_less_than_1024_bits_ = e_old_sub_cert_rsa_mod_less_than_1024_bits;
  if (e_old_sub_cert_rsa_mod_less_than_1024_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
}

// .zsearch.LintResult e_path_len_constraint_improperly_included = 122;
bool Lints::has_e_path_len_constraint_improperly_included() const {
  return this != internal_default_instance() && e_path_len_constraint_improperly_included_ != NULL;
}
void Lints::clear_e_path_len_constraint_improperly_included() {
  if (GetArenaNoVirtual() == NULL && e_path_len_constraint_improperly_included_ != NULL) delete e_path_len_constraint_improperly_included_;
  e_path_len_constraint_improperly_included_ = NULL;
}
const ::zsearch::LintResult& Lints::e_path_len_constraint_improperly_included() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_path_len_constraint_improperly_included)
  return e_path_len_constraint_improperly_included_ != NULL ? *e_path_len_constraint_improperly_included_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_path_len_constraint_improperly_included() {
  
  if (e_path_len_constraint_improperly_included_ == NULL) {
    e_path_len_constraint_improperly_included_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_path_len_constraint_improperly_included)
  return e_path_len_constraint_improperly_included_;
}
::zsearch::LintResult* Lints::release_e_path_len_constraint_improperly_included() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_path_len_constraint_improperly_included)
  
  ::zsearch::LintResult* temp = e_path_len_constraint_improperly_included_;
  e_path_len_constraint_improperly_included_ = NULL;
  return temp;
}
void Lints::set_allocated_e_path_len_constraint_improperly_included(::zsearch::LintResult* e_path_len_constraint_improperly_included) {
  delete e_path_len_constraint_improperly_included_;
  e_path_len_constraint_improperly_included_ = e_path_len_constraint_improperly_included;
  if (e_path_len_constraint_improperly_included) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_path_len_constraint_improperly_included)
}

// .zsearch.LintResult e_path_len_constraint_zero_or_less = 123;
bool Lints::has_e_path_len_constraint_zero_or_less() const {
  return this != internal_default_instance() && e_path_len_constraint_zero_or_less_ != NULL;
}
void Lints::clear_e_path_len_constraint_zero_or_less() {
  if (GetArenaNoVirtual() == NULL && e_path_len_constraint_zero_or_less_ != NULL) delete e_path_len_constraint_zero_or_less_;
  e_path_len_constraint_zero_or_less_ = NULL;
}
const ::zsearch::LintResult& Lints::e_path_len_constraint_zero_or_less() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_path_len_constraint_zero_or_less)
  return e_path_len_constraint_zero_or_less_ != NULL ? *e_path_len_constraint_zero_or_less_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_path_len_constraint_zero_or_less() {
  
  if (e_path_len_constraint_zero_or_less_ == NULL) {
    e_path_len_constraint_zero_or_less_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_path_len_constraint_zero_or_less)
  return e_path_len_constraint_zero_or_less_;
}
::zsearch::LintResult* Lints::release_e_path_len_constraint_zero_or_less() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_path_len_constraint_zero_or_less)
  
  ::zsearch::LintResult* temp = e_path_len_constraint_zero_or_less_;
  e_path_len_constraint_zero_or_less_ = NULL;
  return temp;
}
void Lints::set_allocated_e_path_len_constraint_zero_or_less(::zsearch::LintResult* e_path_len_constraint_zero_or_less) {
  delete e_path_len_constraint_zero_or_less_;
  e_path_len_constraint_zero_or_less_ = e_path_len_constraint_zero_or_less;
  if (e_path_len_constraint_zero_or_less) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_path_len_constraint_zero_or_less)
}

// .zsearch.LintResult e_public_key_type_not_allowed = 124;
bool Lints::has_e_public_key_type_not_allowed() const {
  return this != internal_default_instance() && e_public_key_type_not_allowed_ != NULL;
}
void Lints::clear_e_public_key_type_not_allowed() {
  if (GetArenaNoVirtual() == NULL && e_public_key_type_not_allowed_ != NULL) delete e_public_key_type_not_allowed_;
  e_public_key_type_not_allowed_ = NULL;
}
const ::zsearch::LintResult& Lints::e_public_key_type_not_allowed() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_public_key_type_not_allowed)
  return e_public_key_type_not_allowed_ != NULL ? *e_public_key_type_not_allowed_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_public_key_type_not_allowed() {
  
  if (e_public_key_type_not_allowed_ == NULL) {
    e_public_key_type_not_allowed_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_public_key_type_not_allowed)
  return e_public_key_type_not_allowed_;
}
::zsearch::LintResult* Lints::release_e_public_key_type_not_allowed() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_public_key_type_not_allowed)
  
  ::zsearch::LintResult* temp = e_public_key_type_not_allowed_;
  e_public_key_type_not_allowed_ = NULL;
  return temp;
}
void Lints::set_allocated_e_public_key_type_not_allowed(::zsearch::LintResult* e_public_key_type_not_allowed) {
  delete e_public_key_type_not_allowed_;
  e_public_key_type_not_allowed_ = e_public_key_type_not_allowed;
  if (e_public_key_type_not_allowed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_public_key_type_not_allowed)
}

// .zsearch.LintResult w_root_ca_basic_constraints_path_len_constraint_field_present = 125;
bool Lints::has_w_root_ca_basic_constraints_path_len_constraint_field_present() const {
  return this != internal_default_instance() && w_root_ca_basic_constraints_path_len_constraint_field_present_ != NULL;
}
void Lints::clear_w_root_ca_basic_constraints_path_len_constraint_field_present() {
  if (GetArenaNoVirtual() == NULL && w_root_ca_basic_constraints_path_len_constraint_field_present_ != NULL) delete w_root_ca_basic_constraints_path_len_constraint_field_present_;
  w_root_ca_basic_constraints_path_len_constraint_field_present_ = NULL;
}
const ::zsearch::LintResult& Lints::w_root_ca_basic_constraints_path_len_constraint_field_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
  return w_root_ca_basic_constraints_path_len_constraint_field_present_ != NULL ? *w_root_ca_basic_constraints_path_len_constraint_field_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_root_ca_basic_constraints_path_len_constraint_field_present() {
  
  if (w_root_ca_basic_constraints_path_len_constraint_field_present_ == NULL) {
    w_root_ca_basic_constraints_path_len_constraint_field_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
  return w_root_ca_basic_constraints_path_len_constraint_field_present_;
}
::zsearch::LintResult* Lints::release_w_root_ca_basic_constraints_path_len_constraint_field_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
  
  ::zsearch::LintResult* temp = w_root_ca_basic_constraints_path_len_constraint_field_present_;
  w_root_ca_basic_constraints_path_len_constraint_field_present_ = NULL;
  return temp;
}
void Lints::set_allocated_w_root_ca_basic_constraints_path_len_constraint_field_present(::zsearch::LintResult* w_root_ca_basic_constraints_path_len_constraint_field_present) {
  delete w_root_ca_basic_constraints_path_len_constraint_field_present_;
  w_root_ca_basic_constraints_path_len_constraint_field_present_ = w_root_ca_basic_constraints_path_len_constraint_field_present;
  if (w_root_ca_basic_constraints_path_len_constraint_field_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
}

// .zsearch.LintResult w_root_ca_contains_cert_policy = 126;
bool Lints::has_w_root_ca_contains_cert_policy() const {
  return this != internal_default_instance() && w_root_ca_contains_cert_policy_ != NULL;
}
void Lints::clear_w_root_ca_contains_cert_policy() {
  if (GetArenaNoVirtual() == NULL && w_root_ca_contains_cert_policy_ != NULL) delete w_root_ca_contains_cert_policy_;
  w_root_ca_contains_cert_policy_ = NULL;
}
const ::zsearch::LintResult& Lints::w_root_ca_contains_cert_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_root_ca_contains_cert_policy)
  return w_root_ca_contains_cert_policy_ != NULL ? *w_root_ca_contains_cert_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_root_ca_contains_cert_policy() {
  
  if (w_root_ca_contains_cert_policy_ == NULL) {
    w_root_ca_contains_cert_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_root_ca_contains_cert_policy)
  return w_root_ca_contains_cert_policy_;
}
::zsearch::LintResult* Lints::release_w_root_ca_contains_cert_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_root_ca_contains_cert_policy)
  
  ::zsearch::LintResult* temp = w_root_ca_contains_cert_policy_;
  w_root_ca_contains_cert_policy_ = NULL;
  return temp;
}
void Lints::set_allocated_w_root_ca_contains_cert_policy(::zsearch::LintResult* w_root_ca_contains_cert_policy) {
  delete w_root_ca_contains_cert_policy_;
  w_root_ca_contains_cert_policy_ = w_root_ca_contains_cert_policy;
  if (w_root_ca_contains_cert_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_root_ca_contains_cert_policy)
}

// .zsearch.LintResult e_root_ca_extended_key_usage_present = 127;
bool Lints::has_e_root_ca_extended_key_usage_present() const {
  return this != internal_default_instance() && e_root_ca_extended_key_usage_present_ != NULL;
}
void Lints::clear_e_root_ca_extended_key_usage_present() {
  if (GetArenaNoVirtual() == NULL && e_root_ca_extended_key_usage_present_ != NULL) delete e_root_ca_extended_key_usage_present_;
  e_root_ca_extended_key_usage_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_root_ca_extended_key_usage_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_root_ca_extended_key_usage_present)
  return e_root_ca_extended_key_usage_present_ != NULL ? *e_root_ca_extended_key_usage_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_root_ca_extended_key_usage_present() {
  
  if (e_root_ca_extended_key_usage_present_ == NULL) {
    e_root_ca_extended_key_usage_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_root_ca_extended_key_usage_present)
  return e_root_ca_extended_key_usage_present_;
}
::zsearch::LintResult* Lints::release_e_root_ca_extended_key_usage_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_root_ca_extended_key_usage_present)
  
  ::zsearch::LintResult* temp = e_root_ca_extended_key_usage_present_;
  e_root_ca_extended_key_usage_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_root_ca_extended_key_usage_present(::zsearch::LintResult* e_root_ca_extended_key_usage_present) {
  delete e_root_ca_extended_key_usage_present_;
  e_root_ca_extended_key_usage_present_ = e_root_ca_extended_key_usage_present;
  if (e_root_ca_extended_key_usage_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_root_ca_extended_key_usage_present)
}

// .zsearch.LintResult e_rsa_exp_negative = 128;
bool Lints::has_e_rsa_exp_negative() const {
  return this != internal_default_instance() && e_rsa_exp_negative_ != NULL;
}
void Lints::clear_e_rsa_exp_negative() {
  if (GetArenaNoVirtual() == NULL && e_rsa_exp_negative_ != NULL) delete e_rsa_exp_negative_;
  e_rsa_exp_negative_ = NULL;
}
const ::zsearch::LintResult& Lints::e_rsa_exp_negative() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_exp_negative)
  return e_rsa_exp_negative_ != NULL ? *e_rsa_exp_negative_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_rsa_exp_negative() {
  
  if (e_rsa_exp_negative_ == NULL) {
    e_rsa_exp_negative_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_exp_negative)
  return e_rsa_exp_negative_;
}
::zsearch::LintResult* Lints::release_e_rsa_exp_negative() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_exp_negative)
  
  ::zsearch::LintResult* temp = e_rsa_exp_negative_;
  e_rsa_exp_negative_ = NULL;
  return temp;
}
void Lints::set_allocated_e_rsa_exp_negative(::zsearch::LintResult* e_rsa_exp_negative) {
  delete e_rsa_exp_negative_;
  e_rsa_exp_negative_ = e_rsa_exp_negative;
  if (e_rsa_exp_negative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_exp_negative)
}

// .zsearch.LintResult w_rsa_mod_factors_smaller_than_752 = 129;
bool Lints::has_w_rsa_mod_factors_smaller_than_752() const {
  return this != internal_default_instance() && w_rsa_mod_factors_smaller_than_752_ != NULL;
}
void Lints::clear_w_rsa_mod_factors_smaller_than_752() {
  if (GetArenaNoVirtual() == NULL && w_rsa_mod_factors_smaller_than_752_ != NULL) delete w_rsa_mod_factors_smaller_than_752_;
  w_rsa_mod_factors_smaller_than_752_ = NULL;
}
const ::zsearch::LintResult& Lints::w_rsa_mod_factors_smaller_than_752() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
  return w_rsa_mod_factors_smaller_than_752_ != NULL ? *w_rsa_mod_factors_smaller_than_752_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_rsa_mod_factors_smaller_than_752() {
  
  if (w_rsa_mod_factors_smaller_than_752_ == NULL) {
    w_rsa_mod_factors_smaller_than_752_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
  return w_rsa_mod_factors_smaller_than_752_;
}
::zsearch::LintResult* Lints::release_w_rsa_mod_factors_smaller_than_752() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
  
  ::zsearch::LintResult* temp = w_rsa_mod_factors_smaller_than_752_;
  w_rsa_mod_factors_smaller_than_752_ = NULL;
  return temp;
}
void Lints::set_allocated_w_rsa_mod_factors_smaller_than_752(::zsearch::LintResult* w_rsa_mod_factors_smaller_than_752) {
  delete w_rsa_mod_factors_smaller_than_752_;
  w_rsa_mod_factors_smaller_than_752_ = w_rsa_mod_factors_smaller_than_752;
  if (w_rsa_mod_factors_smaller_than_752) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
}

// .zsearch.LintResult e_rsa_mod_less_than_2048_bits = 130;
bool Lints::has_e_rsa_mod_less_than_2048_bits() const {
  return this != internal_default_instance() && e_rsa_mod_less_than_2048_bits_ != NULL;
}
void Lints::clear_e_rsa_mod_less_than_2048_bits() {
  if (GetArenaNoVirtual() == NULL && e_rsa_mod_less_than_2048_bits_ != NULL) delete e_rsa_mod_less_than_2048_bits_;
  e_rsa_mod_less_than_2048_bits_ = NULL;
}
const ::zsearch::LintResult& Lints::e_rsa_mod_less_than_2048_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
  return e_rsa_mod_less_than_2048_bits_ != NULL ? *e_rsa_mod_less_than_2048_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_rsa_mod_less_than_2048_bits() {
  
  if (e_rsa_mod_less_than_2048_bits_ == NULL) {
    e_rsa_mod_less_than_2048_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
  return e_rsa_mod_less_than_2048_bits_;
}
::zsearch::LintResult* Lints::release_e_rsa_mod_less_than_2048_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
  
  ::zsearch::LintResult* temp = e_rsa_mod_less_than_2048_bits_;
  e_rsa_mod_less_than_2048_bits_ = NULL;
  return temp;
}
void Lints::set_allocated_e_rsa_mod_less_than_2048_bits(::zsearch::LintResult* e_rsa_mod_less_than_2048_bits) {
  delete e_rsa_mod_less_than_2048_bits_;
  e_rsa_mod_less_than_2048_bits_ = e_rsa_mod_less_than_2048_bits;
  if (e_rsa_mod_less_than_2048_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
}

// .zsearch.LintResult w_rsa_mod_not_odd = 131;
bool Lints::has_w_rsa_mod_not_odd() const {
  return this != internal_default_instance() && w_rsa_mod_not_odd_ != NULL;
}
void Lints::clear_w_rsa_mod_not_odd() {
  if (GetArenaNoVirtual() == NULL && w_rsa_mod_not_odd_ != NULL) delete w_rsa_mod_not_odd_;
  w_rsa_mod_not_odd_ = NULL;
}
const ::zsearch::LintResult& Lints::w_rsa_mod_not_odd() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_rsa_mod_not_odd)
  return w_rsa_mod_not_odd_ != NULL ? *w_rsa_mod_not_odd_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_rsa_mod_not_odd() {
  
  if (w_rsa_mod_not_odd_ == NULL) {
    w_rsa_mod_not_odd_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_rsa_mod_not_odd)
  return w_rsa_mod_not_odd_;
}
::zsearch::LintResult* Lints::release_w_rsa_mod_not_odd() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_rsa_mod_not_odd)
  
  ::zsearch::LintResult* temp = w_rsa_mod_not_odd_;
  w_rsa_mod_not_odd_ = NULL;
  return temp;
}
void Lints::set_allocated_w_rsa_mod_not_odd(::zsearch::LintResult* w_rsa_mod_not_odd) {
  delete w_rsa_mod_not_odd_;
  w_rsa_mod_not_odd_ = w_rsa_mod_not_odd;
  if (w_rsa_mod_not_odd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_rsa_mod_not_odd)
}

// .zsearch.LintResult w_rsa_public_exponent_not_in_range = 132;
bool Lints::has_w_rsa_public_exponent_not_in_range() const {
  return this != internal_default_instance() && w_rsa_public_exponent_not_in_range_ != NULL;
}
void Lints::clear_w_rsa_public_exponent_not_in_range() {
  if (GetArenaNoVirtual() == NULL && w_rsa_public_exponent_not_in_range_ != NULL) delete w_rsa_public_exponent_not_in_range_;
  w_rsa_public_exponent_not_in_range_ = NULL;
}
const ::zsearch::LintResult& Lints::w_rsa_public_exponent_not_in_range() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_rsa_public_exponent_not_in_range)
  return w_rsa_public_exponent_not_in_range_ != NULL ? *w_rsa_public_exponent_not_in_range_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_rsa_public_exponent_not_in_range() {
  
  if (w_rsa_public_exponent_not_in_range_ == NULL) {
    w_rsa_public_exponent_not_in_range_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_rsa_public_exponent_not_in_range)
  return w_rsa_public_exponent_not_in_range_;
}
::zsearch::LintResult* Lints::release_w_rsa_public_exponent_not_in_range() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_rsa_public_exponent_not_in_range)
  
  ::zsearch::LintResult* temp = w_rsa_public_exponent_not_in_range_;
  w_rsa_public_exponent_not_in_range_ = NULL;
  return temp;
}
void Lints::set_allocated_w_rsa_public_exponent_not_in_range(::zsearch::LintResult* w_rsa_public_exponent_not_in_range) {
  delete w_rsa_public_exponent_not_in_range_;
  w_rsa_public_exponent_not_in_range_ = w_rsa_public_exponent_not_in_range;
  if (w_rsa_public_exponent_not_in_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_rsa_public_exponent_not_in_range)
}

// .zsearch.LintResult e_rsa_public_exponent_not_odd = 133;
bool Lints::has_e_rsa_public_exponent_not_odd() const {
  return this != internal_default_instance() && e_rsa_public_exponent_not_odd_ != NULL;
}
void Lints::clear_e_rsa_public_exponent_not_odd() {
  if (GetArenaNoVirtual() == NULL && e_rsa_public_exponent_not_odd_ != NULL) delete e_rsa_public_exponent_not_odd_;
  e_rsa_public_exponent_not_odd_ = NULL;
}
const ::zsearch::LintResult& Lints::e_rsa_public_exponent_not_odd() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_public_exponent_not_odd)
  return e_rsa_public_exponent_not_odd_ != NULL ? *e_rsa_public_exponent_not_odd_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_rsa_public_exponent_not_odd() {
  
  if (e_rsa_public_exponent_not_odd_ == NULL) {
    e_rsa_public_exponent_not_odd_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_public_exponent_not_odd)
  return e_rsa_public_exponent_not_odd_;
}
::zsearch::LintResult* Lints::release_e_rsa_public_exponent_not_odd() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_public_exponent_not_odd)
  
  ::zsearch::LintResult* temp = e_rsa_public_exponent_not_odd_;
  e_rsa_public_exponent_not_odd_ = NULL;
  return temp;
}
void Lints::set_allocated_e_rsa_public_exponent_not_odd(::zsearch::LintResult* e_rsa_public_exponent_not_odd) {
  delete e_rsa_public_exponent_not_odd_;
  e_rsa_public_exponent_not_odd_ = e_rsa_public_exponent_not_odd;
  if (e_rsa_public_exponent_not_odd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_public_exponent_not_odd)
}

// .zsearch.LintResult e_rsa_public_exponent_too_small = 134;
bool Lints::has_e_rsa_public_exponent_too_small() const {
  return this != internal_default_instance() && e_rsa_public_exponent_too_small_ != NULL;
}
void Lints::clear_e_rsa_public_exponent_too_small() {
  if (GetArenaNoVirtual() == NULL && e_rsa_public_exponent_too_small_ != NULL) delete e_rsa_public_exponent_too_small_;
  e_rsa_public_exponent_too_small_ = NULL;
}
const ::zsearch::LintResult& Lints::e_rsa_public_exponent_too_small() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_public_exponent_too_small)
  return e_rsa_public_exponent_too_small_ != NULL ? *e_rsa_public_exponent_too_small_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_rsa_public_exponent_too_small() {
  
  if (e_rsa_public_exponent_too_small_ == NULL) {
    e_rsa_public_exponent_too_small_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_public_exponent_too_small)
  return e_rsa_public_exponent_too_small_;
}
::zsearch::LintResult* Lints::release_e_rsa_public_exponent_too_small() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_public_exponent_too_small)
  
  ::zsearch::LintResult* temp = e_rsa_public_exponent_too_small_;
  e_rsa_public_exponent_too_small_ = NULL;
  return temp;
}
void Lints::set_allocated_e_rsa_public_exponent_too_small(::zsearch::LintResult* e_rsa_public_exponent_too_small) {
  delete e_rsa_public_exponent_too_small_;
  e_rsa_public_exponent_too_small_ = e_rsa_public_exponent_too_small;
  if (e_rsa_public_exponent_too_small) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_public_exponent_too_small)
}

// .zsearch.LintResult e_san_dns_name_includes_null_char = 135;
bool Lints::has_e_san_dns_name_includes_null_char() const {
  return this != internal_default_instance() && e_san_dns_name_includes_null_char_ != NULL;
}
void Lints::clear_e_san_dns_name_includes_null_char() {
  if (GetArenaNoVirtual() == NULL && e_san_dns_name_includes_null_char_ != NULL) delete e_san_dns_name_includes_null_char_;
  e_san_dns_name_includes_null_char_ = NULL;
}
const ::zsearch::LintResult& Lints::e_san_dns_name_includes_null_char() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_dns_name_includes_null_char)
  return e_san_dns_name_includes_null_char_ != NULL ? *e_san_dns_name_includes_null_char_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_san_dns_name_includes_null_char() {
  
  if (e_san_dns_name_includes_null_char_ == NULL) {
    e_san_dns_name_includes_null_char_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_dns_name_includes_null_char)
  return e_san_dns_name_includes_null_char_;
}
::zsearch::LintResult* Lints::release_e_san_dns_name_includes_null_char() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_dns_name_includes_null_char)
  
  ::zsearch::LintResult* temp = e_san_dns_name_includes_null_char_;
  e_san_dns_name_includes_null_char_ = NULL;
  return temp;
}
void Lints::set_allocated_e_san_dns_name_includes_null_char(::zsearch::LintResult* e_san_dns_name_includes_null_char) {
  delete e_san_dns_name_includes_null_char_;
  e_san_dns_name_includes_null_char_ = e_san_dns_name_includes_null_char;
  if (e_san_dns_name_includes_null_char) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_dns_name_includes_null_char)
}

// .zsearch.LintResult e_san_dns_name_starts_with_period = 136;
bool Lints::has_e_san_dns_name_starts_with_period() const {
  return this != internal_default_instance() && e_san_dns_name_starts_with_period_ != NULL;
}
void Lints::clear_e_san_dns_name_starts_with_period() {
  if (GetArenaNoVirtual() == NULL && e_san_dns_name_starts_with_period_ != NULL) delete e_san_dns_name_starts_with_period_;
  e_san_dns_name_starts_with_period_ = NULL;
}
const ::zsearch::LintResult& Lints::e_san_dns_name_starts_with_period() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_dns_name_starts_with_period)
  return e_san_dns_name_starts_with_period_ != NULL ? *e_san_dns_name_starts_with_period_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_san_dns_name_starts_with_period() {
  
  if (e_san_dns_name_starts_with_period_ == NULL) {
    e_san_dns_name_starts_with_period_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_dns_name_starts_with_period)
  return e_san_dns_name_starts_with_period_;
}
::zsearch::LintResult* Lints::release_e_san_dns_name_starts_with_period() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_dns_name_starts_with_period)
  
  ::zsearch::LintResult* temp = e_san_dns_name_starts_with_period_;
  e_san_dns_name_starts_with_period_ = NULL;
  return temp;
}
void Lints::set_allocated_e_san_dns_name_starts_with_period(::zsearch::LintResult* e_san_dns_name_starts_with_period) {
  delete e_san_dns_name_starts_with_period_;
  e_san_dns_name_starts_with_period_ = e_san_dns_name_starts_with_period;
  if (e_san_dns_name_starts_with_period) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_dns_name_starts_with_period)
}

// .zsearch.LintResult w_san_iana_pub_suffix_empty = 137;
bool Lints::has_w_san_iana_pub_suffix_empty() const {
  return this != internal_default_instance() && w_san_iana_pub_suffix_empty_ != NULL;
}
void Lints::clear_w_san_iana_pub_suffix_empty() {
  if (GetArenaNoVirtual() == NULL && w_san_iana_pub_suffix_empty_ != NULL) delete w_san_iana_pub_suffix_empty_;
  w_san_iana_pub_suffix_empty_ = NULL;
}
const ::zsearch::LintResult& Lints::w_san_iana_pub_suffix_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_san_iana_pub_suffix_empty)
  return w_san_iana_pub_suffix_empty_ != NULL ? *w_san_iana_pub_suffix_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_san_iana_pub_suffix_empty() {
  
  if (w_san_iana_pub_suffix_empty_ == NULL) {
    w_san_iana_pub_suffix_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_san_iana_pub_suffix_empty)
  return w_san_iana_pub_suffix_empty_;
}
::zsearch::LintResult* Lints::release_w_san_iana_pub_suffix_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_san_iana_pub_suffix_empty)
  
  ::zsearch::LintResult* temp = w_san_iana_pub_suffix_empty_;
  w_san_iana_pub_suffix_empty_ = NULL;
  return temp;
}
void Lints::set_allocated_w_san_iana_pub_suffix_empty(::zsearch::LintResult* w_san_iana_pub_suffix_empty) {
  delete w_san_iana_pub_suffix_empty_;
  w_san_iana_pub_suffix_empty_ = w_san_iana_pub_suffix_empty;
  if (w_san_iana_pub_suffix_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_san_iana_pub_suffix_empty)
}

// .zsearch.LintResult e_serial_number_longer_than_20_octets = 138;
bool Lints::has_e_serial_number_longer_than_20_octets() const {
  return this != internal_default_instance() && e_serial_number_longer_than_20_octets_ != NULL;
}
void Lints::clear_e_serial_number_longer_than_20_octets() {
  if (GetArenaNoVirtual() == NULL && e_serial_number_longer_than_20_octets_ != NULL) delete e_serial_number_longer_than_20_octets_;
  e_serial_number_longer_than_20_octets_ = NULL;
}
const ::zsearch::LintResult& Lints::e_serial_number_longer_than_20_octets() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_serial_number_longer_than_20_octets)
  return e_serial_number_longer_than_20_octets_ != NULL ? *e_serial_number_longer_than_20_octets_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_serial_number_longer_than_20_octets() {
  
  if (e_serial_number_longer_than_20_octets_ == NULL) {
    e_serial_number_longer_than_20_octets_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_serial_number_longer_than_20_octets)
  return e_serial_number_longer_than_20_octets_;
}
::zsearch::LintResult* Lints::release_e_serial_number_longer_than_20_octets() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_serial_number_longer_than_20_octets)
  
  ::zsearch::LintResult* temp = e_serial_number_longer_than_20_octets_;
  e_serial_number_longer_than_20_octets_ = NULL;
  return temp;
}
void Lints::set_allocated_e_serial_number_longer_than_20_octets(::zsearch::LintResult* e_serial_number_longer_than_20_octets) {
  delete e_serial_number_longer_than_20_octets_;
  e_serial_number_longer_than_20_octets_ = e_serial_number_longer_than_20_octets;
  if (e_serial_number_longer_than_20_octets) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_serial_number_longer_than_20_octets)
}

// .zsearch.LintResult e_serial_number_not_positive = 139;
bool Lints::has_e_serial_number_not_positive() const {
  return this != internal_default_instance() && e_serial_number_not_positive_ != NULL;
}
void Lints::clear_e_serial_number_not_positive() {
  if (GetArenaNoVirtual() == NULL && e_serial_number_not_positive_ != NULL) delete e_serial_number_not_positive_;
  e_serial_number_not_positive_ = NULL;
}
const ::zsearch::LintResult& Lints::e_serial_number_not_positive() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_serial_number_not_positive)
  return e_serial_number_not_positive_ != NULL ? *e_serial_number_not_positive_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_serial_number_not_positive() {
  
  if (e_serial_number_not_positive_ == NULL) {
    e_serial_number_not_positive_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_serial_number_not_positive)
  return e_serial_number_not_positive_;
}
::zsearch::LintResult* Lints::release_e_serial_number_not_positive() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_serial_number_not_positive)
  
  ::zsearch::LintResult* temp = e_serial_number_not_positive_;
  e_serial_number_not_positive_ = NULL;
  return temp;
}
void Lints::set_allocated_e_serial_number_not_positive(::zsearch::LintResult* e_serial_number_not_positive) {
  delete e_serial_number_not_positive_;
  e_serial_number_not_positive_ = e_serial_number_not_positive;
  if (e_serial_number_not_positive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_serial_number_not_positive)
}

// .zsearch.LintResult w_sub_ca_aia_does_not_contain_issuing_ca_url = 140;
bool Lints::has_w_sub_ca_aia_does_not_contain_issuing_ca_url() const {
  return this != internal_default_instance() && w_sub_ca_aia_does_not_contain_issuing_ca_url_ != NULL;
}
void Lints::clear_w_sub_ca_aia_does_not_contain_issuing_ca_url() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_aia_does_not_contain_issuing_ca_url_ != NULL) delete w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  w_sub_ca_aia_does_not_contain_issuing_ca_url_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_ca_aia_does_not_contain_issuing_ca_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
  return w_sub_ca_aia_does_not_contain_issuing_ca_url_ != NULL ? *w_sub_ca_aia_does_not_contain_issuing_ca_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_ca_aia_does_not_contain_issuing_ca_url() {
  
  if (w_sub_ca_aia_does_not_contain_issuing_ca_url_ == NULL) {
    w_sub_ca_aia_does_not_contain_issuing_ca_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
  return w_sub_ca_aia_does_not_contain_issuing_ca_url_;
}
::zsearch::LintResult* Lints::release_w_sub_ca_aia_does_not_contain_issuing_ca_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
  
  ::zsearch::LintResult* temp = w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  w_sub_ca_aia_does_not_contain_issuing_ca_url_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_ca_aia_does_not_contain_issuing_ca_url(::zsearch::LintResult* w_sub_ca_aia_does_not_contain_issuing_ca_url) {
  delete w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  w_sub_ca_aia_does_not_contain_issuing_ca_url_ = w_sub_ca_aia_does_not_contain_issuing_ca_url;
  if (w_sub_ca_aia_does_not_contain_issuing_ca_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
}

// .zsearch.LintResult e_sub_ca_aia_does_not_contain_ocsp_url = 141;
bool Lints::has_e_sub_ca_aia_does_not_contain_ocsp_url() const {
  return this != internal_default_instance() && e_sub_ca_aia_does_not_contain_ocsp_url_ != NULL;
}
void Lints::clear_e_sub_ca_aia_does_not_contain_ocsp_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_does_not_contain_ocsp_url_ != NULL) delete e_sub_ca_aia_does_not_contain_ocsp_url_;
  e_sub_ca_aia_does_not_contain_ocsp_url_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_aia_does_not_contain_ocsp_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
  return e_sub_ca_aia_does_not_contain_ocsp_url_ != NULL ? *e_sub_ca_aia_does_not_contain_ocsp_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_aia_does_not_contain_ocsp_url() {
  
  if (e_sub_ca_aia_does_not_contain_ocsp_url_ == NULL) {
    e_sub_ca_aia_does_not_contain_ocsp_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
  return e_sub_ca_aia_does_not_contain_ocsp_url_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_aia_does_not_contain_ocsp_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
  
  ::zsearch::LintResult* temp = e_sub_ca_aia_does_not_contain_ocsp_url_;
  e_sub_ca_aia_does_not_contain_ocsp_url_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_aia_does_not_contain_ocsp_url(::zsearch::LintResult* e_sub_ca_aia_does_not_contain_ocsp_url) {
  delete e_sub_ca_aia_does_not_contain_ocsp_url_;
  e_sub_ca_aia_does_not_contain_ocsp_url_ = e_sub_ca_aia_does_not_contain_ocsp_url;
  if (e_sub_ca_aia_does_not_contain_ocsp_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
}

// .zsearch.LintResult e_sub_ca_aia_missing = 142;
bool Lints::has_e_sub_ca_aia_missing() const {
  return this != internal_default_instance() && e_sub_ca_aia_missing_ != NULL;
}
void Lints::clear_e_sub_ca_aia_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_missing_ != NULL) delete e_sub_ca_aia_missing_;
  e_sub_ca_aia_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_aia_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_aia_missing)
  return e_sub_ca_aia_missing_ != NULL ? *e_sub_ca_aia_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_aia_missing() {
  
  if (e_sub_ca_aia_missing_ == NULL) {
    e_sub_ca_aia_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_aia_missing)
  return e_sub_ca_aia_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_aia_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_aia_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_aia_missing_;
  e_sub_ca_aia_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_aia_missing(::zsearch::LintResult* e_sub_ca_aia_missing) {
  delete e_sub_ca_aia_missing_;
  e_sub_ca_aia_missing_ = e_sub_ca_aia_missing;
  if (e_sub_ca_aia_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_aia_missing)
}

// .zsearch.LintResult w_sub_ca_certificate_policies_marked_critical = 143;
bool Lints::has_w_sub_ca_certificate_policies_marked_critical() const {
  return this != internal_default_instance() && w_sub_ca_certificate_policies_marked_critical_ != NULL;
}
void Lints::clear_w_sub_ca_certificate_policies_marked_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_certificate_policies_marked_critical_ != NULL) delete w_sub_ca_certificate_policies_marked_critical_;
  w_sub_ca_certificate_policies_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_ca_certificate_policies_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
  return w_sub_ca_certificate_policies_marked_critical_ != NULL ? *w_sub_ca_certificate_policies_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_ca_certificate_policies_marked_critical() {
  
  if (w_sub_ca_certificate_policies_marked_critical_ == NULL) {
    w_sub_ca_certificate_policies_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
  return w_sub_ca_certificate_policies_marked_critical_;
}
::zsearch::LintResult* Lints::release_w_sub_ca_certificate_policies_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
  
  ::zsearch::LintResult* temp = w_sub_ca_certificate_policies_marked_critical_;
  w_sub_ca_certificate_policies_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_ca_certificate_policies_marked_critical(::zsearch::LintResult* w_sub_ca_certificate_policies_marked_critical) {
  delete w_sub_ca_certificate_policies_marked_critical_;
  w_sub_ca_certificate_policies_marked_critical_ = w_sub_ca_certificate_policies_marked_critical;
  if (w_sub_ca_certificate_policies_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
}

// .zsearch.LintResult e_sub_ca_certificate_policies_missing = 144;
bool Lints::has_e_sub_ca_certificate_policies_missing() const {
  return this != internal_default_instance() && e_sub_ca_certificate_policies_missing_ != NULL;
}
void Lints::clear_e_sub_ca_certificate_policies_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_certificate_policies_missing_ != NULL) delete e_sub_ca_certificate_policies_missing_;
  e_sub_ca_certificate_policies_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_certificate_policies_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_certificate_policies_missing)
  return e_sub_ca_certificate_policies_missing_ != NULL ? *e_sub_ca_certificate_policies_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_certificate_policies_missing() {
  
  if (e_sub_ca_certificate_policies_missing_ == NULL) {
    e_sub_ca_certificate_policies_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_certificate_policies_missing)
  return e_sub_ca_certificate_policies_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_certificate_policies_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_certificate_policies_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_certificate_policies_missing_;
  e_sub_ca_certificate_policies_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_certificate_policies_missing(::zsearch::LintResult* e_sub_ca_certificate_policies_missing) {
  delete e_sub_ca_certificate_policies_missing_;
  e_sub_ca_certificate_policies_missing_ = e_sub_ca_certificate_policies_missing;
  if (e_sub_ca_certificate_policies_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_certificate_policies_missing)
}

// .zsearch.LintResult e_sub_ca_crl_distribution_points_does_not_contain_url = 145;
bool Lints::has_e_sub_ca_crl_distribution_points_does_not_contain_url() const {
  return this != internal_default_instance() && e_sub_ca_crl_distribution_points_does_not_contain_url_ != NULL;
}
void Lints::clear_e_sub_ca_crl_distribution_points_does_not_contain_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_does_not_contain_url_ != NULL) delete e_sub_ca_crl_distribution_points_does_not_contain_url_;
  e_sub_ca_crl_distribution_points_does_not_contain_url_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_crl_distribution_points_does_not_contain_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
  return e_sub_ca_crl_distribution_points_does_not_contain_url_ != NULL ? *e_sub_ca_crl_distribution_points_does_not_contain_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_crl_distribution_points_does_not_contain_url() {
  
  if (e_sub_ca_crl_distribution_points_does_not_contain_url_ == NULL) {
    e_sub_ca_crl_distribution_points_does_not_contain_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
  return e_sub_ca_crl_distribution_points_does_not_contain_url_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_crl_distribution_points_does_not_contain_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
  
  ::zsearch::LintResult* temp = e_sub_ca_crl_distribution_points_does_not_contain_url_;
  e_sub_ca_crl_distribution_points_does_not_contain_url_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_crl_distribution_points_does_not_contain_url(::zsearch::LintResult* e_sub_ca_crl_distribution_points_does_not_contain_url) {
  delete e_sub_ca_crl_distribution_points_does_not_contain_url_;
  e_sub_ca_crl_distribution_points_does_not_contain_url_ = e_sub_ca_crl_distribution_points_does_not_contain_url;
  if (e_sub_ca_crl_distribution_points_does_not_contain_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
}

// .zsearch.LintResult e_sub_ca_crl_distribution_points_marked_critical = 146;
bool Lints::has_e_sub_ca_crl_distribution_points_marked_critical() const {
  return this != internal_default_instance() && e_sub_ca_crl_distribution_points_marked_critical_ != NULL;
}
void Lints::clear_e_sub_ca_crl_distribution_points_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_marked_critical_ != NULL) delete e_sub_ca_crl_distribution_points_marked_critical_;
  e_sub_ca_crl_distribution_points_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_crl_distribution_points_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
  return e_sub_ca_crl_distribution_points_marked_critical_ != NULL ? *e_sub_ca_crl_distribution_points_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_crl_distribution_points_marked_critical() {
  
  if (e_sub_ca_crl_distribution_points_marked_critical_ == NULL) {
    e_sub_ca_crl_distribution_points_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
  return e_sub_ca_crl_distribution_points_marked_critical_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_crl_distribution_points_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_ca_crl_distribution_points_marked_critical_;
  e_sub_ca_crl_distribution_points_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_crl_distribution_points_marked_critical(::zsearch::LintResult* e_sub_ca_crl_distribution_points_marked_critical) {
  delete e_sub_ca_crl_distribution_points_marked_critical_;
  e_sub_ca_crl_distribution_points_marked_critical_ = e_sub_ca_crl_distribution_points_marked_critical;
  if (e_sub_ca_crl_distribution_points_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
}

// .zsearch.LintResult e_sub_ca_crl_distribution_points_missing = 147;
bool Lints::has_e_sub_ca_crl_distribution_points_missing() const {
  return this != internal_default_instance() && e_sub_ca_crl_distribution_points_missing_ != NULL;
}
void Lints::clear_e_sub_ca_crl_distribution_points_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_missing_ != NULL) delete e_sub_ca_crl_distribution_points_missing_;
  e_sub_ca_crl_distribution_points_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_crl_distribution_points_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
  return e_sub_ca_crl_distribution_points_missing_ != NULL ? *e_sub_ca_crl_distribution_points_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_crl_distribution_points_missing() {
  
  if (e_sub_ca_crl_distribution_points_missing_ == NULL) {
    e_sub_ca_crl_distribution_points_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
  return e_sub_ca_crl_distribution_points_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_crl_distribution_points_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_crl_distribution_points_missing_;
  e_sub_ca_crl_distribution_points_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_crl_distribution_points_missing(::zsearch::LintResult* e_sub_ca_crl_distribution_points_missing) {
  delete e_sub_ca_crl_distribution_points_missing_;
  e_sub_ca_crl_distribution_points_missing_ = e_sub_ca_crl_distribution_points_missing;
  if (e_sub_ca_crl_distribution_points_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
}

// .zsearch.LintResult w_sub_ca_eku_critical = 148;
bool Lints::has_w_sub_ca_eku_critical() const {
  return this != internal_default_instance() && w_sub_ca_eku_critical_ != NULL;
}
void Lints::clear_w_sub_ca_eku_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_eku_critical_ != NULL) delete w_sub_ca_eku_critical_;
  w_sub_ca_eku_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_ca_eku_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_eku_critical)
  return w_sub_ca_eku_critical_ != NULL ? *w_sub_ca_eku_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_ca_eku_critical() {
  
  if (w_sub_ca_eku_critical_ == NULL) {
    w_sub_ca_eku_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_eku_critical)
  return w_sub_ca_eku_critical_;
}
::zsearch::LintResult* Lints::release_w_sub_ca_eku_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_eku_critical)
  
  ::zsearch::LintResult* temp = w_sub_ca_eku_critical_;
  w_sub_ca_eku_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_ca_eku_critical(::zsearch::LintResult* w_sub_ca_eku_critical) {
  delete w_sub_ca_eku_critical_;
  w_sub_ca_eku_critical_ = w_sub_ca_eku_critical;
  if (w_sub_ca_eku_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_eku_critical)
}

// .zsearch.LintResult w_sub_ca_name_constraints_not_critical = 149;
bool Lints::has_w_sub_ca_name_constraints_not_critical() const {
  return this != internal_default_instance() && w_sub_ca_name_constraints_not_critical_ != NULL;
}
void Lints::clear_w_sub_ca_name_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_name_constraints_not_critical_ != NULL) delete w_sub_ca_name_constraints_not_critical_;
  w_sub_ca_name_constraints_not_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_ca_name_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
  return w_sub_ca_name_constraints_not_critical_ != NULL ? *w_sub_ca_name_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_ca_name_constraints_not_critical() {
  
  if (w_sub_ca_name_constraints_not_critical_ == NULL) {
    w_sub_ca_name_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
  return w_sub_ca_name_constraints_not_critical_;
}
::zsearch::LintResult* Lints::release_w_sub_ca_name_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
  
  ::zsearch::LintResult* temp = w_sub_ca_name_constraints_not_critical_;
  w_sub_ca_name_constraints_not_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_ca_name_constraints_not_critical(::zsearch::LintResult* w_sub_ca_name_constraints_not_critical) {
  delete w_sub_ca_name_constraints_not_critical_;
  w_sub_ca_name_constraints_not_critical_ = w_sub_ca_name_constraints_not_critical;
  if (w_sub_ca_name_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
}

// .zsearch.LintResult e_sub_cert_aia_does_not_contain_ocsp_url = 153;
bool Lints::has_e_sub_cert_aia_does_not_contain_ocsp_url() const {
  return this != internal_default_instance() && e_sub_cert_aia_does_not_contain_ocsp_url_ != NULL;
}
void Lints::clear_e_sub_cert_aia_does_not_contain_ocsp_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_does_not_contain_ocsp_url_ != NULL) delete e_sub_cert_aia_does_not_contain_ocsp_url_;
  e_sub_cert_aia_does_not_contain_ocsp_url_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_aia_does_not_contain_ocsp_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
  return e_sub_cert_aia_does_not_contain_ocsp_url_ != NULL ? *e_sub_cert_aia_does_not_contain_ocsp_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_aia_does_not_contain_ocsp_url() {
  
  if (e_sub_cert_aia_does_not_contain_ocsp_url_ == NULL) {
    e_sub_cert_aia_does_not_contain_ocsp_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
  return e_sub_cert_aia_does_not_contain_ocsp_url_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_aia_does_not_contain_ocsp_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
  
  ::zsearch::LintResult* temp = e_sub_cert_aia_does_not_contain_ocsp_url_;
  e_sub_cert_aia_does_not_contain_ocsp_url_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_aia_does_not_contain_ocsp_url(::zsearch::LintResult* e_sub_cert_aia_does_not_contain_ocsp_url) {
  delete e_sub_cert_aia_does_not_contain_ocsp_url_;
  e_sub_cert_aia_does_not_contain_ocsp_url_ = e_sub_cert_aia_does_not_contain_ocsp_url;
  if (e_sub_cert_aia_does_not_contain_ocsp_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
}

// .zsearch.LintResult e_sub_cert_aia_missing = 154;
bool Lints::has_e_sub_cert_aia_missing() const {
  return this != internal_default_instance() && e_sub_cert_aia_missing_ != NULL;
}
void Lints::clear_e_sub_cert_aia_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_missing_ != NULL) delete e_sub_cert_aia_missing_;
  e_sub_cert_aia_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_aia_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_aia_missing)
  return e_sub_cert_aia_missing_ != NULL ? *e_sub_cert_aia_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_aia_missing() {
  
  if (e_sub_cert_aia_missing_ == NULL) {
    e_sub_cert_aia_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_aia_missing)
  return e_sub_cert_aia_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_aia_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_aia_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_aia_missing_;
  e_sub_cert_aia_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_aia_missing(::zsearch::LintResult* e_sub_cert_aia_missing) {
  delete e_sub_cert_aia_missing_;
  e_sub_cert_aia_missing_ = e_sub_cert_aia_missing;
  if (e_sub_cert_aia_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_aia_missing)
}

// .zsearch.LintResult e_sub_cert_cert_policy_empty = 155;
bool Lints::has_e_sub_cert_cert_policy_empty() const {
  return this != internal_default_instance() && e_sub_cert_cert_policy_empty_ != NULL;
}
void Lints::clear_e_sub_cert_cert_policy_empty() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_cert_policy_empty_ != NULL) delete e_sub_cert_cert_policy_empty_;
  e_sub_cert_cert_policy_empty_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_cert_policy_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_cert_policy_empty)
  return e_sub_cert_cert_policy_empty_ != NULL ? *e_sub_cert_cert_policy_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_cert_policy_empty() {
  
  if (e_sub_cert_cert_policy_empty_ == NULL) {
    e_sub_cert_cert_policy_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_cert_policy_empty)
  return e_sub_cert_cert_policy_empty_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_cert_policy_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_cert_policy_empty)
  
  ::zsearch::LintResult* temp = e_sub_cert_cert_policy_empty_;
  e_sub_cert_cert_policy_empty_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_cert_policy_empty(::zsearch::LintResult* e_sub_cert_cert_policy_empty) {
  delete e_sub_cert_cert_policy_empty_;
  e_sub_cert_cert_policy_empty_ = e_sub_cert_cert_policy_empty;
  if (e_sub_cert_cert_policy_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_cert_policy_empty)
}

// .zsearch.LintResult w_sub_cert_certificate_policies_marked_critical = 156;
bool Lints::has_w_sub_cert_certificate_policies_marked_critical() const {
  return this != internal_default_instance() && w_sub_cert_certificate_policies_marked_critical_ != NULL;
}
void Lints::clear_w_sub_cert_certificate_policies_marked_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_certificate_policies_marked_critical_ != NULL) delete w_sub_cert_certificate_policies_marked_critical_;
  w_sub_cert_certificate_policies_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_cert_certificate_policies_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
  return w_sub_cert_certificate_policies_marked_critical_ != NULL ? *w_sub_cert_certificate_policies_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_cert_certificate_policies_marked_critical() {
  
  if (w_sub_cert_certificate_policies_marked_critical_ == NULL) {
    w_sub_cert_certificate_policies_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
  return w_sub_cert_certificate_policies_marked_critical_;
}
::zsearch::LintResult* Lints::release_w_sub_cert_certificate_policies_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
  
  ::zsearch::LintResult* temp = w_sub_cert_certificate_policies_marked_critical_;
  w_sub_cert_certificate_policies_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_cert_certificate_policies_marked_critical(::zsearch::LintResult* w_sub_cert_certificate_policies_marked_critical) {
  delete w_sub_cert_certificate_policies_marked_critical_;
  w_sub_cert_certificate_policies_marked_critical_ = w_sub_cert_certificate_policies_marked_critical;
  if (w_sub_cert_certificate_policies_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
}

// .zsearch.LintResult e_sub_cert_crl_distribution_points_does_not_contain_url = 157;
bool Lints::has_e_sub_cert_crl_distribution_points_does_not_contain_url() const {
  return this != internal_default_instance() && e_sub_cert_crl_distribution_points_does_not_contain_url_ != NULL;
}
void Lints::clear_e_sub_cert_crl_distribution_points_does_not_contain_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_crl_distribution_points_does_not_contain_url_ != NULL) delete e_sub_cert_crl_distribution_points_does_not_contain_url_;
  e_sub_cert_crl_distribution_points_does_not_contain_url_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_crl_distribution_points_does_not_contain_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
  return e_sub_cert_crl_distribution_points_does_not_contain_url_ != NULL ? *e_sub_cert_crl_distribution_points_does_not_contain_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_crl_distribution_points_does_not_contain_url() {
  
  if (e_sub_cert_crl_distribution_points_does_not_contain_url_ == NULL) {
    e_sub_cert_crl_distribution_points_does_not_contain_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
  return e_sub_cert_crl_distribution_points_does_not_contain_url_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_crl_distribution_points_does_not_contain_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
  
  ::zsearch::LintResult* temp = e_sub_cert_crl_distribution_points_does_not_contain_url_;
  e_sub_cert_crl_distribution_points_does_not_contain_url_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_crl_distribution_points_does_not_contain_url(::zsearch::LintResult* e_sub_cert_crl_distribution_points_does_not_contain_url) {
  delete e_sub_cert_crl_distribution_points_does_not_contain_url_;
  e_sub_cert_crl_distribution_points_does_not_contain_url_ = e_sub_cert_crl_distribution_points_does_not_contain_url;
  if (e_sub_cert_crl_distribution_points_does_not_contain_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
}

// .zsearch.LintResult e_sub_cert_crl_distribution_points_marked_critical = 158;
bool Lints::has_e_sub_cert_crl_distribution_points_marked_critical() const {
  return this != internal_default_instance() && e_sub_cert_crl_distribution_points_marked_critical_ != NULL;
}
void Lints::clear_e_sub_cert_crl_distribution_points_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_crl_distribution_points_marked_critical_ != NULL) delete e_sub_cert_crl_distribution_points_marked_critical_;
  e_sub_cert_crl_distribution_points_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_crl_distribution_points_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
  return e_sub_cert_crl_distribution_points_marked_critical_ != NULL ? *e_sub_cert_crl_distribution_points_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_crl_distribution_points_marked_critical() {
  
  if (e_sub_cert_crl_distribution_points_marked_critical_ == NULL) {
    e_sub_cert_crl_distribution_points_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
  return e_sub_cert_crl_distribution_points_marked_critical_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_crl_distribution_points_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_cert_crl_distribution_points_marked_critical_;
  e_sub_cert_crl_distribution_points_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_crl_distribution_points_marked_critical(::zsearch::LintResult* e_sub_cert_crl_distribution_points_marked_critical) {
  delete e_sub_cert_crl_distribution_points_marked_critical_;
  e_sub_cert_crl_distribution_points_marked_critical_ = e_sub_cert_crl_distribution_points_marked_critical;
  if (e_sub_cert_crl_distribution_points_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
}

// .zsearch.LintResult w_sub_cert_eku_extra_values = 159;
bool Lints::has_w_sub_cert_eku_extra_values() const {
  return this != internal_default_instance() && w_sub_cert_eku_extra_values_ != NULL;
}
void Lints::clear_w_sub_cert_eku_extra_values() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_eku_extra_values_ != NULL) delete w_sub_cert_eku_extra_values_;
  w_sub_cert_eku_extra_values_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_cert_eku_extra_values() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_eku_extra_values)
  return w_sub_cert_eku_extra_values_ != NULL ? *w_sub_cert_eku_extra_values_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_cert_eku_extra_values() {
  
  if (w_sub_cert_eku_extra_values_ == NULL) {
    w_sub_cert_eku_extra_values_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_eku_extra_values)
  return w_sub_cert_eku_extra_values_;
}
::zsearch::LintResult* Lints::release_w_sub_cert_eku_extra_values() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_eku_extra_values)
  
  ::zsearch::LintResult* temp = w_sub_cert_eku_extra_values_;
  w_sub_cert_eku_extra_values_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_cert_eku_extra_values(::zsearch::LintResult* w_sub_cert_eku_extra_values) {
  delete w_sub_cert_eku_extra_values_;
  w_sub_cert_eku_extra_values_ = w_sub_cert_eku_extra_values;
  if (w_sub_cert_eku_extra_values) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_eku_extra_values)
}

// .zsearch.LintResult e_sub_cert_eku_missing = 160;
bool Lints::has_e_sub_cert_eku_missing() const {
  return this != internal_default_instance() && e_sub_cert_eku_missing_ != NULL;
}
void Lints::clear_e_sub_cert_eku_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_eku_missing_ != NULL) delete e_sub_cert_eku_missing_;
  e_sub_cert_eku_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_eku_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_eku_missing)
  return e_sub_cert_eku_missing_ != NULL ? *e_sub_cert_eku_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_eku_missing() {
  
  if (e_sub_cert_eku_missing_ == NULL) {
    e_sub_cert_eku_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_eku_missing)
  return e_sub_cert_eku_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_eku_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_eku_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_eku_missing_;
  e_sub_cert_eku_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_eku_missing(::zsearch::LintResult* e_sub_cert_eku_missing) {
  delete e_sub_cert_eku_missing_;
  e_sub_cert_eku_missing_ = e_sub_cert_eku_missing;
  if (e_sub_cert_eku_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_eku_missing)
}

// .zsearch.LintResult e_sub_cert_eku_server_auth_client_auth_missing = 161;
bool Lints::has_e_sub_cert_eku_server_auth_client_auth_missing() const {
  return this != internal_default_instance() && e_sub_cert_eku_server_auth_client_auth_missing_ != NULL;
}
void Lints::clear_e_sub_cert_eku_server_auth_client_auth_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_eku_server_auth_client_auth_missing_ != NULL) delete e_sub_cert_eku_server_auth_client_auth_missing_;
  e_sub_cert_eku_server_auth_client_auth_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_eku_server_auth_client_auth_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
  return e_sub_cert_eku_server_auth_client_auth_missing_ != NULL ? *e_sub_cert_eku_server_auth_client_auth_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_eku_server_auth_client_auth_missing() {
  
  if (e_sub_cert_eku_server_auth_client_auth_missing_ == NULL) {
    e_sub_cert_eku_server_auth_client_auth_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
  return e_sub_cert_eku_server_auth_client_auth_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_eku_server_auth_client_auth_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_eku_server_auth_client_auth_missing_;
  e_sub_cert_eku_server_auth_client_auth_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_eku_server_auth_client_auth_missing(::zsearch::LintResult* e_sub_cert_eku_server_auth_client_auth_missing) {
  delete e_sub_cert_eku_server_auth_client_auth_missing_;
  e_sub_cert_eku_server_auth_client_auth_missing_ = e_sub_cert_eku_server_auth_client_auth_missing;
  if (e_sub_cert_eku_server_auth_client_auth_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
}

// .zsearch.LintResult e_sub_cert_key_usage_cert_sign_bit_set = 162;
bool Lints::has_e_sub_cert_key_usage_cert_sign_bit_set() const {
  return this != internal_default_instance() && e_sub_cert_key_usage_cert_sign_bit_set_ != NULL;
}
void Lints::clear_e_sub_cert_key_usage_cert_sign_bit_set() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_key_usage_cert_sign_bit_set_ != NULL) delete e_sub_cert_key_usage_cert_sign_bit_set_;
  e_sub_cert_key_usage_cert_sign_bit_set_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_key_usage_cert_sign_bit_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
  return e_sub_cert_key_usage_cert_sign_bit_set_ != NULL ? *e_sub_cert_key_usage_cert_sign_bit_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_key_usage_cert_sign_bit_set() {
  
  if (e_sub_cert_key_usage_cert_sign_bit_set_ == NULL) {
    e_sub_cert_key_usage_cert_sign_bit_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
  return e_sub_cert_key_usage_cert_sign_bit_set_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_key_usage_cert_sign_bit_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
  
  ::zsearch::LintResult* temp = e_sub_cert_key_usage_cert_sign_bit_set_;
  e_sub_cert_key_usage_cert_sign_bit_set_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_key_usage_cert_sign_bit_set(::zsearch::LintResult* e_sub_cert_key_usage_cert_sign_bit_set) {
  delete e_sub_cert_key_usage_cert_sign_bit_set_;
  e_sub_cert_key_usage_cert_sign_bit_set_ = e_sub_cert_key_usage_cert_sign_bit_set;
  if (e_sub_cert_key_usage_cert_sign_bit_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
}

// .zsearch.LintResult e_sub_cert_or_sub_ca_using_sha1 = 163;
bool Lints::has_e_sub_cert_or_sub_ca_using_sha1() const {
  return this != internal_default_instance() && e_sub_cert_or_sub_ca_using_sha1_ != NULL;
}
void Lints::clear_e_sub_cert_or_sub_ca_using_sha1() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_or_sub_ca_using_sha1_ != NULL) delete e_sub_cert_or_sub_ca_using_sha1_;
  e_sub_cert_or_sub_ca_using_sha1_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_or_sub_ca_using_sha1() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
  return e_sub_cert_or_sub_ca_using_sha1_ != NULL ? *e_sub_cert_or_sub_ca_using_sha1_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_or_sub_ca_using_sha1() {
  
  if (e_sub_cert_or_sub_ca_using_sha1_ == NULL) {
    e_sub_cert_or_sub_ca_using_sha1_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
  return e_sub_cert_or_sub_ca_using_sha1_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_or_sub_ca_using_sha1() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
  
  ::zsearch::LintResult* temp = e_sub_cert_or_sub_ca_using_sha1_;
  e_sub_cert_or_sub_ca_using_sha1_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_or_sub_ca_using_sha1(::zsearch::LintResult* e_sub_cert_or_sub_ca_using_sha1) {
  delete e_sub_cert_or_sub_ca_using_sha1_;
  e_sub_cert_or_sub_ca_using_sha1_ = e_sub_cert_or_sub_ca_using_sha1;
  if (e_sub_cert_or_sub_ca_using_sha1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
}

// .zsearch.LintResult w_sub_cert_sha1_expiration_too_long = 164;
bool Lints::has_w_sub_cert_sha1_expiration_too_long() const {
  return this != internal_default_instance() && w_sub_cert_sha1_expiration_too_long_ != NULL;
}
void Lints::clear_w_sub_cert_sha1_expiration_too_long() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_sha1_expiration_too_long_ != NULL) delete w_sub_cert_sha1_expiration_too_long_;
  w_sub_cert_sha1_expiration_too_long_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_cert_sha1_expiration_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
  return w_sub_cert_sha1_expiration_too_long_ != NULL ? *w_sub_cert_sha1_expiration_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_cert_sha1_expiration_too_long() {
  
  if (w_sub_cert_sha1_expiration_too_long_ == NULL) {
    w_sub_cert_sha1_expiration_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
  return w_sub_cert_sha1_expiration_too_long_;
}
::zsearch::LintResult* Lints::release_w_sub_cert_sha1_expiration_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
  
  ::zsearch::LintResult* temp = w_sub_cert_sha1_expiration_too_long_;
  w_sub_cert_sha1_expiration_too_long_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_cert_sha1_expiration_too_long(::zsearch::LintResult* w_sub_cert_sha1_expiration_too_long) {
  delete w_sub_cert_sha1_expiration_too_long_;
  w_sub_cert_sha1_expiration_too_long_ = w_sub_cert_sha1_expiration_too_long;
  if (w_sub_cert_sha1_expiration_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
}

// .zsearch.LintResult n_subject_common_name_included = 166;
bool Lints::has_n_subject_common_name_included() const {
  return this != internal_default_instance() && n_subject_common_name_included_ != NULL;
}
void Lints::clear_n_subject_common_name_included() {
  if (GetArenaNoVirtual() == NULL && n_subject_common_name_included_ != NULL) delete n_subject_common_name_included_;
  n_subject_common_name_included_ = NULL;
}
const ::zsearch::LintResult& Lints::n_subject_common_name_included() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_subject_common_name_included)
  return n_subject_common_name_included_ != NULL ? *n_subject_common_name_included_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_n_subject_common_name_included() {
  
  if (n_subject_common_name_included_ == NULL) {
    n_subject_common_name_included_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_subject_common_name_included)
  return n_subject_common_name_included_;
}
::zsearch::LintResult* Lints::release_n_subject_common_name_included() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_subject_common_name_included)
  
  ::zsearch::LintResult* temp = n_subject_common_name_included_;
  n_subject_common_name_included_ = NULL;
  return temp;
}
void Lints::set_allocated_n_subject_common_name_included(::zsearch::LintResult* n_subject_common_name_included) {
  delete n_subject_common_name_included_;
  n_subject_common_name_included_ = n_subject_common_name_included;
  if (n_subject_common_name_included) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_subject_common_name_included)
}

// .zsearch.LintResult e_subject_common_name_not_from_san = 167;
bool Lints::has_e_subject_common_name_not_from_san() const {
  return this != internal_default_instance() && e_subject_common_name_not_from_san_ != NULL;
}
void Lints::clear_e_subject_common_name_not_from_san() {
  if (GetArenaNoVirtual() == NULL && e_subject_common_name_not_from_san_ != NULL) delete e_subject_common_name_not_from_san_;
  e_subject_common_name_not_from_san_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_common_name_not_from_san() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_common_name_not_from_san)
  return e_subject_common_name_not_from_san_ != NULL ? *e_subject_common_name_not_from_san_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_common_name_not_from_san() {
  
  if (e_subject_common_name_not_from_san_ == NULL) {
    e_subject_common_name_not_from_san_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_common_name_not_from_san)
  return e_subject_common_name_not_from_san_;
}
::zsearch::LintResult* Lints::release_e_subject_common_name_not_from_san() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_common_name_not_from_san)
  
  ::zsearch::LintResult* temp = e_subject_common_name_not_from_san_;
  e_subject_common_name_not_from_san_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_common_name_not_from_san(::zsearch::LintResult* e_subject_common_name_not_from_san) {
  delete e_subject_common_name_not_from_san_;
  e_subject_common_name_not_from_san_ = e_subject_common_name_not_from_san;
  if (e_subject_common_name_not_from_san) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_common_name_not_from_san)
}

// .zsearch.LintResult e_subject_contains_noninformational_value = 168;
bool Lints::has_e_subject_contains_noninformational_value() const {
  return this != internal_default_instance() && e_subject_contains_noninformational_value_ != NULL;
}
void Lints::clear_e_subject_contains_noninformational_value() {
  if (GetArenaNoVirtual() == NULL && e_subject_contains_noninformational_value_ != NULL) delete e_subject_contains_noninformational_value_;
  e_subject_contains_noninformational_value_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_contains_noninformational_value() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_contains_noninformational_value)
  return e_subject_contains_noninformational_value_ != NULL ? *e_subject_contains_noninformational_value_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_contains_noninformational_value() {
  
  if (e_subject_contains_noninformational_value_ == NULL) {
    e_subject_contains_noninformational_value_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_contains_noninformational_value)
  return e_subject_contains_noninformational_value_;
}
::zsearch::LintResult* Lints::release_e_subject_contains_noninformational_value() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_contains_noninformational_value)
  
  ::zsearch::LintResult* temp = e_subject_contains_noninformational_value_;
  e_subject_contains_noninformational_value_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_contains_noninformational_value(::zsearch::LintResult* e_subject_contains_noninformational_value) {
  delete e_subject_contains_noninformational_value_;
  e_subject_contains_noninformational_value_ = e_subject_contains_noninformational_value;
  if (e_subject_contains_noninformational_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_contains_noninformational_value)
}

// .zsearch.LintResult e_subject_contains_reserved_ip = 169;
bool Lints::has_e_subject_contains_reserved_ip() const {
  return this != internal_default_instance() && e_subject_contains_reserved_ip_ != NULL;
}
void Lints::clear_e_subject_contains_reserved_ip() {
  if (GetArenaNoVirtual() == NULL && e_subject_contains_reserved_ip_ != NULL) delete e_subject_contains_reserved_ip_;
  e_subject_contains_reserved_ip_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_contains_reserved_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_contains_reserved_ip)
  return e_subject_contains_reserved_ip_ != NULL ? *e_subject_contains_reserved_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_contains_reserved_ip() {
  
  if (e_subject_contains_reserved_ip_ == NULL) {
    e_subject_contains_reserved_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_contains_reserved_ip)
  return e_subject_contains_reserved_ip_;
}
::zsearch::LintResult* Lints::release_e_subject_contains_reserved_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_contains_reserved_ip)
  
  ::zsearch::LintResult* temp = e_subject_contains_reserved_ip_;
  e_subject_contains_reserved_ip_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_contains_reserved_ip(::zsearch::LintResult* e_subject_contains_reserved_ip) {
  delete e_subject_contains_reserved_ip_;
  e_subject_contains_reserved_ip_ = e_subject_contains_reserved_ip;
  if (e_subject_contains_reserved_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_contains_reserved_ip)
}

// .zsearch.LintResult e_subject_country_not_iso = 170;
bool Lints::has_e_subject_country_not_iso() const {
  return this != internal_default_instance() && e_subject_country_not_iso_ != NULL;
}
void Lints::clear_e_subject_country_not_iso() {
  if (GetArenaNoVirtual() == NULL && e_subject_country_not_iso_ != NULL) delete e_subject_country_not_iso_;
  e_subject_country_not_iso_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_country_not_iso() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_country_not_iso)
  return e_subject_country_not_iso_ != NULL ? *e_subject_country_not_iso_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_country_not_iso() {
  
  if (e_subject_country_not_iso_ == NULL) {
    e_subject_country_not_iso_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_country_not_iso)
  return e_subject_country_not_iso_;
}
::zsearch::LintResult* Lints::release_e_subject_country_not_iso() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_country_not_iso)
  
  ::zsearch::LintResult* temp = e_subject_country_not_iso_;
  e_subject_country_not_iso_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_country_not_iso(::zsearch::LintResult* e_subject_country_not_iso) {
  delete e_subject_country_not_iso_;
  e_subject_country_not_iso_ = e_subject_country_not_iso;
  if (e_subject_country_not_iso) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_country_not_iso)
}

// .zsearch.LintResult e_subject_empty_without_san = 171;
bool Lints::has_e_subject_empty_without_san() const {
  return this != internal_default_instance() && e_subject_empty_without_san_ != NULL;
}
void Lints::clear_e_subject_empty_without_san() {
  if (GetArenaNoVirtual() == NULL && e_subject_empty_without_san_ != NULL) delete e_subject_empty_without_san_;
  e_subject_empty_without_san_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_empty_without_san() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_empty_without_san)
  return e_subject_empty_without_san_ != NULL ? *e_subject_empty_without_san_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_empty_without_san() {
  
  if (e_subject_empty_without_san_ == NULL) {
    e_subject_empty_without_san_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_empty_without_san)
  return e_subject_empty_without_san_;
}
::zsearch::LintResult* Lints::release_e_subject_empty_without_san() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_empty_without_san)
  
  ::zsearch::LintResult* temp = e_subject_empty_without_san_;
  e_subject_empty_without_san_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_empty_without_san(::zsearch::LintResult* e_subject_empty_without_san) {
  delete e_subject_empty_without_san_;
  e_subject_empty_without_san_ = e_subject_empty_without_san;
  if (e_subject_empty_without_san) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_empty_without_san)
}

// .zsearch.LintResult e_subject_info_access_marked_critical = 172;
bool Lints::has_e_subject_info_access_marked_critical() const {
  return this != internal_default_instance() && e_subject_info_access_marked_critical_ != NULL;
}
void Lints::clear_e_subject_info_access_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_subject_info_access_marked_critical_ != NULL) delete e_subject_info_access_marked_critical_;
  e_subject_info_access_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_info_access_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_info_access_marked_critical)
  return e_subject_info_access_marked_critical_ != NULL ? *e_subject_info_access_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_info_access_marked_critical() {
  
  if (e_subject_info_access_marked_critical_ == NULL) {
    e_subject_info_access_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_info_access_marked_critical)
  return e_subject_info_access_marked_critical_;
}
::zsearch::LintResult* Lints::release_e_subject_info_access_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_info_access_marked_critical)
  
  ::zsearch::LintResult* temp = e_subject_info_access_marked_critical_;
  e_subject_info_access_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_info_access_marked_critical(::zsearch::LintResult* e_subject_info_access_marked_critical) {
  delete e_subject_info_access_marked_critical_;
  e_subject_info_access_marked_critical_ = e_subject_info_access_marked_critical;
  if (e_subject_info_access_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_info_access_marked_critical)
}

// .zsearch.LintResult e_subject_not_dn = 174;
bool Lints::has_e_subject_not_dn() const {
  return this != internal_default_instance() && e_subject_not_dn_ != NULL;
}
void Lints::clear_e_subject_not_dn() {
  if (GetArenaNoVirtual() == NULL && e_subject_not_dn_ != NULL) delete e_subject_not_dn_;
  e_subject_not_dn_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_not_dn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_not_dn)
  return e_subject_not_dn_ != NULL ? *e_subject_not_dn_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_not_dn() {
  
  if (e_subject_not_dn_ == NULL) {
    e_subject_not_dn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_not_dn)
  return e_subject_not_dn_;
}
::zsearch::LintResult* Lints::release_e_subject_not_dn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_not_dn)
  
  ::zsearch::LintResult* temp = e_subject_not_dn_;
  e_subject_not_dn_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_not_dn(::zsearch::LintResult* e_subject_not_dn) {
  delete e_subject_not_dn_;
  e_subject_not_dn_ = e_subject_not_dn;
  if (e_subject_not_dn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_not_dn)
}

// .zsearch.LintResult e_utc_time_does_not_include_seconds = 180;
bool Lints::has_e_utc_time_does_not_include_seconds() const {
  return this != internal_default_instance() && e_utc_time_does_not_include_seconds_ != NULL;
}
void Lints::clear_e_utc_time_does_not_include_seconds() {
  if (GetArenaNoVirtual() == NULL && e_utc_time_does_not_include_seconds_ != NULL) delete e_utc_time_does_not_include_seconds_;
  e_utc_time_does_not_include_seconds_ = NULL;
}
const ::zsearch::LintResult& Lints::e_utc_time_does_not_include_seconds() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_utc_time_does_not_include_seconds)
  return e_utc_time_does_not_include_seconds_ != NULL ? *e_utc_time_does_not_include_seconds_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_utc_time_does_not_include_seconds() {
  
  if (e_utc_time_does_not_include_seconds_ == NULL) {
    e_utc_time_does_not_include_seconds_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_utc_time_does_not_include_seconds)
  return e_utc_time_does_not_include_seconds_;
}
::zsearch::LintResult* Lints::release_e_utc_time_does_not_include_seconds() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_utc_time_does_not_include_seconds)
  
  ::zsearch::LintResult* temp = e_utc_time_does_not_include_seconds_;
  e_utc_time_does_not_include_seconds_ = NULL;
  return temp;
}
void Lints::set_allocated_e_utc_time_does_not_include_seconds(::zsearch::LintResult* e_utc_time_does_not_include_seconds) {
  delete e_utc_time_does_not_include_seconds_;
  e_utc_time_does_not_include_seconds_ = e_utc_time_does_not_include_seconds;
  if (e_utc_time_does_not_include_seconds) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_utc_time_does_not_include_seconds)
}

// .zsearch.LintResult e_utc_time_not_in_zulu = 181;
bool Lints::has_e_utc_time_not_in_zulu() const {
  return this != internal_default_instance() && e_utc_time_not_in_zulu_ != NULL;
}
void Lints::clear_e_utc_time_not_in_zulu() {
  if (GetArenaNoVirtual() == NULL && e_utc_time_not_in_zulu_ != NULL) delete e_utc_time_not_in_zulu_;
  e_utc_time_not_in_zulu_ = NULL;
}
const ::zsearch::LintResult& Lints::e_utc_time_not_in_zulu() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_utc_time_not_in_zulu)
  return e_utc_time_not_in_zulu_ != NULL ? *e_utc_time_not_in_zulu_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_utc_time_not_in_zulu() {
  
  if (e_utc_time_not_in_zulu_ == NULL) {
    e_utc_time_not_in_zulu_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_utc_time_not_in_zulu)
  return e_utc_time_not_in_zulu_;
}
::zsearch::LintResult* Lints::release_e_utc_time_not_in_zulu() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_utc_time_not_in_zulu)
  
  ::zsearch::LintResult* temp = e_utc_time_not_in_zulu_;
  e_utc_time_not_in_zulu_ = NULL;
  return temp;
}
void Lints::set_allocated_e_utc_time_not_in_zulu(::zsearch::LintResult* e_utc_time_not_in_zulu) {
  delete e_utc_time_not_in_zulu_;
  e_utc_time_not_in_zulu_ = e_utc_time_not_in_zulu;
  if (e_utc_time_not_in_zulu) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_utc_time_not_in_zulu)
}

// .zsearch.LintResult e_validity_time_not_positive = 182;
bool Lints::has_e_validity_time_not_positive() const {
  return this != internal_default_instance() && e_validity_time_not_positive_ != NULL;
}
void Lints::clear_e_validity_time_not_positive() {
  if (GetArenaNoVirtual() == NULL && e_validity_time_not_positive_ != NULL) delete e_validity_time_not_positive_;
  e_validity_time_not_positive_ = NULL;
}
const ::zsearch::LintResult& Lints::e_validity_time_not_positive() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_validity_time_not_positive)
  return e_validity_time_not_positive_ != NULL ? *e_validity_time_not_positive_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_validity_time_not_positive() {
  
  if (e_validity_time_not_positive_ == NULL) {
    e_validity_time_not_positive_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_validity_time_not_positive)
  return e_validity_time_not_positive_;
}
::zsearch::LintResult* Lints::release_e_validity_time_not_positive() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_validity_time_not_positive)
  
  ::zsearch::LintResult* temp = e_validity_time_not_positive_;
  e_validity_time_not_positive_ = NULL;
  return temp;
}
void Lints::set_allocated_e_validity_time_not_positive(::zsearch::LintResult* e_validity_time_not_positive) {
  delete e_validity_time_not_positive_;
  e_validity_time_not_positive_ = e_validity_time_not_positive;
  if (e_validity_time_not_positive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_validity_time_not_positive)
}

// .zsearch.LintResult e_wrong_time_format_pre2050 = 183;
bool Lints::has_e_wrong_time_format_pre2050() const {
  return this != internal_default_instance() && e_wrong_time_format_pre2050_ != NULL;
}
void Lints::clear_e_wrong_time_format_pre2050() {
  if (GetArenaNoVirtual() == NULL && e_wrong_time_format_pre2050_ != NULL) delete e_wrong_time_format_pre2050_;
  e_wrong_time_format_pre2050_ = NULL;
}
const ::zsearch::LintResult& Lints::e_wrong_time_format_pre2050() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_wrong_time_format_pre2050)
  return e_wrong_time_format_pre2050_ != NULL ? *e_wrong_time_format_pre2050_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_wrong_time_format_pre2050() {
  
  if (e_wrong_time_format_pre2050_ == NULL) {
    e_wrong_time_format_pre2050_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_wrong_time_format_pre2050)
  return e_wrong_time_format_pre2050_;
}
::zsearch::LintResult* Lints::release_e_wrong_time_format_pre2050() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_wrong_time_format_pre2050)
  
  ::zsearch::LintResult* temp = e_wrong_time_format_pre2050_;
  e_wrong_time_format_pre2050_ = NULL;
  return temp;
}
void Lints::set_allocated_e_wrong_time_format_pre2050(::zsearch::LintResult* e_wrong_time_format_pre2050) {
  delete e_wrong_time_format_pre2050_;
  e_wrong_time_format_pre2050_ = e_wrong_time_format_pre2050;
  if (e_wrong_time_format_pre2050) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_wrong_time_format_pre2050)
}

// .zsearch.LintResult e_rsa_no_public_key = 184;
bool Lints::has_e_rsa_no_public_key() const {
  return this != internal_default_instance() && e_rsa_no_public_key_ != NULL;
}
void Lints::clear_e_rsa_no_public_key() {
  if (GetArenaNoVirtual() == NULL && e_rsa_no_public_key_ != NULL) delete e_rsa_no_public_key_;
  e_rsa_no_public_key_ = NULL;
}
const ::zsearch::LintResult& Lints::e_rsa_no_public_key() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_no_public_key)
  return e_rsa_no_public_key_ != NULL ? *e_rsa_no_public_key_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_rsa_no_public_key() {
  
  if (e_rsa_no_public_key_ == NULL) {
    e_rsa_no_public_key_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_no_public_key)
  return e_rsa_no_public_key_;
}
::zsearch::LintResult* Lints::release_e_rsa_no_public_key() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_no_public_key)
  
  ::zsearch::LintResult* temp = e_rsa_no_public_key_;
  e_rsa_no_public_key_ = NULL;
  return temp;
}
void Lints::set_allocated_e_rsa_no_public_key(::zsearch::LintResult* e_rsa_no_public_key) {
  delete e_rsa_no_public_key_;
  e_rsa_no_public_key_ = e_rsa_no_public_key;
  if (e_rsa_no_public_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_no_public_key)
}

// .zsearch.LintResult e_sub_cert_certificate_policies_missing = 185;
bool Lints::has_e_sub_cert_certificate_policies_missing() const {
  return this != internal_default_instance() && e_sub_cert_certificate_policies_missing_ != NULL;
}
void Lints::clear_e_sub_cert_certificate_policies_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_certificate_policies_missing_ != NULL) delete e_sub_cert_certificate_policies_missing_;
  e_sub_cert_certificate_policies_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_certificate_policies_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_certificate_policies_missing)
  return e_sub_cert_certificate_policies_missing_ != NULL ? *e_sub_cert_certificate_policies_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_certificate_policies_missing() {
  
  if (e_sub_cert_certificate_policies_missing_ == NULL) {
    e_sub_cert_certificate_policies_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_certificate_policies_missing)
  return e_sub_cert_certificate_policies_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_certificate_policies_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_certificate_policies_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_certificate_policies_missing_;
  e_sub_cert_certificate_policies_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_certificate_policies_missing(::zsearch::LintResult* e_sub_cert_certificate_policies_missing) {
  delete e_sub_cert_certificate_policies_missing_;
  e_sub_cert_certificate_policies_missing_ = e_sub_cert_certificate_policies_missing;
  if (e_sub_cert_certificate_policies_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_certificate_policies_missing)
}

// .zsearch.LintResult e_sub_cert_key_usage_crl_sign_bit_set = 186;
bool Lints::has_e_sub_cert_key_usage_crl_sign_bit_set() const {
  return this != internal_default_instance() && e_sub_cert_key_usage_crl_sign_bit_set_ != NULL;
}
void Lints::clear_e_sub_cert_key_usage_crl_sign_bit_set() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_key_usage_crl_sign_bit_set_ != NULL) delete e_sub_cert_key_usage_crl_sign_bit_set_;
  e_sub_cert_key_usage_crl_sign_bit_set_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_key_usage_crl_sign_bit_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
  return e_sub_cert_key_usage_crl_sign_bit_set_ != NULL ? *e_sub_cert_key_usage_crl_sign_bit_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_key_usage_crl_sign_bit_set() {
  
  if (e_sub_cert_key_usage_crl_sign_bit_set_ == NULL) {
    e_sub_cert_key_usage_crl_sign_bit_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
  return e_sub_cert_key_usage_crl_sign_bit_set_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_key_usage_crl_sign_bit_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
  
  ::zsearch::LintResult* temp = e_sub_cert_key_usage_crl_sign_bit_set_;
  e_sub_cert_key_usage_crl_sign_bit_set_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_key_usage_crl_sign_bit_set(::zsearch::LintResult* e_sub_cert_key_usage_crl_sign_bit_set) {
  delete e_sub_cert_key_usage_crl_sign_bit_set_;
  e_sub_cert_key_usage_crl_sign_bit_set_ = e_sub_cert_key_usage_crl_sign_bit_set;
  if (e_sub_cert_key_usage_crl_sign_bit_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
}

// .zsearch.LintResult e_subject_common_name_max_length = 187;
bool Lints::has_e_subject_common_name_max_length() const {
  return this != internal_default_instance() && e_subject_common_name_max_length_ != NULL;
}
void Lints::clear_e_subject_common_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_common_name_max_length_ != NULL) delete e_subject_common_name_max_length_;
  e_subject_common_name_max_length_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_common_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_common_name_max_length)
  return e_subject_common_name_max_length_ != NULL ? *e_subject_common_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_common_name_max_length() {
  
  if (e_subject_common_name_max_length_ == NULL) {
    e_subject_common_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_common_name_max_length)
  return e_subject_common_name_max_length_;
}
::zsearch::LintResult* Lints::release_e_subject_common_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_common_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_common_name_max_length_;
  e_subject_common_name_max_length_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_common_name_max_length(::zsearch::LintResult* e_subject_common_name_max_length) {
  delete e_subject_common_name_max_length_;
  e_subject_common_name_max_length_ = e_subject_common_name_max_length;
  if (e_subject_common_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_common_name_max_length)
}

// .zsearch.LintResult e_subject_locality_name_max_length = 188;
bool Lints::has_e_subject_locality_name_max_length() const {
  return this != internal_default_instance() && e_subject_locality_name_max_length_ != NULL;
}
void Lints::clear_e_subject_locality_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_locality_name_max_length_ != NULL) delete e_subject_locality_name_max_length_;
  e_subject_locality_name_max_length_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_locality_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_locality_name_max_length)
  return e_subject_locality_name_max_length_ != NULL ? *e_subject_locality_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_locality_name_max_length() {
  
  if (e_subject_locality_name_max_length_ == NULL) {
    e_subject_locality_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_locality_name_max_length)
  return e_subject_locality_name_max_length_;
}
::zsearch::LintResult* Lints::release_e_subject_locality_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_locality_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_locality_name_max_length_;
  e_subject_locality_name_max_length_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_locality_name_max_length(::zsearch::LintResult* e_subject_locality_name_max_length) {
  delete e_subject_locality_name_max_length_;
  e_subject_locality_name_max_length_ = e_subject_locality_name_max_length;
  if (e_subject_locality_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_locality_name_max_length)
}

// .zsearch.LintResult e_subject_organization_name_max_length = 189;
bool Lints::has_e_subject_organization_name_max_length() const {
  return this != internal_default_instance() && e_subject_organization_name_max_length_ != NULL;
}
void Lints::clear_e_subject_organization_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_organization_name_max_length_ != NULL) delete e_subject_organization_name_max_length_;
  e_subject_organization_name_max_length_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_organization_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_organization_name_max_length)
  return e_subject_organization_name_max_length_ != NULL ? *e_subject_organization_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_organization_name_max_length() {
  
  if (e_subject_organization_name_max_length_ == NULL) {
    e_subject_organization_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_organization_name_max_length)
  return e_subject_organization_name_max_length_;
}
::zsearch::LintResult* Lints::release_e_subject_organization_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_organization_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_organization_name_max_length_;
  e_subject_organization_name_max_length_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_organization_name_max_length(::zsearch::LintResult* e_subject_organization_name_max_length) {
  delete e_subject_organization_name_max_length_;
  e_subject_organization_name_max_length_ = e_subject_organization_name_max_length;
  if (e_subject_organization_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_organization_name_max_length)
}

// .zsearch.LintResult e_subject_organizational_unit_name_max_length = 190;
bool Lints::has_e_subject_organizational_unit_name_max_length() const {
  return this != internal_default_instance() && e_subject_organizational_unit_name_max_length_ != NULL;
}
void Lints::clear_e_subject_organizational_unit_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_organizational_unit_name_max_length_ != NULL) delete e_subject_organizational_unit_name_max_length_;
  e_subject_organizational_unit_name_max_length_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_organizational_unit_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_organizational_unit_name_max_length)
  return e_subject_organizational_unit_name_max_length_ != NULL ? *e_subject_organizational_unit_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_organizational_unit_name_max_length() {
  
  if (e_subject_organizational_unit_name_max_length_ == NULL) {
    e_subject_organizational_unit_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_organizational_unit_name_max_length)
  return e_subject_organizational_unit_name_max_length_;
}
::zsearch::LintResult* Lints::release_e_subject_organizational_unit_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_organizational_unit_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_organizational_unit_name_max_length_;
  e_subject_organizational_unit_name_max_length_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_organizational_unit_name_max_length(::zsearch::LintResult* e_subject_organizational_unit_name_max_length) {
  delete e_subject_organizational_unit_name_max_length_;
  e_subject_organizational_unit_name_max_length_ = e_subject_organizational_unit_name_max_length;
  if (e_subject_organizational_unit_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_organizational_unit_name_max_length)
}

// .zsearch.LintResult e_subject_state_name_max_length = 191;
bool Lints::has_e_subject_state_name_max_length() const {
  return this != internal_default_instance() && e_subject_state_name_max_length_ != NULL;
}
void Lints::clear_e_subject_state_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_state_name_max_length_ != NULL) delete e_subject_state_name_max_length_;
  e_subject_state_name_max_length_ = NULL;
}
const ::zsearch::LintResult& Lints::e_subject_state_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_state_name_max_length)
  return e_subject_state_name_max_length_ != NULL ? *e_subject_state_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_subject_state_name_max_length() {
  
  if (e_subject_state_name_max_length_ == NULL) {
    e_subject_state_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_state_name_max_length)
  return e_subject_state_name_max_length_;
}
::zsearch::LintResult* Lints::release_e_subject_state_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_state_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_state_name_max_length_;
  e_subject_state_name_max_length_ = NULL;
  return temp;
}
void Lints::set_allocated_e_subject_state_name_max_length(::zsearch::LintResult* e_subject_state_name_max_length) {
  delete e_subject_state_name_max_length_;
  e_subject_state_name_max_length_ = e_subject_state_name_max_length;
  if (e_subject_state_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_state_name_max_length)
}

// .zsearch.LintResult w_multiple_subject_rdn = 192;
bool Lints::has_w_multiple_subject_rdn() const {
  return this != internal_default_instance() && w_multiple_subject_rdn_ != NULL;
}
void Lints::clear_w_multiple_subject_rdn() {
  if (GetArenaNoVirtual() == NULL && w_multiple_subject_rdn_ != NULL) delete w_multiple_subject_rdn_;
  w_multiple_subject_rdn_ = NULL;
}
const ::zsearch::LintResult& Lints::w_multiple_subject_rdn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_multiple_subject_rdn)
  return w_multiple_subject_rdn_ != NULL ? *w_multiple_subject_rdn_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_multiple_subject_rdn() {
  
  if (w_multiple_subject_rdn_ == NULL) {
    w_multiple_subject_rdn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_multiple_subject_rdn)
  return w_multiple_subject_rdn_;
}
::zsearch::LintResult* Lints::release_w_multiple_subject_rdn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_multiple_subject_rdn)
  
  ::zsearch::LintResult* temp = w_multiple_subject_rdn_;
  w_multiple_subject_rdn_ = NULL;
  return temp;
}
void Lints::set_allocated_w_multiple_subject_rdn(::zsearch::LintResult* w_multiple_subject_rdn) {
  delete w_multiple_subject_rdn_;
  w_multiple_subject_rdn_ = w_multiple_subject_rdn;
  if (w_multiple_subject_rdn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_multiple_subject_rdn)
}

// .zsearch.LintResult w_multiple_issuer_rdn = 193;
bool Lints::has_w_multiple_issuer_rdn() const {
  return this != internal_default_instance() && w_multiple_issuer_rdn_ != NULL;
}
void Lints::clear_w_multiple_issuer_rdn() {
  if (GetArenaNoVirtual() == NULL && w_multiple_issuer_rdn_ != NULL) delete w_multiple_issuer_rdn_;
  w_multiple_issuer_rdn_ = NULL;
}
const ::zsearch::LintResult& Lints::w_multiple_issuer_rdn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_multiple_issuer_rdn)
  return w_multiple_issuer_rdn_ != NULL ? *w_multiple_issuer_rdn_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_multiple_issuer_rdn() {
  
  if (w_multiple_issuer_rdn_ == NULL) {
    w_multiple_issuer_rdn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_multiple_issuer_rdn)
  return w_multiple_issuer_rdn_;
}
::zsearch::LintResult* Lints::release_w_multiple_issuer_rdn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_multiple_issuer_rdn)
  
  ::zsearch::LintResult* temp = w_multiple_issuer_rdn_;
  w_multiple_issuer_rdn_ = NULL;
  return temp;
}
void Lints::set_allocated_w_multiple_issuer_rdn(::zsearch::LintResult* w_multiple_issuer_rdn) {
  delete w_multiple_issuer_rdn_;
  w_multiple_issuer_rdn_ = w_multiple_issuer_rdn;
  if (w_multiple_issuer_rdn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_multiple_issuer_rdn)
}

// .zsearch.LintResult w_issuer_dn_trailing_whitespace = 194;
bool Lints::has_w_issuer_dn_trailing_whitespace() const {
  return this != internal_default_instance() && w_issuer_dn_trailing_whitespace_ != NULL;
}
void Lints::clear_w_issuer_dn_trailing_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_issuer_dn_trailing_whitespace_ != NULL) delete w_issuer_dn_trailing_whitespace_;
  w_issuer_dn_trailing_whitespace_ = NULL;
}
const ::zsearch::LintResult& Lints::w_issuer_dn_trailing_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_issuer_dn_trailing_whitespace)
  return w_issuer_dn_trailing_whitespace_ != NULL ? *w_issuer_dn_trailing_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_issuer_dn_trailing_whitespace() {
  
  if (w_issuer_dn_trailing_whitespace_ == NULL) {
    w_issuer_dn_trailing_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_issuer_dn_trailing_whitespace)
  return w_issuer_dn_trailing_whitespace_;
}
::zsearch::LintResult* Lints::release_w_issuer_dn_trailing_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_issuer_dn_trailing_whitespace)
  
  ::zsearch::LintResult* temp = w_issuer_dn_trailing_whitespace_;
  w_issuer_dn_trailing_whitespace_ = NULL;
  return temp;
}
void Lints::set_allocated_w_issuer_dn_trailing_whitespace(::zsearch::LintResult* w_issuer_dn_trailing_whitespace) {
  delete w_issuer_dn_trailing_whitespace_;
  w_issuer_dn_trailing_whitespace_ = w_issuer_dn_trailing_whitespace;
  if (w_issuer_dn_trailing_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_issuer_dn_trailing_whitespace)
}

// .zsearch.LintResult w_issuer_dn_leading_whitespace = 195;
bool Lints::has_w_issuer_dn_leading_whitespace() const {
  return this != internal_default_instance() && w_issuer_dn_leading_whitespace_ != NULL;
}
void Lints::clear_w_issuer_dn_leading_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_issuer_dn_leading_whitespace_ != NULL) delete w_issuer_dn_leading_whitespace_;
  w_issuer_dn_leading_whitespace_ = NULL;
}
const ::zsearch::LintResult& Lints::w_issuer_dn_leading_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_issuer_dn_leading_whitespace)
  return w_issuer_dn_leading_whitespace_ != NULL ? *w_issuer_dn_leading_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_issuer_dn_leading_whitespace() {
  
  if (w_issuer_dn_leading_whitespace_ == NULL) {
    w_issuer_dn_leading_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_issuer_dn_leading_whitespace)
  return w_issuer_dn_leading_whitespace_;
}
::zsearch::LintResult* Lints::release_w_issuer_dn_leading_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_issuer_dn_leading_whitespace)
  
  ::zsearch::LintResult* temp = w_issuer_dn_leading_whitespace_;
  w_issuer_dn_leading_whitespace_ = NULL;
  return temp;
}
void Lints::set_allocated_w_issuer_dn_leading_whitespace(::zsearch::LintResult* w_issuer_dn_leading_whitespace) {
  delete w_issuer_dn_leading_whitespace_;
  w_issuer_dn_leading_whitespace_ = w_issuer_dn_leading_whitespace;
  if (w_issuer_dn_leading_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_issuer_dn_leading_whitespace)
}

// .zsearch.LintResult w_subject_dn_trailing_whitespace = 196;
bool Lints::has_w_subject_dn_trailing_whitespace() const {
  return this != internal_default_instance() && w_subject_dn_trailing_whitespace_ != NULL;
}
void Lints::clear_w_subject_dn_trailing_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_subject_dn_trailing_whitespace_ != NULL) delete w_subject_dn_trailing_whitespace_;
  w_subject_dn_trailing_whitespace_ = NULL;
}
const ::zsearch::LintResult& Lints::w_subject_dn_trailing_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_subject_dn_trailing_whitespace)
  return w_subject_dn_trailing_whitespace_ != NULL ? *w_subject_dn_trailing_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_subject_dn_trailing_whitespace() {
  
  if (w_subject_dn_trailing_whitespace_ == NULL) {
    w_subject_dn_trailing_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_subject_dn_trailing_whitespace)
  return w_subject_dn_trailing_whitespace_;
}
::zsearch::LintResult* Lints::release_w_subject_dn_trailing_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_subject_dn_trailing_whitespace)
  
  ::zsearch::LintResult* temp = w_subject_dn_trailing_whitespace_;
  w_subject_dn_trailing_whitespace_ = NULL;
  return temp;
}
void Lints::set_allocated_w_subject_dn_trailing_whitespace(::zsearch::LintResult* w_subject_dn_trailing_whitespace) {
  delete w_subject_dn_trailing_whitespace_;
  w_subject_dn_trailing_whitespace_ = w_subject_dn_trailing_whitespace;
  if (w_subject_dn_trailing_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_subject_dn_trailing_whitespace)
}

// .zsearch.LintResult w_subject_dn_leading_whitespace = 197;
bool Lints::has_w_subject_dn_leading_whitespace() const {
  return this != internal_default_instance() && w_subject_dn_leading_whitespace_ != NULL;
}
void Lints::clear_w_subject_dn_leading_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_subject_dn_leading_whitespace_ != NULL) delete w_subject_dn_leading_whitespace_;
  w_subject_dn_leading_whitespace_ = NULL;
}
const ::zsearch::LintResult& Lints::w_subject_dn_leading_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_subject_dn_leading_whitespace)
  return w_subject_dn_leading_whitespace_ != NULL ? *w_subject_dn_leading_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_subject_dn_leading_whitespace() {
  
  if (w_subject_dn_leading_whitespace_ == NULL) {
    w_subject_dn_leading_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_subject_dn_leading_whitespace)
  return w_subject_dn_leading_whitespace_;
}
::zsearch::LintResult* Lints::release_w_subject_dn_leading_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_subject_dn_leading_whitespace)
  
  ::zsearch::LintResult* temp = w_subject_dn_leading_whitespace_;
  w_subject_dn_leading_whitespace_ = NULL;
  return temp;
}
void Lints::set_allocated_w_subject_dn_leading_whitespace(::zsearch::LintResult* w_subject_dn_leading_whitespace) {
  delete w_subject_dn_leading_whitespace_;
  w_subject_dn_leading_whitespace_ = w_subject_dn_leading_whitespace;
  if (w_subject_dn_leading_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_subject_dn_leading_whitespace)
}

// .zsearch.LintResult e_sub_cert_locality_name_must_appear = 198;
bool Lints::has_e_sub_cert_locality_name_must_appear() const {
  return this != internal_default_instance() && e_sub_cert_locality_name_must_appear_ != NULL;
}
void Lints::clear_e_sub_cert_locality_name_must_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_locality_name_must_appear_ != NULL) delete e_sub_cert_locality_name_must_appear_;
  e_sub_cert_locality_name_must_appear_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_locality_name_must_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_locality_name_must_appear)
  return e_sub_cert_locality_name_must_appear_ != NULL ? *e_sub_cert_locality_name_must_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_locality_name_must_appear() {
  
  if (e_sub_cert_locality_name_must_appear_ == NULL) {
    e_sub_cert_locality_name_must_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_locality_name_must_appear)
  return e_sub_cert_locality_name_must_appear_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_locality_name_must_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_locality_name_must_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_locality_name_must_appear_;
  e_sub_cert_locality_name_must_appear_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_locality_name_must_appear(::zsearch::LintResult* e_sub_cert_locality_name_must_appear) {
  delete e_sub_cert_locality_name_must_appear_;
  e_sub_cert_locality_name_must_appear_ = e_sub_cert_locality_name_must_appear;
  if (e_sub_cert_locality_name_must_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_locality_name_must_appear)
}

// .zsearch.LintResult e_signature_algorithm_not_supported = 199;
bool Lints::has_e_signature_algorithm_not_supported() const {
  return this != internal_default_instance() && e_signature_algorithm_not_supported_ != NULL;
}
void Lints::clear_e_signature_algorithm_not_supported() {
  if (GetArenaNoVirtual() == NULL && e_signature_algorithm_not_supported_ != NULL) delete e_signature_algorithm_not_supported_;
  e_signature_algorithm_not_supported_ = NULL;
}
const ::zsearch::LintResult& Lints::e_signature_algorithm_not_supported() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_signature_algorithm_not_supported)
  return e_signature_algorithm_not_supported_ != NULL ? *e_signature_algorithm_not_supported_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_signature_algorithm_not_supported() {
  
  if (e_signature_algorithm_not_supported_ == NULL) {
    e_signature_algorithm_not_supported_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_signature_algorithm_not_supported)
  return e_signature_algorithm_not_supported_;
}
::zsearch::LintResult* Lints::release_e_signature_algorithm_not_supported() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_signature_algorithm_not_supported)
  
  ::zsearch::LintResult* temp = e_signature_algorithm_not_supported_;
  e_signature_algorithm_not_supported_ = NULL;
  return temp;
}
void Lints::set_allocated_e_signature_algorithm_not_supported(::zsearch::LintResult* e_signature_algorithm_not_supported) {
  delete e_signature_algorithm_not_supported_;
  e_signature_algorithm_not_supported_ = e_signature_algorithm_not_supported;
  if (e_signature_algorithm_not_supported) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_signature_algorithm_not_supported)
}

// .zsearch.LintResult e_dnsname_hyphen_in_sld = 200;
bool Lints::has_e_dnsname_hyphen_in_sld() const {
  return this != internal_default_instance() && e_dnsname_hyphen_in_sld_ != NULL;
}
void Lints::clear_e_dnsname_hyphen_in_sld() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_hyphen_in_sld_ != NULL) delete e_dnsname_hyphen_in_sld_;
  e_dnsname_hyphen_in_sld_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_hyphen_in_sld() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_hyphen_in_sld)
  return e_dnsname_hyphen_in_sld_ != NULL ? *e_dnsname_hyphen_in_sld_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_hyphen_in_sld() {
  
  if (e_dnsname_hyphen_in_sld_ == NULL) {
    e_dnsname_hyphen_in_sld_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_hyphen_in_sld)
  return e_dnsname_hyphen_in_sld_;
}
::zsearch::LintResult* Lints::release_e_dnsname_hyphen_in_sld() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_hyphen_in_sld)
  
  ::zsearch::LintResult* temp = e_dnsname_hyphen_in_sld_;
  e_dnsname_hyphen_in_sld_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_hyphen_in_sld(::zsearch::LintResult* e_dnsname_hyphen_in_sld) {
  delete e_dnsname_hyphen_in_sld_;
  e_dnsname_hyphen_in_sld_ = e_dnsname_hyphen_in_sld;
  if (e_dnsname_hyphen_in_sld) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_hyphen_in_sld)
}

// .zsearch.LintResult e_dsa_correct_order_in_subgroup = 201;
bool Lints::has_e_dsa_correct_order_in_subgroup() const {
  return this != internal_default_instance() && e_dsa_correct_order_in_subgroup_ != NULL;
}
void Lints::clear_e_dsa_correct_order_in_subgroup() {
  if (GetArenaNoVirtual() == NULL && e_dsa_correct_order_in_subgroup_ != NULL) delete e_dsa_correct_order_in_subgroup_;
  e_dsa_correct_order_in_subgroup_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dsa_correct_order_in_subgroup() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_correct_order_in_subgroup)
  return e_dsa_correct_order_in_subgroup_ != NULL ? *e_dsa_correct_order_in_subgroup_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dsa_correct_order_in_subgroup() {
  
  if (e_dsa_correct_order_in_subgroup_ == NULL) {
    e_dsa_correct_order_in_subgroup_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_correct_order_in_subgroup)
  return e_dsa_correct_order_in_subgroup_;
}
::zsearch::LintResult* Lints::release_e_dsa_correct_order_in_subgroup() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_correct_order_in_subgroup)
  
  ::zsearch::LintResult* temp = e_dsa_correct_order_in_subgroup_;
  e_dsa_correct_order_in_subgroup_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dsa_correct_order_in_subgroup(::zsearch::LintResult* e_dsa_correct_order_in_subgroup) {
  delete e_dsa_correct_order_in_subgroup_;
  e_dsa_correct_order_in_subgroup_ = e_dsa_correct_order_in_subgroup;
  if (e_dsa_correct_order_in_subgroup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_correct_order_in_subgroup)
}

// .zsearch.LintResult n_sub_ca_eku_not_technically_constrained = 202;
bool Lints::has_n_sub_ca_eku_not_technically_constrained() const {
  return this != internal_default_instance() && n_sub_ca_eku_not_technically_constrained_ != NULL;
}
void Lints::clear_n_sub_ca_eku_not_technically_constrained() {
  if (GetArenaNoVirtual() == NULL && n_sub_ca_eku_not_technically_constrained_ != NULL) delete n_sub_ca_eku_not_technically_constrained_;
  n_sub_ca_eku_not_technically_constrained_ = NULL;
}
const ::zsearch::LintResult& Lints::n_sub_ca_eku_not_technically_constrained() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
  return n_sub_ca_eku_not_technically_constrained_ != NULL ? *n_sub_ca_eku_not_technically_constrained_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_n_sub_ca_eku_not_technically_constrained() {
  
  if (n_sub_ca_eku_not_technically_constrained_ == NULL) {
    n_sub_ca_eku_not_technically_constrained_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
  return n_sub_ca_eku_not_technically_constrained_;
}
::zsearch::LintResult* Lints::release_n_sub_ca_eku_not_technically_constrained() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
  
  ::zsearch::LintResult* temp = n_sub_ca_eku_not_technically_constrained_;
  n_sub_ca_eku_not_technically_constrained_ = NULL;
  return temp;
}
void Lints::set_allocated_n_sub_ca_eku_not_technically_constrained(::zsearch::LintResult* n_sub_ca_eku_not_technically_constrained) {
  delete n_sub_ca_eku_not_technically_constrained_;
  n_sub_ca_eku_not_technically_constrained_ = n_sub_ca_eku_not_technically_constrained;
  if (n_sub_ca_eku_not_technically_constrained) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
}

// .zsearch.LintResult e_dnsname_empty_label = 203;
bool Lints::has_e_dnsname_empty_label() const {
  return this != internal_default_instance() && e_dnsname_empty_label_ != NULL;
}
void Lints::clear_e_dnsname_empty_label() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_empty_label_ != NULL) delete e_dnsname_empty_label_;
  e_dnsname_empty_label_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_empty_label() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_empty_label)
  return e_dnsname_empty_label_ != NULL ? *e_dnsname_empty_label_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_empty_label() {
  
  if (e_dnsname_empty_label_ == NULL) {
    e_dnsname_empty_label_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_empty_label)
  return e_dnsname_empty_label_;
}
::zsearch::LintResult* Lints::release_e_dnsname_empty_label() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_empty_label)
  
  ::zsearch::LintResult* temp = e_dnsname_empty_label_;
  e_dnsname_empty_label_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_empty_label(::zsearch::LintResult* e_dnsname_empty_label) {
  delete e_dnsname_empty_label_;
  e_dnsname_empty_label_ = e_dnsname_empty_label;
  if (e_dnsname_empty_label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_empty_label)
}

// .zsearch.LintResult e_ca_common_name_missing = 204;
bool Lints::has_e_ca_common_name_missing() const {
  return this != internal_default_instance() && e_ca_common_name_missing_ != NULL;
}
void Lints::clear_e_ca_common_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_common_name_missing_ != NULL) delete e_ca_common_name_missing_;
  e_ca_common_name_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_common_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_common_name_missing)
  return e_ca_common_name_missing_ != NULL ? *e_ca_common_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_common_name_missing() {
  
  if (e_ca_common_name_missing_ == NULL) {
    e_ca_common_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_common_name_missing)
  return e_ca_common_name_missing_;
}
::zsearch::LintResult* Lints::release_e_ca_common_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_common_name_missing)
  
  ::zsearch::LintResult* temp = e_ca_common_name_missing_;
  e_ca_common_name_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_common_name_missing(::zsearch::LintResult* e_ca_common_name_missing) {
  delete e_ca_common_name_missing_;
  e_ca_common_name_missing_ = e_ca_common_name_missing;
  if (e_ca_common_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_common_name_missing)
}

// .zsearch.LintResult e_dnsname_wildcard_only_in_left_label = 205;
bool Lints::has_e_dnsname_wildcard_only_in_left_label() const {
  return this != internal_default_instance() && e_dnsname_wildcard_only_in_left_label_ != NULL;
}
void Lints::clear_e_dnsname_wildcard_only_in_left_label() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_wildcard_only_in_left_label_ != NULL) delete e_dnsname_wildcard_only_in_left_label_;
  e_dnsname_wildcard_only_in_left_label_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_wildcard_only_in_left_label() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
  return e_dnsname_wildcard_only_in_left_label_ != NULL ? *e_dnsname_wildcard_only_in_left_label_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_wildcard_only_in_left_label() {
  
  if (e_dnsname_wildcard_only_in_left_label_ == NULL) {
    e_dnsname_wildcard_only_in_left_label_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
  return e_dnsname_wildcard_only_in_left_label_;
}
::zsearch::LintResult* Lints::release_e_dnsname_wildcard_only_in_left_label() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
  
  ::zsearch::LintResult* temp = e_dnsname_wildcard_only_in_left_label_;
  e_dnsname_wildcard_only_in_left_label_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_wildcard_only_in_left_label(::zsearch::LintResult* e_dnsname_wildcard_only_in_left_label) {
  delete e_dnsname_wildcard_only_in_left_label_;
  e_dnsname_wildcard_only_in_left_label_ = e_dnsname_wildcard_only_in_left_label;
  if (e_dnsname_wildcard_only_in_left_label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
}

// .zsearch.LintResult e_sub_cert_valid_time_too_long = 206;
bool Lints::has_e_sub_cert_valid_time_too_long() const {
  return this != internal_default_instance() && e_sub_cert_valid_time_too_long_ != NULL;
}
void Lints::clear_e_sub_cert_valid_time_too_long() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_valid_time_too_long_ != NULL) delete e_sub_cert_valid_time_too_long_;
  e_sub_cert_valid_time_too_long_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_valid_time_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_valid_time_too_long)
  return e_sub_cert_valid_time_too_long_ != NULL ? *e_sub_cert_valid_time_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_valid_time_too_long() {
  
  if (e_sub_cert_valid_time_too_long_ == NULL) {
    e_sub_cert_valid_time_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_valid_time_too_long)
  return e_sub_cert_valid_time_too_long_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_valid_time_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_valid_time_too_long)
  
  ::zsearch::LintResult* temp = e_sub_cert_valid_time_too_long_;
  e_sub_cert_valid_time_too_long_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_valid_time_too_long(::zsearch::LintResult* e_sub_cert_valid_time_too_long) {
  delete e_sub_cert_valid_time_too_long_;
  e_sub_cert_valid_time_too_long_ = e_sub_cert_valid_time_too_long;
  if (e_sub_cert_valid_time_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_valid_time_too_long)
}

// .zsearch.LintResult e_dnsname_left_label_wildcard_correct = 207;
bool Lints::has_e_dnsname_left_label_wildcard_correct() const {
  return this != internal_default_instance() && e_dnsname_left_label_wildcard_correct_ != NULL;
}
void Lints::clear_e_dnsname_left_label_wildcard_correct() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_left_label_wildcard_correct_ != NULL) delete e_dnsname_left_label_wildcard_correct_;
  e_dnsname_left_label_wildcard_correct_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_left_label_wildcard_correct() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
  return e_dnsname_left_label_wildcard_correct_ != NULL ? *e_dnsname_left_label_wildcard_correct_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_left_label_wildcard_correct() {
  
  if (e_dnsname_left_label_wildcard_correct_ == NULL) {
    e_dnsname_left_label_wildcard_correct_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
  return e_dnsname_left_label_wildcard_correct_;
}
::zsearch::LintResult* Lints::release_e_dnsname_left_label_wildcard_correct() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
  
  ::zsearch::LintResult* temp = e_dnsname_left_label_wildcard_correct_;
  e_dnsname_left_label_wildcard_correct_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_left_label_wildcard_correct(::zsearch::LintResult* e_dnsname_left_label_wildcard_correct) {
  delete e_dnsname_left_label_wildcard_correct_;
  e_dnsname_left_label_wildcard_correct_ = e_dnsname_left_label_wildcard_correct;
  if (e_dnsname_left_label_wildcard_correct) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
}

// .zsearch.LintResult w_serial_number_low_entropy = 208;
bool Lints::has_w_serial_number_low_entropy() const {
  return this != internal_default_instance() && w_serial_number_low_entropy_ != NULL;
}
void Lints::clear_w_serial_number_low_entropy() {
  if (GetArenaNoVirtual() == NULL && w_serial_number_low_entropy_ != NULL) delete w_serial_number_low_entropy_;
  w_serial_number_low_entropy_ = NULL;
}
const ::zsearch::LintResult& Lints::w_serial_number_low_entropy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_serial_number_low_entropy)
  return w_serial_number_low_entropy_ != NULL ? *w_serial_number_low_entropy_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_serial_number_low_entropy() {
  
  if (w_serial_number_low_entropy_ == NULL) {
    w_serial_number_low_entropy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_serial_number_low_entropy)
  return w_serial_number_low_entropy_;
}
::zsearch::LintResult* Lints::release_w_serial_number_low_entropy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_serial_number_low_entropy)
  
  ::zsearch::LintResult* temp = w_serial_number_low_entropy_;
  w_serial_number_low_entropy_ = NULL;
  return temp;
}
void Lints::set_allocated_w_serial_number_low_entropy(::zsearch::LintResult* w_serial_number_low_entropy) {
  delete w_serial_number_low_entropy_;
  w_serial_number_low_entropy_ = w_serial_number_low_entropy;
  if (w_serial_number_low_entropy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_serial_number_low_entropy)
}

// .zsearch.LintResult e_dnsname_label_too_long = 209;
bool Lints::has_e_dnsname_label_too_long() const {
  return this != internal_default_instance() && e_dnsname_label_too_long_ != NULL;
}
void Lints::clear_e_dnsname_label_too_long() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_label_too_long_ != NULL) delete e_dnsname_label_too_long_;
  e_dnsname_label_too_long_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_label_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_label_too_long)
  return e_dnsname_label_too_long_ != NULL ? *e_dnsname_label_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_label_too_long() {
  
  if (e_dnsname_label_too_long_ == NULL) {
    e_dnsname_label_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_label_too_long)
  return e_dnsname_label_too_long_;
}
::zsearch::LintResult* Lints::release_e_dnsname_label_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_label_too_long)
  
  ::zsearch::LintResult* temp = e_dnsname_label_too_long_;
  e_dnsname_label_too_long_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_label_too_long(::zsearch::LintResult* e_dnsname_label_too_long) {
  delete e_dnsname_label_too_long_;
  e_dnsname_label_too_long_ = e_dnsname_label_too_long;
  if (e_dnsname_label_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_label_too_long)
}

// .zsearch.LintResult e_root_ca_key_usage_present = 210;
bool Lints::has_e_root_ca_key_usage_present() const {
  return this != internal_default_instance() && e_root_ca_key_usage_present_ != NULL;
}
void Lints::clear_e_root_ca_key_usage_present() {
  if (GetArenaNoVirtual() == NULL && e_root_ca_key_usage_present_ != NULL) delete e_root_ca_key_usage_present_;
  e_root_ca_key_usage_present_ = NULL;
}
const ::zsearch::LintResult& Lints::e_root_ca_key_usage_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_root_ca_key_usage_present)
  return e_root_ca_key_usage_present_ != NULL ? *e_root_ca_key_usage_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_root_ca_key_usage_present() {
  
  if (e_root_ca_key_usage_present_ == NULL) {
    e_root_ca_key_usage_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_root_ca_key_usage_present)
  return e_root_ca_key_usage_present_;
}
::zsearch::LintResult* Lints::release_e_root_ca_key_usage_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_root_ca_key_usage_present)
  
  ::zsearch::LintResult* temp = e_root_ca_key_usage_present_;
  e_root_ca_key_usage_present_ = NULL;
  return temp;
}
void Lints::set_allocated_e_root_ca_key_usage_present(::zsearch::LintResult* e_root_ca_key_usage_present) {
  delete e_root_ca_key_usage_present_;
  e_root_ca_key_usage_present_ = e_root_ca_key_usage_present;
  if (e_root_ca_key_usage_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_root_ca_key_usage_present)
}

// .zsearch.LintResult w_dnsname_wildcard_left_of_public_suffix = 211;
bool Lints::has_w_dnsname_wildcard_left_of_public_suffix() const {
  return this != internal_default_instance() && w_dnsname_wildcard_left_of_public_suffix_ != NULL;
}
void Lints::clear_w_dnsname_wildcard_left_of_public_suffix() {
  if (GetArenaNoVirtual() == NULL && w_dnsname_wildcard_left_of_public_suffix_ != NULL) delete w_dnsname_wildcard_left_of_public_suffix_;
  w_dnsname_wildcard_left_of_public_suffix_ = NULL;
}
const ::zsearch::LintResult& Lints::w_dnsname_wildcard_left_of_public_suffix() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
  return w_dnsname_wildcard_left_of_public_suffix_ != NULL ? *w_dnsname_wildcard_left_of_public_suffix_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_dnsname_wildcard_left_of_public_suffix() {
  
  if (w_dnsname_wildcard_left_of_public_suffix_ == NULL) {
    w_dnsname_wildcard_left_of_public_suffix_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
  return w_dnsname_wildcard_left_of_public_suffix_;
}
::zsearch::LintResult* Lints::release_w_dnsname_wildcard_left_of_public_suffix() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
  
  ::zsearch::LintResult* temp = w_dnsname_wildcard_left_of_public_suffix_;
  w_dnsname_wildcard_left_of_public_suffix_ = NULL;
  return temp;
}
void Lints::set_allocated_w_dnsname_wildcard_left_of_public_suffix(::zsearch::LintResult* w_dnsname_wildcard_left_of_public_suffix) {
  delete w_dnsname_wildcard_left_of_public_suffix_;
  w_dnsname_wildcard_left_of_public_suffix_ = w_dnsname_wildcard_left_of_public_suffix;
  if (w_dnsname_wildcard_left_of_public_suffix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
}

// .zsearch.LintResult e_international_dns_name_not_unicode = 212;
bool Lints::has_e_international_dns_name_not_unicode() const {
  return this != internal_default_instance() && e_international_dns_name_not_unicode_ != NULL;
}
void Lints::clear_e_international_dns_name_not_unicode() {
  if (GetArenaNoVirtual() == NULL && e_international_dns_name_not_unicode_ != NULL) delete e_international_dns_name_not_unicode_;
  e_international_dns_name_not_unicode_ = NULL;
}
const ::zsearch::LintResult& Lints::e_international_dns_name_not_unicode() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_international_dns_name_not_unicode)
  return e_international_dns_name_not_unicode_ != NULL ? *e_international_dns_name_not_unicode_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_international_dns_name_not_unicode() {
  
  if (e_international_dns_name_not_unicode_ == NULL) {
    e_international_dns_name_not_unicode_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_international_dns_name_not_unicode)
  return e_international_dns_name_not_unicode_;
}
::zsearch::LintResult* Lints::release_e_international_dns_name_not_unicode() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_international_dns_name_not_unicode)
  
  ::zsearch::LintResult* temp = e_international_dns_name_not_unicode_;
  e_international_dns_name_not_unicode_ = NULL;
  return temp;
}
void Lints::set_allocated_e_international_dns_name_not_unicode(::zsearch::LintResult* e_international_dns_name_not_unicode) {
  delete e_international_dns_name_not_unicode_;
  e_international_dns_name_not_unicode_ = e_international_dns_name_not_unicode;
  if (e_international_dns_name_not_unicode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_international_dns_name_not_unicode)
}

// .zsearch.LintResult w_dnsname_underscore_in_trd = 213;
bool Lints::has_w_dnsname_underscore_in_trd() const {
  return this != internal_default_instance() && w_dnsname_underscore_in_trd_ != NULL;
}
void Lints::clear_w_dnsname_underscore_in_trd() {
  if (GetArenaNoVirtual() == NULL && w_dnsname_underscore_in_trd_ != NULL) delete w_dnsname_underscore_in_trd_;
  w_dnsname_underscore_in_trd_ = NULL;
}
const ::zsearch::LintResult& Lints::w_dnsname_underscore_in_trd() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_dnsname_underscore_in_trd)
  return w_dnsname_underscore_in_trd_ != NULL ? *w_dnsname_underscore_in_trd_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_dnsname_underscore_in_trd() {
  
  if (w_dnsname_underscore_in_trd_ == NULL) {
    w_dnsname_underscore_in_trd_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_dnsname_underscore_in_trd)
  return w_dnsname_underscore_in_trd_;
}
::zsearch::LintResult* Lints::release_w_dnsname_underscore_in_trd() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_dnsname_underscore_in_trd)
  
  ::zsearch::LintResult* temp = w_dnsname_underscore_in_trd_;
  w_dnsname_underscore_in_trd_ = NULL;
  return temp;
}
void Lints::set_allocated_w_dnsname_underscore_in_trd(::zsearch::LintResult* w_dnsname_underscore_in_trd) {
  delete w_dnsname_underscore_in_trd_;
  w_dnsname_underscore_in_trd_ = w_dnsname_underscore_in_trd;
  if (w_dnsname_underscore_in_trd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_dnsname_underscore_in_trd)
}

// .zsearch.LintResult w_sub_cert_aia_does_not_contain_issuing_ca_url = 214;
bool Lints::has_w_sub_cert_aia_does_not_contain_issuing_ca_url() const {
  return this != internal_default_instance() && w_sub_cert_aia_does_not_contain_issuing_ca_url_ != NULL;
}
void Lints::clear_w_sub_cert_aia_does_not_contain_issuing_ca_url() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_aia_does_not_contain_issuing_ca_url_ != NULL) delete w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  w_sub_cert_aia_does_not_contain_issuing_ca_url_ = NULL;
}
const ::zsearch::LintResult& Lints::w_sub_cert_aia_does_not_contain_issuing_ca_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
  return w_sub_cert_aia_does_not_contain_issuing_ca_url_ != NULL ? *w_sub_cert_aia_does_not_contain_issuing_ca_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_w_sub_cert_aia_does_not_contain_issuing_ca_url() {
  
  if (w_sub_cert_aia_does_not_contain_issuing_ca_url_ == NULL) {
    w_sub_cert_aia_does_not_contain_issuing_ca_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
  return w_sub_cert_aia_does_not_contain_issuing_ca_url_;
}
::zsearch::LintResult* Lints::release_w_sub_cert_aia_does_not_contain_issuing_ca_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
  
  ::zsearch::LintResult* temp = w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  w_sub_cert_aia_does_not_contain_issuing_ca_url_ = NULL;
  return temp;
}
void Lints::set_allocated_w_sub_cert_aia_does_not_contain_issuing_ca_url(::zsearch::LintResult* w_sub_cert_aia_does_not_contain_issuing_ca_url) {
  delete w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  w_sub_cert_aia_does_not_contain_issuing_ca_url_ = w_sub_cert_aia_does_not_contain_issuing_ca_url;
  if (w_sub_cert_aia_does_not_contain_issuing_ca_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
}

// .zsearch.LintResult e_sub_cert_locality_name_must_not_appear = 215;
bool Lints::has_e_sub_cert_locality_name_must_not_appear() const {
  return this != internal_default_instance() && e_sub_cert_locality_name_must_not_appear_ != NULL;
}
void Lints::clear_e_sub_cert_locality_name_must_not_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_locality_name_must_not_appear_ != NULL) delete e_sub_cert_locality_name_must_not_appear_;
  e_sub_cert_locality_name_must_not_appear_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_locality_name_must_not_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
  return e_sub_cert_locality_name_must_not_appear_ != NULL ? *e_sub_cert_locality_name_must_not_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_locality_name_must_not_appear() {
  
  if (e_sub_cert_locality_name_must_not_appear_ == NULL) {
    e_sub_cert_locality_name_must_not_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
  return e_sub_cert_locality_name_must_not_appear_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_locality_name_must_not_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_locality_name_must_not_appear_;
  e_sub_cert_locality_name_must_not_appear_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_locality_name_must_not_appear(::zsearch::LintResult* e_sub_cert_locality_name_must_not_appear) {
  delete e_sub_cert_locality_name_must_not_appear_;
  e_sub_cert_locality_name_must_not_appear_ = e_sub_cert_locality_name_must_not_appear;
  if (e_sub_cert_locality_name_must_not_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
}

// .zsearch.LintResult e_sub_cert_country_name_must_appear = 216;
bool Lints::has_e_sub_cert_country_name_must_appear() const {
  return this != internal_default_instance() && e_sub_cert_country_name_must_appear_ != NULL;
}
void Lints::clear_e_sub_cert_country_name_must_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_country_name_must_appear_ != NULL) delete e_sub_cert_country_name_must_appear_;
  e_sub_cert_country_name_must_appear_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_country_name_must_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_country_name_must_appear)
  return e_sub_cert_country_name_must_appear_ != NULL ? *e_sub_cert_country_name_must_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_country_name_must_appear() {
  
  if (e_sub_cert_country_name_must_appear_ == NULL) {
    e_sub_cert_country_name_must_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_country_name_must_appear)
  return e_sub_cert_country_name_must_appear_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_country_name_must_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_country_name_must_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_country_name_must_appear_;
  e_sub_cert_country_name_must_appear_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_country_name_must_appear(::zsearch::LintResult* e_sub_cert_country_name_must_appear) {
  delete e_sub_cert_country_name_must_appear_;
  e_sub_cert_country_name_must_appear_ = e_sub_cert_country_name_must_appear;
  if (e_sub_cert_country_name_must_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_country_name_must_appear)
}

// .zsearch.LintResult e_dnsname_bad_character_in_label = 217;
bool Lints::has_e_dnsname_bad_character_in_label() const {
  return this != internal_default_instance() && e_dnsname_bad_character_in_label_ != NULL;
}
void Lints::clear_e_dnsname_bad_character_in_label() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_bad_character_in_label_ != NULL) delete e_dnsname_bad_character_in_label_;
  e_dnsname_bad_character_in_label_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_bad_character_in_label() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_bad_character_in_label)
  return e_dnsname_bad_character_in_label_ != NULL ? *e_dnsname_bad_character_in_label_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_bad_character_in_label() {
  
  if (e_dnsname_bad_character_in_label_ == NULL) {
    e_dnsname_bad_character_in_label_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_bad_character_in_label)
  return e_dnsname_bad_character_in_label_;
}
::zsearch::LintResult* Lints::release_e_dnsname_bad_character_in_label() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_bad_character_in_label)
  
  ::zsearch::LintResult* temp = e_dnsname_bad_character_in_label_;
  e_dnsname_bad_character_in_label_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_bad_character_in_label(::zsearch::LintResult* e_dnsname_bad_character_in_label) {
  delete e_dnsname_bad_character_in_label_;
  e_dnsname_bad_character_in_label_ = e_dnsname_bad_character_in_label;
  if (e_dnsname_bad_character_in_label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_bad_character_in_label)
}

// .zsearch.LintResult e_sub_ca_must_not_contain_any_policy = 218;
bool Lints::has_e_sub_ca_must_not_contain_any_policy() const {
  return this != internal_default_instance() && e_sub_ca_must_not_contain_any_policy_ != NULL;
}
void Lints::clear_e_sub_ca_must_not_contain_any_policy() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_must_not_contain_any_policy_ != NULL) delete e_sub_ca_must_not_contain_any_policy_;
  e_sub_ca_must_not_contain_any_policy_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_must_not_contain_any_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
  return e_sub_ca_must_not_contain_any_policy_ != NULL ? *e_sub_ca_must_not_contain_any_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_must_not_contain_any_policy() {
  
  if (e_sub_ca_must_not_contain_any_policy_ == NULL) {
    e_sub_ca_must_not_contain_any_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
  return e_sub_ca_must_not_contain_any_policy_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_must_not_contain_any_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
  
  ::zsearch::LintResult* temp = e_sub_ca_must_not_contain_any_policy_;
  e_sub_ca_must_not_contain_any_policy_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_must_not_contain_any_policy(::zsearch::LintResult* e_sub_ca_must_not_contain_any_policy) {
  delete e_sub_ca_must_not_contain_any_policy_;
  e_sub_ca_must_not_contain_any_policy_ = e_sub_ca_must_not_contain_any_policy;
  if (e_sub_ca_must_not_contain_any_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
}

// .zsearch.LintResult e_international_dns_name_not_nfkc = 219;
bool Lints::has_e_international_dns_name_not_nfkc() const {
  return this != internal_default_instance() && e_international_dns_name_not_nfkc_ != NULL;
}
void Lints::clear_e_international_dns_name_not_nfkc() {
  if (GetArenaNoVirtual() == NULL && e_international_dns_name_not_nfkc_ != NULL) delete e_international_dns_name_not_nfkc_;
  e_international_dns_name_not_nfkc_ = NULL;
}
const ::zsearch::LintResult& Lints::e_international_dns_name_not_nfkc() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_international_dns_name_not_nfkc)
  return e_international_dns_name_not_nfkc_ != NULL ? *e_international_dns_name_not_nfkc_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_international_dns_name_not_nfkc() {
  
  if (e_international_dns_name_not_nfkc_ == NULL) {
    e_international_dns_name_not_nfkc_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_international_dns_name_not_nfkc)
  return e_international_dns_name_not_nfkc_;
}
::zsearch::LintResult* Lints::release_e_international_dns_name_not_nfkc() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_international_dns_name_not_nfkc)
  
  ::zsearch::LintResult* temp = e_international_dns_name_not_nfkc_;
  e_international_dns_name_not_nfkc_ = NULL;
  return temp;
}
void Lints::set_allocated_e_international_dns_name_not_nfkc(::zsearch::LintResult* e_international_dns_name_not_nfkc) {
  delete e_international_dns_name_not_nfkc_;
  e_international_dns_name_not_nfkc_ = e_international_dns_name_not_nfkc;
  if (e_international_dns_name_not_nfkc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_international_dns_name_not_nfkc)
}

// .zsearch.LintResult e_sub_cert_aia_marked_critical = 220;
bool Lints::has_e_sub_cert_aia_marked_critical() const {
  return this != internal_default_instance() && e_sub_cert_aia_marked_critical_ != NULL;
}
void Lints::clear_e_sub_cert_aia_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_marked_critical_ != NULL) delete e_sub_cert_aia_marked_critical_;
  e_sub_cert_aia_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_aia_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_aia_marked_critical)
  return e_sub_cert_aia_marked_critical_ != NULL ? *e_sub_cert_aia_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_aia_marked_critical() {
  
  if (e_sub_cert_aia_marked_critical_ == NULL) {
    e_sub_cert_aia_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_aia_marked_critical)
  return e_sub_cert_aia_marked_critical_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_aia_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_aia_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_cert_aia_marked_critical_;
  e_sub_cert_aia_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_aia_marked_critical(::zsearch::LintResult* e_sub_cert_aia_marked_critical) {
  delete e_sub_cert_aia_marked_critical_;
  e_sub_cert_aia_marked_critical_ = e_sub_cert_aia_marked_critical;
  if (e_sub_cert_aia_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_aia_marked_critical)
}

// .zsearch.LintResult e_ca_is_ca = 221;
bool Lints::has_e_ca_is_ca() const {
  return this != internal_default_instance() && e_ca_is_ca_ != NULL;
}
void Lints::clear_e_ca_is_ca() {
  if (GetArenaNoVirtual() == NULL && e_ca_is_ca_ != NULL) delete e_ca_is_ca_;
  e_ca_is_ca_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ca_is_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_is_ca)
  return e_ca_is_ca_ != NULL ? *e_ca_is_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ca_is_ca() {
  
  if (e_ca_is_ca_ == NULL) {
    e_ca_is_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_is_ca)
  return e_ca_is_ca_;
}
::zsearch::LintResult* Lints::release_e_ca_is_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_is_ca)
  
  ::zsearch::LintResult* temp = e_ca_is_ca_;
  e_ca_is_ca_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ca_is_ca(::zsearch::LintResult* e_ca_is_ca) {
  delete e_ca_is_ca_;
  e_ca_is_ca_ = e_ca_is_ca;
  if (e_ca_is_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_is_ca)
}

// .zsearch.LintResult e_sub_cert_street_address_should_not_exist = 222;
bool Lints::has_e_sub_cert_street_address_should_not_exist() const {
  return this != internal_default_instance() && e_sub_cert_street_address_should_not_exist_ != NULL;
}
void Lints::clear_e_sub_cert_street_address_should_not_exist() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_street_address_should_not_exist_ != NULL) delete e_sub_cert_street_address_should_not_exist_;
  e_sub_cert_street_address_should_not_exist_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_street_address_should_not_exist() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
  return e_sub_cert_street_address_should_not_exist_ != NULL ? *e_sub_cert_street_address_should_not_exist_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_street_address_should_not_exist() {
  
  if (e_sub_cert_street_address_should_not_exist_ == NULL) {
    e_sub_cert_street_address_should_not_exist_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
  return e_sub_cert_street_address_should_not_exist_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_street_address_should_not_exist() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
  
  ::zsearch::LintResult* temp = e_sub_cert_street_address_should_not_exist_;
  e_sub_cert_street_address_should_not_exist_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_street_address_should_not_exist(::zsearch::LintResult* e_sub_cert_street_address_should_not_exist) {
  delete e_sub_cert_street_address_should_not_exist_;
  e_sub_cert_street_address_should_not_exist_ = e_sub_cert_street_address_should_not_exist;
  if (e_sub_cert_street_address_should_not_exist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
}

// .zsearch.LintResult e_sub_ca_eku_missing = 223;
bool Lints::has_e_sub_ca_eku_missing() const {
  return this != internal_default_instance() && e_sub_ca_eku_missing_ != NULL;
}
void Lints::clear_e_sub_ca_eku_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_eku_missing_ != NULL) delete e_sub_ca_eku_missing_;
  e_sub_ca_eku_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_eku_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_eku_missing)
  return e_sub_ca_eku_missing_ != NULL ? *e_sub_ca_eku_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_eku_missing() {
  
  if (e_sub_ca_eku_missing_ == NULL) {
    e_sub_ca_eku_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_eku_missing)
  return e_sub_ca_eku_missing_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_eku_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_eku_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_eku_missing_;
  e_sub_ca_eku_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_eku_missing(::zsearch::LintResult* e_sub_ca_eku_missing) {
  delete e_sub_ca_eku_missing_;
  e_sub_ca_eku_missing_ = e_sub_ca_eku_missing;
  if (e_sub_ca_eku_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_eku_missing)
}

// .zsearch.LintResult e_sub_cert_province_must_not_appear = 224;
bool Lints::has_e_sub_cert_province_must_not_appear() const {
  return this != internal_default_instance() && e_sub_cert_province_must_not_appear_ != NULL;
}
void Lints::clear_e_sub_cert_province_must_not_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_province_must_not_appear_ != NULL) delete e_sub_cert_province_must_not_appear_;
  e_sub_cert_province_must_not_appear_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_province_must_not_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_province_must_not_appear)
  return e_sub_cert_province_must_not_appear_ != NULL ? *e_sub_cert_province_must_not_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_province_must_not_appear() {
  
  if (e_sub_cert_province_must_not_appear_ == NULL) {
    e_sub_cert_province_must_not_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_province_must_not_appear)
  return e_sub_cert_province_must_not_appear_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_province_must_not_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_province_must_not_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_province_must_not_appear_;
  e_sub_cert_province_must_not_appear_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_province_must_not_appear(::zsearch::LintResult* e_sub_cert_province_must_not_appear) {
  delete e_sub_cert_province_must_not_appear_;
  e_sub_cert_province_must_not_appear_ = e_sub_cert_province_must_not_appear;
  if (e_sub_cert_province_must_not_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_province_must_not_appear)
}

// .zsearch.LintResult e_dnsname_underscore_in_sld = 225;
bool Lints::has_e_dnsname_underscore_in_sld() const {
  return this != internal_default_instance() && e_dnsname_underscore_in_sld_ != NULL;
}
void Lints::clear_e_dnsname_underscore_in_sld() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_underscore_in_sld_ != NULL) delete e_dnsname_underscore_in_sld_;
  e_dnsname_underscore_in_sld_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_underscore_in_sld() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_underscore_in_sld)
  return e_dnsname_underscore_in_sld_ != NULL ? *e_dnsname_underscore_in_sld_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_underscore_in_sld() {
  
  if (e_dnsname_underscore_in_sld_ == NULL) {
    e_dnsname_underscore_in_sld_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_underscore_in_sld)
  return e_dnsname_underscore_in_sld_;
}
::zsearch::LintResult* Lints::release_e_dnsname_underscore_in_sld() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_underscore_in_sld)
  
  ::zsearch::LintResult* temp = e_dnsname_underscore_in_sld_;
  e_dnsname_underscore_in_sld_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_underscore_in_sld(::zsearch::LintResult* e_dnsname_underscore_in_sld) {
  delete e_dnsname_underscore_in_sld_;
  e_dnsname_underscore_in_sld_ = e_dnsname_underscore_in_sld;
  if (e_dnsname_underscore_in_sld) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_underscore_in_sld)
}

// .zsearch.LintResult e_sub_ca_eku_name_constraints = 226;
bool Lints::has_e_sub_ca_eku_name_constraints() const {
  return this != internal_default_instance() && e_sub_ca_eku_name_constraints_ != NULL;
}
void Lints::clear_e_sub_ca_eku_name_constraints() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_eku_name_constraints_ != NULL) delete e_sub_ca_eku_name_constraints_;
  e_sub_ca_eku_name_constraints_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_eku_name_constraints() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_eku_name_constraints)
  return e_sub_ca_eku_name_constraints_ != NULL ? *e_sub_ca_eku_name_constraints_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_eku_name_constraints() {
  
  if (e_sub_ca_eku_name_constraints_ == NULL) {
    e_sub_ca_eku_name_constraints_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_eku_name_constraints)
  return e_sub_ca_eku_name_constraints_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_eku_name_constraints() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_eku_name_constraints)
  
  ::zsearch::LintResult* temp = e_sub_ca_eku_name_constraints_;
  e_sub_ca_eku_name_constraints_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_eku_name_constraints(::zsearch::LintResult* e_sub_ca_eku_name_constraints) {
  delete e_sub_ca_eku_name_constraints_;
  e_sub_ca_eku_name_constraints_ = e_sub_ca_eku_name_constraints;
  if (e_sub_ca_eku_name_constraints) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_eku_name_constraints)
}

// .zsearch.LintResult e_sub_cert_not_is_ca = 227;
bool Lints::has_e_sub_cert_not_is_ca() const {
  return this != internal_default_instance() && e_sub_cert_not_is_ca_ != NULL;
}
void Lints::clear_e_sub_cert_not_is_ca() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_not_is_ca_ != NULL) delete e_sub_cert_not_is_ca_;
  e_sub_cert_not_is_ca_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_not_is_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_not_is_ca)
  return e_sub_cert_not_is_ca_ != NULL ? *e_sub_cert_not_is_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_not_is_ca() {
  
  if (e_sub_cert_not_is_ca_ == NULL) {
    e_sub_cert_not_is_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_not_is_ca)
  return e_sub_cert_not_is_ca_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_not_is_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_not_is_ca)
  
  ::zsearch::LintResult* temp = e_sub_cert_not_is_ca_;
  e_sub_cert_not_is_ca_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_not_is_ca(::zsearch::LintResult* e_sub_cert_not_is_ca) {
  delete e_sub_cert_not_is_ca_;
  e_sub_cert_not_is_ca_ = e_sub_cert_not_is_ca;
  if (e_sub_cert_not_is_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_not_is_ca)
}

// .zsearch.LintResult e_dsa_unique_correct_representation = 228;
bool Lints::has_e_dsa_unique_correct_representation() const {
  return this != internal_default_instance() && e_dsa_unique_correct_representation_ != NULL;
}
void Lints::clear_e_dsa_unique_correct_representation() {
  if (GetArenaNoVirtual() == NULL && e_dsa_unique_correct_representation_ != NULL) delete e_dsa_unique_correct_representation_;
  e_dsa_unique_correct_representation_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dsa_unique_correct_representation() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_unique_correct_representation)
  return e_dsa_unique_correct_representation_ != NULL ? *e_dsa_unique_correct_representation_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dsa_unique_correct_representation() {
  
  if (e_dsa_unique_correct_representation_ == NULL) {
    e_dsa_unique_correct_representation_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_unique_correct_representation)
  return e_dsa_unique_correct_representation_;
}
::zsearch::LintResult* Lints::release_e_dsa_unique_correct_representation() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_unique_correct_representation)
  
  ::zsearch::LintResult* temp = e_dsa_unique_correct_representation_;
  e_dsa_unique_correct_representation_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dsa_unique_correct_representation(::zsearch::LintResult* e_dsa_unique_correct_representation) {
  delete e_dsa_unique_correct_representation_;
  e_dsa_unique_correct_representation_ = e_dsa_unique_correct_representation;
  if (e_dsa_unique_correct_representation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_unique_correct_representation)
}

// .zsearch.LintResult e_sub_cert_province_must_appear = 229;
bool Lints::has_e_sub_cert_province_must_appear() const {
  return this != internal_default_instance() && e_sub_cert_province_must_appear_ != NULL;
}
void Lints::clear_e_sub_cert_province_must_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_province_must_appear_ != NULL) delete e_sub_cert_province_must_appear_;
  e_sub_cert_province_must_appear_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_province_must_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_province_must_appear)
  return e_sub_cert_province_must_appear_ != NULL ? *e_sub_cert_province_must_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_province_must_appear() {
  
  if (e_sub_cert_province_must_appear_ == NULL) {
    e_sub_cert_province_must_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_province_must_appear)
  return e_sub_cert_province_must_appear_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_province_must_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_province_must_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_province_must_appear_;
  e_sub_cert_province_must_appear_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_province_must_appear(::zsearch::LintResult* e_sub_cert_province_must_appear) {
  delete e_sub_cert_province_must_appear_;
  e_sub_cert_province_must_appear_ = e_sub_cert_province_must_appear;
  if (e_sub_cert_province_must_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_province_must_appear)
}

// .zsearch.LintResult e_root_ca_key_usage_must_be_critical = 230;
bool Lints::has_e_root_ca_key_usage_must_be_critical() const {
  return this != internal_default_instance() && e_root_ca_key_usage_must_be_critical_ != NULL;
}
void Lints::clear_e_root_ca_key_usage_must_be_critical() {
  if (GetArenaNoVirtual() == NULL && e_root_ca_key_usage_must_be_critical_ != NULL) delete e_root_ca_key_usage_must_be_critical_;
  e_root_ca_key_usage_must_be_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_root_ca_key_usage_must_be_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
  return e_root_ca_key_usage_must_be_critical_ != NULL ? *e_root_ca_key_usage_must_be_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_root_ca_key_usage_must_be_critical() {
  
  if (e_root_ca_key_usage_must_be_critical_ == NULL) {
    e_root_ca_key_usage_must_be_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
  return e_root_ca_key_usage_must_be_critical_;
}
::zsearch::LintResult* Lints::release_e_root_ca_key_usage_must_be_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
  
  ::zsearch::LintResult* temp = e_root_ca_key_usage_must_be_critical_;
  e_root_ca_key_usage_must_be_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_root_ca_key_usage_must_be_critical(::zsearch::LintResult* e_root_ca_key_usage_must_be_critical) {
  delete e_root_ca_key_usage_must_be_critical_;
  e_root_ca_key_usage_must_be_critical_ = e_root_ca_key_usage_must_be_critical;
  if (e_root_ca_key_usage_must_be_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
}

// .zsearch.LintResult e_ext_san_dns_name_too_long = 231;
bool Lints::has_e_ext_san_dns_name_too_long() const {
  return this != internal_default_instance() && e_ext_san_dns_name_too_long_ != NULL;
}
void Lints::clear_e_ext_san_dns_name_too_long() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_dns_name_too_long_ != NULL) delete e_ext_san_dns_name_too_long_;
  e_ext_san_dns_name_too_long_ = NULL;
}
const ::zsearch::LintResult& Lints::e_ext_san_dns_name_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_dns_name_too_long)
  return e_ext_san_dns_name_too_long_ != NULL ? *e_ext_san_dns_name_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_ext_san_dns_name_too_long() {
  
  if (e_ext_san_dns_name_too_long_ == NULL) {
    e_ext_san_dns_name_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_dns_name_too_long)
  return e_ext_san_dns_name_too_long_;
}
::zsearch::LintResult* Lints::release_e_ext_san_dns_name_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_dns_name_too_long)
  
  ::zsearch::LintResult* temp = e_ext_san_dns_name_too_long_;
  e_ext_san_dns_name_too_long_ = NULL;
  return temp;
}
void Lints::set_allocated_e_ext_san_dns_name_too_long(::zsearch::LintResult* e_ext_san_dns_name_too_long) {
  delete e_ext_san_dns_name_too_long_;
  e_ext_san_dns_name_too_long_ = e_ext_san_dns_name_too_long;
  if (e_ext_san_dns_name_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_dns_name_too_long)
}

// .zsearch.LintResult e_dsa_params_missing = 232;
bool Lints::has_e_dsa_params_missing() const {
  return this != internal_default_instance() && e_dsa_params_missing_ != NULL;
}
void Lints::clear_e_dsa_params_missing() {
  if (GetArenaNoVirtual() == NULL && e_dsa_params_missing_ != NULL) delete e_dsa_params_missing_;
  e_dsa_params_missing_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dsa_params_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_params_missing)
  return e_dsa_params_missing_ != NULL ? *e_dsa_params_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dsa_params_missing() {
  
  if (e_dsa_params_missing_ == NULL) {
    e_dsa_params_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_params_missing)
  return e_dsa_params_missing_;
}
::zsearch::LintResult* Lints::release_e_dsa_params_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_params_missing)
  
  ::zsearch::LintResult* temp = e_dsa_params_missing_;
  e_dsa_params_missing_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dsa_params_missing(::zsearch::LintResult* e_dsa_params_missing) {
  delete e_dsa_params_missing_;
  e_dsa_params_missing_ = e_dsa_params_missing;
  if (e_dsa_params_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_params_missing)
}

// .zsearch.LintResult e_sub_ca_aia_marked_critical = 233;
bool Lints::has_e_sub_ca_aia_marked_critical() const {
  return this != internal_default_instance() && e_sub_ca_aia_marked_critical_ != NULL;
}
void Lints::clear_e_sub_ca_aia_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_marked_critical_ != NULL) delete e_sub_ca_aia_marked_critical_;
  e_sub_ca_aia_marked_critical_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_ca_aia_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_aia_marked_critical)
  return e_sub_ca_aia_marked_critical_ != NULL ? *e_sub_ca_aia_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_ca_aia_marked_critical() {
  
  if (e_sub_ca_aia_marked_critical_ == NULL) {
    e_sub_ca_aia_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_aia_marked_critical)
  return e_sub_ca_aia_marked_critical_;
}
::zsearch::LintResult* Lints::release_e_sub_ca_aia_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_aia_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_ca_aia_marked_critical_;
  e_sub_ca_aia_marked_critical_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_ca_aia_marked_critical(::zsearch::LintResult* e_sub_ca_aia_marked_critical) {
  delete e_sub_ca_aia_marked_critical_;
  e_sub_ca_aia_marked_critical_ = e_sub_ca_aia_marked_critical;
  if (e_sub_ca_aia_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_aia_marked_critical)
}

// .zsearch.LintResult e_sub_cert_given_name_surname_contains_correct_policy = 234;
bool Lints::has_e_sub_cert_given_name_surname_contains_correct_policy() const {
  return this != internal_default_instance() && e_sub_cert_given_name_surname_contains_correct_policy_ != NULL;
}
void Lints::clear_e_sub_cert_given_name_surname_contains_correct_policy() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_given_name_surname_contains_correct_policy_ != NULL) delete e_sub_cert_given_name_surname_contains_correct_policy_;
  e_sub_cert_given_name_surname_contains_correct_policy_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_given_name_surname_contains_correct_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
  return e_sub_cert_given_name_surname_contains_correct_policy_ != NULL ? *e_sub_cert_given_name_surname_contains_correct_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_given_name_surname_contains_correct_policy() {
  
  if (e_sub_cert_given_name_surname_contains_correct_policy_ == NULL) {
    e_sub_cert_given_name_surname_contains_correct_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
  return e_sub_cert_given_name_surname_contains_correct_policy_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_given_name_surname_contains_correct_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
  
  ::zsearch::LintResult* temp = e_sub_cert_given_name_surname_contains_correct_policy_;
  e_sub_cert_given_name_surname_contains_correct_policy_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_given_name_surname_contains_correct_policy(::zsearch::LintResult* e_sub_cert_given_name_surname_contains_correct_policy) {
  delete e_sub_cert_given_name_surname_contains_correct_policy_;
  e_sub_cert_given_name_surname_contains_correct_policy_ = e_sub_cert_given_name_surname_contains_correct_policy;
  if (e_sub_cert_given_name_surname_contains_correct_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
}

// .zsearch.LintResult e_sub_cert_postal_code_must_not_appear = 235;
bool Lints::has_e_sub_cert_postal_code_must_not_appear() const {
  return this != internal_default_instance() && e_sub_cert_postal_code_must_not_appear_ != NULL;
}
void Lints::clear_e_sub_cert_postal_code_must_not_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_postal_code_must_not_appear_ != NULL) delete e_sub_cert_postal_code_must_not_appear_;
  e_sub_cert_postal_code_must_not_appear_ = NULL;
}
const ::zsearch::LintResult& Lints::e_sub_cert_postal_code_must_not_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
  return e_sub_cert_postal_code_must_not_appear_ != NULL ? *e_sub_cert_postal_code_must_not_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_sub_cert_postal_code_must_not_appear() {
  
  if (e_sub_cert_postal_code_must_not_appear_ == NULL) {
    e_sub_cert_postal_code_must_not_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
  return e_sub_cert_postal_code_must_not_appear_;
}
::zsearch::LintResult* Lints::release_e_sub_cert_postal_code_must_not_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_postal_code_must_not_appear_;
  e_sub_cert_postal_code_must_not_appear_ = NULL;
  return temp;
}
void Lints::set_allocated_e_sub_cert_postal_code_must_not_appear(::zsearch::LintResult* e_sub_cert_postal_code_must_not_appear) {
  delete e_sub_cert_postal_code_must_not_appear_;
  e_sub_cert_postal_code_must_not_appear_ = e_sub_cert_postal_code_must_not_appear;
  if (e_sub_cert_postal_code_must_not_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
}

// .zsearch.LintResult e_dnsname_not_valid_tld = 236;
bool Lints::has_e_dnsname_not_valid_tld() const {
  return this != internal_default_instance() && e_dnsname_not_valid_tld_ != NULL;
}
void Lints::clear_e_dnsname_not_valid_tld() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_not_valid_tld_ != NULL) delete e_dnsname_not_valid_tld_;
  e_dnsname_not_valid_tld_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_not_valid_tld() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_not_valid_tld)
  return e_dnsname_not_valid_tld_ != NULL ? *e_dnsname_not_valid_tld_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_not_valid_tld() {
  
  if (e_dnsname_not_valid_tld_ == NULL) {
    e_dnsname_not_valid_tld_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_not_valid_tld)
  return e_dnsname_not_valid_tld_;
}
::zsearch::LintResult* Lints::release_e_dnsname_not_valid_tld() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_not_valid_tld)
  
  ::zsearch::LintResult* temp = e_dnsname_not_valid_tld_;
  e_dnsname_not_valid_tld_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_not_valid_tld(::zsearch::LintResult* e_dnsname_not_valid_tld) {
  delete e_dnsname_not_valid_tld_;
  e_dnsname_not_valid_tld_ = e_dnsname_not_valid_tld;
  if (e_dnsname_not_valid_tld) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_not_valid_tld)
}

// .zsearch.LintResult n_contains_redacted_dnsname = 237;
bool Lints::has_n_contains_redacted_dnsname() const {
  return this != internal_default_instance() && n_contains_redacted_dnsname_ != NULL;
}
void Lints::clear_n_contains_redacted_dnsname() {
  if (GetArenaNoVirtual() == NULL && n_contains_redacted_dnsname_ != NULL) delete n_contains_redacted_dnsname_;
  n_contains_redacted_dnsname_ = NULL;
}
const ::zsearch::LintResult& Lints::n_contains_redacted_dnsname() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_contains_redacted_dnsname)
  return n_contains_redacted_dnsname_ != NULL ? *n_contains_redacted_dnsname_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_n_contains_redacted_dnsname() {
  
  if (n_contains_redacted_dnsname_ == NULL) {
    n_contains_redacted_dnsname_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_contains_redacted_dnsname)
  return n_contains_redacted_dnsname_;
}
::zsearch::LintResult* Lints::release_n_contains_redacted_dnsname() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_contains_redacted_dnsname)
  
  ::zsearch::LintResult* temp = n_contains_redacted_dnsname_;
  n_contains_redacted_dnsname_ = NULL;
  return temp;
}
void Lints::set_allocated_n_contains_redacted_dnsname(::zsearch::LintResult* n_contains_redacted_dnsname) {
  delete n_contains_redacted_dnsname_;
  n_contains_redacted_dnsname_ = n_contains_redacted_dnsname;
  if (n_contains_redacted_dnsname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_contains_redacted_dnsname)
}

// .zsearch.LintResult e_dnsname_contains_bare_iana_suffix = 238;
bool Lints::has_e_dnsname_contains_bare_iana_suffix() const {
  return this != internal_default_instance() && e_dnsname_contains_bare_iana_suffix_ != NULL;
}
void Lints::clear_e_dnsname_contains_bare_iana_suffix() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_contains_bare_iana_suffix_ != NULL) delete e_dnsname_contains_bare_iana_suffix_;
  e_dnsname_contains_bare_iana_suffix_ = NULL;
}
const ::zsearch::LintResult& Lints::e_dnsname_contains_bare_iana_suffix() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
  return e_dnsname_contains_bare_iana_suffix_ != NULL ? *e_dnsname_contains_bare_iana_suffix_
                         : *::zsearch::LintResult::internal_default_instance();
}
::zsearch::LintResult* Lints::mutable_e_dnsname_contains_bare_iana_suffix() {
  
  if (e_dnsname_contains_bare_iana_suffix_ == NULL) {
    e_dnsname_contains_bare_iana_suffix_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
  return e_dnsname_contains_bare_iana_suffix_;
}
::zsearch::LintResult* Lints::release_e_dnsname_contains_bare_iana_suffix() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
  
  ::zsearch::LintResult* temp = e_dnsname_contains_bare_iana_suffix_;
  e_dnsname_contains_bare_iana_suffix_ = NULL;
  return temp;
}
void Lints::set_allocated_e_dnsname_contains_bare_iana_suffix(::zsearch::LintResult* e_dnsname_contains_bare_iana_suffix) {
  delete e_dnsname_contains_bare_iana_suffix_;
  e_dnsname_contains_bare_iana_suffix_ = e_dnsname_contains_bare_iana_suffix;
  if (e_dnsname_contains_bare_iana_suffix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zsearch

// @@protoc_insertion_point(global_scope)
