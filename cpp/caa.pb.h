// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: caa.proto

#ifndef PROTOBUF_caa_2eproto__INCLUDED
#define PROTOBUF_caa_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace zsearch {
class CAALookup;
class CAALookupDefaultTypeInternal;
extern CAALookupDefaultTypeInternal _CAALookup_default_instance_;
class CAARecord;
class CAARecordDefaultTypeInternal;
extern CAARecordDefaultTypeInternal _CAARecord_default_instance_;
class CAATagValue;
class CAATagValueDefaultTypeInternal;
extern CAATagValueDefaultTypeInternal _CAATagValue_default_instance_;
}  // namespace zsearch

namespace zsearch {

namespace protobuf_caa_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_caa_2eproto

enum CAAResult {
  CAA_RESULT_RESERVED = 0,
  CAA_RESULT_VALIDATION_SUCCESS = 1,
  CAA_RESULT_VALIDATION_FAIL = 2,
  CAA_RESULT_VALIDATION_SKIPPED = 3,
  CAA_RESULT_VALIDATION_NOT_REQUIRED = 4,
  CAAResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CAAResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CAAResult_IsValid(int value);
const CAAResult CAAResult_MIN = CAA_RESULT_RESERVED;
const CAAResult CAAResult_MAX = CAA_RESULT_VALIDATION_NOT_REQUIRED;
const int CAAResult_ARRAYSIZE = CAAResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CAAResult_descriptor();
inline const ::std::string& CAAResult_Name(CAAResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CAAResult_descriptor(), value);
}
inline bool CAAResult_Parse(
    const ::std::string& name, CAAResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CAAResult>(
    CAAResult_descriptor(), name, value);
}
enum CAADomainStatus {
  CAA_DOMAIN_STATUS_RESERVED = 0,
  CAA_DOMAIN_STATUS_VALIDATION_SUCCESS = 1,
  CAA_DOMAIN_STATUS_VALIDATION_FAIL = 2,
  CAA_DOMAIN_STATUS_VALIDATION_SKIPPED = 3,
  CAA_DOMAIN_STATUS_DNS_ERROR = 5,
  CAA_DOMAIN_STATUS_DNS_ERROR_SERVFAIL = 6,
  CAA_DOMAIN_STATUS_DNS_ERROR_AUTHFAIL = 7,
  CAA_DOMAIN_STATUS_DNS_ERROR_NO_RECORD = 8,
  CAA_DOMAIN_STATUS_DNS_ERROR_BLACKLIST = 9,
  CAA_DOMAIN_STATUS_DNS_ERROR_NO_OUTPUT = 10,
  CAA_DOMAIN_STATUS_DNS_ERROR_NO_ANSWER = 11,
  CAA_DOMAIN_STATUS_DNS_ERROR_ILLEGAL_INPUT = 12,
  CAA_DOMAIN_STATUS_DNS_ERROR_TIMEOUT = 13,
  CAA_DOMAIN_STATUS_DNS_ERROR_ITER_TIMEOUT = 14,
  CAA_DOMAIN_STATUS_DNS_ERROR_TEMPORARY = 15,
  CAA_DOMAIN_STATUS_DNS_ERROR_TRUNCATED = 16,
  CAADomainStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CAADomainStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CAADomainStatus_IsValid(int value);
const CAADomainStatus CAADomainStatus_MIN = CAA_DOMAIN_STATUS_RESERVED;
const CAADomainStatus CAADomainStatus_MAX = CAA_DOMAIN_STATUS_DNS_ERROR_TRUNCATED;
const int CAADomainStatus_ARRAYSIZE = CAADomainStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CAADomainStatus_descriptor();
inline const ::std::string& CAADomainStatus_Name(CAADomainStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CAADomainStatus_descriptor(), value);
}
inline bool CAADomainStatus_Parse(
    const ::std::string& name, CAADomainStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CAADomainStatus>(
    CAADomainStatus_descriptor(), name, value);
}
// ===================================================================

class CAATagValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.CAATagValue) */ {
 public:
  CAATagValue();
  virtual ~CAATagValue();

  CAATagValue(const CAATagValue& from);

  inline CAATagValue& operator=(const CAATagValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAATagValue& default_instance();

  static inline const CAATagValue* internal_default_instance() {
    return reinterpret_cast<const CAATagValue*>(
               &_CAATagValue_default_instance_);
  }

  void Swap(CAATagValue* other);

  // implements Message ----------------------------------------------

  inline CAATagValue* New() const PROTOBUF_FINAL { return New(NULL); }

  CAATagValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAATagValue& from);
  void MergeFrom(const CAATagValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAATagValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string tag = 2;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint32 flag = 1;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // uint32 ttl = 4;
  void clear_ttl();
  static const int kTtlFieldNumber = 4;
  ::google::protobuf::uint32 ttl() const;
  void set_ttl(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.CAATagValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 ttl_;
  mutable int _cached_size_;
  friend struct  protobuf_caa_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CAARecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.CAARecord) */ {
 public:
  CAARecord();
  virtual ~CAARecord();

  CAARecord(const CAARecord& from);

  inline CAARecord& operator=(const CAARecord& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAARecord& default_instance();

  static inline const CAARecord* internal_default_instance() {
    return reinterpret_cast<const CAARecord*>(
               &_CAARecord_default_instance_);
  }

  void Swap(CAARecord* other);

  // implements Message ----------------------------------------------

  inline CAARecord* New() const PROTOBUF_FINAL { return New(NULL); }

  CAARecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAARecord& from);
  void MergeFrom(const CAARecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAARecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zsearch.CAATagValue values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  const ::zsearch::CAATagValue& values(int index) const;
  ::zsearch::CAATagValue* mutable_values(int index);
  ::zsearch::CAATagValue* add_values();
  ::google::protobuf::RepeatedPtrField< ::zsearch::CAATagValue >*
      mutable_values();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::CAATagValue >&
      values() const;

  // string domain = 1;
  void clear_domain();
  static const int kDomainFieldNumber = 1;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // .zsearch.CAADomainStatus result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::zsearch::CAADomainStatus result() const;
  void set_result(::zsearch::CAADomainStatus value);

  // @@protoc_insertion_point(class_scope:zsearch.CAARecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::CAATagValue > values_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  int result_;
  mutable int _cached_size_;
  friend struct  protobuf_caa_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CAALookup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.CAALookup) */ {
 public:
  CAALookup();
  virtual ~CAALookup();

  CAALookup(const CAALookup& from);

  inline CAALookup& operator=(const CAALookup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAALookup& default_instance();

  static inline const CAALookup* internal_default_instance() {
    return reinterpret_cast<const CAALookup*>(
               &_CAALookup_default_instance_);
  }

  void Swap(CAALookup* other);

  // implements Message ----------------------------------------------

  inline CAALookup* New() const PROTOBUF_FINAL { return New(NULL); }

  CAALookup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAALookup& from);
  void MergeFrom(const CAALookup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAALookup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zsearch.CAARecord records = 2;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 2;
  const ::zsearch::CAARecord& records(int index) const;
  ::zsearch::CAARecord* mutable_records(int index);
  ::zsearch::CAARecord* add_records();
  ::google::protobuf::RepeatedPtrField< ::zsearch::CAARecord >*
      mutable_records();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::CAARecord >&
      records() const;

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // .zsearch.CAAResult result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::zsearch::CAAResult result() const;
  void set_result(::zsearch::CAAResult value);

  // @@protoc_insertion_point(class_scope:zsearch.CAALookup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::CAARecord > records_;
  ::google::protobuf::int64 timestamp_;
  int result_;
  mutable int _cached_size_;
  friend struct  protobuf_caa_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CAATagValue

// uint32 flag = 1;
inline void CAATagValue::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 CAATagValue::flag() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.flag)
  return flag_;
}
inline void CAATagValue::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.flag)
}

// string tag = 2;
inline void CAATagValue::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CAATagValue::tag() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.tag)
  return tag_.GetNoArena();
}
inline void CAATagValue::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.tag)
}
#if LANG_CXX11
inline void CAATagValue::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.CAATagValue.tag)
}
#endif
inline void CAATagValue::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.CAATagValue.tag)
}
inline void CAATagValue::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.CAATagValue.tag)
}
inline ::std::string* CAATagValue::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.CAATagValue.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CAATagValue::release_tag() {
  // @@protoc_insertion_point(field_release:zsearch.CAATagValue.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CAATagValue::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:zsearch.CAATagValue.tag)
}

// string value = 3;
inline void CAATagValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CAATagValue::value() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.value)
  return value_.GetNoArena();
}
inline void CAATagValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.value)
}
#if LANG_CXX11
inline void CAATagValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.CAATagValue.value)
}
#endif
inline void CAATagValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.CAATagValue.value)
}
inline void CAATagValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.CAATagValue.value)
}
inline ::std::string* CAATagValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.CAATagValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CAATagValue::release_value() {
  // @@protoc_insertion_point(field_release:zsearch.CAATagValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CAATagValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:zsearch.CAATagValue.value)
}

// uint32 ttl = 4;
inline void CAATagValue::clear_ttl() {
  ttl_ = 0u;
}
inline ::google::protobuf::uint32 CAATagValue::ttl() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.ttl)
  return ttl_;
}
inline void CAATagValue::set_ttl(::google::protobuf::uint32 value) {
  
  ttl_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.ttl)
}

// -------------------------------------------------------------------

// CAARecord

// string domain = 1;
inline void CAARecord::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CAARecord::domain() const {
  // @@protoc_insertion_point(field_get:zsearch.CAARecord.domain)
  return domain_.GetNoArena();
}
inline void CAARecord::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.CAARecord.domain)
}
#if LANG_CXX11
inline void CAARecord::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.CAARecord.domain)
}
#endif
inline void CAARecord::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.CAARecord.domain)
}
inline void CAARecord::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.CAARecord.domain)
}
inline ::std::string* CAARecord::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.CAARecord.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CAARecord::release_domain() {
  // @@protoc_insertion_point(field_release:zsearch.CAARecord.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CAARecord::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:zsearch.CAARecord.domain)
}

// .zsearch.CAADomainStatus result = 2;
inline void CAARecord::clear_result() {
  result_ = 0;
}
inline ::zsearch::CAADomainStatus CAARecord::result() const {
  // @@protoc_insertion_point(field_get:zsearch.CAARecord.result)
  return static_cast< ::zsearch::CAADomainStatus >(result_);
}
inline void CAARecord::set_result(::zsearch::CAADomainStatus value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAARecord.result)
}

// repeated .zsearch.CAATagValue values = 3;
inline int CAARecord::values_size() const {
  return values_.size();
}
inline void CAARecord::clear_values() {
  values_.Clear();
}
inline const ::zsearch::CAATagValue& CAARecord::values(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.CAARecord.values)
  return values_.Get(index);
}
inline ::zsearch::CAATagValue* CAARecord::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.CAARecord.values)
  return values_.Mutable(index);
}
inline ::zsearch::CAATagValue* CAARecord::add_values() {
  // @@protoc_insertion_point(field_add:zsearch.CAARecord.values)
  return values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::CAATagValue >*
CAARecord::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.CAARecord.values)
  return &values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::CAATagValue >&
CAARecord::values() const {
  // @@protoc_insertion_point(field_list:zsearch.CAARecord.values)
  return values_;
}

// -------------------------------------------------------------------

// CAALookup

// int64 timestamp = 1;
inline void CAALookup::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CAALookup::timestamp() const {
  // @@protoc_insertion_point(field_get:zsearch.CAALookup.timestamp)
  return timestamp_;
}
inline void CAALookup::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAALookup.timestamp)
}

// repeated .zsearch.CAARecord records = 2;
inline int CAALookup::records_size() const {
  return records_.size();
}
inline void CAALookup::clear_records() {
  records_.Clear();
}
inline const ::zsearch::CAARecord& CAALookup::records(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.CAALookup.records)
  return records_.Get(index);
}
inline ::zsearch::CAARecord* CAALookup::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.CAALookup.records)
  return records_.Mutable(index);
}
inline ::zsearch::CAARecord* CAALookup::add_records() {
  // @@protoc_insertion_point(field_add:zsearch.CAALookup.records)
  return records_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::CAARecord >*
CAALookup::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.CAALookup.records)
  return &records_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::CAARecord >&
CAALookup::records() const {
  // @@protoc_insertion_point(field_list:zsearch.CAALookup.records)
  return records_;
}

// .zsearch.CAAResult result = 3;
inline void CAALookup::clear_result() {
  result_ = 0;
}
inline ::zsearch::CAAResult CAALookup::result() const {
  // @@protoc_insertion_point(field_get:zsearch.CAALookup.result)
  return static_cast< ::zsearch::CAAResult >(result_);
}
inline void CAALookup::set_result(::zsearch::CAAResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAALookup.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace zsearch

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zsearch::CAAResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::CAAResult>() {
  return ::zsearch::CAAResult_descriptor();
}
template <> struct is_proto_enum< ::zsearch::CAADomainStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::CAADomainStatus>() {
  return ::zsearch::CAADomainStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_caa_2eproto__INCLUDED
