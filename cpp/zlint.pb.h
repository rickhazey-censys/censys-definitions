// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zlint.proto

#ifndef PROTOBUF_zlint_2eproto__INCLUDED
#define PROTOBUF_zlint_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace zsearch {
class LintResult;
class LintResultDefaultTypeInternal;
extern LintResultDefaultTypeInternal _LintResult_default_instance_;
class Lints;
class LintsDefaultTypeInternal;
extern LintsDefaultTypeInternal _Lints_default_instance_;
class ZLint;
class ZLintDefaultTypeInternal;
extern ZLintDefaultTypeInternal _ZLint_default_instance_;
}  // namespace zsearch

namespace zsearch {

namespace protobuf_zlint_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_zlint_2eproto

enum LintResultStatus {
  LINT_RESULT_RESERVED = 0,
  LINT_RESULT_NA = 1,
  LINT_RESULT_NE = 2,
  LINT_RESULT_PASS = 3,
  LINT_RESULT_INFO = 4,
  LINT_RESULT_NOTICE = 5,
  LINT_RESULT_WARN = 6,
  LINT_RESULT_ERROR = 7,
  LINT_RESULT_FATAL = 8,
  LINT_RESULT_UNKNOWN = 9,
  LintResultStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LintResultStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LintResultStatus_IsValid(int value);
const LintResultStatus LintResultStatus_MIN = LINT_RESULT_RESERVED;
const LintResultStatus LintResultStatus_MAX = LINT_RESULT_UNKNOWN;
const int LintResultStatus_ARRAYSIZE = LintResultStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* LintResultStatus_descriptor();
inline const ::std::string& LintResultStatus_Name(LintResultStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    LintResultStatus_descriptor(), value);
}
inline bool LintResultStatus_Parse(
    const ::std::string& name, LintResultStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LintResultStatus>(
    LintResultStatus_descriptor(), name, value);
}
enum ZLintStatus {
  ZLINT_STATUS_RESERVED = 0,
  ZLINT_STATUS_SUCCESS = 1,
  ZLINT_STATUS_FAILED = 2,
  ZLintStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ZLintStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ZLintStatus_IsValid(int value);
const ZLintStatus ZLintStatus_MIN = ZLINT_STATUS_RESERVED;
const ZLintStatus ZLintStatus_MAX = ZLINT_STATUS_FAILED;
const int ZLintStatus_ARRAYSIZE = ZLintStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ZLintStatus_descriptor();
inline const ::std::string& ZLintStatus_Name(ZLintStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ZLintStatus_descriptor(), value);
}
inline bool ZLintStatus_Parse(
    const ::std::string& name, ZLintStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ZLintStatus>(
    ZLintStatus_descriptor(), name, value);
}
// ===================================================================

class LintResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.LintResult) */ {
 public:
  LintResult();
  virtual ~LintResult();

  LintResult(const LintResult& from);

  inline LintResult& operator=(const LintResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LintResult& default_instance();

  static inline const LintResult* internal_default_instance() {
    return reinterpret_cast<const LintResult*>(
               &_LintResult_default_instance_);
  }

  void Swap(LintResult* other);

  // implements Message ----------------------------------------------

  inline LintResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LintResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LintResult& from);
  void MergeFrom(const LintResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LintResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string details = 2;
  void clear_details();
  static const int kDetailsFieldNumber = 2;
  const ::std::string& details() const;
  void set_details(const ::std::string& value);
  #if LANG_CXX11
  void set_details(::std::string&& value);
  #endif
  void set_details(const char* value);
  void set_details(const char* value, size_t size);
  ::std::string* mutable_details();
  ::std::string* release_details();
  void set_allocated_details(::std::string* details);

  // .zsearch.LintResultStatus result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::zsearch::LintResultStatus result() const;
  void set_result(::zsearch::LintResultStatus value);

  // @@protoc_insertion_point(class_scope:zsearch.LintResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr details_;
  int result_;
  mutable int _cached_size_;
  friend struct  protobuf_zlint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ZLint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.ZLint) */ {
 public:
  ZLint();
  virtual ~ZLint();

  ZLint(const ZLint& from);

  inline ZLint& operator=(const ZLint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZLint& default_instance();

  static inline const ZLint* internal_default_instance() {
    return reinterpret_cast<const ZLint*>(
               &_ZLint_default_instance_);
  }

  void Swap(ZLint* other);

  // implements Message ----------------------------------------------

  inline ZLint* New() const PROTOBUF_FINAL { return New(NULL); }

  ZLint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ZLint& from);
  void MergeFrom(const ZLint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ZLint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zsearch.Lints lints = 9;
  bool has_lints() const;
  void clear_lints();
  static const int kLintsFieldNumber = 9;
  const ::zsearch::Lints& lints() const;
  ::zsearch::Lints* mutable_lints();
  ::zsearch::Lints* release_lints();
  void set_allocated_lints(::zsearch::Lints* lints);

  // int64 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // int64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // .zsearch.ZLintStatus status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::zsearch::ZLintStatus status() const;
  void set_status(::zsearch::ZLintStatus value);

  // bool infos_present = 4;
  void clear_infos_present();
  static const int kInfosPresentFieldNumber = 4;
  bool infos_present() const;
  void set_infos_present(bool value);

  // bool notices_present = 5;
  void clear_notices_present();
  static const int kNoticesPresentFieldNumber = 5;
  bool notices_present() const;
  void set_notices_present(bool value);

  // bool warnings_present = 6;
  void clear_warnings_present();
  static const int kWarningsPresentFieldNumber = 6;
  bool warnings_present() const;
  void set_warnings_present(bool value);

  // bool errors_present = 7;
  void clear_errors_present();
  static const int kErrorsPresentFieldNumber = 7;
  bool errors_present() const;
  void set_errors_present(bool value);

  // bool fatals_present = 8;
  void clear_fatals_present();
  static const int kFatalsPresentFieldNumber = 8;
  bool fatals_present() const;
  void set_fatals_present(bool value);

  // @@protoc_insertion_point(class_scope:zsearch.ZLint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zsearch::Lints* lints_;
  ::google::protobuf::int64 version_;
  ::google::protobuf::int64 timestamp_;
  int status_;
  bool infos_present_;
  bool notices_present_;
  bool warnings_present_;
  bool errors_present_;
  bool fatals_present_;
  mutable int _cached_size_;
  friend struct  protobuf_zlint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Lints : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.Lints) */ {
 public:
  Lints();
  virtual ~Lints();

  Lints(const Lints& from);

  inline Lints& operator=(const Lints& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lints& default_instance();

  static inline const Lints* internal_default_instance() {
    return reinterpret_cast<const Lints*>(
               &_Lints_default_instance_);
  }

  void Swap(Lints* other);

  // implements Message ----------------------------------------------

  inline Lints* New() const PROTOBUF_FINAL { return New(NULL); }

  Lints* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Lints& from);
  void MergeFrom(const Lints& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Lints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zsearch.LintResult e_basic_constraints_not_critical = 1;
  bool has_e_basic_constraints_not_critical() const;
  void clear_e_basic_constraints_not_critical();
  static const int kEBasicConstraintsNotCriticalFieldNumber = 1;
  const ::zsearch::LintResult& e_basic_constraints_not_critical() const;
  ::zsearch::LintResult* mutable_e_basic_constraints_not_critical();
  ::zsearch::LintResult* release_e_basic_constraints_not_critical();
  void set_allocated_e_basic_constraints_not_critical(::zsearch::LintResult* e_basic_constraints_not_critical);

  // .zsearch.LintResult e_ian_bare_wildcard = 2;
  bool has_e_ian_bare_wildcard() const;
  void clear_e_ian_bare_wildcard();
  static const int kEIanBareWildcardFieldNumber = 2;
  const ::zsearch::LintResult& e_ian_bare_wildcard() const;
  ::zsearch::LintResult* mutable_e_ian_bare_wildcard();
  ::zsearch::LintResult* release_e_ian_bare_wildcard();
  void set_allocated_e_ian_bare_wildcard(::zsearch::LintResult* e_ian_bare_wildcard);

  // .zsearch.LintResult e_ian_wildcard_not_first = 3;
  bool has_e_ian_wildcard_not_first() const;
  void clear_e_ian_wildcard_not_first();
  static const int kEIanWildcardNotFirstFieldNumber = 3;
  const ::zsearch::LintResult& e_ian_wildcard_not_first() const;
  ::zsearch::LintResult* mutable_e_ian_wildcard_not_first();
  ::zsearch::LintResult* release_e_ian_wildcard_not_first();
  void set_allocated_e_ian_wildcard_not_first(::zsearch::LintResult* e_ian_wildcard_not_first);

  // .zsearch.LintResult e_san_bare_wildcard = 4;
  bool has_e_san_bare_wildcard() const;
  void clear_e_san_bare_wildcard();
  static const int kESanBareWildcardFieldNumber = 4;
  const ::zsearch::LintResult& e_san_bare_wildcard() const;
  ::zsearch::LintResult* mutable_e_san_bare_wildcard();
  ::zsearch::LintResult* release_e_san_bare_wildcard();
  void set_allocated_e_san_bare_wildcard(::zsearch::LintResult* e_san_bare_wildcard);

  // .zsearch.LintResult e_san_wildcard_not_first = 5;
  bool has_e_san_wildcard_not_first() const;
  void clear_e_san_wildcard_not_first();
  static const int kESanWildcardNotFirstFieldNumber = 5;
  const ::zsearch::LintResult& e_san_wildcard_not_first() const;
  ::zsearch::LintResult* mutable_e_san_wildcard_not_first();
  ::zsearch::LintResult* release_e_san_wildcard_not_first();
  void set_allocated_e_san_wildcard_not_first(::zsearch::LintResult* e_san_wildcard_not_first);

  // .zsearch.LintResult e_ca_country_name_invalid = 6;
  bool has_e_ca_country_name_invalid() const;
  void clear_e_ca_country_name_invalid();
  static const int kECaCountryNameInvalidFieldNumber = 6;
  const ::zsearch::LintResult& e_ca_country_name_invalid() const;
  ::zsearch::LintResult* mutable_e_ca_country_name_invalid();
  ::zsearch::LintResult* release_e_ca_country_name_invalid();
  void set_allocated_e_ca_country_name_invalid(::zsearch::LintResult* e_ca_country_name_invalid);

  // .zsearch.LintResult e_ca_country_name_missing = 7;
  bool has_e_ca_country_name_missing() const;
  void clear_e_ca_country_name_missing();
  static const int kECaCountryNameMissingFieldNumber = 7;
  const ::zsearch::LintResult& e_ca_country_name_missing() const;
  ::zsearch::LintResult* mutable_e_ca_country_name_missing();
  ::zsearch::LintResult* release_e_ca_country_name_missing();
  void set_allocated_e_ca_country_name_missing(::zsearch::LintResult* e_ca_country_name_missing);

  // .zsearch.LintResult e_ca_crl_sign_not_set = 8;
  bool has_e_ca_crl_sign_not_set() const;
  void clear_e_ca_crl_sign_not_set();
  static const int kECaCrlSignNotSetFieldNumber = 8;
  const ::zsearch::LintResult& e_ca_crl_sign_not_set() const;
  ::zsearch::LintResult* mutable_e_ca_crl_sign_not_set();
  ::zsearch::LintResult* release_e_ca_crl_sign_not_set();
  void set_allocated_e_ca_crl_sign_not_set(::zsearch::LintResult* e_ca_crl_sign_not_set);

  // .zsearch.LintResult n_ca_digital_signature_not_set = 9;
  bool has_n_ca_digital_signature_not_set() const;
  void clear_n_ca_digital_signature_not_set();
  static const int kNCaDigitalSignatureNotSetFieldNumber = 9;
  const ::zsearch::LintResult& n_ca_digital_signature_not_set() const;
  ::zsearch::LintResult* mutable_n_ca_digital_signature_not_set();
  ::zsearch::LintResult* release_n_ca_digital_signature_not_set();
  void set_allocated_n_ca_digital_signature_not_set(::zsearch::LintResult* n_ca_digital_signature_not_set);

  // .zsearch.LintResult e_ca_key_cert_sign_not_set = 10;
  bool has_e_ca_key_cert_sign_not_set() const;
  void clear_e_ca_key_cert_sign_not_set();
  static const int kECaKeyCertSignNotSetFieldNumber = 10;
  const ::zsearch::LintResult& e_ca_key_cert_sign_not_set() const;
  ::zsearch::LintResult* mutable_e_ca_key_cert_sign_not_set();
  ::zsearch::LintResult* release_e_ca_key_cert_sign_not_set();
  void set_allocated_e_ca_key_cert_sign_not_set(::zsearch::LintResult* e_ca_key_cert_sign_not_set);

  // .zsearch.LintResult e_ca_key_usage_missing = 11;
  bool has_e_ca_key_usage_missing() const;
  void clear_e_ca_key_usage_missing();
  static const int kECaKeyUsageMissingFieldNumber = 11;
  const ::zsearch::LintResult& e_ca_key_usage_missing() const;
  ::zsearch::LintResult* mutable_e_ca_key_usage_missing();
  ::zsearch::LintResult* release_e_ca_key_usage_missing();
  void set_allocated_e_ca_key_usage_missing(::zsearch::LintResult* e_ca_key_usage_missing);

  // .zsearch.LintResult e_ca_key_usage_not_critical = 12;
  bool has_e_ca_key_usage_not_critical() const;
  void clear_e_ca_key_usage_not_critical();
  static const int kECaKeyUsageNotCriticalFieldNumber = 12;
  const ::zsearch::LintResult& e_ca_key_usage_not_critical() const;
  ::zsearch::LintResult* mutable_e_ca_key_usage_not_critical();
  ::zsearch::LintResult* release_e_ca_key_usage_not_critical();
  void set_allocated_e_ca_key_usage_not_critical(::zsearch::LintResult* e_ca_key_usage_not_critical);

  // .zsearch.LintResult e_ca_organization_name_missing = 13;
  bool has_e_ca_organization_name_missing() const;
  void clear_e_ca_organization_name_missing();
  static const int kECaOrganizationNameMissingFieldNumber = 13;
  const ::zsearch::LintResult& e_ca_organization_name_missing() const;
  ::zsearch::LintResult* mutable_e_ca_organization_name_missing();
  ::zsearch::LintResult* release_e_ca_organization_name_missing();
  void set_allocated_e_ca_organization_name_missing(::zsearch::LintResult* e_ca_organization_name_missing);

  // .zsearch.LintResult e_ca_subject_field_empty = 14;
  bool has_e_ca_subject_field_empty() const;
  void clear_e_ca_subject_field_empty();
  static const int kECaSubjectFieldEmptyFieldNumber = 14;
  const ::zsearch::LintResult& e_ca_subject_field_empty() const;
  ::zsearch::LintResult* mutable_e_ca_subject_field_empty();
  ::zsearch::LintResult* release_e_ca_subject_field_empty();
  void set_allocated_e_ca_subject_field_empty(::zsearch::LintResult* e_ca_subject_field_empty);

  // .zsearch.LintResult e_cert_contains_unique_identifier = 15;
  bool has_e_cert_contains_unique_identifier() const;
  void clear_e_cert_contains_unique_identifier();
  static const int kECertContainsUniqueIdentifierFieldNumber = 15;
  const ::zsearch::LintResult& e_cert_contains_unique_identifier() const;
  ::zsearch::LintResult* mutable_e_cert_contains_unique_identifier();
  ::zsearch::LintResult* release_e_cert_contains_unique_identifier();
  void set_allocated_e_cert_contains_unique_identifier(::zsearch::LintResult* e_cert_contains_unique_identifier);

  // .zsearch.LintResult e_cert_extensions_version_not_3 = 16;
  bool has_e_cert_extensions_version_not_3() const;
  void clear_e_cert_extensions_version_not_3();
  static const int kECertExtensionsVersionNot3FieldNumber = 16;
  const ::zsearch::LintResult& e_cert_extensions_version_not_3() const;
  ::zsearch::LintResult* mutable_e_cert_extensions_version_not_3();
  ::zsearch::LintResult* release_e_cert_extensions_version_not_3();
  void set_allocated_e_cert_extensions_version_not_3(::zsearch::LintResult* e_cert_extensions_version_not_3);

  // .zsearch.LintResult e_cab_dv_conflicts_with_locality = 17;
  bool has_e_cab_dv_conflicts_with_locality() const;
  void clear_e_cab_dv_conflicts_with_locality();
  static const int kECabDvConflictsWithLocalityFieldNumber = 17;
  const ::zsearch::LintResult& e_cab_dv_conflicts_with_locality() const;
  ::zsearch::LintResult* mutable_e_cab_dv_conflicts_with_locality();
  ::zsearch::LintResult* release_e_cab_dv_conflicts_with_locality();
  void set_allocated_e_cab_dv_conflicts_with_locality(::zsearch::LintResult* e_cab_dv_conflicts_with_locality);

  // .zsearch.LintResult e_cab_dv_conflicts_with_org = 18;
  bool has_e_cab_dv_conflicts_with_org() const;
  void clear_e_cab_dv_conflicts_with_org();
  static const int kECabDvConflictsWithOrgFieldNumber = 18;
  const ::zsearch::LintResult& e_cab_dv_conflicts_with_org() const;
  ::zsearch::LintResult* mutable_e_cab_dv_conflicts_with_org();
  ::zsearch::LintResult* release_e_cab_dv_conflicts_with_org();
  void set_allocated_e_cab_dv_conflicts_with_org(::zsearch::LintResult* e_cab_dv_conflicts_with_org);

  // .zsearch.LintResult e_cab_dv_conflicts_with_postal = 19;
  bool has_e_cab_dv_conflicts_with_postal() const;
  void clear_e_cab_dv_conflicts_with_postal();
  static const int kECabDvConflictsWithPostalFieldNumber = 19;
  const ::zsearch::LintResult& e_cab_dv_conflicts_with_postal() const;
  ::zsearch::LintResult* mutable_e_cab_dv_conflicts_with_postal();
  ::zsearch::LintResult* release_e_cab_dv_conflicts_with_postal();
  void set_allocated_e_cab_dv_conflicts_with_postal(::zsearch::LintResult* e_cab_dv_conflicts_with_postal);

  // .zsearch.LintResult e_cab_dv_conflicts_with_province = 20;
  bool has_e_cab_dv_conflicts_with_province() const;
  void clear_e_cab_dv_conflicts_with_province();
  static const int kECabDvConflictsWithProvinceFieldNumber = 20;
  const ::zsearch::LintResult& e_cab_dv_conflicts_with_province() const;
  ::zsearch::LintResult* mutable_e_cab_dv_conflicts_with_province();
  ::zsearch::LintResult* release_e_cab_dv_conflicts_with_province();
  void set_allocated_e_cab_dv_conflicts_with_province(::zsearch::LintResult* e_cab_dv_conflicts_with_province);

  // .zsearch.LintResult e_cab_dv_conflicts_with_street = 21;
  bool has_e_cab_dv_conflicts_with_street() const;
  void clear_e_cab_dv_conflicts_with_street();
  static const int kECabDvConflictsWithStreetFieldNumber = 21;
  const ::zsearch::LintResult& e_cab_dv_conflicts_with_street() const;
  ::zsearch::LintResult* mutable_e_cab_dv_conflicts_with_street();
  ::zsearch::LintResult* release_e_cab_dv_conflicts_with_street();
  void set_allocated_e_cab_dv_conflicts_with_street(::zsearch::LintResult* e_cab_dv_conflicts_with_street);

  // .zsearch.LintResult e_cert_policy_iv_requires_country = 22;
  bool has_e_cert_policy_iv_requires_country() const;
  void clear_e_cert_policy_iv_requires_country();
  static const int kECertPolicyIvRequiresCountryFieldNumber = 22;
  const ::zsearch::LintResult& e_cert_policy_iv_requires_country() const;
  ::zsearch::LintResult* mutable_e_cert_policy_iv_requires_country();
  ::zsearch::LintResult* release_e_cert_policy_iv_requires_country();
  void set_allocated_e_cert_policy_iv_requires_country(::zsearch::LintResult* e_cert_policy_iv_requires_country);

  // .zsearch.LintResult e_cert_policy_iv_requires_province_or_locality = 23;
  bool has_e_cert_policy_iv_requires_province_or_locality() const;
  void clear_e_cert_policy_iv_requires_province_or_locality();
  static const int kECertPolicyIvRequiresProvinceOrLocalityFieldNumber = 23;
  const ::zsearch::LintResult& e_cert_policy_iv_requires_province_or_locality() const;
  ::zsearch::LintResult* mutable_e_cert_policy_iv_requires_province_or_locality();
  ::zsearch::LintResult* release_e_cert_policy_iv_requires_province_or_locality();
  void set_allocated_e_cert_policy_iv_requires_province_or_locality(::zsearch::LintResult* e_cert_policy_iv_requires_province_or_locality);

  // .zsearch.LintResult e_cert_policy_ov_requires_country = 24;
  bool has_e_cert_policy_ov_requires_country() const;
  void clear_e_cert_policy_ov_requires_country();
  static const int kECertPolicyOvRequiresCountryFieldNumber = 24;
  const ::zsearch::LintResult& e_cert_policy_ov_requires_country() const;
  ::zsearch::LintResult* mutable_e_cert_policy_ov_requires_country();
  ::zsearch::LintResult* release_e_cert_policy_ov_requires_country();
  void set_allocated_e_cert_policy_ov_requires_country(::zsearch::LintResult* e_cert_policy_ov_requires_country);

  // .zsearch.LintResult e_cert_policy_ov_requires_province_or_locality = 25;
  bool has_e_cert_policy_ov_requires_province_or_locality() const;
  void clear_e_cert_policy_ov_requires_province_or_locality();
  static const int kECertPolicyOvRequiresProvinceOrLocalityFieldNumber = 25;
  const ::zsearch::LintResult& e_cert_policy_ov_requires_province_or_locality() const;
  ::zsearch::LintResult* mutable_e_cert_policy_ov_requires_province_or_locality();
  ::zsearch::LintResult* release_e_cert_policy_ov_requires_province_or_locality();
  void set_allocated_e_cert_policy_ov_requires_province_or_locality(::zsearch::LintResult* e_cert_policy_ov_requires_province_or_locality);

  // .zsearch.LintResult e_cab_ov_requires_org = 26;
  bool has_e_cab_ov_requires_org() const;
  void clear_e_cab_ov_requires_org();
  static const int kECabOvRequiresOrgFieldNumber = 26;
  const ::zsearch::LintResult& e_cab_ov_requires_org() const;
  ::zsearch::LintResult* mutable_e_cab_ov_requires_org();
  ::zsearch::LintResult* release_e_cab_ov_requires_org();
  void set_allocated_e_cab_ov_requires_org(::zsearch::LintResult* e_cab_ov_requires_org);

  // .zsearch.LintResult e_cab_iv_requires_personal_name = 27;
  bool has_e_cab_iv_requires_personal_name() const;
  void clear_e_cab_iv_requires_personal_name();
  static const int kECabIvRequiresPersonalNameFieldNumber = 27;
  const ::zsearch::LintResult& e_cab_iv_requires_personal_name() const;
  ::zsearch::LintResult* mutable_e_cab_iv_requires_personal_name();
  ::zsearch::LintResult* release_e_cab_iv_requires_personal_name();
  void set_allocated_e_cab_iv_requires_personal_name(::zsearch::LintResult* e_cab_iv_requires_personal_name);

  // .zsearch.LintResult e_cert_unique_identifier_version_not_2_or_3 = 28;
  bool has_e_cert_unique_identifier_version_not_2_or_3() const;
  void clear_e_cert_unique_identifier_version_not_2_or_3();
  static const int kECertUniqueIdentifierVersionNot2Or3FieldNumber = 28;
  const ::zsearch::LintResult& e_cert_unique_identifier_version_not_2_or_3() const;
  ::zsearch::LintResult* mutable_e_cert_unique_identifier_version_not_2_or_3();
  ::zsearch::LintResult* release_e_cert_unique_identifier_version_not_2_or_3();
  void set_allocated_e_cert_unique_identifier_version_not_2_or_3(::zsearch::LintResult* e_cert_unique_identifier_version_not_2_or_3);

  // .zsearch.LintResult e_distribution_point_incomplete = 30;
  bool has_e_distribution_point_incomplete() const;
  void clear_e_distribution_point_incomplete();
  static const int kEDistributionPointIncompleteFieldNumber = 30;
  const ::zsearch::LintResult& e_distribution_point_incomplete() const;
  ::zsearch::LintResult* mutable_e_distribution_point_incomplete();
  ::zsearch::LintResult* release_e_distribution_point_incomplete();
  void set_allocated_e_distribution_point_incomplete(::zsearch::LintResult* e_distribution_point_incomplete);

  // .zsearch.LintResult w_distribution_point_missing_ldap_or_uri = 31;
  bool has_w_distribution_point_missing_ldap_or_uri() const;
  void clear_w_distribution_point_missing_ldap_or_uri();
  static const int kWDistributionPointMissingLdapOrUriFieldNumber = 31;
  const ::zsearch::LintResult& w_distribution_point_missing_ldap_or_uri() const;
  ::zsearch::LintResult* mutable_w_distribution_point_missing_ldap_or_uri();
  ::zsearch::LintResult* release_w_distribution_point_missing_ldap_or_uri();
  void set_allocated_w_distribution_point_missing_ldap_or_uri(::zsearch::LintResult* w_distribution_point_missing_ldap_or_uri);

  // .zsearch.LintResult e_dsa_improper_modulus_or_divisor_size = 32;
  bool has_e_dsa_improper_modulus_or_divisor_size() const;
  void clear_e_dsa_improper_modulus_or_divisor_size();
  static const int kEDsaImproperModulusOrDivisorSizeFieldNumber = 32;
  const ::zsearch::LintResult& e_dsa_improper_modulus_or_divisor_size() const;
  ::zsearch::LintResult* mutable_e_dsa_improper_modulus_or_divisor_size();
  ::zsearch::LintResult* release_e_dsa_improper_modulus_or_divisor_size();
  void set_allocated_e_dsa_improper_modulus_or_divisor_size(::zsearch::LintResult* e_dsa_improper_modulus_or_divisor_size);

  // .zsearch.LintResult e_dsa_shorter_than_2048_bits = 33;
  bool has_e_dsa_shorter_than_2048_bits() const;
  void clear_e_dsa_shorter_than_2048_bits();
  static const int kEDsaShorterThan2048BitsFieldNumber = 33;
  const ::zsearch::LintResult& e_dsa_shorter_than_2048_bits() const;
  ::zsearch::LintResult* mutable_e_dsa_shorter_than_2048_bits();
  ::zsearch::LintResult* release_e_dsa_shorter_than_2048_bits();
  void set_allocated_e_dsa_shorter_than_2048_bits(::zsearch::LintResult* e_dsa_shorter_than_2048_bits);

  // .zsearch.LintResult e_ec_improper_curves = 34;
  bool has_e_ec_improper_curves() const;
  void clear_e_ec_improper_curves();
  static const int kEEcImproperCurvesFieldNumber = 34;
  const ::zsearch::LintResult& e_ec_improper_curves() const;
  ::zsearch::LintResult* mutable_e_ec_improper_curves();
  ::zsearch::LintResult* release_e_ec_improper_curves();
  void set_allocated_e_ec_improper_curves(::zsearch::LintResult* e_ec_improper_curves);

  // .zsearch.LintResult w_eku_critical_improperly = 35;
  bool has_w_eku_critical_improperly() const;
  void clear_w_eku_critical_improperly();
  static const int kWEkuCriticalImproperlyFieldNumber = 35;
  const ::zsearch::LintResult& w_eku_critical_improperly() const;
  ::zsearch::LintResult* mutable_w_eku_critical_improperly();
  ::zsearch::LintResult* release_w_eku_critical_improperly();
  void set_allocated_w_eku_critical_improperly(::zsearch::LintResult* w_eku_critical_improperly);

  // .zsearch.LintResult e_ev_business_category_missing = 36;
  bool has_e_ev_business_category_missing() const;
  void clear_e_ev_business_category_missing();
  static const int kEEvBusinessCategoryMissingFieldNumber = 36;
  const ::zsearch::LintResult& e_ev_business_category_missing() const;
  ::zsearch::LintResult* mutable_e_ev_business_category_missing();
  ::zsearch::LintResult* release_e_ev_business_category_missing();
  void set_allocated_e_ev_business_category_missing(::zsearch::LintResult* e_ev_business_category_missing);

  // .zsearch.LintResult e_ev_country_name_missing = 37;
  bool has_e_ev_country_name_missing() const;
  void clear_e_ev_country_name_missing();
  static const int kEEvCountryNameMissingFieldNumber = 37;
  const ::zsearch::LintResult& e_ev_country_name_missing() const;
  ::zsearch::LintResult* mutable_e_ev_country_name_missing();
  ::zsearch::LintResult* release_e_ev_country_name_missing();
  void set_allocated_e_ev_country_name_missing(::zsearch::LintResult* e_ev_country_name_missing);

  // .zsearch.LintResult e_ev_locality_name_missing = 38;
  bool has_e_ev_locality_name_missing() const;
  void clear_e_ev_locality_name_missing();
  static const int kEEvLocalityNameMissingFieldNumber = 38;
  const ::zsearch::LintResult& e_ev_locality_name_missing() const;
  ::zsearch::LintResult* mutable_e_ev_locality_name_missing();
  ::zsearch::LintResult* release_e_ev_locality_name_missing();
  void set_allocated_e_ev_locality_name_missing(::zsearch::LintResult* e_ev_locality_name_missing);

  // .zsearch.LintResult e_ev_organization_name_missing = 39;
  bool has_e_ev_organization_name_missing() const;
  void clear_e_ev_organization_name_missing();
  static const int kEEvOrganizationNameMissingFieldNumber = 39;
  const ::zsearch::LintResult& e_ev_organization_name_missing() const;
  ::zsearch::LintResult* mutable_e_ev_organization_name_missing();
  ::zsearch::LintResult* release_e_ev_organization_name_missing();
  void set_allocated_e_ev_organization_name_missing(::zsearch::LintResult* e_ev_organization_name_missing);

  // .zsearch.LintResult e_ev_serial_number_missing = 40;
  bool has_e_ev_serial_number_missing() const;
  void clear_e_ev_serial_number_missing();
  static const int kEEvSerialNumberMissingFieldNumber = 40;
  const ::zsearch::LintResult& e_ev_serial_number_missing() const;
  ::zsearch::LintResult* mutable_e_ev_serial_number_missing();
  ::zsearch::LintResult* release_e_ev_serial_number_missing();
  void set_allocated_e_ev_serial_number_missing(::zsearch::LintResult* e_ev_serial_number_missing);

  // .zsearch.LintResult e_ev_valid_time_too_long = 41;
  bool has_e_ev_valid_time_too_long() const;
  void clear_e_ev_valid_time_too_long();
  static const int kEEvValidTimeTooLongFieldNumber = 41;
  const ::zsearch::LintResult& e_ev_valid_time_too_long() const;
  ::zsearch::LintResult* mutable_e_ev_valid_time_too_long();
  ::zsearch::LintResult* release_e_ev_valid_time_too_long();
  void set_allocated_e_ev_valid_time_too_long(::zsearch::LintResult* e_ev_valid_time_too_long);

  // .zsearch.LintResult w_ext_aia_access_location_missing = 42;
  bool has_w_ext_aia_access_location_missing() const;
  void clear_w_ext_aia_access_location_missing();
  static const int kWExtAiaAccessLocationMissingFieldNumber = 42;
  const ::zsearch::LintResult& w_ext_aia_access_location_missing() const;
  ::zsearch::LintResult* mutable_w_ext_aia_access_location_missing();
  ::zsearch::LintResult* release_w_ext_aia_access_location_missing();
  void set_allocated_w_ext_aia_access_location_missing(::zsearch::LintResult* w_ext_aia_access_location_missing);

  // .zsearch.LintResult e_ext_aia_marked_critical = 43;
  bool has_e_ext_aia_marked_critical() const;
  void clear_e_ext_aia_marked_critical();
  static const int kEExtAiaMarkedCriticalFieldNumber = 43;
  const ::zsearch::LintResult& e_ext_aia_marked_critical() const;
  ::zsearch::LintResult* mutable_e_ext_aia_marked_critical();
  ::zsearch::LintResult* release_e_ext_aia_marked_critical();
  void set_allocated_e_ext_aia_marked_critical(::zsearch::LintResult* e_ext_aia_marked_critical);

  // .zsearch.LintResult e_ext_authority_key_identifier_critical = 44;
  bool has_e_ext_authority_key_identifier_critical() const;
  void clear_e_ext_authority_key_identifier_critical();
  static const int kEExtAuthorityKeyIdentifierCriticalFieldNumber = 44;
  const ::zsearch::LintResult& e_ext_authority_key_identifier_critical() const;
  ::zsearch::LintResult* mutable_e_ext_authority_key_identifier_critical();
  ::zsearch::LintResult* release_e_ext_authority_key_identifier_critical();
  void set_allocated_e_ext_authority_key_identifier_critical(::zsearch::LintResult* e_ext_authority_key_identifier_critical);

  // .zsearch.LintResult e_ext_authority_key_identifier_missing = 45;
  bool has_e_ext_authority_key_identifier_missing() const;
  void clear_e_ext_authority_key_identifier_missing();
  static const int kEExtAuthorityKeyIdentifierMissingFieldNumber = 45;
  const ::zsearch::LintResult& e_ext_authority_key_identifier_missing() const;
  ::zsearch::LintResult* mutable_e_ext_authority_key_identifier_missing();
  ::zsearch::LintResult* release_e_ext_authority_key_identifier_missing();
  void set_allocated_e_ext_authority_key_identifier_missing(::zsearch::LintResult* e_ext_authority_key_identifier_missing);

  // .zsearch.LintResult e_ext_authority_key_identifier_no_key_identifier = 46;
  bool has_e_ext_authority_key_identifier_no_key_identifier() const;
  void clear_e_ext_authority_key_identifier_no_key_identifier();
  static const int kEExtAuthorityKeyIdentifierNoKeyIdentifierFieldNumber = 46;
  const ::zsearch::LintResult& e_ext_authority_key_identifier_no_key_identifier() const;
  ::zsearch::LintResult* mutable_e_ext_authority_key_identifier_no_key_identifier();
  ::zsearch::LintResult* release_e_ext_authority_key_identifier_no_key_identifier();
  void set_allocated_e_ext_authority_key_identifier_no_key_identifier(::zsearch::LintResult* e_ext_authority_key_identifier_no_key_identifier);

  // .zsearch.LintResult w_ext_cert_policy_contains_noticeref = 47;
  bool has_w_ext_cert_policy_contains_noticeref() const;
  void clear_w_ext_cert_policy_contains_noticeref();
  static const int kWExtCertPolicyContainsNoticerefFieldNumber = 47;
  const ::zsearch::LintResult& w_ext_cert_policy_contains_noticeref() const;
  ::zsearch::LintResult* mutable_w_ext_cert_policy_contains_noticeref();
  ::zsearch::LintResult* release_w_ext_cert_policy_contains_noticeref();
  void set_allocated_w_ext_cert_policy_contains_noticeref(::zsearch::LintResult* w_ext_cert_policy_contains_noticeref);

  // .zsearch.LintResult e_ext_cert_policy_disallowed_any_policy_qualifier = 48;
  bool has_e_ext_cert_policy_disallowed_any_policy_qualifier() const;
  void clear_e_ext_cert_policy_disallowed_any_policy_qualifier();
  static const int kEExtCertPolicyDisallowedAnyPolicyQualifierFieldNumber = 48;
  const ::zsearch::LintResult& e_ext_cert_policy_disallowed_any_policy_qualifier() const;
  ::zsearch::LintResult* mutable_e_ext_cert_policy_disallowed_any_policy_qualifier();
  ::zsearch::LintResult* release_e_ext_cert_policy_disallowed_any_policy_qualifier();
  void set_allocated_e_ext_cert_policy_disallowed_any_policy_qualifier(::zsearch::LintResult* e_ext_cert_policy_disallowed_any_policy_qualifier);

  // .zsearch.LintResult e_ext_cert_policy_duplicate = 49;
  bool has_e_ext_cert_policy_duplicate() const;
  void clear_e_ext_cert_policy_duplicate();
  static const int kEExtCertPolicyDuplicateFieldNumber = 49;
  const ::zsearch::LintResult& e_ext_cert_policy_duplicate() const;
  ::zsearch::LintResult* mutable_e_ext_cert_policy_duplicate();
  ::zsearch::LintResult* release_e_ext_cert_policy_duplicate();
  void set_allocated_e_ext_cert_policy_duplicate(::zsearch::LintResult* e_ext_cert_policy_duplicate);

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_ia5_string = 50;
  bool has_e_ext_cert_policy_explicit_text_ia5_string() const;
  void clear_e_ext_cert_policy_explicit_text_ia5_string();
  static const int kEExtCertPolicyExplicitTextIa5StringFieldNumber = 50;
  const ::zsearch::LintResult& e_ext_cert_policy_explicit_text_ia5_string() const;
  ::zsearch::LintResult* mutable_e_ext_cert_policy_explicit_text_ia5_string();
  ::zsearch::LintResult* release_e_ext_cert_policy_explicit_text_ia5_string();
  void set_allocated_e_ext_cert_policy_explicit_text_ia5_string(::zsearch::LintResult* e_ext_cert_policy_explicit_text_ia5_string);

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_includes_control = 51;
  bool has_w_ext_cert_policy_explicit_text_includes_control() const;
  void clear_w_ext_cert_policy_explicit_text_includes_control();
  static const int kWExtCertPolicyExplicitTextIncludesControlFieldNumber = 51;
  const ::zsearch::LintResult& w_ext_cert_policy_explicit_text_includes_control() const;
  ::zsearch::LintResult* mutable_w_ext_cert_policy_explicit_text_includes_control();
  ::zsearch::LintResult* release_w_ext_cert_policy_explicit_text_includes_control();
  void set_allocated_w_ext_cert_policy_explicit_text_includes_control(::zsearch::LintResult* w_ext_cert_policy_explicit_text_includes_control);

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_nfc = 52;
  bool has_w_ext_cert_policy_explicit_text_not_nfc() const;
  void clear_w_ext_cert_policy_explicit_text_not_nfc();
  static const int kWExtCertPolicyExplicitTextNotNfcFieldNumber = 52;
  const ::zsearch::LintResult& w_ext_cert_policy_explicit_text_not_nfc() const;
  ::zsearch::LintResult* mutable_w_ext_cert_policy_explicit_text_not_nfc();
  ::zsearch::LintResult* release_w_ext_cert_policy_explicit_text_not_nfc();
  void set_allocated_w_ext_cert_policy_explicit_text_not_nfc(::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_nfc);

  // .zsearch.LintResult w_ext_cert_policy_explicit_text_not_utf8 = 53;
  bool has_w_ext_cert_policy_explicit_text_not_utf8() const;
  void clear_w_ext_cert_policy_explicit_text_not_utf8();
  static const int kWExtCertPolicyExplicitTextNotUtf8FieldNumber = 53;
  const ::zsearch::LintResult& w_ext_cert_policy_explicit_text_not_utf8() const;
  ::zsearch::LintResult* mutable_w_ext_cert_policy_explicit_text_not_utf8();
  ::zsearch::LintResult* release_w_ext_cert_policy_explicit_text_not_utf8();
  void set_allocated_w_ext_cert_policy_explicit_text_not_utf8(::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_utf8);

  // .zsearch.LintResult e_ext_cert_policy_explicit_text_too_long = 54;
  bool has_e_ext_cert_policy_explicit_text_too_long() const;
  void clear_e_ext_cert_policy_explicit_text_too_long();
  static const int kEExtCertPolicyExplicitTextTooLongFieldNumber = 54;
  const ::zsearch::LintResult& e_ext_cert_policy_explicit_text_too_long() const;
  ::zsearch::LintResult* mutable_e_ext_cert_policy_explicit_text_too_long();
  ::zsearch::LintResult* release_e_ext_cert_policy_explicit_text_too_long();
  void set_allocated_e_ext_cert_policy_explicit_text_too_long(::zsearch::LintResult* e_ext_cert_policy_explicit_text_too_long);

  // .zsearch.LintResult w_ext_crl_distribution_marked_critical = 55;
  bool has_w_ext_crl_distribution_marked_critical() const;
  void clear_w_ext_crl_distribution_marked_critical();
  static const int kWExtCrlDistributionMarkedCriticalFieldNumber = 55;
  const ::zsearch::LintResult& w_ext_crl_distribution_marked_critical() const;
  ::zsearch::LintResult* mutable_w_ext_crl_distribution_marked_critical();
  ::zsearch::LintResult* release_w_ext_crl_distribution_marked_critical();
  void set_allocated_w_ext_crl_distribution_marked_critical(::zsearch::LintResult* w_ext_crl_distribution_marked_critical);

  // .zsearch.LintResult e_ext_duplicate_extension = 56;
  bool has_e_ext_duplicate_extension() const;
  void clear_e_ext_duplicate_extension();
  static const int kEExtDuplicateExtensionFieldNumber = 56;
  const ::zsearch::LintResult& e_ext_duplicate_extension() const;
  ::zsearch::LintResult* mutable_e_ext_duplicate_extension();
  ::zsearch::LintResult* release_e_ext_duplicate_extension();
  void set_allocated_e_ext_duplicate_extension(::zsearch::LintResult* e_ext_duplicate_extension);

  // .zsearch.LintResult e_ext_freshest_crl_marked_critical = 57;
  bool has_e_ext_freshest_crl_marked_critical() const;
  void clear_e_ext_freshest_crl_marked_critical();
  static const int kEExtFreshestCrlMarkedCriticalFieldNumber = 57;
  const ::zsearch::LintResult& e_ext_freshest_crl_marked_critical() const;
  ::zsearch::LintResult* mutable_e_ext_freshest_crl_marked_critical();
  ::zsearch::LintResult* release_e_ext_freshest_crl_marked_critical();
  void set_allocated_e_ext_freshest_crl_marked_critical(::zsearch::LintResult* e_ext_freshest_crl_marked_critical);

  // .zsearch.LintResult w_ext_ian_critical = 58;
  bool has_w_ext_ian_critical() const;
  void clear_w_ext_ian_critical();
  static const int kWExtIanCriticalFieldNumber = 58;
  const ::zsearch::LintResult& w_ext_ian_critical() const;
  ::zsearch::LintResult* mutable_w_ext_ian_critical();
  ::zsearch::LintResult* release_w_ext_ian_critical();
  void set_allocated_w_ext_ian_critical(::zsearch::LintResult* w_ext_ian_critical);

  // .zsearch.LintResult e_ext_ian_dns_not_ia5_string = 59;
  bool has_e_ext_ian_dns_not_ia5_string() const;
  void clear_e_ext_ian_dns_not_ia5_string();
  static const int kEExtIanDnsNotIa5StringFieldNumber = 59;
  const ::zsearch::LintResult& e_ext_ian_dns_not_ia5_string() const;
  ::zsearch::LintResult* mutable_e_ext_ian_dns_not_ia5_string();
  ::zsearch::LintResult* release_e_ext_ian_dns_not_ia5_string();
  void set_allocated_e_ext_ian_dns_not_ia5_string(::zsearch::LintResult* e_ext_ian_dns_not_ia5_string);

  // .zsearch.LintResult e_ext_ian_empty_name = 60;
  bool has_e_ext_ian_empty_name() const;
  void clear_e_ext_ian_empty_name();
  static const int kEExtIanEmptyNameFieldNumber = 60;
  const ::zsearch::LintResult& e_ext_ian_empty_name() const;
  ::zsearch::LintResult* mutable_e_ext_ian_empty_name();
  ::zsearch::LintResult* release_e_ext_ian_empty_name();
  void set_allocated_e_ext_ian_empty_name(::zsearch::LintResult* e_ext_ian_empty_name);

  // .zsearch.LintResult e_ext_ian_no_entries = 61;
  bool has_e_ext_ian_no_entries() const;
  void clear_e_ext_ian_no_entries();
  static const int kEExtIanNoEntriesFieldNumber = 61;
  const ::zsearch::LintResult& e_ext_ian_no_entries() const;
  ::zsearch::LintResult* mutable_e_ext_ian_no_entries();
  ::zsearch::LintResult* release_e_ext_ian_no_entries();
  void set_allocated_e_ext_ian_no_entries(::zsearch::LintResult* e_ext_ian_no_entries);

  // .zsearch.LintResult e_ext_ian_rfc822_format_invalid = 62;
  bool has_e_ext_ian_rfc822_format_invalid() const;
  void clear_e_ext_ian_rfc822_format_invalid();
  static const int kEExtIanRfc822FormatInvalidFieldNumber = 62;
  const ::zsearch::LintResult& e_ext_ian_rfc822_format_invalid() const;
  ::zsearch::LintResult* mutable_e_ext_ian_rfc822_format_invalid();
  ::zsearch::LintResult* release_e_ext_ian_rfc822_format_invalid();
  void set_allocated_e_ext_ian_rfc822_format_invalid(::zsearch::LintResult* e_ext_ian_rfc822_format_invalid);

  // .zsearch.LintResult e_ext_ian_space_dns_name = 63;
  bool has_e_ext_ian_space_dns_name() const;
  void clear_e_ext_ian_space_dns_name();
  static const int kEExtIanSpaceDnsNameFieldNumber = 63;
  const ::zsearch::LintResult& e_ext_ian_space_dns_name() const;
  ::zsearch::LintResult* mutable_e_ext_ian_space_dns_name();
  ::zsearch::LintResult* release_e_ext_ian_space_dns_name();
  void set_allocated_e_ext_ian_space_dns_name(::zsearch::LintResult* e_ext_ian_space_dns_name);

  // .zsearch.LintResult e_ext_ian_uri_format_invalid = 64;
  bool has_e_ext_ian_uri_format_invalid() const;
  void clear_e_ext_ian_uri_format_invalid();
  static const int kEExtIanUriFormatInvalidFieldNumber = 64;
  const ::zsearch::LintResult& e_ext_ian_uri_format_invalid() const;
  ::zsearch::LintResult* mutable_e_ext_ian_uri_format_invalid();
  ::zsearch::LintResult* release_e_ext_ian_uri_format_invalid();
  void set_allocated_e_ext_ian_uri_format_invalid(::zsearch::LintResult* e_ext_ian_uri_format_invalid);

  // .zsearch.LintResult e_ext_ian_uri_host_not_fqdn_or_ip = 65;
  bool has_e_ext_ian_uri_host_not_fqdn_or_ip() const;
  void clear_e_ext_ian_uri_host_not_fqdn_or_ip();
  static const int kEExtIanUriHostNotFqdnOrIpFieldNumber = 65;
  const ::zsearch::LintResult& e_ext_ian_uri_host_not_fqdn_or_ip() const;
  ::zsearch::LintResult* mutable_e_ext_ian_uri_host_not_fqdn_or_ip();
  ::zsearch::LintResult* release_e_ext_ian_uri_host_not_fqdn_or_ip();
  void set_allocated_e_ext_ian_uri_host_not_fqdn_or_ip(::zsearch::LintResult* e_ext_ian_uri_host_not_fqdn_or_ip);

  // .zsearch.LintResult e_ext_ian_uri_not_ia5 = 66;
  bool has_e_ext_ian_uri_not_ia5() const;
  void clear_e_ext_ian_uri_not_ia5();
  static const int kEExtIanUriNotIa5FieldNumber = 66;
  const ::zsearch::LintResult& e_ext_ian_uri_not_ia5() const;
  ::zsearch::LintResult* mutable_e_ext_ian_uri_not_ia5();
  ::zsearch::LintResult* release_e_ext_ian_uri_not_ia5();
  void set_allocated_e_ext_ian_uri_not_ia5(::zsearch::LintResult* e_ext_ian_uri_not_ia5);

  // .zsearch.LintResult e_ext_ian_uri_relative = 67;
  bool has_e_ext_ian_uri_relative() const;
  void clear_e_ext_ian_uri_relative();
  static const int kEExtIanUriRelativeFieldNumber = 67;
  const ::zsearch::LintResult& e_ext_ian_uri_relative() const;
  ::zsearch::LintResult* mutable_e_ext_ian_uri_relative();
  ::zsearch::LintResult* release_e_ext_ian_uri_relative();
  void set_allocated_e_ext_ian_uri_relative(::zsearch::LintResult* e_ext_ian_uri_relative);

  // .zsearch.LintResult e_ext_key_usage_cert_sign_without_ca = 68;
  bool has_e_ext_key_usage_cert_sign_without_ca() const;
  void clear_e_ext_key_usage_cert_sign_without_ca();
  static const int kEExtKeyUsageCertSignWithoutCaFieldNumber = 68;
  const ::zsearch::LintResult& e_ext_key_usage_cert_sign_without_ca() const;
  ::zsearch::LintResult* mutable_e_ext_key_usage_cert_sign_without_ca();
  ::zsearch::LintResult* release_e_ext_key_usage_cert_sign_without_ca();
  void set_allocated_e_ext_key_usage_cert_sign_without_ca(::zsearch::LintResult* e_ext_key_usage_cert_sign_without_ca);

  // .zsearch.LintResult w_ext_key_usage_not_critical = 69;
  bool has_w_ext_key_usage_not_critical() const;
  void clear_w_ext_key_usage_not_critical();
  static const int kWExtKeyUsageNotCriticalFieldNumber = 69;
  const ::zsearch::LintResult& w_ext_key_usage_not_critical() const;
  ::zsearch::LintResult* mutable_w_ext_key_usage_not_critical();
  ::zsearch::LintResult* release_w_ext_key_usage_not_critical();
  void set_allocated_w_ext_key_usage_not_critical(::zsearch::LintResult* w_ext_key_usage_not_critical);

  // .zsearch.LintResult e_ext_key_usage_without_bits = 70;
  bool has_e_ext_key_usage_without_bits() const;
  void clear_e_ext_key_usage_without_bits();
  static const int kEExtKeyUsageWithoutBitsFieldNumber = 70;
  const ::zsearch::LintResult& e_ext_key_usage_without_bits() const;
  ::zsearch::LintResult* mutable_e_ext_key_usage_without_bits();
  ::zsearch::LintResult* release_e_ext_key_usage_without_bits();
  void set_allocated_e_ext_key_usage_without_bits(::zsearch::LintResult* e_ext_key_usage_without_bits);

  // .zsearch.LintResult e_ext_name_constraints_not_critical = 71;
  bool has_e_ext_name_constraints_not_critical() const;
  void clear_e_ext_name_constraints_not_critical();
  static const int kEExtNameConstraintsNotCriticalFieldNumber = 71;
  const ::zsearch::LintResult& e_ext_name_constraints_not_critical() const;
  ::zsearch::LintResult* mutable_e_ext_name_constraints_not_critical();
  ::zsearch::LintResult* release_e_ext_name_constraints_not_critical();
  void set_allocated_e_ext_name_constraints_not_critical(::zsearch::LintResult* e_ext_name_constraints_not_critical);

  // .zsearch.LintResult e_ext_name_constraints_not_in_ca = 72;
  bool has_e_ext_name_constraints_not_in_ca() const;
  void clear_e_ext_name_constraints_not_in_ca();
  static const int kEExtNameConstraintsNotInCaFieldNumber = 72;
  const ::zsearch::LintResult& e_ext_name_constraints_not_in_ca() const;
  ::zsearch::LintResult* mutable_e_ext_name_constraints_not_in_ca();
  ::zsearch::LintResult* release_e_ext_name_constraints_not_in_ca();
  void set_allocated_e_ext_name_constraints_not_in_ca(::zsearch::LintResult* e_ext_name_constraints_not_in_ca);

  // .zsearch.LintResult e_ext_policy_constraints_empty = 73;
  bool has_e_ext_policy_constraints_empty() const;
  void clear_e_ext_policy_constraints_empty();
  static const int kEExtPolicyConstraintsEmptyFieldNumber = 73;
  const ::zsearch::LintResult& e_ext_policy_constraints_empty() const;
  ::zsearch::LintResult* mutable_e_ext_policy_constraints_empty();
  ::zsearch::LintResult* release_e_ext_policy_constraints_empty();
  void set_allocated_e_ext_policy_constraints_empty(::zsearch::LintResult* e_ext_policy_constraints_empty);

  // .zsearch.LintResult e_ext_policy_constraints_not_critical = 74;
  bool has_e_ext_policy_constraints_not_critical() const;
  void clear_e_ext_policy_constraints_not_critical();
  static const int kEExtPolicyConstraintsNotCriticalFieldNumber = 74;
  const ::zsearch::LintResult& e_ext_policy_constraints_not_critical() const;
  ::zsearch::LintResult* mutable_e_ext_policy_constraints_not_critical();
  ::zsearch::LintResult* release_e_ext_policy_constraints_not_critical();
  void set_allocated_e_ext_policy_constraints_not_critical(::zsearch::LintResult* e_ext_policy_constraints_not_critical);

  // .zsearch.LintResult e_ext_policy_map_any_policy = 75;
  bool has_e_ext_policy_map_any_policy() const;
  void clear_e_ext_policy_map_any_policy();
  static const int kEExtPolicyMapAnyPolicyFieldNumber = 75;
  const ::zsearch::LintResult& e_ext_policy_map_any_policy() const;
  ::zsearch::LintResult* mutable_e_ext_policy_map_any_policy();
  ::zsearch::LintResult* release_e_ext_policy_map_any_policy();
  void set_allocated_e_ext_policy_map_any_policy(::zsearch::LintResult* e_ext_policy_map_any_policy);

  // .zsearch.LintResult w_ext_policy_map_not_critical = 76;
  bool has_w_ext_policy_map_not_critical() const;
  void clear_w_ext_policy_map_not_critical();
  static const int kWExtPolicyMapNotCriticalFieldNumber = 76;
  const ::zsearch::LintResult& w_ext_policy_map_not_critical() const;
  ::zsearch::LintResult* mutable_w_ext_policy_map_not_critical();
  ::zsearch::LintResult* release_w_ext_policy_map_not_critical();
  void set_allocated_w_ext_policy_map_not_critical(::zsearch::LintResult* w_ext_policy_map_not_critical);

  // .zsearch.LintResult w_ext_policy_map_not_in_cert_policy = 77;
  bool has_w_ext_policy_map_not_in_cert_policy() const;
  void clear_w_ext_policy_map_not_in_cert_policy();
  static const int kWExtPolicyMapNotInCertPolicyFieldNumber = 77;
  const ::zsearch::LintResult& w_ext_policy_map_not_in_cert_policy() const;
  ::zsearch::LintResult* mutable_w_ext_policy_map_not_in_cert_policy();
  ::zsearch::LintResult* release_w_ext_policy_map_not_in_cert_policy();
  void set_allocated_w_ext_policy_map_not_in_cert_policy(::zsearch::LintResult* w_ext_policy_map_not_in_cert_policy);

  // .zsearch.LintResult e_ext_san_contains_reserved_ip = 78;
  bool has_e_ext_san_contains_reserved_ip() const;
  void clear_e_ext_san_contains_reserved_ip();
  static const int kEExtSanContainsReservedIpFieldNumber = 78;
  const ::zsearch::LintResult& e_ext_san_contains_reserved_ip() const;
  ::zsearch::LintResult* mutable_e_ext_san_contains_reserved_ip();
  ::zsearch::LintResult* release_e_ext_san_contains_reserved_ip();
  void set_allocated_e_ext_san_contains_reserved_ip(::zsearch::LintResult* e_ext_san_contains_reserved_ip);

  // .zsearch.LintResult w_ext_san_critical_with_subject_dn = 79;
  bool has_w_ext_san_critical_with_subject_dn() const;
  void clear_w_ext_san_critical_with_subject_dn();
  static const int kWExtSanCriticalWithSubjectDnFieldNumber = 79;
  const ::zsearch::LintResult& w_ext_san_critical_with_subject_dn() const;
  ::zsearch::LintResult* mutable_w_ext_san_critical_with_subject_dn();
  ::zsearch::LintResult* release_w_ext_san_critical_with_subject_dn();
  void set_allocated_w_ext_san_critical_with_subject_dn(::zsearch::LintResult* w_ext_san_critical_with_subject_dn);

  // .zsearch.LintResult e_ext_san_directory_name_present = 80;
  bool has_e_ext_san_directory_name_present() const;
  void clear_e_ext_san_directory_name_present();
  static const int kEExtSanDirectoryNamePresentFieldNumber = 80;
  const ::zsearch::LintResult& e_ext_san_directory_name_present() const;
  ::zsearch::LintResult* mutable_e_ext_san_directory_name_present();
  ::zsearch::LintResult* release_e_ext_san_directory_name_present();
  void set_allocated_e_ext_san_directory_name_present(::zsearch::LintResult* e_ext_san_directory_name_present);

  // .zsearch.LintResult e_ext_san_dns_not_ia5_string = 81;
  bool has_e_ext_san_dns_not_ia5_string() const;
  void clear_e_ext_san_dns_not_ia5_string();
  static const int kEExtSanDnsNotIa5StringFieldNumber = 81;
  const ::zsearch::LintResult& e_ext_san_dns_not_ia5_string() const;
  ::zsearch::LintResult* mutable_e_ext_san_dns_not_ia5_string();
  ::zsearch::LintResult* release_e_ext_san_dns_not_ia5_string();
  void set_allocated_e_ext_san_dns_not_ia5_string(::zsearch::LintResult* e_ext_san_dns_not_ia5_string);

  // .zsearch.LintResult e_ext_san_edi_party_name_present = 84;
  bool has_e_ext_san_edi_party_name_present() const;
  void clear_e_ext_san_edi_party_name_present();
  static const int kEExtSanEdiPartyNamePresentFieldNumber = 84;
  const ::zsearch::LintResult& e_ext_san_edi_party_name_present() const;
  ::zsearch::LintResult* mutable_e_ext_san_edi_party_name_present();
  ::zsearch::LintResult* release_e_ext_san_edi_party_name_present();
  void set_allocated_e_ext_san_edi_party_name_present(::zsearch::LintResult* e_ext_san_edi_party_name_present);

  // .zsearch.LintResult e_ext_san_empty_name = 85;
  bool has_e_ext_san_empty_name() const;
  void clear_e_ext_san_empty_name();
  static const int kEExtSanEmptyNameFieldNumber = 85;
  const ::zsearch::LintResult& e_ext_san_empty_name() const;
  ::zsearch::LintResult* mutable_e_ext_san_empty_name();
  ::zsearch::LintResult* release_e_ext_san_empty_name();
  void set_allocated_e_ext_san_empty_name(::zsearch::LintResult* e_ext_san_empty_name);

  // .zsearch.LintResult e_ext_san_missing = 86;
  bool has_e_ext_san_missing() const;
  void clear_e_ext_san_missing();
  static const int kEExtSanMissingFieldNumber = 86;
  const ::zsearch::LintResult& e_ext_san_missing() const;
  ::zsearch::LintResult* mutable_e_ext_san_missing();
  ::zsearch::LintResult* release_e_ext_san_missing();
  void set_allocated_e_ext_san_missing(::zsearch::LintResult* e_ext_san_missing);

  // .zsearch.LintResult e_ext_san_no_entries = 87;
  bool has_e_ext_san_no_entries() const;
  void clear_e_ext_san_no_entries();
  static const int kEExtSanNoEntriesFieldNumber = 87;
  const ::zsearch::LintResult& e_ext_san_no_entries() const;
  ::zsearch::LintResult* mutable_e_ext_san_no_entries();
  ::zsearch::LintResult* release_e_ext_san_no_entries();
  void set_allocated_e_ext_san_no_entries(::zsearch::LintResult* e_ext_san_no_entries);

  // .zsearch.LintResult e_ext_san_not_critical_without_subject = 88;
  bool has_e_ext_san_not_critical_without_subject() const;
  void clear_e_ext_san_not_critical_without_subject();
  static const int kEExtSanNotCriticalWithoutSubjectFieldNumber = 88;
  const ::zsearch::LintResult& e_ext_san_not_critical_without_subject() const;
  ::zsearch::LintResult* mutable_e_ext_san_not_critical_without_subject();
  ::zsearch::LintResult* release_e_ext_san_not_critical_without_subject();
  void set_allocated_e_ext_san_not_critical_without_subject(::zsearch::LintResult* e_ext_san_not_critical_without_subject);

  // .zsearch.LintResult e_ext_san_other_name_present = 89;
  bool has_e_ext_san_other_name_present() const;
  void clear_e_ext_san_other_name_present();
  static const int kEExtSanOtherNamePresentFieldNumber = 89;
  const ::zsearch::LintResult& e_ext_san_other_name_present() const;
  ::zsearch::LintResult* mutable_e_ext_san_other_name_present();
  ::zsearch::LintResult* release_e_ext_san_other_name_present();
  void set_allocated_e_ext_san_other_name_present(::zsearch::LintResult* e_ext_san_other_name_present);

  // .zsearch.LintResult e_ext_san_registered_id_present = 90;
  bool has_e_ext_san_registered_id_present() const;
  void clear_e_ext_san_registered_id_present();
  static const int kEExtSanRegisteredIdPresentFieldNumber = 90;
  const ::zsearch::LintResult& e_ext_san_registered_id_present() const;
  ::zsearch::LintResult* mutable_e_ext_san_registered_id_present();
  ::zsearch::LintResult* release_e_ext_san_registered_id_present();
  void set_allocated_e_ext_san_registered_id_present(::zsearch::LintResult* e_ext_san_registered_id_present);

  // .zsearch.LintResult e_ext_san_rfc822_format_invalid = 91;
  bool has_e_ext_san_rfc822_format_invalid() const;
  void clear_e_ext_san_rfc822_format_invalid();
  static const int kEExtSanRfc822FormatInvalidFieldNumber = 91;
  const ::zsearch::LintResult& e_ext_san_rfc822_format_invalid() const;
  ::zsearch::LintResult* mutable_e_ext_san_rfc822_format_invalid();
  ::zsearch::LintResult* release_e_ext_san_rfc822_format_invalid();
  void set_allocated_e_ext_san_rfc822_format_invalid(::zsearch::LintResult* e_ext_san_rfc822_format_invalid);

  // .zsearch.LintResult e_ext_san_rfc822_name_present = 92;
  bool has_e_ext_san_rfc822_name_present() const;
  void clear_e_ext_san_rfc822_name_present();
  static const int kEExtSanRfc822NamePresentFieldNumber = 92;
  const ::zsearch::LintResult& e_ext_san_rfc822_name_present() const;
  ::zsearch::LintResult* mutable_e_ext_san_rfc822_name_present();
  ::zsearch::LintResult* release_e_ext_san_rfc822_name_present();
  void set_allocated_e_ext_san_rfc822_name_present(::zsearch::LintResult* e_ext_san_rfc822_name_present);

  // .zsearch.LintResult e_ext_san_space_dns_name = 93;
  bool has_e_ext_san_space_dns_name() const;
  void clear_e_ext_san_space_dns_name();
  static const int kEExtSanSpaceDnsNameFieldNumber = 93;
  const ::zsearch::LintResult& e_ext_san_space_dns_name() const;
  ::zsearch::LintResult* mutable_e_ext_san_space_dns_name();
  ::zsearch::LintResult* release_e_ext_san_space_dns_name();
  void set_allocated_e_ext_san_space_dns_name(::zsearch::LintResult* e_ext_san_space_dns_name);

  // .zsearch.LintResult e_ext_san_uniform_resource_identifier_present = 94;
  bool has_e_ext_san_uniform_resource_identifier_present() const;
  void clear_e_ext_san_uniform_resource_identifier_present();
  static const int kEExtSanUniformResourceIdentifierPresentFieldNumber = 94;
  const ::zsearch::LintResult& e_ext_san_uniform_resource_identifier_present() const;
  ::zsearch::LintResult* mutable_e_ext_san_uniform_resource_identifier_present();
  ::zsearch::LintResult* release_e_ext_san_uniform_resource_identifier_present();
  void set_allocated_e_ext_san_uniform_resource_identifier_present(::zsearch::LintResult* e_ext_san_uniform_resource_identifier_present);

  // .zsearch.LintResult e_ext_san_uri_format_invalid = 95;
  bool has_e_ext_san_uri_format_invalid() const;
  void clear_e_ext_san_uri_format_invalid();
  static const int kEExtSanUriFormatInvalidFieldNumber = 95;
  const ::zsearch::LintResult& e_ext_san_uri_format_invalid() const;
  ::zsearch::LintResult* mutable_e_ext_san_uri_format_invalid();
  ::zsearch::LintResult* release_e_ext_san_uri_format_invalid();
  void set_allocated_e_ext_san_uri_format_invalid(::zsearch::LintResult* e_ext_san_uri_format_invalid);

  // .zsearch.LintResult e_ext_san_uri_host_not_fqdn_or_ip = 96;
  bool has_e_ext_san_uri_host_not_fqdn_or_ip() const;
  void clear_e_ext_san_uri_host_not_fqdn_or_ip();
  static const int kEExtSanUriHostNotFqdnOrIpFieldNumber = 96;
  const ::zsearch::LintResult& e_ext_san_uri_host_not_fqdn_or_ip() const;
  ::zsearch::LintResult* mutable_e_ext_san_uri_host_not_fqdn_or_ip();
  ::zsearch::LintResult* release_e_ext_san_uri_host_not_fqdn_or_ip();
  void set_allocated_e_ext_san_uri_host_not_fqdn_or_ip(::zsearch::LintResult* e_ext_san_uri_host_not_fqdn_or_ip);

  // .zsearch.LintResult e_ext_san_uri_not_ia5 = 97;
  bool has_e_ext_san_uri_not_ia5() const;
  void clear_e_ext_san_uri_not_ia5();
  static const int kEExtSanUriNotIa5FieldNumber = 97;
  const ::zsearch::LintResult& e_ext_san_uri_not_ia5() const;
  ::zsearch::LintResult* mutable_e_ext_san_uri_not_ia5();
  ::zsearch::LintResult* release_e_ext_san_uri_not_ia5();
  void set_allocated_e_ext_san_uri_not_ia5(::zsearch::LintResult* e_ext_san_uri_not_ia5);

  // .zsearch.LintResult e_ext_san_uri_relative = 98;
  bool has_e_ext_san_uri_relative() const;
  void clear_e_ext_san_uri_relative();
  static const int kEExtSanUriRelativeFieldNumber = 98;
  const ::zsearch::LintResult& e_ext_san_uri_relative() const;
  ::zsearch::LintResult* mutable_e_ext_san_uri_relative();
  ::zsearch::LintResult* release_e_ext_san_uri_relative();
  void set_allocated_e_ext_san_uri_relative(::zsearch::LintResult* e_ext_san_uri_relative);

  // .zsearch.LintResult e_ext_subject_directory_attr_critical = 99;
  bool has_e_ext_subject_directory_attr_critical() const;
  void clear_e_ext_subject_directory_attr_critical();
  static const int kEExtSubjectDirectoryAttrCriticalFieldNumber = 99;
  const ::zsearch::LintResult& e_ext_subject_directory_attr_critical() const;
  ::zsearch::LintResult* mutable_e_ext_subject_directory_attr_critical();
  ::zsearch::LintResult* release_e_ext_subject_directory_attr_critical();
  void set_allocated_e_ext_subject_directory_attr_critical(::zsearch::LintResult* e_ext_subject_directory_attr_critical);

  // .zsearch.LintResult e_ext_subject_key_identifier_critical = 100;
  bool has_e_ext_subject_key_identifier_critical() const;
  void clear_e_ext_subject_key_identifier_critical();
  static const int kEExtSubjectKeyIdentifierCriticalFieldNumber = 100;
  const ::zsearch::LintResult& e_ext_subject_key_identifier_critical() const;
  ::zsearch::LintResult* mutable_e_ext_subject_key_identifier_critical();
  ::zsearch::LintResult* release_e_ext_subject_key_identifier_critical();
  void set_allocated_e_ext_subject_key_identifier_critical(::zsearch::LintResult* e_ext_subject_key_identifier_critical);

  // .zsearch.LintResult e_ext_subject_key_identifier_missing_ca = 101;
  bool has_e_ext_subject_key_identifier_missing_ca() const;
  void clear_e_ext_subject_key_identifier_missing_ca();
  static const int kEExtSubjectKeyIdentifierMissingCaFieldNumber = 101;
  const ::zsearch::LintResult& e_ext_subject_key_identifier_missing_ca() const;
  ::zsearch::LintResult* mutable_e_ext_subject_key_identifier_missing_ca();
  ::zsearch::LintResult* release_e_ext_subject_key_identifier_missing_ca();
  void set_allocated_e_ext_subject_key_identifier_missing_ca(::zsearch::LintResult* e_ext_subject_key_identifier_missing_ca);

  // .zsearch.LintResult w_ext_subject_key_identifier_missing_sub_cert = 102;
  bool has_w_ext_subject_key_identifier_missing_sub_cert() const;
  void clear_w_ext_subject_key_identifier_missing_sub_cert();
  static const int kWExtSubjectKeyIdentifierMissingSubCertFieldNumber = 102;
  const ::zsearch::LintResult& w_ext_subject_key_identifier_missing_sub_cert() const;
  ::zsearch::LintResult* mutable_w_ext_subject_key_identifier_missing_sub_cert();
  ::zsearch::LintResult* release_w_ext_subject_key_identifier_missing_sub_cert();
  void set_allocated_w_ext_subject_key_identifier_missing_sub_cert(::zsearch::LintResult* w_ext_subject_key_identifier_missing_sub_cert);

  // .zsearch.LintResult e_generalized_time_does_not_include_seconds = 103;
  bool has_e_generalized_time_does_not_include_seconds() const;
  void clear_e_generalized_time_does_not_include_seconds();
  static const int kEGeneralizedTimeDoesNotIncludeSecondsFieldNumber = 103;
  const ::zsearch::LintResult& e_generalized_time_does_not_include_seconds() const;
  ::zsearch::LintResult* mutable_e_generalized_time_does_not_include_seconds();
  ::zsearch::LintResult* release_e_generalized_time_does_not_include_seconds();
  void set_allocated_e_generalized_time_does_not_include_seconds(::zsearch::LintResult* e_generalized_time_does_not_include_seconds);

  // .zsearch.LintResult e_generalized_time_includes_fraction_seconds = 104;
  bool has_e_generalized_time_includes_fraction_seconds() const;
  void clear_e_generalized_time_includes_fraction_seconds();
  static const int kEGeneralizedTimeIncludesFractionSecondsFieldNumber = 104;
  const ::zsearch::LintResult& e_generalized_time_includes_fraction_seconds() const;
  ::zsearch::LintResult* mutable_e_generalized_time_includes_fraction_seconds();
  ::zsearch::LintResult* release_e_generalized_time_includes_fraction_seconds();
  void set_allocated_e_generalized_time_includes_fraction_seconds(::zsearch::LintResult* e_generalized_time_includes_fraction_seconds);

  // .zsearch.LintResult e_generalized_time_not_in_zulu = 105;
  bool has_e_generalized_time_not_in_zulu() const;
  void clear_e_generalized_time_not_in_zulu();
  static const int kEGeneralizedTimeNotInZuluFieldNumber = 105;
  const ::zsearch::LintResult& e_generalized_time_not_in_zulu() const;
  ::zsearch::LintResult* mutable_e_generalized_time_not_in_zulu();
  ::zsearch::LintResult* release_e_generalized_time_not_in_zulu();
  void set_allocated_e_generalized_time_not_in_zulu(::zsearch::LintResult* e_generalized_time_not_in_zulu);

  // .zsearch.LintResult e_ian_dns_name_includes_null_char = 107;
  bool has_e_ian_dns_name_includes_null_char() const;
  void clear_e_ian_dns_name_includes_null_char();
  static const int kEIanDnsNameIncludesNullCharFieldNumber = 107;
  const ::zsearch::LintResult& e_ian_dns_name_includes_null_char() const;
  ::zsearch::LintResult* mutable_e_ian_dns_name_includes_null_char();
  ::zsearch::LintResult* release_e_ian_dns_name_includes_null_char();
  void set_allocated_e_ian_dns_name_includes_null_char(::zsearch::LintResult* e_ian_dns_name_includes_null_char);

  // .zsearch.LintResult e_ian_dns_name_starts_with_period = 108;
  bool has_e_ian_dns_name_starts_with_period() const;
  void clear_e_ian_dns_name_starts_with_period();
  static const int kEIanDnsNameStartsWithPeriodFieldNumber = 108;
  const ::zsearch::LintResult& e_ian_dns_name_starts_with_period() const;
  ::zsearch::LintResult* mutable_e_ian_dns_name_starts_with_period();
  ::zsearch::LintResult* release_e_ian_dns_name_starts_with_period();
  void set_allocated_e_ian_dns_name_starts_with_period(::zsearch::LintResult* e_ian_dns_name_starts_with_period);

  // .zsearch.LintResult w_ian_iana_pub_suffix_empty = 109;
  bool has_w_ian_iana_pub_suffix_empty() const;
  void clear_w_ian_iana_pub_suffix_empty();
  static const int kWIanIanaPubSuffixEmptyFieldNumber = 109;
  const ::zsearch::LintResult& w_ian_iana_pub_suffix_empty() const;
  ::zsearch::LintResult* mutable_w_ian_iana_pub_suffix_empty();
  ::zsearch::LintResult* release_w_ian_iana_pub_suffix_empty();
  void set_allocated_w_ian_iana_pub_suffix_empty(::zsearch::LintResult* w_ian_iana_pub_suffix_empty);

  // .zsearch.LintResult e_inhibit_any_policy_not_critical = 110;
  bool has_e_inhibit_any_policy_not_critical() const;
  void clear_e_inhibit_any_policy_not_critical();
  static const int kEInhibitAnyPolicyNotCriticalFieldNumber = 110;
  const ::zsearch::LintResult& e_inhibit_any_policy_not_critical() const;
  ::zsearch::LintResult* mutable_e_inhibit_any_policy_not_critical();
  ::zsearch::LintResult* release_e_inhibit_any_policy_not_critical();
  void set_allocated_e_inhibit_any_policy_not_critical(::zsearch::LintResult* e_inhibit_any_policy_not_critical);

  // .zsearch.LintResult e_invalid_certificate_version = 111;
  bool has_e_invalid_certificate_version() const;
  void clear_e_invalid_certificate_version();
  static const int kEInvalidCertificateVersionFieldNumber = 111;
  const ::zsearch::LintResult& e_invalid_certificate_version() const;
  ::zsearch::LintResult* mutable_e_invalid_certificate_version();
  ::zsearch::LintResult* release_e_invalid_certificate_version();
  void set_allocated_e_invalid_certificate_version(::zsearch::LintResult* e_invalid_certificate_version);

  // .zsearch.LintResult e_issuer_field_empty = 112;
  bool has_e_issuer_field_empty() const;
  void clear_e_issuer_field_empty();
  static const int kEIssuerFieldEmptyFieldNumber = 112;
  const ::zsearch::LintResult& e_issuer_field_empty() const;
  ::zsearch::LintResult* mutable_e_issuer_field_empty();
  ::zsearch::LintResult* release_e_issuer_field_empty();
  void set_allocated_e_issuer_field_empty(::zsearch::LintResult* e_issuer_field_empty);

  // .zsearch.LintResult e_name_constraint_empty = 113;
  bool has_e_name_constraint_empty() const;
  void clear_e_name_constraint_empty();
  static const int kENameConstraintEmptyFieldNumber = 113;
  const ::zsearch::LintResult& e_name_constraint_empty() const;
  ::zsearch::LintResult* mutable_e_name_constraint_empty();
  ::zsearch::LintResult* release_e_name_constraint_empty();
  void set_allocated_e_name_constraint_empty(::zsearch::LintResult* e_name_constraint_empty);

  // .zsearch.LintResult e_name_constraint_maximum_not_absent = 114;
  bool has_e_name_constraint_maximum_not_absent() const;
  void clear_e_name_constraint_maximum_not_absent();
  static const int kENameConstraintMaximumNotAbsentFieldNumber = 114;
  const ::zsearch::LintResult& e_name_constraint_maximum_not_absent() const;
  ::zsearch::LintResult* mutable_e_name_constraint_maximum_not_absent();
  ::zsearch::LintResult* release_e_name_constraint_maximum_not_absent();
  void set_allocated_e_name_constraint_maximum_not_absent(::zsearch::LintResult* e_name_constraint_maximum_not_absent);

  // .zsearch.LintResult e_name_constraint_minimum_non_zero = 115;
  bool has_e_name_constraint_minimum_non_zero() const;
  void clear_e_name_constraint_minimum_non_zero();
  static const int kENameConstraintMinimumNonZeroFieldNumber = 115;
  const ::zsearch::LintResult& e_name_constraint_minimum_non_zero() const;
  ::zsearch::LintResult* mutable_e_name_constraint_minimum_non_zero();
  ::zsearch::LintResult* release_e_name_constraint_minimum_non_zero();
  void set_allocated_e_name_constraint_minimum_non_zero(::zsearch::LintResult* e_name_constraint_minimum_non_zero);

  // .zsearch.LintResult w_name_constraint_on_edi_party_name = 116;
  bool has_w_name_constraint_on_edi_party_name() const;
  void clear_w_name_constraint_on_edi_party_name();
  static const int kWNameConstraintOnEdiPartyNameFieldNumber = 116;
  const ::zsearch::LintResult& w_name_constraint_on_edi_party_name() const;
  ::zsearch::LintResult* mutable_w_name_constraint_on_edi_party_name();
  ::zsearch::LintResult* release_w_name_constraint_on_edi_party_name();
  void set_allocated_w_name_constraint_on_edi_party_name(::zsearch::LintResult* w_name_constraint_on_edi_party_name);

  // .zsearch.LintResult w_name_constraint_on_registered_id = 117;
  bool has_w_name_constraint_on_registered_id() const;
  void clear_w_name_constraint_on_registered_id();
  static const int kWNameConstraintOnRegisteredIdFieldNumber = 117;
  const ::zsearch::LintResult& w_name_constraint_on_registered_id() const;
  ::zsearch::LintResult* mutable_w_name_constraint_on_registered_id();
  ::zsearch::LintResult* release_w_name_constraint_on_registered_id();
  void set_allocated_w_name_constraint_on_registered_id(::zsearch::LintResult* w_name_constraint_on_registered_id);

  // .zsearch.LintResult w_name_constraint_on_x400 = 118;
  bool has_w_name_constraint_on_x400() const;
  void clear_w_name_constraint_on_x400();
  static const int kWNameConstraintOnX400FieldNumber = 118;
  const ::zsearch::LintResult& w_name_constraint_on_x400() const;
  ::zsearch::LintResult* mutable_w_name_constraint_on_x400();
  ::zsearch::LintResult* release_w_name_constraint_on_x400();
  void set_allocated_w_name_constraint_on_x400(::zsearch::LintResult* w_name_constraint_on_x400);

  // .zsearch.LintResult e_old_root_ca_rsa_mod_less_than_2048_bits = 119;
  bool has_e_old_root_ca_rsa_mod_less_than_2048_bits() const;
  void clear_e_old_root_ca_rsa_mod_less_than_2048_bits();
  static const int kEOldRootCaRsaModLessThan2048BitsFieldNumber = 119;
  const ::zsearch::LintResult& e_old_root_ca_rsa_mod_less_than_2048_bits() const;
  ::zsearch::LintResult* mutable_e_old_root_ca_rsa_mod_less_than_2048_bits();
  ::zsearch::LintResult* release_e_old_root_ca_rsa_mod_less_than_2048_bits();
  void set_allocated_e_old_root_ca_rsa_mod_less_than_2048_bits(::zsearch::LintResult* e_old_root_ca_rsa_mod_less_than_2048_bits);

  // .zsearch.LintResult e_old_sub_ca_rsa_mod_less_than_1024_bits = 120;
  bool has_e_old_sub_ca_rsa_mod_less_than_1024_bits() const;
  void clear_e_old_sub_ca_rsa_mod_less_than_1024_bits();
  static const int kEOldSubCaRsaModLessThan1024BitsFieldNumber = 120;
  const ::zsearch::LintResult& e_old_sub_ca_rsa_mod_less_than_1024_bits() const;
  ::zsearch::LintResult* mutable_e_old_sub_ca_rsa_mod_less_than_1024_bits();
  ::zsearch::LintResult* release_e_old_sub_ca_rsa_mod_less_than_1024_bits();
  void set_allocated_e_old_sub_ca_rsa_mod_less_than_1024_bits(::zsearch::LintResult* e_old_sub_ca_rsa_mod_less_than_1024_bits);

  // .zsearch.LintResult e_old_sub_cert_rsa_mod_less_than_1024_bits = 121;
  bool has_e_old_sub_cert_rsa_mod_less_than_1024_bits() const;
  void clear_e_old_sub_cert_rsa_mod_less_than_1024_bits();
  static const int kEOldSubCertRsaModLessThan1024BitsFieldNumber = 121;
  const ::zsearch::LintResult& e_old_sub_cert_rsa_mod_less_than_1024_bits() const;
  ::zsearch::LintResult* mutable_e_old_sub_cert_rsa_mod_less_than_1024_bits();
  ::zsearch::LintResult* release_e_old_sub_cert_rsa_mod_less_than_1024_bits();
  void set_allocated_e_old_sub_cert_rsa_mod_less_than_1024_bits(::zsearch::LintResult* e_old_sub_cert_rsa_mod_less_than_1024_bits);

  // .zsearch.LintResult e_path_len_constraint_improperly_included = 122;
  bool has_e_path_len_constraint_improperly_included() const;
  void clear_e_path_len_constraint_improperly_included();
  static const int kEPathLenConstraintImproperlyIncludedFieldNumber = 122;
  const ::zsearch::LintResult& e_path_len_constraint_improperly_included() const;
  ::zsearch::LintResult* mutable_e_path_len_constraint_improperly_included();
  ::zsearch::LintResult* release_e_path_len_constraint_improperly_included();
  void set_allocated_e_path_len_constraint_improperly_included(::zsearch::LintResult* e_path_len_constraint_improperly_included);

  // .zsearch.LintResult e_path_len_constraint_zero_or_less = 123;
  bool has_e_path_len_constraint_zero_or_less() const;
  void clear_e_path_len_constraint_zero_or_less();
  static const int kEPathLenConstraintZeroOrLessFieldNumber = 123;
  const ::zsearch::LintResult& e_path_len_constraint_zero_or_less() const;
  ::zsearch::LintResult* mutable_e_path_len_constraint_zero_or_less();
  ::zsearch::LintResult* release_e_path_len_constraint_zero_or_less();
  void set_allocated_e_path_len_constraint_zero_or_less(::zsearch::LintResult* e_path_len_constraint_zero_or_less);

  // .zsearch.LintResult e_public_key_type_not_allowed = 124;
  bool has_e_public_key_type_not_allowed() const;
  void clear_e_public_key_type_not_allowed();
  static const int kEPublicKeyTypeNotAllowedFieldNumber = 124;
  const ::zsearch::LintResult& e_public_key_type_not_allowed() const;
  ::zsearch::LintResult* mutable_e_public_key_type_not_allowed();
  ::zsearch::LintResult* release_e_public_key_type_not_allowed();
  void set_allocated_e_public_key_type_not_allowed(::zsearch::LintResult* e_public_key_type_not_allowed);

  // .zsearch.LintResult w_root_ca_basic_constraints_path_len_constraint_field_present = 125;
  bool has_w_root_ca_basic_constraints_path_len_constraint_field_present() const;
  void clear_w_root_ca_basic_constraints_path_len_constraint_field_present();
  static const int kWRootCaBasicConstraintsPathLenConstraintFieldPresentFieldNumber = 125;
  const ::zsearch::LintResult& w_root_ca_basic_constraints_path_len_constraint_field_present() const;
  ::zsearch::LintResult* mutable_w_root_ca_basic_constraints_path_len_constraint_field_present();
  ::zsearch::LintResult* release_w_root_ca_basic_constraints_path_len_constraint_field_present();
  void set_allocated_w_root_ca_basic_constraints_path_len_constraint_field_present(::zsearch::LintResult* w_root_ca_basic_constraints_path_len_constraint_field_present);

  // .zsearch.LintResult w_root_ca_contains_cert_policy = 126;
  bool has_w_root_ca_contains_cert_policy() const;
  void clear_w_root_ca_contains_cert_policy();
  static const int kWRootCaContainsCertPolicyFieldNumber = 126;
  const ::zsearch::LintResult& w_root_ca_contains_cert_policy() const;
  ::zsearch::LintResult* mutable_w_root_ca_contains_cert_policy();
  ::zsearch::LintResult* release_w_root_ca_contains_cert_policy();
  void set_allocated_w_root_ca_contains_cert_policy(::zsearch::LintResult* w_root_ca_contains_cert_policy);

  // .zsearch.LintResult e_root_ca_extended_key_usage_present = 127;
  bool has_e_root_ca_extended_key_usage_present() const;
  void clear_e_root_ca_extended_key_usage_present();
  static const int kERootCaExtendedKeyUsagePresentFieldNumber = 127;
  const ::zsearch::LintResult& e_root_ca_extended_key_usage_present() const;
  ::zsearch::LintResult* mutable_e_root_ca_extended_key_usage_present();
  ::zsearch::LintResult* release_e_root_ca_extended_key_usage_present();
  void set_allocated_e_root_ca_extended_key_usage_present(::zsearch::LintResult* e_root_ca_extended_key_usage_present);

  // .zsearch.LintResult e_rsa_exp_negative = 128;
  bool has_e_rsa_exp_negative() const;
  void clear_e_rsa_exp_negative();
  static const int kERsaExpNegativeFieldNumber = 128;
  const ::zsearch::LintResult& e_rsa_exp_negative() const;
  ::zsearch::LintResult* mutable_e_rsa_exp_negative();
  ::zsearch::LintResult* release_e_rsa_exp_negative();
  void set_allocated_e_rsa_exp_negative(::zsearch::LintResult* e_rsa_exp_negative);

  // .zsearch.LintResult w_rsa_mod_factors_smaller_than_752 = 129;
  bool has_w_rsa_mod_factors_smaller_than_752() const;
  void clear_w_rsa_mod_factors_smaller_than_752();
  static const int kWRsaModFactorsSmallerThan752FieldNumber = 129;
  const ::zsearch::LintResult& w_rsa_mod_factors_smaller_than_752() const;
  ::zsearch::LintResult* mutable_w_rsa_mod_factors_smaller_than_752();
  ::zsearch::LintResult* release_w_rsa_mod_factors_smaller_than_752();
  void set_allocated_w_rsa_mod_factors_smaller_than_752(::zsearch::LintResult* w_rsa_mod_factors_smaller_than_752);

  // .zsearch.LintResult e_rsa_mod_less_than_2048_bits = 130;
  bool has_e_rsa_mod_less_than_2048_bits() const;
  void clear_e_rsa_mod_less_than_2048_bits();
  static const int kERsaModLessThan2048BitsFieldNumber = 130;
  const ::zsearch::LintResult& e_rsa_mod_less_than_2048_bits() const;
  ::zsearch::LintResult* mutable_e_rsa_mod_less_than_2048_bits();
  ::zsearch::LintResult* release_e_rsa_mod_less_than_2048_bits();
  void set_allocated_e_rsa_mod_less_than_2048_bits(::zsearch::LintResult* e_rsa_mod_less_than_2048_bits);

  // .zsearch.LintResult w_rsa_mod_not_odd = 131;
  bool has_w_rsa_mod_not_odd() const;
  void clear_w_rsa_mod_not_odd();
  static const int kWRsaModNotOddFieldNumber = 131;
  const ::zsearch::LintResult& w_rsa_mod_not_odd() const;
  ::zsearch::LintResult* mutable_w_rsa_mod_not_odd();
  ::zsearch::LintResult* release_w_rsa_mod_not_odd();
  void set_allocated_w_rsa_mod_not_odd(::zsearch::LintResult* w_rsa_mod_not_odd);

  // .zsearch.LintResult w_rsa_public_exponent_not_in_range = 132;
  bool has_w_rsa_public_exponent_not_in_range() const;
  void clear_w_rsa_public_exponent_not_in_range();
  static const int kWRsaPublicExponentNotInRangeFieldNumber = 132;
  const ::zsearch::LintResult& w_rsa_public_exponent_not_in_range() const;
  ::zsearch::LintResult* mutable_w_rsa_public_exponent_not_in_range();
  ::zsearch::LintResult* release_w_rsa_public_exponent_not_in_range();
  void set_allocated_w_rsa_public_exponent_not_in_range(::zsearch::LintResult* w_rsa_public_exponent_not_in_range);

  // .zsearch.LintResult e_rsa_public_exponent_not_odd = 133;
  bool has_e_rsa_public_exponent_not_odd() const;
  void clear_e_rsa_public_exponent_not_odd();
  static const int kERsaPublicExponentNotOddFieldNumber = 133;
  const ::zsearch::LintResult& e_rsa_public_exponent_not_odd() const;
  ::zsearch::LintResult* mutable_e_rsa_public_exponent_not_odd();
  ::zsearch::LintResult* release_e_rsa_public_exponent_not_odd();
  void set_allocated_e_rsa_public_exponent_not_odd(::zsearch::LintResult* e_rsa_public_exponent_not_odd);

  // .zsearch.LintResult e_rsa_public_exponent_too_small = 134;
  bool has_e_rsa_public_exponent_too_small() const;
  void clear_e_rsa_public_exponent_too_small();
  static const int kERsaPublicExponentTooSmallFieldNumber = 134;
  const ::zsearch::LintResult& e_rsa_public_exponent_too_small() const;
  ::zsearch::LintResult* mutable_e_rsa_public_exponent_too_small();
  ::zsearch::LintResult* release_e_rsa_public_exponent_too_small();
  void set_allocated_e_rsa_public_exponent_too_small(::zsearch::LintResult* e_rsa_public_exponent_too_small);

  // .zsearch.LintResult e_san_dns_name_includes_null_char = 135;
  bool has_e_san_dns_name_includes_null_char() const;
  void clear_e_san_dns_name_includes_null_char();
  static const int kESanDnsNameIncludesNullCharFieldNumber = 135;
  const ::zsearch::LintResult& e_san_dns_name_includes_null_char() const;
  ::zsearch::LintResult* mutable_e_san_dns_name_includes_null_char();
  ::zsearch::LintResult* release_e_san_dns_name_includes_null_char();
  void set_allocated_e_san_dns_name_includes_null_char(::zsearch::LintResult* e_san_dns_name_includes_null_char);

  // .zsearch.LintResult e_san_dns_name_starts_with_period = 136;
  bool has_e_san_dns_name_starts_with_period() const;
  void clear_e_san_dns_name_starts_with_period();
  static const int kESanDnsNameStartsWithPeriodFieldNumber = 136;
  const ::zsearch::LintResult& e_san_dns_name_starts_with_period() const;
  ::zsearch::LintResult* mutable_e_san_dns_name_starts_with_period();
  ::zsearch::LintResult* release_e_san_dns_name_starts_with_period();
  void set_allocated_e_san_dns_name_starts_with_period(::zsearch::LintResult* e_san_dns_name_starts_with_period);

  // .zsearch.LintResult w_san_iana_pub_suffix_empty = 137;
  bool has_w_san_iana_pub_suffix_empty() const;
  void clear_w_san_iana_pub_suffix_empty();
  static const int kWSanIanaPubSuffixEmptyFieldNumber = 137;
  const ::zsearch::LintResult& w_san_iana_pub_suffix_empty() const;
  ::zsearch::LintResult* mutable_w_san_iana_pub_suffix_empty();
  ::zsearch::LintResult* release_w_san_iana_pub_suffix_empty();
  void set_allocated_w_san_iana_pub_suffix_empty(::zsearch::LintResult* w_san_iana_pub_suffix_empty);

  // .zsearch.LintResult e_serial_number_longer_than_20_octets = 138;
  bool has_e_serial_number_longer_than_20_octets() const;
  void clear_e_serial_number_longer_than_20_octets();
  static const int kESerialNumberLongerThan20OctetsFieldNumber = 138;
  const ::zsearch::LintResult& e_serial_number_longer_than_20_octets() const;
  ::zsearch::LintResult* mutable_e_serial_number_longer_than_20_octets();
  ::zsearch::LintResult* release_e_serial_number_longer_than_20_octets();
  void set_allocated_e_serial_number_longer_than_20_octets(::zsearch::LintResult* e_serial_number_longer_than_20_octets);

  // .zsearch.LintResult e_serial_number_not_positive = 139;
  bool has_e_serial_number_not_positive() const;
  void clear_e_serial_number_not_positive();
  static const int kESerialNumberNotPositiveFieldNumber = 139;
  const ::zsearch::LintResult& e_serial_number_not_positive() const;
  ::zsearch::LintResult* mutable_e_serial_number_not_positive();
  ::zsearch::LintResult* release_e_serial_number_not_positive();
  void set_allocated_e_serial_number_not_positive(::zsearch::LintResult* e_serial_number_not_positive);

  // .zsearch.LintResult w_sub_ca_aia_does_not_contain_issuing_ca_url = 140;
  bool has_w_sub_ca_aia_does_not_contain_issuing_ca_url() const;
  void clear_w_sub_ca_aia_does_not_contain_issuing_ca_url();
  static const int kWSubCaAiaDoesNotContainIssuingCaUrlFieldNumber = 140;
  const ::zsearch::LintResult& w_sub_ca_aia_does_not_contain_issuing_ca_url() const;
  ::zsearch::LintResult* mutable_w_sub_ca_aia_does_not_contain_issuing_ca_url();
  ::zsearch::LintResult* release_w_sub_ca_aia_does_not_contain_issuing_ca_url();
  void set_allocated_w_sub_ca_aia_does_not_contain_issuing_ca_url(::zsearch::LintResult* w_sub_ca_aia_does_not_contain_issuing_ca_url);

  // .zsearch.LintResult e_sub_ca_aia_does_not_contain_ocsp_url = 141;
  bool has_e_sub_ca_aia_does_not_contain_ocsp_url() const;
  void clear_e_sub_ca_aia_does_not_contain_ocsp_url();
  static const int kESubCaAiaDoesNotContainOcspUrlFieldNumber = 141;
  const ::zsearch::LintResult& e_sub_ca_aia_does_not_contain_ocsp_url() const;
  ::zsearch::LintResult* mutable_e_sub_ca_aia_does_not_contain_ocsp_url();
  ::zsearch::LintResult* release_e_sub_ca_aia_does_not_contain_ocsp_url();
  void set_allocated_e_sub_ca_aia_does_not_contain_ocsp_url(::zsearch::LintResult* e_sub_ca_aia_does_not_contain_ocsp_url);

  // .zsearch.LintResult e_sub_ca_aia_missing = 142;
  bool has_e_sub_ca_aia_missing() const;
  void clear_e_sub_ca_aia_missing();
  static const int kESubCaAiaMissingFieldNumber = 142;
  const ::zsearch::LintResult& e_sub_ca_aia_missing() const;
  ::zsearch::LintResult* mutable_e_sub_ca_aia_missing();
  ::zsearch::LintResult* release_e_sub_ca_aia_missing();
  void set_allocated_e_sub_ca_aia_missing(::zsearch::LintResult* e_sub_ca_aia_missing);

  // .zsearch.LintResult w_sub_ca_certificate_policies_marked_critical = 143;
  bool has_w_sub_ca_certificate_policies_marked_critical() const;
  void clear_w_sub_ca_certificate_policies_marked_critical();
  static const int kWSubCaCertificatePoliciesMarkedCriticalFieldNumber = 143;
  const ::zsearch::LintResult& w_sub_ca_certificate_policies_marked_critical() const;
  ::zsearch::LintResult* mutable_w_sub_ca_certificate_policies_marked_critical();
  ::zsearch::LintResult* release_w_sub_ca_certificate_policies_marked_critical();
  void set_allocated_w_sub_ca_certificate_policies_marked_critical(::zsearch::LintResult* w_sub_ca_certificate_policies_marked_critical);

  // .zsearch.LintResult e_sub_ca_certificate_policies_missing = 144;
  bool has_e_sub_ca_certificate_policies_missing() const;
  void clear_e_sub_ca_certificate_policies_missing();
  static const int kESubCaCertificatePoliciesMissingFieldNumber = 144;
  const ::zsearch::LintResult& e_sub_ca_certificate_policies_missing() const;
  ::zsearch::LintResult* mutable_e_sub_ca_certificate_policies_missing();
  ::zsearch::LintResult* release_e_sub_ca_certificate_policies_missing();
  void set_allocated_e_sub_ca_certificate_policies_missing(::zsearch::LintResult* e_sub_ca_certificate_policies_missing);

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_does_not_contain_url = 145;
  bool has_e_sub_ca_crl_distribution_points_does_not_contain_url() const;
  void clear_e_sub_ca_crl_distribution_points_does_not_contain_url();
  static const int kESubCaCrlDistributionPointsDoesNotContainUrlFieldNumber = 145;
  const ::zsearch::LintResult& e_sub_ca_crl_distribution_points_does_not_contain_url() const;
  ::zsearch::LintResult* mutable_e_sub_ca_crl_distribution_points_does_not_contain_url();
  ::zsearch::LintResult* release_e_sub_ca_crl_distribution_points_does_not_contain_url();
  void set_allocated_e_sub_ca_crl_distribution_points_does_not_contain_url(::zsearch::LintResult* e_sub_ca_crl_distribution_points_does_not_contain_url);

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_marked_critical = 146;
  bool has_e_sub_ca_crl_distribution_points_marked_critical() const;
  void clear_e_sub_ca_crl_distribution_points_marked_critical();
  static const int kESubCaCrlDistributionPointsMarkedCriticalFieldNumber = 146;
  const ::zsearch::LintResult& e_sub_ca_crl_distribution_points_marked_critical() const;
  ::zsearch::LintResult* mutable_e_sub_ca_crl_distribution_points_marked_critical();
  ::zsearch::LintResult* release_e_sub_ca_crl_distribution_points_marked_critical();
  void set_allocated_e_sub_ca_crl_distribution_points_marked_critical(::zsearch::LintResult* e_sub_ca_crl_distribution_points_marked_critical);

  // .zsearch.LintResult e_sub_ca_crl_distribution_points_missing = 147;
  bool has_e_sub_ca_crl_distribution_points_missing() const;
  void clear_e_sub_ca_crl_distribution_points_missing();
  static const int kESubCaCrlDistributionPointsMissingFieldNumber = 147;
  const ::zsearch::LintResult& e_sub_ca_crl_distribution_points_missing() const;
  ::zsearch::LintResult* mutable_e_sub_ca_crl_distribution_points_missing();
  ::zsearch::LintResult* release_e_sub_ca_crl_distribution_points_missing();
  void set_allocated_e_sub_ca_crl_distribution_points_missing(::zsearch::LintResult* e_sub_ca_crl_distribution_points_missing);

  // .zsearch.LintResult w_sub_ca_eku_critical = 148;
  bool has_w_sub_ca_eku_critical() const;
  void clear_w_sub_ca_eku_critical();
  static const int kWSubCaEkuCriticalFieldNumber = 148;
  const ::zsearch::LintResult& w_sub_ca_eku_critical() const;
  ::zsearch::LintResult* mutable_w_sub_ca_eku_critical();
  ::zsearch::LintResult* release_w_sub_ca_eku_critical();
  void set_allocated_w_sub_ca_eku_critical(::zsearch::LintResult* w_sub_ca_eku_critical);

  // .zsearch.LintResult w_sub_ca_name_constraints_not_critical = 149;
  bool has_w_sub_ca_name_constraints_not_critical() const;
  void clear_w_sub_ca_name_constraints_not_critical();
  static const int kWSubCaNameConstraintsNotCriticalFieldNumber = 149;
  const ::zsearch::LintResult& w_sub_ca_name_constraints_not_critical() const;
  ::zsearch::LintResult* mutable_w_sub_ca_name_constraints_not_critical();
  ::zsearch::LintResult* release_w_sub_ca_name_constraints_not_critical();
  void set_allocated_w_sub_ca_name_constraints_not_critical(::zsearch::LintResult* w_sub_ca_name_constraints_not_critical);

  // .zsearch.LintResult e_sub_cert_aia_does_not_contain_ocsp_url = 153;
  bool has_e_sub_cert_aia_does_not_contain_ocsp_url() const;
  void clear_e_sub_cert_aia_does_not_contain_ocsp_url();
  static const int kESubCertAiaDoesNotContainOcspUrlFieldNumber = 153;
  const ::zsearch::LintResult& e_sub_cert_aia_does_not_contain_ocsp_url() const;
  ::zsearch::LintResult* mutable_e_sub_cert_aia_does_not_contain_ocsp_url();
  ::zsearch::LintResult* release_e_sub_cert_aia_does_not_contain_ocsp_url();
  void set_allocated_e_sub_cert_aia_does_not_contain_ocsp_url(::zsearch::LintResult* e_sub_cert_aia_does_not_contain_ocsp_url);

  // .zsearch.LintResult e_sub_cert_aia_missing = 154;
  bool has_e_sub_cert_aia_missing() const;
  void clear_e_sub_cert_aia_missing();
  static const int kESubCertAiaMissingFieldNumber = 154;
  const ::zsearch::LintResult& e_sub_cert_aia_missing() const;
  ::zsearch::LintResult* mutable_e_sub_cert_aia_missing();
  ::zsearch::LintResult* release_e_sub_cert_aia_missing();
  void set_allocated_e_sub_cert_aia_missing(::zsearch::LintResult* e_sub_cert_aia_missing);

  // .zsearch.LintResult e_sub_cert_cert_policy_empty = 155;
  bool has_e_sub_cert_cert_policy_empty() const;
  void clear_e_sub_cert_cert_policy_empty();
  static const int kESubCertCertPolicyEmptyFieldNumber = 155;
  const ::zsearch::LintResult& e_sub_cert_cert_policy_empty() const;
  ::zsearch::LintResult* mutable_e_sub_cert_cert_policy_empty();
  ::zsearch::LintResult* release_e_sub_cert_cert_policy_empty();
  void set_allocated_e_sub_cert_cert_policy_empty(::zsearch::LintResult* e_sub_cert_cert_policy_empty);

  // .zsearch.LintResult w_sub_cert_certificate_policies_marked_critical = 156;
  bool has_w_sub_cert_certificate_policies_marked_critical() const;
  void clear_w_sub_cert_certificate_policies_marked_critical();
  static const int kWSubCertCertificatePoliciesMarkedCriticalFieldNumber = 156;
  const ::zsearch::LintResult& w_sub_cert_certificate_policies_marked_critical() const;
  ::zsearch::LintResult* mutable_w_sub_cert_certificate_policies_marked_critical();
  ::zsearch::LintResult* release_w_sub_cert_certificate_policies_marked_critical();
  void set_allocated_w_sub_cert_certificate_policies_marked_critical(::zsearch::LintResult* w_sub_cert_certificate_policies_marked_critical);

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_does_not_contain_url = 157;
  bool has_e_sub_cert_crl_distribution_points_does_not_contain_url() const;
  void clear_e_sub_cert_crl_distribution_points_does_not_contain_url();
  static const int kESubCertCrlDistributionPointsDoesNotContainUrlFieldNumber = 157;
  const ::zsearch::LintResult& e_sub_cert_crl_distribution_points_does_not_contain_url() const;
  ::zsearch::LintResult* mutable_e_sub_cert_crl_distribution_points_does_not_contain_url();
  ::zsearch::LintResult* release_e_sub_cert_crl_distribution_points_does_not_contain_url();
  void set_allocated_e_sub_cert_crl_distribution_points_does_not_contain_url(::zsearch::LintResult* e_sub_cert_crl_distribution_points_does_not_contain_url);

  // .zsearch.LintResult e_sub_cert_crl_distribution_points_marked_critical = 158;
  bool has_e_sub_cert_crl_distribution_points_marked_critical() const;
  void clear_e_sub_cert_crl_distribution_points_marked_critical();
  static const int kESubCertCrlDistributionPointsMarkedCriticalFieldNumber = 158;
  const ::zsearch::LintResult& e_sub_cert_crl_distribution_points_marked_critical() const;
  ::zsearch::LintResult* mutable_e_sub_cert_crl_distribution_points_marked_critical();
  ::zsearch::LintResult* release_e_sub_cert_crl_distribution_points_marked_critical();
  void set_allocated_e_sub_cert_crl_distribution_points_marked_critical(::zsearch::LintResult* e_sub_cert_crl_distribution_points_marked_critical);

  // .zsearch.LintResult w_sub_cert_eku_extra_values = 159;
  bool has_w_sub_cert_eku_extra_values() const;
  void clear_w_sub_cert_eku_extra_values();
  static const int kWSubCertEkuExtraValuesFieldNumber = 159;
  const ::zsearch::LintResult& w_sub_cert_eku_extra_values() const;
  ::zsearch::LintResult* mutable_w_sub_cert_eku_extra_values();
  ::zsearch::LintResult* release_w_sub_cert_eku_extra_values();
  void set_allocated_w_sub_cert_eku_extra_values(::zsearch::LintResult* w_sub_cert_eku_extra_values);

  // .zsearch.LintResult e_sub_cert_eku_missing = 160;
  bool has_e_sub_cert_eku_missing() const;
  void clear_e_sub_cert_eku_missing();
  static const int kESubCertEkuMissingFieldNumber = 160;
  const ::zsearch::LintResult& e_sub_cert_eku_missing() const;
  ::zsearch::LintResult* mutable_e_sub_cert_eku_missing();
  ::zsearch::LintResult* release_e_sub_cert_eku_missing();
  void set_allocated_e_sub_cert_eku_missing(::zsearch::LintResult* e_sub_cert_eku_missing);

  // .zsearch.LintResult e_sub_cert_eku_server_auth_client_auth_missing = 161;
  bool has_e_sub_cert_eku_server_auth_client_auth_missing() const;
  void clear_e_sub_cert_eku_server_auth_client_auth_missing();
  static const int kESubCertEkuServerAuthClientAuthMissingFieldNumber = 161;
  const ::zsearch::LintResult& e_sub_cert_eku_server_auth_client_auth_missing() const;
  ::zsearch::LintResult* mutable_e_sub_cert_eku_server_auth_client_auth_missing();
  ::zsearch::LintResult* release_e_sub_cert_eku_server_auth_client_auth_missing();
  void set_allocated_e_sub_cert_eku_server_auth_client_auth_missing(::zsearch::LintResult* e_sub_cert_eku_server_auth_client_auth_missing);

  // .zsearch.LintResult e_sub_cert_key_usage_cert_sign_bit_set = 162;
  bool has_e_sub_cert_key_usage_cert_sign_bit_set() const;
  void clear_e_sub_cert_key_usage_cert_sign_bit_set();
  static const int kESubCertKeyUsageCertSignBitSetFieldNumber = 162;
  const ::zsearch::LintResult& e_sub_cert_key_usage_cert_sign_bit_set() const;
  ::zsearch::LintResult* mutable_e_sub_cert_key_usage_cert_sign_bit_set();
  ::zsearch::LintResult* release_e_sub_cert_key_usage_cert_sign_bit_set();
  void set_allocated_e_sub_cert_key_usage_cert_sign_bit_set(::zsearch::LintResult* e_sub_cert_key_usage_cert_sign_bit_set);

  // .zsearch.LintResult e_sub_cert_or_sub_ca_using_sha1 = 163;
  bool has_e_sub_cert_or_sub_ca_using_sha1() const;
  void clear_e_sub_cert_or_sub_ca_using_sha1();
  static const int kESubCertOrSubCaUsingSha1FieldNumber = 163;
  const ::zsearch::LintResult& e_sub_cert_or_sub_ca_using_sha1() const;
  ::zsearch::LintResult* mutable_e_sub_cert_or_sub_ca_using_sha1();
  ::zsearch::LintResult* release_e_sub_cert_or_sub_ca_using_sha1();
  void set_allocated_e_sub_cert_or_sub_ca_using_sha1(::zsearch::LintResult* e_sub_cert_or_sub_ca_using_sha1);

  // .zsearch.LintResult w_sub_cert_sha1_expiration_too_long = 164;
  bool has_w_sub_cert_sha1_expiration_too_long() const;
  void clear_w_sub_cert_sha1_expiration_too_long();
  static const int kWSubCertSha1ExpirationTooLongFieldNumber = 164;
  const ::zsearch::LintResult& w_sub_cert_sha1_expiration_too_long() const;
  ::zsearch::LintResult* mutable_w_sub_cert_sha1_expiration_too_long();
  ::zsearch::LintResult* release_w_sub_cert_sha1_expiration_too_long();
  void set_allocated_w_sub_cert_sha1_expiration_too_long(::zsearch::LintResult* w_sub_cert_sha1_expiration_too_long);

  // .zsearch.LintResult n_subject_common_name_included = 166;
  bool has_n_subject_common_name_included() const;
  void clear_n_subject_common_name_included();
  static const int kNSubjectCommonNameIncludedFieldNumber = 166;
  const ::zsearch::LintResult& n_subject_common_name_included() const;
  ::zsearch::LintResult* mutable_n_subject_common_name_included();
  ::zsearch::LintResult* release_n_subject_common_name_included();
  void set_allocated_n_subject_common_name_included(::zsearch::LintResult* n_subject_common_name_included);

  // .zsearch.LintResult e_subject_common_name_not_from_san = 167;
  bool has_e_subject_common_name_not_from_san() const;
  void clear_e_subject_common_name_not_from_san();
  static const int kESubjectCommonNameNotFromSanFieldNumber = 167;
  const ::zsearch::LintResult& e_subject_common_name_not_from_san() const;
  ::zsearch::LintResult* mutable_e_subject_common_name_not_from_san();
  ::zsearch::LintResult* release_e_subject_common_name_not_from_san();
  void set_allocated_e_subject_common_name_not_from_san(::zsearch::LintResult* e_subject_common_name_not_from_san);

  // .zsearch.LintResult e_subject_contains_noninformational_value = 168;
  bool has_e_subject_contains_noninformational_value() const;
  void clear_e_subject_contains_noninformational_value();
  static const int kESubjectContainsNoninformationalValueFieldNumber = 168;
  const ::zsearch::LintResult& e_subject_contains_noninformational_value() const;
  ::zsearch::LintResult* mutable_e_subject_contains_noninformational_value();
  ::zsearch::LintResult* release_e_subject_contains_noninformational_value();
  void set_allocated_e_subject_contains_noninformational_value(::zsearch::LintResult* e_subject_contains_noninformational_value);

  // .zsearch.LintResult e_subject_contains_reserved_ip = 169;
  bool has_e_subject_contains_reserved_ip() const;
  void clear_e_subject_contains_reserved_ip();
  static const int kESubjectContainsReservedIpFieldNumber = 169;
  const ::zsearch::LintResult& e_subject_contains_reserved_ip() const;
  ::zsearch::LintResult* mutable_e_subject_contains_reserved_ip();
  ::zsearch::LintResult* release_e_subject_contains_reserved_ip();
  void set_allocated_e_subject_contains_reserved_ip(::zsearch::LintResult* e_subject_contains_reserved_ip);

  // .zsearch.LintResult e_subject_country_not_iso = 170;
  bool has_e_subject_country_not_iso() const;
  void clear_e_subject_country_not_iso();
  static const int kESubjectCountryNotIsoFieldNumber = 170;
  const ::zsearch::LintResult& e_subject_country_not_iso() const;
  ::zsearch::LintResult* mutable_e_subject_country_not_iso();
  ::zsearch::LintResult* release_e_subject_country_not_iso();
  void set_allocated_e_subject_country_not_iso(::zsearch::LintResult* e_subject_country_not_iso);

  // .zsearch.LintResult e_subject_empty_without_san = 171;
  bool has_e_subject_empty_without_san() const;
  void clear_e_subject_empty_without_san();
  static const int kESubjectEmptyWithoutSanFieldNumber = 171;
  const ::zsearch::LintResult& e_subject_empty_without_san() const;
  ::zsearch::LintResult* mutable_e_subject_empty_without_san();
  ::zsearch::LintResult* release_e_subject_empty_without_san();
  void set_allocated_e_subject_empty_without_san(::zsearch::LintResult* e_subject_empty_without_san);

  // .zsearch.LintResult e_subject_info_access_marked_critical = 172;
  bool has_e_subject_info_access_marked_critical() const;
  void clear_e_subject_info_access_marked_critical();
  static const int kESubjectInfoAccessMarkedCriticalFieldNumber = 172;
  const ::zsearch::LintResult& e_subject_info_access_marked_critical() const;
  ::zsearch::LintResult* mutable_e_subject_info_access_marked_critical();
  ::zsearch::LintResult* release_e_subject_info_access_marked_critical();
  void set_allocated_e_subject_info_access_marked_critical(::zsearch::LintResult* e_subject_info_access_marked_critical);

  // .zsearch.LintResult e_subject_not_dn = 174;
  bool has_e_subject_not_dn() const;
  void clear_e_subject_not_dn();
  static const int kESubjectNotDnFieldNumber = 174;
  const ::zsearch::LintResult& e_subject_not_dn() const;
  ::zsearch::LintResult* mutable_e_subject_not_dn();
  ::zsearch::LintResult* release_e_subject_not_dn();
  void set_allocated_e_subject_not_dn(::zsearch::LintResult* e_subject_not_dn);

  // .zsearch.LintResult e_utc_time_does_not_include_seconds = 180;
  bool has_e_utc_time_does_not_include_seconds() const;
  void clear_e_utc_time_does_not_include_seconds();
  static const int kEUtcTimeDoesNotIncludeSecondsFieldNumber = 180;
  const ::zsearch::LintResult& e_utc_time_does_not_include_seconds() const;
  ::zsearch::LintResult* mutable_e_utc_time_does_not_include_seconds();
  ::zsearch::LintResult* release_e_utc_time_does_not_include_seconds();
  void set_allocated_e_utc_time_does_not_include_seconds(::zsearch::LintResult* e_utc_time_does_not_include_seconds);

  // .zsearch.LintResult e_utc_time_not_in_zulu = 181;
  bool has_e_utc_time_not_in_zulu() const;
  void clear_e_utc_time_not_in_zulu();
  static const int kEUtcTimeNotInZuluFieldNumber = 181;
  const ::zsearch::LintResult& e_utc_time_not_in_zulu() const;
  ::zsearch::LintResult* mutable_e_utc_time_not_in_zulu();
  ::zsearch::LintResult* release_e_utc_time_not_in_zulu();
  void set_allocated_e_utc_time_not_in_zulu(::zsearch::LintResult* e_utc_time_not_in_zulu);

  // .zsearch.LintResult e_validity_time_not_positive = 182;
  bool has_e_validity_time_not_positive() const;
  void clear_e_validity_time_not_positive();
  static const int kEValidityTimeNotPositiveFieldNumber = 182;
  const ::zsearch::LintResult& e_validity_time_not_positive() const;
  ::zsearch::LintResult* mutable_e_validity_time_not_positive();
  ::zsearch::LintResult* release_e_validity_time_not_positive();
  void set_allocated_e_validity_time_not_positive(::zsearch::LintResult* e_validity_time_not_positive);

  // .zsearch.LintResult e_wrong_time_format_pre2050 = 183;
  bool has_e_wrong_time_format_pre2050() const;
  void clear_e_wrong_time_format_pre2050();
  static const int kEWrongTimeFormatPre2050FieldNumber = 183;
  const ::zsearch::LintResult& e_wrong_time_format_pre2050() const;
  ::zsearch::LintResult* mutable_e_wrong_time_format_pre2050();
  ::zsearch::LintResult* release_e_wrong_time_format_pre2050();
  void set_allocated_e_wrong_time_format_pre2050(::zsearch::LintResult* e_wrong_time_format_pre2050);

  // .zsearch.LintResult e_rsa_no_public_key = 184;
  bool has_e_rsa_no_public_key() const;
  void clear_e_rsa_no_public_key();
  static const int kERsaNoPublicKeyFieldNumber = 184;
  const ::zsearch::LintResult& e_rsa_no_public_key() const;
  ::zsearch::LintResult* mutable_e_rsa_no_public_key();
  ::zsearch::LintResult* release_e_rsa_no_public_key();
  void set_allocated_e_rsa_no_public_key(::zsearch::LintResult* e_rsa_no_public_key);

  // .zsearch.LintResult e_sub_cert_certificate_policies_missing = 185;
  bool has_e_sub_cert_certificate_policies_missing() const;
  void clear_e_sub_cert_certificate_policies_missing();
  static const int kESubCertCertificatePoliciesMissingFieldNumber = 185;
  const ::zsearch::LintResult& e_sub_cert_certificate_policies_missing() const;
  ::zsearch::LintResult* mutable_e_sub_cert_certificate_policies_missing();
  ::zsearch::LintResult* release_e_sub_cert_certificate_policies_missing();
  void set_allocated_e_sub_cert_certificate_policies_missing(::zsearch::LintResult* e_sub_cert_certificate_policies_missing);

  // .zsearch.LintResult e_sub_cert_key_usage_crl_sign_bit_set = 186;
  bool has_e_sub_cert_key_usage_crl_sign_bit_set() const;
  void clear_e_sub_cert_key_usage_crl_sign_bit_set();
  static const int kESubCertKeyUsageCrlSignBitSetFieldNumber = 186;
  const ::zsearch::LintResult& e_sub_cert_key_usage_crl_sign_bit_set() const;
  ::zsearch::LintResult* mutable_e_sub_cert_key_usage_crl_sign_bit_set();
  ::zsearch::LintResult* release_e_sub_cert_key_usage_crl_sign_bit_set();
  void set_allocated_e_sub_cert_key_usage_crl_sign_bit_set(::zsearch::LintResult* e_sub_cert_key_usage_crl_sign_bit_set);

  // .zsearch.LintResult e_subject_common_name_max_length = 187;
  bool has_e_subject_common_name_max_length() const;
  void clear_e_subject_common_name_max_length();
  static const int kESubjectCommonNameMaxLengthFieldNumber = 187;
  const ::zsearch::LintResult& e_subject_common_name_max_length() const;
  ::zsearch::LintResult* mutable_e_subject_common_name_max_length();
  ::zsearch::LintResult* release_e_subject_common_name_max_length();
  void set_allocated_e_subject_common_name_max_length(::zsearch::LintResult* e_subject_common_name_max_length);

  // .zsearch.LintResult e_subject_locality_name_max_length = 188;
  bool has_e_subject_locality_name_max_length() const;
  void clear_e_subject_locality_name_max_length();
  static const int kESubjectLocalityNameMaxLengthFieldNumber = 188;
  const ::zsearch::LintResult& e_subject_locality_name_max_length() const;
  ::zsearch::LintResult* mutable_e_subject_locality_name_max_length();
  ::zsearch::LintResult* release_e_subject_locality_name_max_length();
  void set_allocated_e_subject_locality_name_max_length(::zsearch::LintResult* e_subject_locality_name_max_length);

  // .zsearch.LintResult e_subject_organization_name_max_length = 189;
  bool has_e_subject_organization_name_max_length() const;
  void clear_e_subject_organization_name_max_length();
  static const int kESubjectOrganizationNameMaxLengthFieldNumber = 189;
  const ::zsearch::LintResult& e_subject_organization_name_max_length() const;
  ::zsearch::LintResult* mutable_e_subject_organization_name_max_length();
  ::zsearch::LintResult* release_e_subject_organization_name_max_length();
  void set_allocated_e_subject_organization_name_max_length(::zsearch::LintResult* e_subject_organization_name_max_length);

  // .zsearch.LintResult e_subject_organizational_unit_name_max_length = 190;
  bool has_e_subject_organizational_unit_name_max_length() const;
  void clear_e_subject_organizational_unit_name_max_length();
  static const int kESubjectOrganizationalUnitNameMaxLengthFieldNumber = 190;
  const ::zsearch::LintResult& e_subject_organizational_unit_name_max_length() const;
  ::zsearch::LintResult* mutable_e_subject_organizational_unit_name_max_length();
  ::zsearch::LintResult* release_e_subject_organizational_unit_name_max_length();
  void set_allocated_e_subject_organizational_unit_name_max_length(::zsearch::LintResult* e_subject_organizational_unit_name_max_length);

  // .zsearch.LintResult e_subject_state_name_max_length = 191;
  bool has_e_subject_state_name_max_length() const;
  void clear_e_subject_state_name_max_length();
  static const int kESubjectStateNameMaxLengthFieldNumber = 191;
  const ::zsearch::LintResult& e_subject_state_name_max_length() const;
  ::zsearch::LintResult* mutable_e_subject_state_name_max_length();
  ::zsearch::LintResult* release_e_subject_state_name_max_length();
  void set_allocated_e_subject_state_name_max_length(::zsearch::LintResult* e_subject_state_name_max_length);

  // .zsearch.LintResult w_multiple_subject_rdn = 192;
  bool has_w_multiple_subject_rdn() const;
  void clear_w_multiple_subject_rdn();
  static const int kWMultipleSubjectRdnFieldNumber = 192;
  const ::zsearch::LintResult& w_multiple_subject_rdn() const;
  ::zsearch::LintResult* mutable_w_multiple_subject_rdn();
  ::zsearch::LintResult* release_w_multiple_subject_rdn();
  void set_allocated_w_multiple_subject_rdn(::zsearch::LintResult* w_multiple_subject_rdn);

  // .zsearch.LintResult w_multiple_issuer_rdn = 193;
  bool has_w_multiple_issuer_rdn() const;
  void clear_w_multiple_issuer_rdn();
  static const int kWMultipleIssuerRdnFieldNumber = 193;
  const ::zsearch::LintResult& w_multiple_issuer_rdn() const;
  ::zsearch::LintResult* mutable_w_multiple_issuer_rdn();
  ::zsearch::LintResult* release_w_multiple_issuer_rdn();
  void set_allocated_w_multiple_issuer_rdn(::zsearch::LintResult* w_multiple_issuer_rdn);

  // .zsearch.LintResult w_issuer_dn_trailing_whitespace = 194;
  bool has_w_issuer_dn_trailing_whitespace() const;
  void clear_w_issuer_dn_trailing_whitespace();
  static const int kWIssuerDnTrailingWhitespaceFieldNumber = 194;
  const ::zsearch::LintResult& w_issuer_dn_trailing_whitespace() const;
  ::zsearch::LintResult* mutable_w_issuer_dn_trailing_whitespace();
  ::zsearch::LintResult* release_w_issuer_dn_trailing_whitespace();
  void set_allocated_w_issuer_dn_trailing_whitespace(::zsearch::LintResult* w_issuer_dn_trailing_whitespace);

  // .zsearch.LintResult w_issuer_dn_leading_whitespace = 195;
  bool has_w_issuer_dn_leading_whitespace() const;
  void clear_w_issuer_dn_leading_whitespace();
  static const int kWIssuerDnLeadingWhitespaceFieldNumber = 195;
  const ::zsearch::LintResult& w_issuer_dn_leading_whitespace() const;
  ::zsearch::LintResult* mutable_w_issuer_dn_leading_whitespace();
  ::zsearch::LintResult* release_w_issuer_dn_leading_whitespace();
  void set_allocated_w_issuer_dn_leading_whitespace(::zsearch::LintResult* w_issuer_dn_leading_whitespace);

  // .zsearch.LintResult w_subject_dn_trailing_whitespace = 196;
  bool has_w_subject_dn_trailing_whitespace() const;
  void clear_w_subject_dn_trailing_whitespace();
  static const int kWSubjectDnTrailingWhitespaceFieldNumber = 196;
  const ::zsearch::LintResult& w_subject_dn_trailing_whitespace() const;
  ::zsearch::LintResult* mutable_w_subject_dn_trailing_whitespace();
  ::zsearch::LintResult* release_w_subject_dn_trailing_whitespace();
  void set_allocated_w_subject_dn_trailing_whitespace(::zsearch::LintResult* w_subject_dn_trailing_whitespace);

  // .zsearch.LintResult w_subject_dn_leading_whitespace = 197;
  bool has_w_subject_dn_leading_whitespace() const;
  void clear_w_subject_dn_leading_whitespace();
  static const int kWSubjectDnLeadingWhitespaceFieldNumber = 197;
  const ::zsearch::LintResult& w_subject_dn_leading_whitespace() const;
  ::zsearch::LintResult* mutable_w_subject_dn_leading_whitespace();
  ::zsearch::LintResult* release_w_subject_dn_leading_whitespace();
  void set_allocated_w_subject_dn_leading_whitespace(::zsearch::LintResult* w_subject_dn_leading_whitespace);

  // .zsearch.LintResult e_sub_cert_locality_name_must_appear = 198;
  bool has_e_sub_cert_locality_name_must_appear() const;
  void clear_e_sub_cert_locality_name_must_appear();
  static const int kESubCertLocalityNameMustAppearFieldNumber = 198;
  const ::zsearch::LintResult& e_sub_cert_locality_name_must_appear() const;
  ::zsearch::LintResult* mutable_e_sub_cert_locality_name_must_appear();
  ::zsearch::LintResult* release_e_sub_cert_locality_name_must_appear();
  void set_allocated_e_sub_cert_locality_name_must_appear(::zsearch::LintResult* e_sub_cert_locality_name_must_appear);

  // .zsearch.LintResult e_signature_algorithm_not_supported = 199;
  bool has_e_signature_algorithm_not_supported() const;
  void clear_e_signature_algorithm_not_supported();
  static const int kESignatureAlgorithmNotSupportedFieldNumber = 199;
  const ::zsearch::LintResult& e_signature_algorithm_not_supported() const;
  ::zsearch::LintResult* mutable_e_signature_algorithm_not_supported();
  ::zsearch::LintResult* release_e_signature_algorithm_not_supported();
  void set_allocated_e_signature_algorithm_not_supported(::zsearch::LintResult* e_signature_algorithm_not_supported);

  // .zsearch.LintResult e_dnsname_hyphen_in_sld = 200;
  bool has_e_dnsname_hyphen_in_sld() const;
  void clear_e_dnsname_hyphen_in_sld();
  static const int kEDnsnameHyphenInSldFieldNumber = 200;
  const ::zsearch::LintResult& e_dnsname_hyphen_in_sld() const;
  ::zsearch::LintResult* mutable_e_dnsname_hyphen_in_sld();
  ::zsearch::LintResult* release_e_dnsname_hyphen_in_sld();
  void set_allocated_e_dnsname_hyphen_in_sld(::zsearch::LintResult* e_dnsname_hyphen_in_sld);

  // .zsearch.LintResult e_dsa_correct_order_in_subgroup = 201;
  bool has_e_dsa_correct_order_in_subgroup() const;
  void clear_e_dsa_correct_order_in_subgroup();
  static const int kEDsaCorrectOrderInSubgroupFieldNumber = 201;
  const ::zsearch::LintResult& e_dsa_correct_order_in_subgroup() const;
  ::zsearch::LintResult* mutable_e_dsa_correct_order_in_subgroup();
  ::zsearch::LintResult* release_e_dsa_correct_order_in_subgroup();
  void set_allocated_e_dsa_correct_order_in_subgroup(::zsearch::LintResult* e_dsa_correct_order_in_subgroup);

  // .zsearch.LintResult n_sub_ca_eku_not_technically_constrained = 202;
  bool has_n_sub_ca_eku_not_technically_constrained() const;
  void clear_n_sub_ca_eku_not_technically_constrained();
  static const int kNSubCaEkuNotTechnicallyConstrainedFieldNumber = 202;
  const ::zsearch::LintResult& n_sub_ca_eku_not_technically_constrained() const;
  ::zsearch::LintResult* mutable_n_sub_ca_eku_not_technically_constrained();
  ::zsearch::LintResult* release_n_sub_ca_eku_not_technically_constrained();
  void set_allocated_n_sub_ca_eku_not_technically_constrained(::zsearch::LintResult* n_sub_ca_eku_not_technically_constrained);

  // .zsearch.LintResult e_dnsname_empty_label = 203;
  bool has_e_dnsname_empty_label() const;
  void clear_e_dnsname_empty_label();
  static const int kEDnsnameEmptyLabelFieldNumber = 203;
  const ::zsearch::LintResult& e_dnsname_empty_label() const;
  ::zsearch::LintResult* mutable_e_dnsname_empty_label();
  ::zsearch::LintResult* release_e_dnsname_empty_label();
  void set_allocated_e_dnsname_empty_label(::zsearch::LintResult* e_dnsname_empty_label);

  // .zsearch.LintResult e_ca_common_name_missing = 204;
  bool has_e_ca_common_name_missing() const;
  void clear_e_ca_common_name_missing();
  static const int kECaCommonNameMissingFieldNumber = 204;
  const ::zsearch::LintResult& e_ca_common_name_missing() const;
  ::zsearch::LintResult* mutable_e_ca_common_name_missing();
  ::zsearch::LintResult* release_e_ca_common_name_missing();
  void set_allocated_e_ca_common_name_missing(::zsearch::LintResult* e_ca_common_name_missing);

  // .zsearch.LintResult e_dnsname_wildcard_only_in_left_label = 205;
  bool has_e_dnsname_wildcard_only_in_left_label() const;
  void clear_e_dnsname_wildcard_only_in_left_label();
  static const int kEDnsnameWildcardOnlyInLeftLabelFieldNumber = 205;
  const ::zsearch::LintResult& e_dnsname_wildcard_only_in_left_label() const;
  ::zsearch::LintResult* mutable_e_dnsname_wildcard_only_in_left_label();
  ::zsearch::LintResult* release_e_dnsname_wildcard_only_in_left_label();
  void set_allocated_e_dnsname_wildcard_only_in_left_label(::zsearch::LintResult* e_dnsname_wildcard_only_in_left_label);

  // .zsearch.LintResult e_sub_cert_valid_time_too_long = 206;
  bool has_e_sub_cert_valid_time_too_long() const;
  void clear_e_sub_cert_valid_time_too_long();
  static const int kESubCertValidTimeTooLongFieldNumber = 206;
  const ::zsearch::LintResult& e_sub_cert_valid_time_too_long() const;
  ::zsearch::LintResult* mutable_e_sub_cert_valid_time_too_long();
  ::zsearch::LintResult* release_e_sub_cert_valid_time_too_long();
  void set_allocated_e_sub_cert_valid_time_too_long(::zsearch::LintResult* e_sub_cert_valid_time_too_long);

  // .zsearch.LintResult e_dnsname_left_label_wildcard_correct = 207;
  bool has_e_dnsname_left_label_wildcard_correct() const;
  void clear_e_dnsname_left_label_wildcard_correct();
  static const int kEDnsnameLeftLabelWildcardCorrectFieldNumber = 207;
  const ::zsearch::LintResult& e_dnsname_left_label_wildcard_correct() const;
  ::zsearch::LintResult* mutable_e_dnsname_left_label_wildcard_correct();
  ::zsearch::LintResult* release_e_dnsname_left_label_wildcard_correct();
  void set_allocated_e_dnsname_left_label_wildcard_correct(::zsearch::LintResult* e_dnsname_left_label_wildcard_correct);

  // .zsearch.LintResult w_serial_number_low_entropy = 208;
  bool has_w_serial_number_low_entropy() const;
  void clear_w_serial_number_low_entropy();
  static const int kWSerialNumberLowEntropyFieldNumber = 208;
  const ::zsearch::LintResult& w_serial_number_low_entropy() const;
  ::zsearch::LintResult* mutable_w_serial_number_low_entropy();
  ::zsearch::LintResult* release_w_serial_number_low_entropy();
  void set_allocated_w_serial_number_low_entropy(::zsearch::LintResult* w_serial_number_low_entropy);

  // .zsearch.LintResult e_dnsname_label_too_long = 209;
  bool has_e_dnsname_label_too_long() const;
  void clear_e_dnsname_label_too_long();
  static const int kEDnsnameLabelTooLongFieldNumber = 209;
  const ::zsearch::LintResult& e_dnsname_label_too_long() const;
  ::zsearch::LintResult* mutable_e_dnsname_label_too_long();
  ::zsearch::LintResult* release_e_dnsname_label_too_long();
  void set_allocated_e_dnsname_label_too_long(::zsearch::LintResult* e_dnsname_label_too_long);

  // .zsearch.LintResult e_root_ca_key_usage_present = 210;
  bool has_e_root_ca_key_usage_present() const;
  void clear_e_root_ca_key_usage_present();
  static const int kERootCaKeyUsagePresentFieldNumber = 210;
  const ::zsearch::LintResult& e_root_ca_key_usage_present() const;
  ::zsearch::LintResult* mutable_e_root_ca_key_usage_present();
  ::zsearch::LintResult* release_e_root_ca_key_usage_present();
  void set_allocated_e_root_ca_key_usage_present(::zsearch::LintResult* e_root_ca_key_usage_present);

  // .zsearch.LintResult w_dnsname_wildcard_left_of_public_suffix = 211;
  bool has_w_dnsname_wildcard_left_of_public_suffix() const;
  void clear_w_dnsname_wildcard_left_of_public_suffix();
  static const int kWDnsnameWildcardLeftOfPublicSuffixFieldNumber = 211;
  const ::zsearch::LintResult& w_dnsname_wildcard_left_of_public_suffix() const;
  ::zsearch::LintResult* mutable_w_dnsname_wildcard_left_of_public_suffix();
  ::zsearch::LintResult* release_w_dnsname_wildcard_left_of_public_suffix();
  void set_allocated_w_dnsname_wildcard_left_of_public_suffix(::zsearch::LintResult* w_dnsname_wildcard_left_of_public_suffix);

  // .zsearch.LintResult e_international_dns_name_not_unicode = 212;
  bool has_e_international_dns_name_not_unicode() const;
  void clear_e_international_dns_name_not_unicode();
  static const int kEInternationalDnsNameNotUnicodeFieldNumber = 212;
  const ::zsearch::LintResult& e_international_dns_name_not_unicode() const;
  ::zsearch::LintResult* mutable_e_international_dns_name_not_unicode();
  ::zsearch::LintResult* release_e_international_dns_name_not_unicode();
  void set_allocated_e_international_dns_name_not_unicode(::zsearch::LintResult* e_international_dns_name_not_unicode);

  // .zsearch.LintResult w_dnsname_underscore_in_trd = 213;
  bool has_w_dnsname_underscore_in_trd() const;
  void clear_w_dnsname_underscore_in_trd();
  static const int kWDnsnameUnderscoreInTrdFieldNumber = 213;
  const ::zsearch::LintResult& w_dnsname_underscore_in_trd() const;
  ::zsearch::LintResult* mutable_w_dnsname_underscore_in_trd();
  ::zsearch::LintResult* release_w_dnsname_underscore_in_trd();
  void set_allocated_w_dnsname_underscore_in_trd(::zsearch::LintResult* w_dnsname_underscore_in_trd);

  // .zsearch.LintResult w_sub_cert_aia_does_not_contain_issuing_ca_url = 214;
  bool has_w_sub_cert_aia_does_not_contain_issuing_ca_url() const;
  void clear_w_sub_cert_aia_does_not_contain_issuing_ca_url();
  static const int kWSubCertAiaDoesNotContainIssuingCaUrlFieldNumber = 214;
  const ::zsearch::LintResult& w_sub_cert_aia_does_not_contain_issuing_ca_url() const;
  ::zsearch::LintResult* mutable_w_sub_cert_aia_does_not_contain_issuing_ca_url();
  ::zsearch::LintResult* release_w_sub_cert_aia_does_not_contain_issuing_ca_url();
  void set_allocated_w_sub_cert_aia_does_not_contain_issuing_ca_url(::zsearch::LintResult* w_sub_cert_aia_does_not_contain_issuing_ca_url);

  // .zsearch.LintResult e_sub_cert_locality_name_must_not_appear = 215;
  bool has_e_sub_cert_locality_name_must_not_appear() const;
  void clear_e_sub_cert_locality_name_must_not_appear();
  static const int kESubCertLocalityNameMustNotAppearFieldNumber = 215;
  const ::zsearch::LintResult& e_sub_cert_locality_name_must_not_appear() const;
  ::zsearch::LintResult* mutable_e_sub_cert_locality_name_must_not_appear();
  ::zsearch::LintResult* release_e_sub_cert_locality_name_must_not_appear();
  void set_allocated_e_sub_cert_locality_name_must_not_appear(::zsearch::LintResult* e_sub_cert_locality_name_must_not_appear);

  // .zsearch.LintResult e_sub_cert_country_name_must_appear = 216;
  bool has_e_sub_cert_country_name_must_appear() const;
  void clear_e_sub_cert_country_name_must_appear();
  static const int kESubCertCountryNameMustAppearFieldNumber = 216;
  const ::zsearch::LintResult& e_sub_cert_country_name_must_appear() const;
  ::zsearch::LintResult* mutable_e_sub_cert_country_name_must_appear();
  ::zsearch::LintResult* release_e_sub_cert_country_name_must_appear();
  void set_allocated_e_sub_cert_country_name_must_appear(::zsearch::LintResult* e_sub_cert_country_name_must_appear);

  // .zsearch.LintResult e_dnsname_bad_character_in_label = 217;
  bool has_e_dnsname_bad_character_in_label() const;
  void clear_e_dnsname_bad_character_in_label();
  static const int kEDnsnameBadCharacterInLabelFieldNumber = 217;
  const ::zsearch::LintResult& e_dnsname_bad_character_in_label() const;
  ::zsearch::LintResult* mutable_e_dnsname_bad_character_in_label();
  ::zsearch::LintResult* release_e_dnsname_bad_character_in_label();
  void set_allocated_e_dnsname_bad_character_in_label(::zsearch::LintResult* e_dnsname_bad_character_in_label);

  // .zsearch.LintResult e_sub_ca_must_not_contain_any_policy = 218;
  bool has_e_sub_ca_must_not_contain_any_policy() const;
  void clear_e_sub_ca_must_not_contain_any_policy();
  static const int kESubCaMustNotContainAnyPolicyFieldNumber = 218;
  const ::zsearch::LintResult& e_sub_ca_must_not_contain_any_policy() const;
  ::zsearch::LintResult* mutable_e_sub_ca_must_not_contain_any_policy();
  ::zsearch::LintResult* release_e_sub_ca_must_not_contain_any_policy();
  void set_allocated_e_sub_ca_must_not_contain_any_policy(::zsearch::LintResult* e_sub_ca_must_not_contain_any_policy);

  // .zsearch.LintResult e_international_dns_name_not_nfkc = 219;
  bool has_e_international_dns_name_not_nfkc() const;
  void clear_e_international_dns_name_not_nfkc();
  static const int kEInternationalDnsNameNotNfkcFieldNumber = 219;
  const ::zsearch::LintResult& e_international_dns_name_not_nfkc() const;
  ::zsearch::LintResult* mutable_e_international_dns_name_not_nfkc();
  ::zsearch::LintResult* release_e_international_dns_name_not_nfkc();
  void set_allocated_e_international_dns_name_not_nfkc(::zsearch::LintResult* e_international_dns_name_not_nfkc);

  // .zsearch.LintResult e_sub_cert_aia_marked_critical = 220;
  bool has_e_sub_cert_aia_marked_critical() const;
  void clear_e_sub_cert_aia_marked_critical();
  static const int kESubCertAiaMarkedCriticalFieldNumber = 220;
  const ::zsearch::LintResult& e_sub_cert_aia_marked_critical() const;
  ::zsearch::LintResult* mutable_e_sub_cert_aia_marked_critical();
  ::zsearch::LintResult* release_e_sub_cert_aia_marked_critical();
  void set_allocated_e_sub_cert_aia_marked_critical(::zsearch::LintResult* e_sub_cert_aia_marked_critical);

  // .zsearch.LintResult e_ca_is_ca = 221;
  bool has_e_ca_is_ca() const;
  void clear_e_ca_is_ca();
  static const int kECaIsCaFieldNumber = 221;
  const ::zsearch::LintResult& e_ca_is_ca() const;
  ::zsearch::LintResult* mutable_e_ca_is_ca();
  ::zsearch::LintResult* release_e_ca_is_ca();
  void set_allocated_e_ca_is_ca(::zsearch::LintResult* e_ca_is_ca);

  // .zsearch.LintResult e_sub_cert_street_address_should_not_exist = 222;
  bool has_e_sub_cert_street_address_should_not_exist() const;
  void clear_e_sub_cert_street_address_should_not_exist();
  static const int kESubCertStreetAddressShouldNotExistFieldNumber = 222;
  const ::zsearch::LintResult& e_sub_cert_street_address_should_not_exist() const;
  ::zsearch::LintResult* mutable_e_sub_cert_street_address_should_not_exist();
  ::zsearch::LintResult* release_e_sub_cert_street_address_should_not_exist();
  void set_allocated_e_sub_cert_street_address_should_not_exist(::zsearch::LintResult* e_sub_cert_street_address_should_not_exist);

  // .zsearch.LintResult e_sub_ca_eku_missing = 223;
  bool has_e_sub_ca_eku_missing() const;
  void clear_e_sub_ca_eku_missing();
  static const int kESubCaEkuMissingFieldNumber = 223;
  const ::zsearch::LintResult& e_sub_ca_eku_missing() const;
  ::zsearch::LintResult* mutable_e_sub_ca_eku_missing();
  ::zsearch::LintResult* release_e_sub_ca_eku_missing();
  void set_allocated_e_sub_ca_eku_missing(::zsearch::LintResult* e_sub_ca_eku_missing);

  // .zsearch.LintResult e_sub_cert_province_must_not_appear = 224;
  bool has_e_sub_cert_province_must_not_appear() const;
  void clear_e_sub_cert_province_must_not_appear();
  static const int kESubCertProvinceMustNotAppearFieldNumber = 224;
  const ::zsearch::LintResult& e_sub_cert_province_must_not_appear() const;
  ::zsearch::LintResult* mutable_e_sub_cert_province_must_not_appear();
  ::zsearch::LintResult* release_e_sub_cert_province_must_not_appear();
  void set_allocated_e_sub_cert_province_must_not_appear(::zsearch::LintResult* e_sub_cert_province_must_not_appear);

  // .zsearch.LintResult e_dnsname_underscore_in_sld = 225;
  bool has_e_dnsname_underscore_in_sld() const;
  void clear_e_dnsname_underscore_in_sld();
  static const int kEDnsnameUnderscoreInSldFieldNumber = 225;
  const ::zsearch::LintResult& e_dnsname_underscore_in_sld() const;
  ::zsearch::LintResult* mutable_e_dnsname_underscore_in_sld();
  ::zsearch::LintResult* release_e_dnsname_underscore_in_sld();
  void set_allocated_e_dnsname_underscore_in_sld(::zsearch::LintResult* e_dnsname_underscore_in_sld);

  // .zsearch.LintResult e_sub_ca_eku_name_constraints = 226;
  bool has_e_sub_ca_eku_name_constraints() const;
  void clear_e_sub_ca_eku_name_constraints();
  static const int kESubCaEkuNameConstraintsFieldNumber = 226;
  const ::zsearch::LintResult& e_sub_ca_eku_name_constraints() const;
  ::zsearch::LintResult* mutable_e_sub_ca_eku_name_constraints();
  ::zsearch::LintResult* release_e_sub_ca_eku_name_constraints();
  void set_allocated_e_sub_ca_eku_name_constraints(::zsearch::LintResult* e_sub_ca_eku_name_constraints);

  // .zsearch.LintResult e_sub_cert_not_is_ca = 227;
  bool has_e_sub_cert_not_is_ca() const;
  void clear_e_sub_cert_not_is_ca();
  static const int kESubCertNotIsCaFieldNumber = 227;
  const ::zsearch::LintResult& e_sub_cert_not_is_ca() const;
  ::zsearch::LintResult* mutable_e_sub_cert_not_is_ca();
  ::zsearch::LintResult* release_e_sub_cert_not_is_ca();
  void set_allocated_e_sub_cert_not_is_ca(::zsearch::LintResult* e_sub_cert_not_is_ca);

  // .zsearch.LintResult e_dsa_unique_correct_representation = 228;
  bool has_e_dsa_unique_correct_representation() const;
  void clear_e_dsa_unique_correct_representation();
  static const int kEDsaUniqueCorrectRepresentationFieldNumber = 228;
  const ::zsearch::LintResult& e_dsa_unique_correct_representation() const;
  ::zsearch::LintResult* mutable_e_dsa_unique_correct_representation();
  ::zsearch::LintResult* release_e_dsa_unique_correct_representation();
  void set_allocated_e_dsa_unique_correct_representation(::zsearch::LintResult* e_dsa_unique_correct_representation);

  // .zsearch.LintResult e_sub_cert_province_must_appear = 229;
  bool has_e_sub_cert_province_must_appear() const;
  void clear_e_sub_cert_province_must_appear();
  static const int kESubCertProvinceMustAppearFieldNumber = 229;
  const ::zsearch::LintResult& e_sub_cert_province_must_appear() const;
  ::zsearch::LintResult* mutable_e_sub_cert_province_must_appear();
  ::zsearch::LintResult* release_e_sub_cert_province_must_appear();
  void set_allocated_e_sub_cert_province_must_appear(::zsearch::LintResult* e_sub_cert_province_must_appear);

  // .zsearch.LintResult e_root_ca_key_usage_must_be_critical = 230;
  bool has_e_root_ca_key_usage_must_be_critical() const;
  void clear_e_root_ca_key_usage_must_be_critical();
  static const int kERootCaKeyUsageMustBeCriticalFieldNumber = 230;
  const ::zsearch::LintResult& e_root_ca_key_usage_must_be_critical() const;
  ::zsearch::LintResult* mutable_e_root_ca_key_usage_must_be_critical();
  ::zsearch::LintResult* release_e_root_ca_key_usage_must_be_critical();
  void set_allocated_e_root_ca_key_usage_must_be_critical(::zsearch::LintResult* e_root_ca_key_usage_must_be_critical);

  // .zsearch.LintResult e_ext_san_dns_name_too_long = 231;
  bool has_e_ext_san_dns_name_too_long() const;
  void clear_e_ext_san_dns_name_too_long();
  static const int kEExtSanDnsNameTooLongFieldNumber = 231;
  const ::zsearch::LintResult& e_ext_san_dns_name_too_long() const;
  ::zsearch::LintResult* mutable_e_ext_san_dns_name_too_long();
  ::zsearch::LintResult* release_e_ext_san_dns_name_too_long();
  void set_allocated_e_ext_san_dns_name_too_long(::zsearch::LintResult* e_ext_san_dns_name_too_long);

  // .zsearch.LintResult e_dsa_params_missing = 232;
  bool has_e_dsa_params_missing() const;
  void clear_e_dsa_params_missing();
  static const int kEDsaParamsMissingFieldNumber = 232;
  const ::zsearch::LintResult& e_dsa_params_missing() const;
  ::zsearch::LintResult* mutable_e_dsa_params_missing();
  ::zsearch::LintResult* release_e_dsa_params_missing();
  void set_allocated_e_dsa_params_missing(::zsearch::LintResult* e_dsa_params_missing);

  // .zsearch.LintResult e_sub_ca_aia_marked_critical = 233;
  bool has_e_sub_ca_aia_marked_critical() const;
  void clear_e_sub_ca_aia_marked_critical();
  static const int kESubCaAiaMarkedCriticalFieldNumber = 233;
  const ::zsearch::LintResult& e_sub_ca_aia_marked_critical() const;
  ::zsearch::LintResult* mutable_e_sub_ca_aia_marked_critical();
  ::zsearch::LintResult* release_e_sub_ca_aia_marked_critical();
  void set_allocated_e_sub_ca_aia_marked_critical(::zsearch::LintResult* e_sub_ca_aia_marked_critical);

  // .zsearch.LintResult e_sub_cert_given_name_surname_contains_correct_policy = 234;
  bool has_e_sub_cert_given_name_surname_contains_correct_policy() const;
  void clear_e_sub_cert_given_name_surname_contains_correct_policy();
  static const int kESubCertGivenNameSurnameContainsCorrectPolicyFieldNumber = 234;
  const ::zsearch::LintResult& e_sub_cert_given_name_surname_contains_correct_policy() const;
  ::zsearch::LintResult* mutable_e_sub_cert_given_name_surname_contains_correct_policy();
  ::zsearch::LintResult* release_e_sub_cert_given_name_surname_contains_correct_policy();
  void set_allocated_e_sub_cert_given_name_surname_contains_correct_policy(::zsearch::LintResult* e_sub_cert_given_name_surname_contains_correct_policy);

  // .zsearch.LintResult e_sub_cert_postal_code_must_not_appear = 235;
  bool has_e_sub_cert_postal_code_must_not_appear() const;
  void clear_e_sub_cert_postal_code_must_not_appear();
  static const int kESubCertPostalCodeMustNotAppearFieldNumber = 235;
  const ::zsearch::LintResult& e_sub_cert_postal_code_must_not_appear() const;
  ::zsearch::LintResult* mutable_e_sub_cert_postal_code_must_not_appear();
  ::zsearch::LintResult* release_e_sub_cert_postal_code_must_not_appear();
  void set_allocated_e_sub_cert_postal_code_must_not_appear(::zsearch::LintResult* e_sub_cert_postal_code_must_not_appear);

  // .zsearch.LintResult e_dnsname_not_valid_tld = 236;
  bool has_e_dnsname_not_valid_tld() const;
  void clear_e_dnsname_not_valid_tld();
  static const int kEDnsnameNotValidTldFieldNumber = 236;
  const ::zsearch::LintResult& e_dnsname_not_valid_tld() const;
  ::zsearch::LintResult* mutable_e_dnsname_not_valid_tld();
  ::zsearch::LintResult* release_e_dnsname_not_valid_tld();
  void set_allocated_e_dnsname_not_valid_tld(::zsearch::LintResult* e_dnsname_not_valid_tld);

  // .zsearch.LintResult n_contains_redacted_dnsname = 237;
  bool has_n_contains_redacted_dnsname() const;
  void clear_n_contains_redacted_dnsname();
  static const int kNContainsRedactedDnsnameFieldNumber = 237;
  const ::zsearch::LintResult& n_contains_redacted_dnsname() const;
  ::zsearch::LintResult* mutable_n_contains_redacted_dnsname();
  ::zsearch::LintResult* release_n_contains_redacted_dnsname();
  void set_allocated_n_contains_redacted_dnsname(::zsearch::LintResult* n_contains_redacted_dnsname);

  // .zsearch.LintResult e_dnsname_contains_bare_iana_suffix = 238;
  bool has_e_dnsname_contains_bare_iana_suffix() const;
  void clear_e_dnsname_contains_bare_iana_suffix();
  static const int kEDnsnameContainsBareIanaSuffixFieldNumber = 238;
  const ::zsearch::LintResult& e_dnsname_contains_bare_iana_suffix() const;
  ::zsearch::LintResult* mutable_e_dnsname_contains_bare_iana_suffix();
  ::zsearch::LintResult* release_e_dnsname_contains_bare_iana_suffix();
  void set_allocated_e_dnsname_contains_bare_iana_suffix(::zsearch::LintResult* e_dnsname_contains_bare_iana_suffix);

  // @@protoc_insertion_point(class_scope:zsearch.Lints)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zsearch::LintResult* e_basic_constraints_not_critical_;
  ::zsearch::LintResult* e_ian_bare_wildcard_;
  ::zsearch::LintResult* e_ian_wildcard_not_first_;
  ::zsearch::LintResult* e_san_bare_wildcard_;
  ::zsearch::LintResult* e_san_wildcard_not_first_;
  ::zsearch::LintResult* e_ca_country_name_invalid_;
  ::zsearch::LintResult* e_ca_country_name_missing_;
  ::zsearch::LintResult* e_ca_crl_sign_not_set_;
  ::zsearch::LintResult* n_ca_digital_signature_not_set_;
  ::zsearch::LintResult* e_ca_key_cert_sign_not_set_;
  ::zsearch::LintResult* e_ca_key_usage_missing_;
  ::zsearch::LintResult* e_ca_key_usage_not_critical_;
  ::zsearch::LintResult* e_ca_organization_name_missing_;
  ::zsearch::LintResult* e_ca_subject_field_empty_;
  ::zsearch::LintResult* e_cert_contains_unique_identifier_;
  ::zsearch::LintResult* e_cert_extensions_version_not_3_;
  ::zsearch::LintResult* e_cab_dv_conflicts_with_locality_;
  ::zsearch::LintResult* e_cab_dv_conflicts_with_org_;
  ::zsearch::LintResult* e_cab_dv_conflicts_with_postal_;
  ::zsearch::LintResult* e_cab_dv_conflicts_with_province_;
  ::zsearch::LintResult* e_cab_dv_conflicts_with_street_;
  ::zsearch::LintResult* e_cert_policy_iv_requires_country_;
  ::zsearch::LintResult* e_cert_policy_iv_requires_province_or_locality_;
  ::zsearch::LintResult* e_cert_policy_ov_requires_country_;
  ::zsearch::LintResult* e_cert_policy_ov_requires_province_or_locality_;
  ::zsearch::LintResult* e_cab_ov_requires_org_;
  ::zsearch::LintResult* e_cab_iv_requires_personal_name_;
  ::zsearch::LintResult* e_cert_unique_identifier_version_not_2_or_3_;
  ::zsearch::LintResult* e_distribution_point_incomplete_;
  ::zsearch::LintResult* w_distribution_point_missing_ldap_or_uri_;
  ::zsearch::LintResult* e_dsa_improper_modulus_or_divisor_size_;
  ::zsearch::LintResult* e_dsa_shorter_than_2048_bits_;
  ::zsearch::LintResult* e_ec_improper_curves_;
  ::zsearch::LintResult* w_eku_critical_improperly_;
  ::zsearch::LintResult* e_ev_business_category_missing_;
  ::zsearch::LintResult* e_ev_country_name_missing_;
  ::zsearch::LintResult* e_ev_locality_name_missing_;
  ::zsearch::LintResult* e_ev_organization_name_missing_;
  ::zsearch::LintResult* e_ev_serial_number_missing_;
  ::zsearch::LintResult* e_ev_valid_time_too_long_;
  ::zsearch::LintResult* w_ext_aia_access_location_missing_;
  ::zsearch::LintResult* e_ext_aia_marked_critical_;
  ::zsearch::LintResult* e_ext_authority_key_identifier_critical_;
  ::zsearch::LintResult* e_ext_authority_key_identifier_missing_;
  ::zsearch::LintResult* e_ext_authority_key_identifier_no_key_identifier_;
  ::zsearch::LintResult* w_ext_cert_policy_contains_noticeref_;
  ::zsearch::LintResult* e_ext_cert_policy_disallowed_any_policy_qualifier_;
  ::zsearch::LintResult* e_ext_cert_policy_duplicate_;
  ::zsearch::LintResult* e_ext_cert_policy_explicit_text_ia5_string_;
  ::zsearch::LintResult* w_ext_cert_policy_explicit_text_includes_control_;
  ::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_nfc_;
  ::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_utf8_;
  ::zsearch::LintResult* e_ext_cert_policy_explicit_text_too_long_;
  ::zsearch::LintResult* w_ext_crl_distribution_marked_critical_;
  ::zsearch::LintResult* e_ext_duplicate_extension_;
  ::zsearch::LintResult* e_ext_freshest_crl_marked_critical_;
  ::zsearch::LintResult* w_ext_ian_critical_;
  ::zsearch::LintResult* e_ext_ian_dns_not_ia5_string_;
  ::zsearch::LintResult* e_ext_ian_empty_name_;
  ::zsearch::LintResult* e_ext_ian_no_entries_;
  ::zsearch::LintResult* e_ext_ian_rfc822_format_invalid_;
  ::zsearch::LintResult* e_ext_ian_space_dns_name_;
  ::zsearch::LintResult* e_ext_ian_uri_format_invalid_;
  ::zsearch::LintResult* e_ext_ian_uri_host_not_fqdn_or_ip_;
  ::zsearch::LintResult* e_ext_ian_uri_not_ia5_;
  ::zsearch::LintResult* e_ext_ian_uri_relative_;
  ::zsearch::LintResult* e_ext_key_usage_cert_sign_without_ca_;
  ::zsearch::LintResult* w_ext_key_usage_not_critical_;
  ::zsearch::LintResult* e_ext_key_usage_without_bits_;
  ::zsearch::LintResult* e_ext_name_constraints_not_critical_;
  ::zsearch::LintResult* e_ext_name_constraints_not_in_ca_;
  ::zsearch::LintResult* e_ext_policy_constraints_empty_;
  ::zsearch::LintResult* e_ext_policy_constraints_not_critical_;
  ::zsearch::LintResult* e_ext_policy_map_any_policy_;
  ::zsearch::LintResult* w_ext_policy_map_not_critical_;
  ::zsearch::LintResult* w_ext_policy_map_not_in_cert_policy_;
  ::zsearch::LintResult* e_ext_san_contains_reserved_ip_;
  ::zsearch::LintResult* w_ext_san_critical_with_subject_dn_;
  ::zsearch::LintResult* e_ext_san_directory_name_present_;
  ::zsearch::LintResult* e_ext_san_dns_not_ia5_string_;
  ::zsearch::LintResult* e_ext_san_edi_party_name_present_;
  ::zsearch::LintResult* e_ext_san_empty_name_;
  ::zsearch::LintResult* e_ext_san_missing_;
  ::zsearch::LintResult* e_ext_san_no_entries_;
  ::zsearch::LintResult* e_ext_san_not_critical_without_subject_;
  ::zsearch::LintResult* e_ext_san_other_name_present_;
  ::zsearch::LintResult* e_ext_san_registered_id_present_;
  ::zsearch::LintResult* e_ext_san_rfc822_format_invalid_;
  ::zsearch::LintResult* e_ext_san_rfc822_name_present_;
  ::zsearch::LintResult* e_ext_san_space_dns_name_;
  ::zsearch::LintResult* e_ext_san_uniform_resource_identifier_present_;
  ::zsearch::LintResult* e_ext_san_uri_format_invalid_;
  ::zsearch::LintResult* e_ext_san_uri_host_not_fqdn_or_ip_;
  ::zsearch::LintResult* e_ext_san_uri_not_ia5_;
  ::zsearch::LintResult* e_ext_san_uri_relative_;
  ::zsearch::LintResult* e_ext_subject_directory_attr_critical_;
  ::zsearch::LintResult* e_ext_subject_key_identifier_critical_;
  ::zsearch::LintResult* e_ext_subject_key_identifier_missing_ca_;
  ::zsearch::LintResult* w_ext_subject_key_identifier_missing_sub_cert_;
  ::zsearch::LintResult* e_generalized_time_does_not_include_seconds_;
  ::zsearch::LintResult* e_generalized_time_includes_fraction_seconds_;
  ::zsearch::LintResult* e_generalized_time_not_in_zulu_;
  ::zsearch::LintResult* e_ian_dns_name_includes_null_char_;
  ::zsearch::LintResult* e_ian_dns_name_starts_with_period_;
  ::zsearch::LintResult* w_ian_iana_pub_suffix_empty_;
  ::zsearch::LintResult* e_inhibit_any_policy_not_critical_;
  ::zsearch::LintResult* e_invalid_certificate_version_;
  ::zsearch::LintResult* e_issuer_field_empty_;
  ::zsearch::LintResult* e_name_constraint_empty_;
  ::zsearch::LintResult* e_name_constraint_maximum_not_absent_;
  ::zsearch::LintResult* e_name_constraint_minimum_non_zero_;
  ::zsearch::LintResult* w_name_constraint_on_edi_party_name_;
  ::zsearch::LintResult* w_name_constraint_on_registered_id_;
  ::zsearch::LintResult* w_name_constraint_on_x400_;
  ::zsearch::LintResult* e_old_root_ca_rsa_mod_less_than_2048_bits_;
  ::zsearch::LintResult* e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  ::zsearch::LintResult* e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  ::zsearch::LintResult* e_path_len_constraint_improperly_included_;
  ::zsearch::LintResult* e_path_len_constraint_zero_or_less_;
  ::zsearch::LintResult* e_public_key_type_not_allowed_;
  ::zsearch::LintResult* w_root_ca_basic_constraints_path_len_constraint_field_present_;
  ::zsearch::LintResult* w_root_ca_contains_cert_policy_;
  ::zsearch::LintResult* e_root_ca_extended_key_usage_present_;
  ::zsearch::LintResult* e_rsa_exp_negative_;
  ::zsearch::LintResult* w_rsa_mod_factors_smaller_than_752_;
  ::zsearch::LintResult* e_rsa_mod_less_than_2048_bits_;
  ::zsearch::LintResult* w_rsa_mod_not_odd_;
  ::zsearch::LintResult* w_rsa_public_exponent_not_in_range_;
  ::zsearch::LintResult* e_rsa_public_exponent_not_odd_;
  ::zsearch::LintResult* e_rsa_public_exponent_too_small_;
  ::zsearch::LintResult* e_san_dns_name_includes_null_char_;
  ::zsearch::LintResult* e_san_dns_name_starts_with_period_;
  ::zsearch::LintResult* w_san_iana_pub_suffix_empty_;
  ::zsearch::LintResult* e_serial_number_longer_than_20_octets_;
  ::zsearch::LintResult* e_serial_number_not_positive_;
  ::zsearch::LintResult* w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  ::zsearch::LintResult* e_sub_ca_aia_does_not_contain_ocsp_url_;
  ::zsearch::LintResult* e_sub_ca_aia_missing_;
  ::zsearch::LintResult* w_sub_ca_certificate_policies_marked_critical_;
  ::zsearch::LintResult* e_sub_ca_certificate_policies_missing_;
  ::zsearch::LintResult* e_sub_ca_crl_distribution_points_does_not_contain_url_;
  ::zsearch::LintResult* e_sub_ca_crl_distribution_points_marked_critical_;
  ::zsearch::LintResult* e_sub_ca_crl_distribution_points_missing_;
  ::zsearch::LintResult* w_sub_ca_eku_critical_;
  ::zsearch::LintResult* w_sub_ca_name_constraints_not_critical_;
  ::zsearch::LintResult* e_sub_cert_aia_does_not_contain_ocsp_url_;
  ::zsearch::LintResult* e_sub_cert_aia_missing_;
  ::zsearch::LintResult* e_sub_cert_cert_policy_empty_;
  ::zsearch::LintResult* w_sub_cert_certificate_policies_marked_critical_;
  ::zsearch::LintResult* e_sub_cert_crl_distribution_points_does_not_contain_url_;
  ::zsearch::LintResult* e_sub_cert_crl_distribution_points_marked_critical_;
  ::zsearch::LintResult* w_sub_cert_eku_extra_values_;
  ::zsearch::LintResult* e_sub_cert_eku_missing_;
  ::zsearch::LintResult* e_sub_cert_eku_server_auth_client_auth_missing_;
  ::zsearch::LintResult* e_sub_cert_key_usage_cert_sign_bit_set_;
  ::zsearch::LintResult* e_sub_cert_or_sub_ca_using_sha1_;
  ::zsearch::LintResult* w_sub_cert_sha1_expiration_too_long_;
  ::zsearch::LintResult* n_subject_common_name_included_;
  ::zsearch::LintResult* e_subject_common_name_not_from_san_;
  ::zsearch::LintResult* e_subject_contains_noninformational_value_;
  ::zsearch::LintResult* e_subject_contains_reserved_ip_;
  ::zsearch::LintResult* e_subject_country_not_iso_;
  ::zsearch::LintResult* e_subject_empty_without_san_;
  ::zsearch::LintResult* e_subject_info_access_marked_critical_;
  ::zsearch::LintResult* e_subject_not_dn_;
  ::zsearch::LintResult* e_utc_time_does_not_include_seconds_;
  ::zsearch::LintResult* e_utc_time_not_in_zulu_;
  ::zsearch::LintResult* e_validity_time_not_positive_;
  ::zsearch::LintResult* e_wrong_time_format_pre2050_;
  ::zsearch::LintResult* e_rsa_no_public_key_;
  ::zsearch::LintResult* e_sub_cert_certificate_policies_missing_;
  ::zsearch::LintResult* e_sub_cert_key_usage_crl_sign_bit_set_;
  ::zsearch::LintResult* e_subject_common_name_max_length_;
  ::zsearch::LintResult* e_subject_locality_name_max_length_;
  ::zsearch::LintResult* e_subject_organization_name_max_length_;
  ::zsearch::LintResult* e_subject_organizational_unit_name_max_length_;
  ::zsearch::LintResult* e_subject_state_name_max_length_;
  ::zsearch::LintResult* w_multiple_subject_rdn_;
  ::zsearch::LintResult* w_multiple_issuer_rdn_;
  ::zsearch::LintResult* w_issuer_dn_trailing_whitespace_;
  ::zsearch::LintResult* w_issuer_dn_leading_whitespace_;
  ::zsearch::LintResult* w_subject_dn_trailing_whitespace_;
  ::zsearch::LintResult* w_subject_dn_leading_whitespace_;
  ::zsearch::LintResult* e_sub_cert_locality_name_must_appear_;
  ::zsearch::LintResult* e_signature_algorithm_not_supported_;
  ::zsearch::LintResult* e_dnsname_hyphen_in_sld_;
  ::zsearch::LintResult* e_dsa_correct_order_in_subgroup_;
  ::zsearch::LintResult* n_sub_ca_eku_not_technically_constrained_;
  ::zsearch::LintResult* e_dnsname_empty_label_;
  ::zsearch::LintResult* e_ca_common_name_missing_;
  ::zsearch::LintResult* e_dnsname_wildcard_only_in_left_label_;
  ::zsearch::LintResult* e_sub_cert_valid_time_too_long_;
  ::zsearch::LintResult* e_dnsname_left_label_wildcard_correct_;
  ::zsearch::LintResult* w_serial_number_low_entropy_;
  ::zsearch::LintResult* e_dnsname_label_too_long_;
  ::zsearch::LintResult* e_root_ca_key_usage_present_;
  ::zsearch::LintResult* w_dnsname_wildcard_left_of_public_suffix_;
  ::zsearch::LintResult* e_international_dns_name_not_unicode_;
  ::zsearch::LintResult* w_dnsname_underscore_in_trd_;
  ::zsearch::LintResult* w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  ::zsearch::LintResult* e_sub_cert_locality_name_must_not_appear_;
  ::zsearch::LintResult* e_sub_cert_country_name_must_appear_;
  ::zsearch::LintResult* e_dnsname_bad_character_in_label_;
  ::zsearch::LintResult* e_sub_ca_must_not_contain_any_policy_;
  ::zsearch::LintResult* e_international_dns_name_not_nfkc_;
  ::zsearch::LintResult* e_sub_cert_aia_marked_critical_;
  ::zsearch::LintResult* e_ca_is_ca_;
  ::zsearch::LintResult* e_sub_cert_street_address_should_not_exist_;
  ::zsearch::LintResult* e_sub_ca_eku_missing_;
  ::zsearch::LintResult* e_sub_cert_province_must_not_appear_;
  ::zsearch::LintResult* e_dnsname_underscore_in_sld_;
  ::zsearch::LintResult* e_sub_ca_eku_name_constraints_;
  ::zsearch::LintResult* e_sub_cert_not_is_ca_;
  ::zsearch::LintResult* e_dsa_unique_correct_representation_;
  ::zsearch::LintResult* e_sub_cert_province_must_appear_;
  ::zsearch::LintResult* e_root_ca_key_usage_must_be_critical_;
  ::zsearch::LintResult* e_ext_san_dns_name_too_long_;
  ::zsearch::LintResult* e_dsa_params_missing_;
  ::zsearch::LintResult* e_sub_ca_aia_marked_critical_;
  ::zsearch::LintResult* e_sub_cert_given_name_surname_contains_correct_policy_;
  ::zsearch::LintResult* e_sub_cert_postal_code_must_not_appear_;
  ::zsearch::LintResult* e_dnsname_not_valid_tld_;
  ::zsearch::LintResult* n_contains_redacted_dnsname_;
  ::zsearch::LintResult* e_dnsname_contains_bare_iana_suffix_;
  mutable int _cached_size_;
  friend struct  protobuf_zlint_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LintResult

// .zsearch.LintResultStatus result = 1;
inline void LintResult::clear_result() {
  result_ = 0;
}
inline ::zsearch::LintResultStatus LintResult::result() const {
  // @@protoc_insertion_point(field_get:zsearch.LintResult.result)
  return static_cast< ::zsearch::LintResultStatus >(result_);
}
inline void LintResult::set_result(::zsearch::LintResultStatus value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:zsearch.LintResult.result)
}

// string details = 2;
inline void LintResult::clear_details() {
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LintResult::details() const {
  // @@protoc_insertion_point(field_get:zsearch.LintResult.details)
  return details_.GetNoArena();
}
inline void LintResult::set_details(const ::std::string& value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.LintResult.details)
}
#if LANG_CXX11
inline void LintResult::set_details(::std::string&& value) {
  
  details_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.LintResult.details)
}
#endif
inline void LintResult::set_details(const char* value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.LintResult.details)
}
inline void LintResult::set_details(const char* value, size_t size) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.LintResult.details)
}
inline ::std::string* LintResult::mutable_details() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.LintResult.details)
  return details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LintResult::release_details() {
  // @@protoc_insertion_point(field_release:zsearch.LintResult.details)
  
  return details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LintResult::set_allocated_details(::std::string* details) {
  if (details != NULL) {
    
  } else {
    
  }
  details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details);
  // @@protoc_insertion_point(field_set_allocated:zsearch.LintResult.details)
}

// -------------------------------------------------------------------

// ZLint

// int64 version = 1;
inline void ZLint::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ZLint::version() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.version)
  return version_;
}
inline void ZLint::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.version)
}

// int64 timestamp = 2;
inline void ZLint::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ZLint::timestamp() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.timestamp)
  return timestamp_;
}
inline void ZLint::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.timestamp)
}

// .zsearch.ZLintStatus status = 3;
inline void ZLint::clear_status() {
  status_ = 0;
}
inline ::zsearch::ZLintStatus ZLint::status() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.status)
  return static_cast< ::zsearch::ZLintStatus >(status_);
}
inline void ZLint::set_status(::zsearch::ZLintStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.status)
}

// bool infos_present = 4;
inline void ZLint::clear_infos_present() {
  infos_present_ = false;
}
inline bool ZLint::infos_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.infos_present)
  return infos_present_;
}
inline void ZLint::set_infos_present(bool value) {
  
  infos_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.infos_present)
}

// bool notices_present = 5;
inline void ZLint::clear_notices_present() {
  notices_present_ = false;
}
inline bool ZLint::notices_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.notices_present)
  return notices_present_;
}
inline void ZLint::set_notices_present(bool value) {
  
  notices_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.notices_present)
}

// bool warnings_present = 6;
inline void ZLint::clear_warnings_present() {
  warnings_present_ = false;
}
inline bool ZLint::warnings_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.warnings_present)
  return warnings_present_;
}
inline void ZLint::set_warnings_present(bool value) {
  
  warnings_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.warnings_present)
}

// bool errors_present = 7;
inline void ZLint::clear_errors_present() {
  errors_present_ = false;
}
inline bool ZLint::errors_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.errors_present)
  return errors_present_;
}
inline void ZLint::set_errors_present(bool value) {
  
  errors_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.errors_present)
}

// bool fatals_present = 8;
inline void ZLint::clear_fatals_present() {
  fatals_present_ = false;
}
inline bool ZLint::fatals_present() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.fatals_present)
  return fatals_present_;
}
inline void ZLint::set_fatals_present(bool value) {
  
  fatals_present_ = value;
  // @@protoc_insertion_point(field_set:zsearch.ZLint.fatals_present)
}

// .zsearch.Lints lints = 9;
inline bool ZLint::has_lints() const {
  return this != internal_default_instance() && lints_ != NULL;
}
inline void ZLint::clear_lints() {
  if (GetArenaNoVirtual() == NULL && lints_ != NULL) delete lints_;
  lints_ = NULL;
}
inline const ::zsearch::Lints& ZLint::lints() const {
  // @@protoc_insertion_point(field_get:zsearch.ZLint.lints)
  return lints_ != NULL ? *lints_
                         : *::zsearch::Lints::internal_default_instance();
}
inline ::zsearch::Lints* ZLint::mutable_lints() {
  
  if (lints_ == NULL) {
    lints_ = new ::zsearch::Lints;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.ZLint.lints)
  return lints_;
}
inline ::zsearch::Lints* ZLint::release_lints() {
  // @@protoc_insertion_point(field_release:zsearch.ZLint.lints)
  
  ::zsearch::Lints* temp = lints_;
  lints_ = NULL;
  return temp;
}
inline void ZLint::set_allocated_lints(::zsearch::Lints* lints) {
  delete lints_;
  lints_ = lints;
  if (lints) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.ZLint.lints)
}

// -------------------------------------------------------------------

// Lints

// .zsearch.LintResult e_basic_constraints_not_critical = 1;
inline bool Lints::has_e_basic_constraints_not_critical() const {
  return this != internal_default_instance() && e_basic_constraints_not_critical_ != NULL;
}
inline void Lints::clear_e_basic_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_basic_constraints_not_critical_ != NULL) delete e_basic_constraints_not_critical_;
  e_basic_constraints_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_basic_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_basic_constraints_not_critical)
  return e_basic_constraints_not_critical_ != NULL ? *e_basic_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_basic_constraints_not_critical() {
  
  if (e_basic_constraints_not_critical_ == NULL) {
    e_basic_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_basic_constraints_not_critical)
  return e_basic_constraints_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_basic_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_basic_constraints_not_critical)
  
  ::zsearch::LintResult* temp = e_basic_constraints_not_critical_;
  e_basic_constraints_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_basic_constraints_not_critical(::zsearch::LintResult* e_basic_constraints_not_critical) {
  delete e_basic_constraints_not_critical_;
  e_basic_constraints_not_critical_ = e_basic_constraints_not_critical;
  if (e_basic_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_basic_constraints_not_critical)
}

// .zsearch.LintResult e_ian_bare_wildcard = 2;
inline bool Lints::has_e_ian_bare_wildcard() const {
  return this != internal_default_instance() && e_ian_bare_wildcard_ != NULL;
}
inline void Lints::clear_e_ian_bare_wildcard() {
  if (GetArenaNoVirtual() == NULL && e_ian_bare_wildcard_ != NULL) delete e_ian_bare_wildcard_;
  e_ian_bare_wildcard_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ian_bare_wildcard() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_bare_wildcard)
  return e_ian_bare_wildcard_ != NULL ? *e_ian_bare_wildcard_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ian_bare_wildcard() {
  
  if (e_ian_bare_wildcard_ == NULL) {
    e_ian_bare_wildcard_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_bare_wildcard)
  return e_ian_bare_wildcard_;
}
inline ::zsearch::LintResult* Lints::release_e_ian_bare_wildcard() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_bare_wildcard)
  
  ::zsearch::LintResult* temp = e_ian_bare_wildcard_;
  e_ian_bare_wildcard_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ian_bare_wildcard(::zsearch::LintResult* e_ian_bare_wildcard) {
  delete e_ian_bare_wildcard_;
  e_ian_bare_wildcard_ = e_ian_bare_wildcard;
  if (e_ian_bare_wildcard) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_bare_wildcard)
}

// .zsearch.LintResult e_ian_wildcard_not_first = 3;
inline bool Lints::has_e_ian_wildcard_not_first() const {
  return this != internal_default_instance() && e_ian_wildcard_not_first_ != NULL;
}
inline void Lints::clear_e_ian_wildcard_not_first() {
  if (GetArenaNoVirtual() == NULL && e_ian_wildcard_not_first_ != NULL) delete e_ian_wildcard_not_first_;
  e_ian_wildcard_not_first_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ian_wildcard_not_first() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_wildcard_not_first)
  return e_ian_wildcard_not_first_ != NULL ? *e_ian_wildcard_not_first_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ian_wildcard_not_first() {
  
  if (e_ian_wildcard_not_first_ == NULL) {
    e_ian_wildcard_not_first_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_wildcard_not_first)
  return e_ian_wildcard_not_first_;
}
inline ::zsearch::LintResult* Lints::release_e_ian_wildcard_not_first() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_wildcard_not_first)
  
  ::zsearch::LintResult* temp = e_ian_wildcard_not_first_;
  e_ian_wildcard_not_first_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ian_wildcard_not_first(::zsearch::LintResult* e_ian_wildcard_not_first) {
  delete e_ian_wildcard_not_first_;
  e_ian_wildcard_not_first_ = e_ian_wildcard_not_first;
  if (e_ian_wildcard_not_first) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_wildcard_not_first)
}

// .zsearch.LintResult e_san_bare_wildcard = 4;
inline bool Lints::has_e_san_bare_wildcard() const {
  return this != internal_default_instance() && e_san_bare_wildcard_ != NULL;
}
inline void Lints::clear_e_san_bare_wildcard() {
  if (GetArenaNoVirtual() == NULL && e_san_bare_wildcard_ != NULL) delete e_san_bare_wildcard_;
  e_san_bare_wildcard_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_san_bare_wildcard() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_bare_wildcard)
  return e_san_bare_wildcard_ != NULL ? *e_san_bare_wildcard_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_san_bare_wildcard() {
  
  if (e_san_bare_wildcard_ == NULL) {
    e_san_bare_wildcard_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_bare_wildcard)
  return e_san_bare_wildcard_;
}
inline ::zsearch::LintResult* Lints::release_e_san_bare_wildcard() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_bare_wildcard)
  
  ::zsearch::LintResult* temp = e_san_bare_wildcard_;
  e_san_bare_wildcard_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_san_bare_wildcard(::zsearch::LintResult* e_san_bare_wildcard) {
  delete e_san_bare_wildcard_;
  e_san_bare_wildcard_ = e_san_bare_wildcard;
  if (e_san_bare_wildcard) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_bare_wildcard)
}

// .zsearch.LintResult e_san_wildcard_not_first = 5;
inline bool Lints::has_e_san_wildcard_not_first() const {
  return this != internal_default_instance() && e_san_wildcard_not_first_ != NULL;
}
inline void Lints::clear_e_san_wildcard_not_first() {
  if (GetArenaNoVirtual() == NULL && e_san_wildcard_not_first_ != NULL) delete e_san_wildcard_not_first_;
  e_san_wildcard_not_first_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_san_wildcard_not_first() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_wildcard_not_first)
  return e_san_wildcard_not_first_ != NULL ? *e_san_wildcard_not_first_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_san_wildcard_not_first() {
  
  if (e_san_wildcard_not_first_ == NULL) {
    e_san_wildcard_not_first_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_wildcard_not_first)
  return e_san_wildcard_not_first_;
}
inline ::zsearch::LintResult* Lints::release_e_san_wildcard_not_first() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_wildcard_not_first)
  
  ::zsearch::LintResult* temp = e_san_wildcard_not_first_;
  e_san_wildcard_not_first_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_san_wildcard_not_first(::zsearch::LintResult* e_san_wildcard_not_first) {
  delete e_san_wildcard_not_first_;
  e_san_wildcard_not_first_ = e_san_wildcard_not_first;
  if (e_san_wildcard_not_first) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_wildcard_not_first)
}

// .zsearch.LintResult e_ca_country_name_invalid = 6;
inline bool Lints::has_e_ca_country_name_invalid() const {
  return this != internal_default_instance() && e_ca_country_name_invalid_ != NULL;
}
inline void Lints::clear_e_ca_country_name_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ca_country_name_invalid_ != NULL) delete e_ca_country_name_invalid_;
  e_ca_country_name_invalid_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_country_name_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_country_name_invalid)
  return e_ca_country_name_invalid_ != NULL ? *e_ca_country_name_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_country_name_invalid() {
  
  if (e_ca_country_name_invalid_ == NULL) {
    e_ca_country_name_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_country_name_invalid)
  return e_ca_country_name_invalid_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_country_name_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_country_name_invalid)
  
  ::zsearch::LintResult* temp = e_ca_country_name_invalid_;
  e_ca_country_name_invalid_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_country_name_invalid(::zsearch::LintResult* e_ca_country_name_invalid) {
  delete e_ca_country_name_invalid_;
  e_ca_country_name_invalid_ = e_ca_country_name_invalid;
  if (e_ca_country_name_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_country_name_invalid)
}

// .zsearch.LintResult e_ca_country_name_missing = 7;
inline bool Lints::has_e_ca_country_name_missing() const {
  return this != internal_default_instance() && e_ca_country_name_missing_ != NULL;
}
inline void Lints::clear_e_ca_country_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_country_name_missing_ != NULL) delete e_ca_country_name_missing_;
  e_ca_country_name_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_country_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_country_name_missing)
  return e_ca_country_name_missing_ != NULL ? *e_ca_country_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_country_name_missing() {
  
  if (e_ca_country_name_missing_ == NULL) {
    e_ca_country_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_country_name_missing)
  return e_ca_country_name_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_country_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_country_name_missing)
  
  ::zsearch::LintResult* temp = e_ca_country_name_missing_;
  e_ca_country_name_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_country_name_missing(::zsearch::LintResult* e_ca_country_name_missing) {
  delete e_ca_country_name_missing_;
  e_ca_country_name_missing_ = e_ca_country_name_missing;
  if (e_ca_country_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_country_name_missing)
}

// .zsearch.LintResult e_ca_crl_sign_not_set = 8;
inline bool Lints::has_e_ca_crl_sign_not_set() const {
  return this != internal_default_instance() && e_ca_crl_sign_not_set_ != NULL;
}
inline void Lints::clear_e_ca_crl_sign_not_set() {
  if (GetArenaNoVirtual() == NULL && e_ca_crl_sign_not_set_ != NULL) delete e_ca_crl_sign_not_set_;
  e_ca_crl_sign_not_set_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_crl_sign_not_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_crl_sign_not_set)
  return e_ca_crl_sign_not_set_ != NULL ? *e_ca_crl_sign_not_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_crl_sign_not_set() {
  
  if (e_ca_crl_sign_not_set_ == NULL) {
    e_ca_crl_sign_not_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_crl_sign_not_set)
  return e_ca_crl_sign_not_set_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_crl_sign_not_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_crl_sign_not_set)
  
  ::zsearch::LintResult* temp = e_ca_crl_sign_not_set_;
  e_ca_crl_sign_not_set_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_crl_sign_not_set(::zsearch::LintResult* e_ca_crl_sign_not_set) {
  delete e_ca_crl_sign_not_set_;
  e_ca_crl_sign_not_set_ = e_ca_crl_sign_not_set;
  if (e_ca_crl_sign_not_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_crl_sign_not_set)
}

// .zsearch.LintResult n_ca_digital_signature_not_set = 9;
inline bool Lints::has_n_ca_digital_signature_not_set() const {
  return this != internal_default_instance() && n_ca_digital_signature_not_set_ != NULL;
}
inline void Lints::clear_n_ca_digital_signature_not_set() {
  if (GetArenaNoVirtual() == NULL && n_ca_digital_signature_not_set_ != NULL) delete n_ca_digital_signature_not_set_;
  n_ca_digital_signature_not_set_ = NULL;
}
inline const ::zsearch::LintResult& Lints::n_ca_digital_signature_not_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_ca_digital_signature_not_set)
  return n_ca_digital_signature_not_set_ != NULL ? *n_ca_digital_signature_not_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_n_ca_digital_signature_not_set() {
  
  if (n_ca_digital_signature_not_set_ == NULL) {
    n_ca_digital_signature_not_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_ca_digital_signature_not_set)
  return n_ca_digital_signature_not_set_;
}
inline ::zsearch::LintResult* Lints::release_n_ca_digital_signature_not_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_ca_digital_signature_not_set)
  
  ::zsearch::LintResult* temp = n_ca_digital_signature_not_set_;
  n_ca_digital_signature_not_set_ = NULL;
  return temp;
}
inline void Lints::set_allocated_n_ca_digital_signature_not_set(::zsearch::LintResult* n_ca_digital_signature_not_set) {
  delete n_ca_digital_signature_not_set_;
  n_ca_digital_signature_not_set_ = n_ca_digital_signature_not_set;
  if (n_ca_digital_signature_not_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_ca_digital_signature_not_set)
}

// .zsearch.LintResult e_ca_key_cert_sign_not_set = 10;
inline bool Lints::has_e_ca_key_cert_sign_not_set() const {
  return this != internal_default_instance() && e_ca_key_cert_sign_not_set_ != NULL;
}
inline void Lints::clear_e_ca_key_cert_sign_not_set() {
  if (GetArenaNoVirtual() == NULL && e_ca_key_cert_sign_not_set_ != NULL) delete e_ca_key_cert_sign_not_set_;
  e_ca_key_cert_sign_not_set_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_key_cert_sign_not_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_key_cert_sign_not_set)
  return e_ca_key_cert_sign_not_set_ != NULL ? *e_ca_key_cert_sign_not_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_key_cert_sign_not_set() {
  
  if (e_ca_key_cert_sign_not_set_ == NULL) {
    e_ca_key_cert_sign_not_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_key_cert_sign_not_set)
  return e_ca_key_cert_sign_not_set_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_key_cert_sign_not_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_key_cert_sign_not_set)
  
  ::zsearch::LintResult* temp = e_ca_key_cert_sign_not_set_;
  e_ca_key_cert_sign_not_set_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_key_cert_sign_not_set(::zsearch::LintResult* e_ca_key_cert_sign_not_set) {
  delete e_ca_key_cert_sign_not_set_;
  e_ca_key_cert_sign_not_set_ = e_ca_key_cert_sign_not_set;
  if (e_ca_key_cert_sign_not_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_key_cert_sign_not_set)
}

// .zsearch.LintResult e_ca_key_usage_missing = 11;
inline bool Lints::has_e_ca_key_usage_missing() const {
  return this != internal_default_instance() && e_ca_key_usage_missing_ != NULL;
}
inline void Lints::clear_e_ca_key_usage_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_key_usage_missing_ != NULL) delete e_ca_key_usage_missing_;
  e_ca_key_usage_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_key_usage_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_key_usage_missing)
  return e_ca_key_usage_missing_ != NULL ? *e_ca_key_usage_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_key_usage_missing() {
  
  if (e_ca_key_usage_missing_ == NULL) {
    e_ca_key_usage_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_key_usage_missing)
  return e_ca_key_usage_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_key_usage_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_key_usage_missing)
  
  ::zsearch::LintResult* temp = e_ca_key_usage_missing_;
  e_ca_key_usage_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_key_usage_missing(::zsearch::LintResult* e_ca_key_usage_missing) {
  delete e_ca_key_usage_missing_;
  e_ca_key_usage_missing_ = e_ca_key_usage_missing;
  if (e_ca_key_usage_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_key_usage_missing)
}

// .zsearch.LintResult e_ca_key_usage_not_critical = 12;
inline bool Lints::has_e_ca_key_usage_not_critical() const {
  return this != internal_default_instance() && e_ca_key_usage_not_critical_ != NULL;
}
inline void Lints::clear_e_ca_key_usage_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_ca_key_usage_not_critical_ != NULL) delete e_ca_key_usage_not_critical_;
  e_ca_key_usage_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_key_usage_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_key_usage_not_critical)
  return e_ca_key_usage_not_critical_ != NULL ? *e_ca_key_usage_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_key_usage_not_critical() {
  
  if (e_ca_key_usage_not_critical_ == NULL) {
    e_ca_key_usage_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_key_usage_not_critical)
  return e_ca_key_usage_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_key_usage_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_key_usage_not_critical)
  
  ::zsearch::LintResult* temp = e_ca_key_usage_not_critical_;
  e_ca_key_usage_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_key_usage_not_critical(::zsearch::LintResult* e_ca_key_usage_not_critical) {
  delete e_ca_key_usage_not_critical_;
  e_ca_key_usage_not_critical_ = e_ca_key_usage_not_critical;
  if (e_ca_key_usage_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_key_usage_not_critical)
}

// .zsearch.LintResult e_ca_organization_name_missing = 13;
inline bool Lints::has_e_ca_organization_name_missing() const {
  return this != internal_default_instance() && e_ca_organization_name_missing_ != NULL;
}
inline void Lints::clear_e_ca_organization_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_organization_name_missing_ != NULL) delete e_ca_organization_name_missing_;
  e_ca_organization_name_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_organization_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_organization_name_missing)
  return e_ca_organization_name_missing_ != NULL ? *e_ca_organization_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_organization_name_missing() {
  
  if (e_ca_organization_name_missing_ == NULL) {
    e_ca_organization_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_organization_name_missing)
  return e_ca_organization_name_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_organization_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_organization_name_missing)
  
  ::zsearch::LintResult* temp = e_ca_organization_name_missing_;
  e_ca_organization_name_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_organization_name_missing(::zsearch::LintResult* e_ca_organization_name_missing) {
  delete e_ca_organization_name_missing_;
  e_ca_organization_name_missing_ = e_ca_organization_name_missing;
  if (e_ca_organization_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_organization_name_missing)
}

// .zsearch.LintResult e_ca_subject_field_empty = 14;
inline bool Lints::has_e_ca_subject_field_empty() const {
  return this != internal_default_instance() && e_ca_subject_field_empty_ != NULL;
}
inline void Lints::clear_e_ca_subject_field_empty() {
  if (GetArenaNoVirtual() == NULL && e_ca_subject_field_empty_ != NULL) delete e_ca_subject_field_empty_;
  e_ca_subject_field_empty_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_subject_field_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_subject_field_empty)
  return e_ca_subject_field_empty_ != NULL ? *e_ca_subject_field_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_subject_field_empty() {
  
  if (e_ca_subject_field_empty_ == NULL) {
    e_ca_subject_field_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_subject_field_empty)
  return e_ca_subject_field_empty_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_subject_field_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_subject_field_empty)
  
  ::zsearch::LintResult* temp = e_ca_subject_field_empty_;
  e_ca_subject_field_empty_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_subject_field_empty(::zsearch::LintResult* e_ca_subject_field_empty) {
  delete e_ca_subject_field_empty_;
  e_ca_subject_field_empty_ = e_ca_subject_field_empty;
  if (e_ca_subject_field_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_subject_field_empty)
}

// .zsearch.LintResult e_cert_contains_unique_identifier = 15;
inline bool Lints::has_e_cert_contains_unique_identifier() const {
  return this != internal_default_instance() && e_cert_contains_unique_identifier_ != NULL;
}
inline void Lints::clear_e_cert_contains_unique_identifier() {
  if (GetArenaNoVirtual() == NULL && e_cert_contains_unique_identifier_ != NULL) delete e_cert_contains_unique_identifier_;
  e_cert_contains_unique_identifier_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cert_contains_unique_identifier() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_contains_unique_identifier)
  return e_cert_contains_unique_identifier_ != NULL ? *e_cert_contains_unique_identifier_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cert_contains_unique_identifier() {
  
  if (e_cert_contains_unique_identifier_ == NULL) {
    e_cert_contains_unique_identifier_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_contains_unique_identifier)
  return e_cert_contains_unique_identifier_;
}
inline ::zsearch::LintResult* Lints::release_e_cert_contains_unique_identifier() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_contains_unique_identifier)
  
  ::zsearch::LintResult* temp = e_cert_contains_unique_identifier_;
  e_cert_contains_unique_identifier_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cert_contains_unique_identifier(::zsearch::LintResult* e_cert_contains_unique_identifier) {
  delete e_cert_contains_unique_identifier_;
  e_cert_contains_unique_identifier_ = e_cert_contains_unique_identifier;
  if (e_cert_contains_unique_identifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_contains_unique_identifier)
}

// .zsearch.LintResult e_cert_extensions_version_not_3 = 16;
inline bool Lints::has_e_cert_extensions_version_not_3() const {
  return this != internal_default_instance() && e_cert_extensions_version_not_3_ != NULL;
}
inline void Lints::clear_e_cert_extensions_version_not_3() {
  if (GetArenaNoVirtual() == NULL && e_cert_extensions_version_not_3_ != NULL) delete e_cert_extensions_version_not_3_;
  e_cert_extensions_version_not_3_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cert_extensions_version_not_3() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_extensions_version_not_3)
  return e_cert_extensions_version_not_3_ != NULL ? *e_cert_extensions_version_not_3_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cert_extensions_version_not_3() {
  
  if (e_cert_extensions_version_not_3_ == NULL) {
    e_cert_extensions_version_not_3_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_extensions_version_not_3)
  return e_cert_extensions_version_not_3_;
}
inline ::zsearch::LintResult* Lints::release_e_cert_extensions_version_not_3() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_extensions_version_not_3)
  
  ::zsearch::LintResult* temp = e_cert_extensions_version_not_3_;
  e_cert_extensions_version_not_3_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cert_extensions_version_not_3(::zsearch::LintResult* e_cert_extensions_version_not_3) {
  delete e_cert_extensions_version_not_3_;
  e_cert_extensions_version_not_3_ = e_cert_extensions_version_not_3;
  if (e_cert_extensions_version_not_3) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_extensions_version_not_3)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_locality = 17;
inline bool Lints::has_e_cab_dv_conflicts_with_locality() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_locality_ != NULL;
}
inline void Lints::clear_e_cab_dv_conflicts_with_locality() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_locality_ != NULL) delete e_cab_dv_conflicts_with_locality_;
  e_cab_dv_conflicts_with_locality_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_locality() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_locality)
  return e_cab_dv_conflicts_with_locality_ != NULL ? *e_cab_dv_conflicts_with_locality_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_locality() {
  
  if (e_cab_dv_conflicts_with_locality_ == NULL) {
    e_cab_dv_conflicts_with_locality_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_locality)
  return e_cab_dv_conflicts_with_locality_;
}
inline ::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_locality() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_locality)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_locality_;
  e_cab_dv_conflicts_with_locality_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cab_dv_conflicts_with_locality(::zsearch::LintResult* e_cab_dv_conflicts_with_locality) {
  delete e_cab_dv_conflicts_with_locality_;
  e_cab_dv_conflicts_with_locality_ = e_cab_dv_conflicts_with_locality;
  if (e_cab_dv_conflicts_with_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_locality)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_org = 18;
inline bool Lints::has_e_cab_dv_conflicts_with_org() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_org_ != NULL;
}
inline void Lints::clear_e_cab_dv_conflicts_with_org() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_org_ != NULL) delete e_cab_dv_conflicts_with_org_;
  e_cab_dv_conflicts_with_org_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_org() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_org)
  return e_cab_dv_conflicts_with_org_ != NULL ? *e_cab_dv_conflicts_with_org_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_org() {
  
  if (e_cab_dv_conflicts_with_org_ == NULL) {
    e_cab_dv_conflicts_with_org_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_org)
  return e_cab_dv_conflicts_with_org_;
}
inline ::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_org() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_org)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_org_;
  e_cab_dv_conflicts_with_org_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cab_dv_conflicts_with_org(::zsearch::LintResult* e_cab_dv_conflicts_with_org) {
  delete e_cab_dv_conflicts_with_org_;
  e_cab_dv_conflicts_with_org_ = e_cab_dv_conflicts_with_org;
  if (e_cab_dv_conflicts_with_org) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_org)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_postal = 19;
inline bool Lints::has_e_cab_dv_conflicts_with_postal() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_postal_ != NULL;
}
inline void Lints::clear_e_cab_dv_conflicts_with_postal() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_postal_ != NULL) delete e_cab_dv_conflicts_with_postal_;
  e_cab_dv_conflicts_with_postal_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_postal() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_postal)
  return e_cab_dv_conflicts_with_postal_ != NULL ? *e_cab_dv_conflicts_with_postal_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_postal() {
  
  if (e_cab_dv_conflicts_with_postal_ == NULL) {
    e_cab_dv_conflicts_with_postal_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_postal)
  return e_cab_dv_conflicts_with_postal_;
}
inline ::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_postal() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_postal)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_postal_;
  e_cab_dv_conflicts_with_postal_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cab_dv_conflicts_with_postal(::zsearch::LintResult* e_cab_dv_conflicts_with_postal) {
  delete e_cab_dv_conflicts_with_postal_;
  e_cab_dv_conflicts_with_postal_ = e_cab_dv_conflicts_with_postal;
  if (e_cab_dv_conflicts_with_postal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_postal)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_province = 20;
inline bool Lints::has_e_cab_dv_conflicts_with_province() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_province_ != NULL;
}
inline void Lints::clear_e_cab_dv_conflicts_with_province() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_province_ != NULL) delete e_cab_dv_conflicts_with_province_;
  e_cab_dv_conflicts_with_province_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_province() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_province)
  return e_cab_dv_conflicts_with_province_ != NULL ? *e_cab_dv_conflicts_with_province_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_province() {
  
  if (e_cab_dv_conflicts_with_province_ == NULL) {
    e_cab_dv_conflicts_with_province_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_province)
  return e_cab_dv_conflicts_with_province_;
}
inline ::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_province() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_province)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_province_;
  e_cab_dv_conflicts_with_province_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cab_dv_conflicts_with_province(::zsearch::LintResult* e_cab_dv_conflicts_with_province) {
  delete e_cab_dv_conflicts_with_province_;
  e_cab_dv_conflicts_with_province_ = e_cab_dv_conflicts_with_province;
  if (e_cab_dv_conflicts_with_province) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_province)
}

// .zsearch.LintResult e_cab_dv_conflicts_with_street = 21;
inline bool Lints::has_e_cab_dv_conflicts_with_street() const {
  return this != internal_default_instance() && e_cab_dv_conflicts_with_street_ != NULL;
}
inline void Lints::clear_e_cab_dv_conflicts_with_street() {
  if (GetArenaNoVirtual() == NULL && e_cab_dv_conflicts_with_street_ != NULL) delete e_cab_dv_conflicts_with_street_;
  e_cab_dv_conflicts_with_street_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cab_dv_conflicts_with_street() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_dv_conflicts_with_street)
  return e_cab_dv_conflicts_with_street_ != NULL ? *e_cab_dv_conflicts_with_street_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cab_dv_conflicts_with_street() {
  
  if (e_cab_dv_conflicts_with_street_ == NULL) {
    e_cab_dv_conflicts_with_street_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_dv_conflicts_with_street)
  return e_cab_dv_conflicts_with_street_;
}
inline ::zsearch::LintResult* Lints::release_e_cab_dv_conflicts_with_street() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_dv_conflicts_with_street)
  
  ::zsearch::LintResult* temp = e_cab_dv_conflicts_with_street_;
  e_cab_dv_conflicts_with_street_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cab_dv_conflicts_with_street(::zsearch::LintResult* e_cab_dv_conflicts_with_street) {
  delete e_cab_dv_conflicts_with_street_;
  e_cab_dv_conflicts_with_street_ = e_cab_dv_conflicts_with_street;
  if (e_cab_dv_conflicts_with_street) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_dv_conflicts_with_street)
}

// .zsearch.LintResult e_cert_policy_iv_requires_country = 22;
inline bool Lints::has_e_cert_policy_iv_requires_country() const {
  return this != internal_default_instance() && e_cert_policy_iv_requires_country_ != NULL;
}
inline void Lints::clear_e_cert_policy_iv_requires_country() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_iv_requires_country_ != NULL) delete e_cert_policy_iv_requires_country_;
  e_cert_policy_iv_requires_country_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cert_policy_iv_requires_country() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_iv_requires_country)
  return e_cert_policy_iv_requires_country_ != NULL ? *e_cert_policy_iv_requires_country_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cert_policy_iv_requires_country() {
  
  if (e_cert_policy_iv_requires_country_ == NULL) {
    e_cert_policy_iv_requires_country_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_iv_requires_country)
  return e_cert_policy_iv_requires_country_;
}
inline ::zsearch::LintResult* Lints::release_e_cert_policy_iv_requires_country() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_iv_requires_country)
  
  ::zsearch::LintResult* temp = e_cert_policy_iv_requires_country_;
  e_cert_policy_iv_requires_country_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cert_policy_iv_requires_country(::zsearch::LintResult* e_cert_policy_iv_requires_country) {
  delete e_cert_policy_iv_requires_country_;
  e_cert_policy_iv_requires_country_ = e_cert_policy_iv_requires_country;
  if (e_cert_policy_iv_requires_country) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_iv_requires_country)
}

// .zsearch.LintResult e_cert_policy_iv_requires_province_or_locality = 23;
inline bool Lints::has_e_cert_policy_iv_requires_province_or_locality() const {
  return this != internal_default_instance() && e_cert_policy_iv_requires_province_or_locality_ != NULL;
}
inline void Lints::clear_e_cert_policy_iv_requires_province_or_locality() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_iv_requires_province_or_locality_ != NULL) delete e_cert_policy_iv_requires_province_or_locality_;
  e_cert_policy_iv_requires_province_or_locality_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cert_policy_iv_requires_province_or_locality() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
  return e_cert_policy_iv_requires_province_or_locality_ != NULL ? *e_cert_policy_iv_requires_province_or_locality_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cert_policy_iv_requires_province_or_locality() {
  
  if (e_cert_policy_iv_requires_province_or_locality_ == NULL) {
    e_cert_policy_iv_requires_province_or_locality_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
  return e_cert_policy_iv_requires_province_or_locality_;
}
inline ::zsearch::LintResult* Lints::release_e_cert_policy_iv_requires_province_or_locality() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
  
  ::zsearch::LintResult* temp = e_cert_policy_iv_requires_province_or_locality_;
  e_cert_policy_iv_requires_province_or_locality_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cert_policy_iv_requires_province_or_locality(::zsearch::LintResult* e_cert_policy_iv_requires_province_or_locality) {
  delete e_cert_policy_iv_requires_province_or_locality_;
  e_cert_policy_iv_requires_province_or_locality_ = e_cert_policy_iv_requires_province_or_locality;
  if (e_cert_policy_iv_requires_province_or_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_iv_requires_province_or_locality)
}

// .zsearch.LintResult e_cert_policy_ov_requires_country = 24;
inline bool Lints::has_e_cert_policy_ov_requires_country() const {
  return this != internal_default_instance() && e_cert_policy_ov_requires_country_ != NULL;
}
inline void Lints::clear_e_cert_policy_ov_requires_country() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_ov_requires_country_ != NULL) delete e_cert_policy_ov_requires_country_;
  e_cert_policy_ov_requires_country_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cert_policy_ov_requires_country() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_ov_requires_country)
  return e_cert_policy_ov_requires_country_ != NULL ? *e_cert_policy_ov_requires_country_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cert_policy_ov_requires_country() {
  
  if (e_cert_policy_ov_requires_country_ == NULL) {
    e_cert_policy_ov_requires_country_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_ov_requires_country)
  return e_cert_policy_ov_requires_country_;
}
inline ::zsearch::LintResult* Lints::release_e_cert_policy_ov_requires_country() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_ov_requires_country)
  
  ::zsearch::LintResult* temp = e_cert_policy_ov_requires_country_;
  e_cert_policy_ov_requires_country_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cert_policy_ov_requires_country(::zsearch::LintResult* e_cert_policy_ov_requires_country) {
  delete e_cert_policy_ov_requires_country_;
  e_cert_policy_ov_requires_country_ = e_cert_policy_ov_requires_country;
  if (e_cert_policy_ov_requires_country) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_ov_requires_country)
}

// .zsearch.LintResult e_cert_policy_ov_requires_province_or_locality = 25;
inline bool Lints::has_e_cert_policy_ov_requires_province_or_locality() const {
  return this != internal_default_instance() && e_cert_policy_ov_requires_province_or_locality_ != NULL;
}
inline void Lints::clear_e_cert_policy_ov_requires_province_or_locality() {
  if (GetArenaNoVirtual() == NULL && e_cert_policy_ov_requires_province_or_locality_ != NULL) delete e_cert_policy_ov_requires_province_or_locality_;
  e_cert_policy_ov_requires_province_or_locality_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cert_policy_ov_requires_province_or_locality() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
  return e_cert_policy_ov_requires_province_or_locality_ != NULL ? *e_cert_policy_ov_requires_province_or_locality_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cert_policy_ov_requires_province_or_locality() {
  
  if (e_cert_policy_ov_requires_province_or_locality_ == NULL) {
    e_cert_policy_ov_requires_province_or_locality_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
  return e_cert_policy_ov_requires_province_or_locality_;
}
inline ::zsearch::LintResult* Lints::release_e_cert_policy_ov_requires_province_or_locality() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
  
  ::zsearch::LintResult* temp = e_cert_policy_ov_requires_province_or_locality_;
  e_cert_policy_ov_requires_province_or_locality_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cert_policy_ov_requires_province_or_locality(::zsearch::LintResult* e_cert_policy_ov_requires_province_or_locality) {
  delete e_cert_policy_ov_requires_province_or_locality_;
  e_cert_policy_ov_requires_province_or_locality_ = e_cert_policy_ov_requires_province_or_locality;
  if (e_cert_policy_ov_requires_province_or_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_policy_ov_requires_province_or_locality)
}

// .zsearch.LintResult e_cab_ov_requires_org = 26;
inline bool Lints::has_e_cab_ov_requires_org() const {
  return this != internal_default_instance() && e_cab_ov_requires_org_ != NULL;
}
inline void Lints::clear_e_cab_ov_requires_org() {
  if (GetArenaNoVirtual() == NULL && e_cab_ov_requires_org_ != NULL) delete e_cab_ov_requires_org_;
  e_cab_ov_requires_org_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cab_ov_requires_org() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_ov_requires_org)
  return e_cab_ov_requires_org_ != NULL ? *e_cab_ov_requires_org_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cab_ov_requires_org() {
  
  if (e_cab_ov_requires_org_ == NULL) {
    e_cab_ov_requires_org_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_ov_requires_org)
  return e_cab_ov_requires_org_;
}
inline ::zsearch::LintResult* Lints::release_e_cab_ov_requires_org() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_ov_requires_org)
  
  ::zsearch::LintResult* temp = e_cab_ov_requires_org_;
  e_cab_ov_requires_org_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cab_ov_requires_org(::zsearch::LintResult* e_cab_ov_requires_org) {
  delete e_cab_ov_requires_org_;
  e_cab_ov_requires_org_ = e_cab_ov_requires_org;
  if (e_cab_ov_requires_org) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_ov_requires_org)
}

// .zsearch.LintResult e_cab_iv_requires_personal_name = 27;
inline bool Lints::has_e_cab_iv_requires_personal_name() const {
  return this != internal_default_instance() && e_cab_iv_requires_personal_name_ != NULL;
}
inline void Lints::clear_e_cab_iv_requires_personal_name() {
  if (GetArenaNoVirtual() == NULL && e_cab_iv_requires_personal_name_ != NULL) delete e_cab_iv_requires_personal_name_;
  e_cab_iv_requires_personal_name_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cab_iv_requires_personal_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cab_iv_requires_personal_name)
  return e_cab_iv_requires_personal_name_ != NULL ? *e_cab_iv_requires_personal_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cab_iv_requires_personal_name() {
  
  if (e_cab_iv_requires_personal_name_ == NULL) {
    e_cab_iv_requires_personal_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cab_iv_requires_personal_name)
  return e_cab_iv_requires_personal_name_;
}
inline ::zsearch::LintResult* Lints::release_e_cab_iv_requires_personal_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cab_iv_requires_personal_name)
  
  ::zsearch::LintResult* temp = e_cab_iv_requires_personal_name_;
  e_cab_iv_requires_personal_name_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cab_iv_requires_personal_name(::zsearch::LintResult* e_cab_iv_requires_personal_name) {
  delete e_cab_iv_requires_personal_name_;
  e_cab_iv_requires_personal_name_ = e_cab_iv_requires_personal_name;
  if (e_cab_iv_requires_personal_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cab_iv_requires_personal_name)
}

// .zsearch.LintResult e_cert_unique_identifier_version_not_2_or_3 = 28;
inline bool Lints::has_e_cert_unique_identifier_version_not_2_or_3() const {
  return this != internal_default_instance() && e_cert_unique_identifier_version_not_2_or_3_ != NULL;
}
inline void Lints::clear_e_cert_unique_identifier_version_not_2_or_3() {
  if (GetArenaNoVirtual() == NULL && e_cert_unique_identifier_version_not_2_or_3_ != NULL) delete e_cert_unique_identifier_version_not_2_or_3_;
  e_cert_unique_identifier_version_not_2_or_3_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_cert_unique_identifier_version_not_2_or_3() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
  return e_cert_unique_identifier_version_not_2_or_3_ != NULL ? *e_cert_unique_identifier_version_not_2_or_3_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_cert_unique_identifier_version_not_2_or_3() {
  
  if (e_cert_unique_identifier_version_not_2_or_3_ == NULL) {
    e_cert_unique_identifier_version_not_2_or_3_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
  return e_cert_unique_identifier_version_not_2_or_3_;
}
inline ::zsearch::LintResult* Lints::release_e_cert_unique_identifier_version_not_2_or_3() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
  
  ::zsearch::LintResult* temp = e_cert_unique_identifier_version_not_2_or_3_;
  e_cert_unique_identifier_version_not_2_or_3_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_cert_unique_identifier_version_not_2_or_3(::zsearch::LintResult* e_cert_unique_identifier_version_not_2_or_3) {
  delete e_cert_unique_identifier_version_not_2_or_3_;
  e_cert_unique_identifier_version_not_2_or_3_ = e_cert_unique_identifier_version_not_2_or_3;
  if (e_cert_unique_identifier_version_not_2_or_3) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_cert_unique_identifier_version_not_2_or_3)
}

// .zsearch.LintResult e_distribution_point_incomplete = 30;
inline bool Lints::has_e_distribution_point_incomplete() const {
  return this != internal_default_instance() && e_distribution_point_incomplete_ != NULL;
}
inline void Lints::clear_e_distribution_point_incomplete() {
  if (GetArenaNoVirtual() == NULL && e_distribution_point_incomplete_ != NULL) delete e_distribution_point_incomplete_;
  e_distribution_point_incomplete_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_distribution_point_incomplete() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_distribution_point_incomplete)
  return e_distribution_point_incomplete_ != NULL ? *e_distribution_point_incomplete_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_distribution_point_incomplete() {
  
  if (e_distribution_point_incomplete_ == NULL) {
    e_distribution_point_incomplete_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_distribution_point_incomplete)
  return e_distribution_point_incomplete_;
}
inline ::zsearch::LintResult* Lints::release_e_distribution_point_incomplete() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_distribution_point_incomplete)
  
  ::zsearch::LintResult* temp = e_distribution_point_incomplete_;
  e_distribution_point_incomplete_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_distribution_point_incomplete(::zsearch::LintResult* e_distribution_point_incomplete) {
  delete e_distribution_point_incomplete_;
  e_distribution_point_incomplete_ = e_distribution_point_incomplete;
  if (e_distribution_point_incomplete) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_distribution_point_incomplete)
}

// .zsearch.LintResult w_distribution_point_missing_ldap_or_uri = 31;
inline bool Lints::has_w_distribution_point_missing_ldap_or_uri() const {
  return this != internal_default_instance() && w_distribution_point_missing_ldap_or_uri_ != NULL;
}
inline void Lints::clear_w_distribution_point_missing_ldap_or_uri() {
  if (GetArenaNoVirtual() == NULL && w_distribution_point_missing_ldap_or_uri_ != NULL) delete w_distribution_point_missing_ldap_or_uri_;
  w_distribution_point_missing_ldap_or_uri_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_distribution_point_missing_ldap_or_uri() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
  return w_distribution_point_missing_ldap_or_uri_ != NULL ? *w_distribution_point_missing_ldap_or_uri_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_distribution_point_missing_ldap_or_uri() {
  
  if (w_distribution_point_missing_ldap_or_uri_ == NULL) {
    w_distribution_point_missing_ldap_or_uri_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
  return w_distribution_point_missing_ldap_or_uri_;
}
inline ::zsearch::LintResult* Lints::release_w_distribution_point_missing_ldap_or_uri() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
  
  ::zsearch::LintResult* temp = w_distribution_point_missing_ldap_or_uri_;
  w_distribution_point_missing_ldap_or_uri_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_distribution_point_missing_ldap_or_uri(::zsearch::LintResult* w_distribution_point_missing_ldap_or_uri) {
  delete w_distribution_point_missing_ldap_or_uri_;
  w_distribution_point_missing_ldap_or_uri_ = w_distribution_point_missing_ldap_or_uri;
  if (w_distribution_point_missing_ldap_or_uri) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_distribution_point_missing_ldap_or_uri)
}

// .zsearch.LintResult e_dsa_improper_modulus_or_divisor_size = 32;
inline bool Lints::has_e_dsa_improper_modulus_or_divisor_size() const {
  return this != internal_default_instance() && e_dsa_improper_modulus_or_divisor_size_ != NULL;
}
inline void Lints::clear_e_dsa_improper_modulus_or_divisor_size() {
  if (GetArenaNoVirtual() == NULL && e_dsa_improper_modulus_or_divisor_size_ != NULL) delete e_dsa_improper_modulus_or_divisor_size_;
  e_dsa_improper_modulus_or_divisor_size_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dsa_improper_modulus_or_divisor_size() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
  return e_dsa_improper_modulus_or_divisor_size_ != NULL ? *e_dsa_improper_modulus_or_divisor_size_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dsa_improper_modulus_or_divisor_size() {
  
  if (e_dsa_improper_modulus_or_divisor_size_ == NULL) {
    e_dsa_improper_modulus_or_divisor_size_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
  return e_dsa_improper_modulus_or_divisor_size_;
}
inline ::zsearch::LintResult* Lints::release_e_dsa_improper_modulus_or_divisor_size() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
  
  ::zsearch::LintResult* temp = e_dsa_improper_modulus_or_divisor_size_;
  e_dsa_improper_modulus_or_divisor_size_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dsa_improper_modulus_or_divisor_size(::zsearch::LintResult* e_dsa_improper_modulus_or_divisor_size) {
  delete e_dsa_improper_modulus_or_divisor_size_;
  e_dsa_improper_modulus_or_divisor_size_ = e_dsa_improper_modulus_or_divisor_size;
  if (e_dsa_improper_modulus_or_divisor_size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_improper_modulus_or_divisor_size)
}

// .zsearch.LintResult e_dsa_shorter_than_2048_bits = 33;
inline bool Lints::has_e_dsa_shorter_than_2048_bits() const {
  return this != internal_default_instance() && e_dsa_shorter_than_2048_bits_ != NULL;
}
inline void Lints::clear_e_dsa_shorter_than_2048_bits() {
  if (GetArenaNoVirtual() == NULL && e_dsa_shorter_than_2048_bits_ != NULL) delete e_dsa_shorter_than_2048_bits_;
  e_dsa_shorter_than_2048_bits_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dsa_shorter_than_2048_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_shorter_than_2048_bits)
  return e_dsa_shorter_than_2048_bits_ != NULL ? *e_dsa_shorter_than_2048_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dsa_shorter_than_2048_bits() {
  
  if (e_dsa_shorter_than_2048_bits_ == NULL) {
    e_dsa_shorter_than_2048_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_shorter_than_2048_bits)
  return e_dsa_shorter_than_2048_bits_;
}
inline ::zsearch::LintResult* Lints::release_e_dsa_shorter_than_2048_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_shorter_than_2048_bits)
  
  ::zsearch::LintResult* temp = e_dsa_shorter_than_2048_bits_;
  e_dsa_shorter_than_2048_bits_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dsa_shorter_than_2048_bits(::zsearch::LintResult* e_dsa_shorter_than_2048_bits) {
  delete e_dsa_shorter_than_2048_bits_;
  e_dsa_shorter_than_2048_bits_ = e_dsa_shorter_than_2048_bits;
  if (e_dsa_shorter_than_2048_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_shorter_than_2048_bits)
}

// .zsearch.LintResult e_ec_improper_curves = 34;
inline bool Lints::has_e_ec_improper_curves() const {
  return this != internal_default_instance() && e_ec_improper_curves_ != NULL;
}
inline void Lints::clear_e_ec_improper_curves() {
  if (GetArenaNoVirtual() == NULL && e_ec_improper_curves_ != NULL) delete e_ec_improper_curves_;
  e_ec_improper_curves_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ec_improper_curves() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ec_improper_curves)
  return e_ec_improper_curves_ != NULL ? *e_ec_improper_curves_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ec_improper_curves() {
  
  if (e_ec_improper_curves_ == NULL) {
    e_ec_improper_curves_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ec_improper_curves)
  return e_ec_improper_curves_;
}
inline ::zsearch::LintResult* Lints::release_e_ec_improper_curves() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ec_improper_curves)
  
  ::zsearch::LintResult* temp = e_ec_improper_curves_;
  e_ec_improper_curves_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ec_improper_curves(::zsearch::LintResult* e_ec_improper_curves) {
  delete e_ec_improper_curves_;
  e_ec_improper_curves_ = e_ec_improper_curves;
  if (e_ec_improper_curves) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ec_improper_curves)
}

// .zsearch.LintResult w_eku_critical_improperly = 35;
inline bool Lints::has_w_eku_critical_improperly() const {
  return this != internal_default_instance() && w_eku_critical_improperly_ != NULL;
}
inline void Lints::clear_w_eku_critical_improperly() {
  if (GetArenaNoVirtual() == NULL && w_eku_critical_improperly_ != NULL) delete w_eku_critical_improperly_;
  w_eku_critical_improperly_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_eku_critical_improperly() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_eku_critical_improperly)
  return w_eku_critical_improperly_ != NULL ? *w_eku_critical_improperly_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_eku_critical_improperly() {
  
  if (w_eku_critical_improperly_ == NULL) {
    w_eku_critical_improperly_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_eku_critical_improperly)
  return w_eku_critical_improperly_;
}
inline ::zsearch::LintResult* Lints::release_w_eku_critical_improperly() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_eku_critical_improperly)
  
  ::zsearch::LintResult* temp = w_eku_critical_improperly_;
  w_eku_critical_improperly_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_eku_critical_improperly(::zsearch::LintResult* w_eku_critical_improperly) {
  delete w_eku_critical_improperly_;
  w_eku_critical_improperly_ = w_eku_critical_improperly;
  if (w_eku_critical_improperly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_eku_critical_improperly)
}

// .zsearch.LintResult e_ev_business_category_missing = 36;
inline bool Lints::has_e_ev_business_category_missing() const {
  return this != internal_default_instance() && e_ev_business_category_missing_ != NULL;
}
inline void Lints::clear_e_ev_business_category_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_business_category_missing_ != NULL) delete e_ev_business_category_missing_;
  e_ev_business_category_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ev_business_category_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_business_category_missing)
  return e_ev_business_category_missing_ != NULL ? *e_ev_business_category_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ev_business_category_missing() {
  
  if (e_ev_business_category_missing_ == NULL) {
    e_ev_business_category_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_business_category_missing)
  return e_ev_business_category_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ev_business_category_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_business_category_missing)
  
  ::zsearch::LintResult* temp = e_ev_business_category_missing_;
  e_ev_business_category_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ev_business_category_missing(::zsearch::LintResult* e_ev_business_category_missing) {
  delete e_ev_business_category_missing_;
  e_ev_business_category_missing_ = e_ev_business_category_missing;
  if (e_ev_business_category_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_business_category_missing)
}

// .zsearch.LintResult e_ev_country_name_missing = 37;
inline bool Lints::has_e_ev_country_name_missing() const {
  return this != internal_default_instance() && e_ev_country_name_missing_ != NULL;
}
inline void Lints::clear_e_ev_country_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_country_name_missing_ != NULL) delete e_ev_country_name_missing_;
  e_ev_country_name_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ev_country_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_country_name_missing)
  return e_ev_country_name_missing_ != NULL ? *e_ev_country_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ev_country_name_missing() {
  
  if (e_ev_country_name_missing_ == NULL) {
    e_ev_country_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_country_name_missing)
  return e_ev_country_name_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ev_country_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_country_name_missing)
  
  ::zsearch::LintResult* temp = e_ev_country_name_missing_;
  e_ev_country_name_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ev_country_name_missing(::zsearch::LintResult* e_ev_country_name_missing) {
  delete e_ev_country_name_missing_;
  e_ev_country_name_missing_ = e_ev_country_name_missing;
  if (e_ev_country_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_country_name_missing)
}

// .zsearch.LintResult e_ev_locality_name_missing = 38;
inline bool Lints::has_e_ev_locality_name_missing() const {
  return this != internal_default_instance() && e_ev_locality_name_missing_ != NULL;
}
inline void Lints::clear_e_ev_locality_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_locality_name_missing_ != NULL) delete e_ev_locality_name_missing_;
  e_ev_locality_name_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ev_locality_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_locality_name_missing)
  return e_ev_locality_name_missing_ != NULL ? *e_ev_locality_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ev_locality_name_missing() {
  
  if (e_ev_locality_name_missing_ == NULL) {
    e_ev_locality_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_locality_name_missing)
  return e_ev_locality_name_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ev_locality_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_locality_name_missing)
  
  ::zsearch::LintResult* temp = e_ev_locality_name_missing_;
  e_ev_locality_name_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ev_locality_name_missing(::zsearch::LintResult* e_ev_locality_name_missing) {
  delete e_ev_locality_name_missing_;
  e_ev_locality_name_missing_ = e_ev_locality_name_missing;
  if (e_ev_locality_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_locality_name_missing)
}

// .zsearch.LintResult e_ev_organization_name_missing = 39;
inline bool Lints::has_e_ev_organization_name_missing() const {
  return this != internal_default_instance() && e_ev_organization_name_missing_ != NULL;
}
inline void Lints::clear_e_ev_organization_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_organization_name_missing_ != NULL) delete e_ev_organization_name_missing_;
  e_ev_organization_name_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ev_organization_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_organization_name_missing)
  return e_ev_organization_name_missing_ != NULL ? *e_ev_organization_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ev_organization_name_missing() {
  
  if (e_ev_organization_name_missing_ == NULL) {
    e_ev_organization_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_organization_name_missing)
  return e_ev_organization_name_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ev_organization_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_organization_name_missing)
  
  ::zsearch::LintResult* temp = e_ev_organization_name_missing_;
  e_ev_organization_name_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ev_organization_name_missing(::zsearch::LintResult* e_ev_organization_name_missing) {
  delete e_ev_organization_name_missing_;
  e_ev_organization_name_missing_ = e_ev_organization_name_missing;
  if (e_ev_organization_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_organization_name_missing)
}

// .zsearch.LintResult e_ev_serial_number_missing = 40;
inline bool Lints::has_e_ev_serial_number_missing() const {
  return this != internal_default_instance() && e_ev_serial_number_missing_ != NULL;
}
inline void Lints::clear_e_ev_serial_number_missing() {
  if (GetArenaNoVirtual() == NULL && e_ev_serial_number_missing_ != NULL) delete e_ev_serial_number_missing_;
  e_ev_serial_number_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ev_serial_number_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_serial_number_missing)
  return e_ev_serial_number_missing_ != NULL ? *e_ev_serial_number_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ev_serial_number_missing() {
  
  if (e_ev_serial_number_missing_ == NULL) {
    e_ev_serial_number_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_serial_number_missing)
  return e_ev_serial_number_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ev_serial_number_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_serial_number_missing)
  
  ::zsearch::LintResult* temp = e_ev_serial_number_missing_;
  e_ev_serial_number_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ev_serial_number_missing(::zsearch::LintResult* e_ev_serial_number_missing) {
  delete e_ev_serial_number_missing_;
  e_ev_serial_number_missing_ = e_ev_serial_number_missing;
  if (e_ev_serial_number_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_serial_number_missing)
}

// .zsearch.LintResult e_ev_valid_time_too_long = 41;
inline bool Lints::has_e_ev_valid_time_too_long() const {
  return this != internal_default_instance() && e_ev_valid_time_too_long_ != NULL;
}
inline void Lints::clear_e_ev_valid_time_too_long() {
  if (GetArenaNoVirtual() == NULL && e_ev_valid_time_too_long_ != NULL) delete e_ev_valid_time_too_long_;
  e_ev_valid_time_too_long_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ev_valid_time_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ev_valid_time_too_long)
  return e_ev_valid_time_too_long_ != NULL ? *e_ev_valid_time_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ev_valid_time_too_long() {
  
  if (e_ev_valid_time_too_long_ == NULL) {
    e_ev_valid_time_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ev_valid_time_too_long)
  return e_ev_valid_time_too_long_;
}
inline ::zsearch::LintResult* Lints::release_e_ev_valid_time_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ev_valid_time_too_long)
  
  ::zsearch::LintResult* temp = e_ev_valid_time_too_long_;
  e_ev_valid_time_too_long_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ev_valid_time_too_long(::zsearch::LintResult* e_ev_valid_time_too_long) {
  delete e_ev_valid_time_too_long_;
  e_ev_valid_time_too_long_ = e_ev_valid_time_too_long;
  if (e_ev_valid_time_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ev_valid_time_too_long)
}

// .zsearch.LintResult w_ext_aia_access_location_missing = 42;
inline bool Lints::has_w_ext_aia_access_location_missing() const {
  return this != internal_default_instance() && w_ext_aia_access_location_missing_ != NULL;
}
inline void Lints::clear_w_ext_aia_access_location_missing() {
  if (GetArenaNoVirtual() == NULL && w_ext_aia_access_location_missing_ != NULL) delete w_ext_aia_access_location_missing_;
  w_ext_aia_access_location_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_aia_access_location_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_aia_access_location_missing)
  return w_ext_aia_access_location_missing_ != NULL ? *w_ext_aia_access_location_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_aia_access_location_missing() {
  
  if (w_ext_aia_access_location_missing_ == NULL) {
    w_ext_aia_access_location_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_aia_access_location_missing)
  return w_ext_aia_access_location_missing_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_aia_access_location_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_aia_access_location_missing)
  
  ::zsearch::LintResult* temp = w_ext_aia_access_location_missing_;
  w_ext_aia_access_location_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_aia_access_location_missing(::zsearch::LintResult* w_ext_aia_access_location_missing) {
  delete w_ext_aia_access_location_missing_;
  w_ext_aia_access_location_missing_ = w_ext_aia_access_location_missing;
  if (w_ext_aia_access_location_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_aia_access_location_missing)
}

// .zsearch.LintResult e_ext_aia_marked_critical = 43;
inline bool Lints::has_e_ext_aia_marked_critical() const {
  return this != internal_default_instance() && e_ext_aia_marked_critical_ != NULL;
}
inline void Lints::clear_e_ext_aia_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_aia_marked_critical_ != NULL) delete e_ext_aia_marked_critical_;
  e_ext_aia_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_aia_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_aia_marked_critical)
  return e_ext_aia_marked_critical_ != NULL ? *e_ext_aia_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_aia_marked_critical() {
  
  if (e_ext_aia_marked_critical_ == NULL) {
    e_ext_aia_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_aia_marked_critical)
  return e_ext_aia_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_aia_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_aia_marked_critical)
  
  ::zsearch::LintResult* temp = e_ext_aia_marked_critical_;
  e_ext_aia_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_aia_marked_critical(::zsearch::LintResult* e_ext_aia_marked_critical) {
  delete e_ext_aia_marked_critical_;
  e_ext_aia_marked_critical_ = e_ext_aia_marked_critical;
  if (e_ext_aia_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_aia_marked_critical)
}

// .zsearch.LintResult e_ext_authority_key_identifier_critical = 44;
inline bool Lints::has_e_ext_authority_key_identifier_critical() const {
  return this != internal_default_instance() && e_ext_authority_key_identifier_critical_ != NULL;
}
inline void Lints::clear_e_ext_authority_key_identifier_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_critical_ != NULL) delete e_ext_authority_key_identifier_critical_;
  e_ext_authority_key_identifier_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_authority_key_identifier_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_authority_key_identifier_critical)
  return e_ext_authority_key_identifier_critical_ != NULL ? *e_ext_authority_key_identifier_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_authority_key_identifier_critical() {
  
  if (e_ext_authority_key_identifier_critical_ == NULL) {
    e_ext_authority_key_identifier_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_authority_key_identifier_critical)
  return e_ext_authority_key_identifier_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_authority_key_identifier_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_authority_key_identifier_critical)
  
  ::zsearch::LintResult* temp = e_ext_authority_key_identifier_critical_;
  e_ext_authority_key_identifier_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_authority_key_identifier_critical(::zsearch::LintResult* e_ext_authority_key_identifier_critical) {
  delete e_ext_authority_key_identifier_critical_;
  e_ext_authority_key_identifier_critical_ = e_ext_authority_key_identifier_critical;
  if (e_ext_authority_key_identifier_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_authority_key_identifier_critical)
}

// .zsearch.LintResult e_ext_authority_key_identifier_missing = 45;
inline bool Lints::has_e_ext_authority_key_identifier_missing() const {
  return this != internal_default_instance() && e_ext_authority_key_identifier_missing_ != NULL;
}
inline void Lints::clear_e_ext_authority_key_identifier_missing() {
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_missing_ != NULL) delete e_ext_authority_key_identifier_missing_;
  e_ext_authority_key_identifier_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_authority_key_identifier_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_authority_key_identifier_missing)
  return e_ext_authority_key_identifier_missing_ != NULL ? *e_ext_authority_key_identifier_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_authority_key_identifier_missing() {
  
  if (e_ext_authority_key_identifier_missing_ == NULL) {
    e_ext_authority_key_identifier_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_authority_key_identifier_missing)
  return e_ext_authority_key_identifier_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_authority_key_identifier_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_authority_key_identifier_missing)
  
  ::zsearch::LintResult* temp = e_ext_authority_key_identifier_missing_;
  e_ext_authority_key_identifier_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_authority_key_identifier_missing(::zsearch::LintResult* e_ext_authority_key_identifier_missing) {
  delete e_ext_authority_key_identifier_missing_;
  e_ext_authority_key_identifier_missing_ = e_ext_authority_key_identifier_missing;
  if (e_ext_authority_key_identifier_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_authority_key_identifier_missing)
}

// .zsearch.LintResult e_ext_authority_key_identifier_no_key_identifier = 46;
inline bool Lints::has_e_ext_authority_key_identifier_no_key_identifier() const {
  return this != internal_default_instance() && e_ext_authority_key_identifier_no_key_identifier_ != NULL;
}
inline void Lints::clear_e_ext_authority_key_identifier_no_key_identifier() {
  if (GetArenaNoVirtual() == NULL && e_ext_authority_key_identifier_no_key_identifier_ != NULL) delete e_ext_authority_key_identifier_no_key_identifier_;
  e_ext_authority_key_identifier_no_key_identifier_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_authority_key_identifier_no_key_identifier() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
  return e_ext_authority_key_identifier_no_key_identifier_ != NULL ? *e_ext_authority_key_identifier_no_key_identifier_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_authority_key_identifier_no_key_identifier() {
  
  if (e_ext_authority_key_identifier_no_key_identifier_ == NULL) {
    e_ext_authority_key_identifier_no_key_identifier_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
  return e_ext_authority_key_identifier_no_key_identifier_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_authority_key_identifier_no_key_identifier() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
  
  ::zsearch::LintResult* temp = e_ext_authority_key_identifier_no_key_identifier_;
  e_ext_authority_key_identifier_no_key_identifier_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_authority_key_identifier_no_key_identifier(::zsearch::LintResult* e_ext_authority_key_identifier_no_key_identifier) {
  delete e_ext_authority_key_identifier_no_key_identifier_;
  e_ext_authority_key_identifier_no_key_identifier_ = e_ext_authority_key_identifier_no_key_identifier;
  if (e_ext_authority_key_identifier_no_key_identifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_authority_key_identifier_no_key_identifier)
}

// .zsearch.LintResult w_ext_cert_policy_contains_noticeref = 47;
inline bool Lints::has_w_ext_cert_policy_contains_noticeref() const {
  return this != internal_default_instance() && w_ext_cert_policy_contains_noticeref_ != NULL;
}
inline void Lints::clear_w_ext_cert_policy_contains_noticeref() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_contains_noticeref_ != NULL) delete w_ext_cert_policy_contains_noticeref_;
  w_ext_cert_policy_contains_noticeref_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_cert_policy_contains_noticeref() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
  return w_ext_cert_policy_contains_noticeref_ != NULL ? *w_ext_cert_policy_contains_noticeref_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_contains_noticeref() {
  
  if (w_ext_cert_policy_contains_noticeref_ == NULL) {
    w_ext_cert_policy_contains_noticeref_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
  return w_ext_cert_policy_contains_noticeref_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_cert_policy_contains_noticeref() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_contains_noticeref_;
  w_ext_cert_policy_contains_noticeref_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_cert_policy_contains_noticeref(::zsearch::LintResult* w_ext_cert_policy_contains_noticeref) {
  delete w_ext_cert_policy_contains_noticeref_;
  w_ext_cert_policy_contains_noticeref_ = w_ext_cert_policy_contains_noticeref;
  if (w_ext_cert_policy_contains_noticeref) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_contains_noticeref)
}

// .zsearch.LintResult e_ext_cert_policy_disallowed_any_policy_qualifier = 48;
inline bool Lints::has_e_ext_cert_policy_disallowed_any_policy_qualifier() const {
  return this != internal_default_instance() && e_ext_cert_policy_disallowed_any_policy_qualifier_ != NULL;
}
inline void Lints::clear_e_ext_cert_policy_disallowed_any_policy_qualifier() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_disallowed_any_policy_qualifier_ != NULL) delete e_ext_cert_policy_disallowed_any_policy_qualifier_;
  e_ext_cert_policy_disallowed_any_policy_qualifier_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_cert_policy_disallowed_any_policy_qualifier() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
  return e_ext_cert_policy_disallowed_any_policy_qualifier_ != NULL ? *e_ext_cert_policy_disallowed_any_policy_qualifier_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_disallowed_any_policy_qualifier() {
  
  if (e_ext_cert_policy_disallowed_any_policy_qualifier_ == NULL) {
    e_ext_cert_policy_disallowed_any_policy_qualifier_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
  return e_ext_cert_policy_disallowed_any_policy_qualifier_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_cert_policy_disallowed_any_policy_qualifier() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_disallowed_any_policy_qualifier_;
  e_ext_cert_policy_disallowed_any_policy_qualifier_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_cert_policy_disallowed_any_policy_qualifier(::zsearch::LintResult* e_ext_cert_policy_disallowed_any_policy_qualifier) {
  delete e_ext_cert_policy_disallowed_any_policy_qualifier_;
  e_ext_cert_policy_disallowed_any_policy_qualifier_ = e_ext_cert_policy_disallowed_any_policy_qualifier;
  if (e_ext_cert_policy_disallowed_any_policy_qualifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_disallowed_any_policy_qualifier)
}

// .zsearch.LintResult e_ext_cert_policy_duplicate = 49;
inline bool Lints::has_e_ext_cert_policy_duplicate() const {
  return this != internal_default_instance() && e_ext_cert_policy_duplicate_ != NULL;
}
inline void Lints::clear_e_ext_cert_policy_duplicate() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_duplicate_ != NULL) delete e_ext_cert_policy_duplicate_;
  e_ext_cert_policy_duplicate_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_cert_policy_duplicate() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_duplicate)
  return e_ext_cert_policy_duplicate_ != NULL ? *e_ext_cert_policy_duplicate_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_duplicate() {
  
  if (e_ext_cert_policy_duplicate_ == NULL) {
    e_ext_cert_policy_duplicate_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_duplicate)
  return e_ext_cert_policy_duplicate_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_cert_policy_duplicate() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_duplicate)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_duplicate_;
  e_ext_cert_policy_duplicate_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_cert_policy_duplicate(::zsearch::LintResult* e_ext_cert_policy_duplicate) {
  delete e_ext_cert_policy_duplicate_;
  e_ext_cert_policy_duplicate_ = e_ext_cert_policy_duplicate;
  if (e_ext_cert_policy_duplicate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_duplicate)
}

// .zsearch.LintResult e_ext_cert_policy_explicit_text_ia5_string = 50;
inline bool Lints::has_e_ext_cert_policy_explicit_text_ia5_string() const {
  return this != internal_default_instance() && e_ext_cert_policy_explicit_text_ia5_string_ != NULL;
}
inline void Lints::clear_e_ext_cert_policy_explicit_text_ia5_string() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_explicit_text_ia5_string_ != NULL) delete e_ext_cert_policy_explicit_text_ia5_string_;
  e_ext_cert_policy_explicit_text_ia5_string_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_cert_policy_explicit_text_ia5_string() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
  return e_ext_cert_policy_explicit_text_ia5_string_ != NULL ? *e_ext_cert_policy_explicit_text_ia5_string_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_explicit_text_ia5_string() {
  
  if (e_ext_cert_policy_explicit_text_ia5_string_ == NULL) {
    e_ext_cert_policy_explicit_text_ia5_string_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
  return e_ext_cert_policy_explicit_text_ia5_string_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_cert_policy_explicit_text_ia5_string() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_explicit_text_ia5_string_;
  e_ext_cert_policy_explicit_text_ia5_string_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_cert_policy_explicit_text_ia5_string(::zsearch::LintResult* e_ext_cert_policy_explicit_text_ia5_string) {
  delete e_ext_cert_policy_explicit_text_ia5_string_;
  e_ext_cert_policy_explicit_text_ia5_string_ = e_ext_cert_policy_explicit_text_ia5_string;
  if (e_ext_cert_policy_explicit_text_ia5_string) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_explicit_text_ia5_string)
}

// .zsearch.LintResult w_ext_cert_policy_explicit_text_includes_control = 51;
inline bool Lints::has_w_ext_cert_policy_explicit_text_includes_control() const {
  return this != internal_default_instance() && w_ext_cert_policy_explicit_text_includes_control_ != NULL;
}
inline void Lints::clear_w_ext_cert_policy_explicit_text_includes_control() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_includes_control_ != NULL) delete w_ext_cert_policy_explicit_text_includes_control_;
  w_ext_cert_policy_explicit_text_includes_control_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_cert_policy_explicit_text_includes_control() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
  return w_ext_cert_policy_explicit_text_includes_control_ != NULL ? *w_ext_cert_policy_explicit_text_includes_control_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_explicit_text_includes_control() {
  
  if (w_ext_cert_policy_explicit_text_includes_control_ == NULL) {
    w_ext_cert_policy_explicit_text_includes_control_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
  return w_ext_cert_policy_explicit_text_includes_control_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_cert_policy_explicit_text_includes_control() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_explicit_text_includes_control_;
  w_ext_cert_policy_explicit_text_includes_control_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_cert_policy_explicit_text_includes_control(::zsearch::LintResult* w_ext_cert_policy_explicit_text_includes_control) {
  delete w_ext_cert_policy_explicit_text_includes_control_;
  w_ext_cert_policy_explicit_text_includes_control_ = w_ext_cert_policy_explicit_text_includes_control;
  if (w_ext_cert_policy_explicit_text_includes_control) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_explicit_text_includes_control)
}

// .zsearch.LintResult w_ext_cert_policy_explicit_text_not_nfc = 52;
inline bool Lints::has_w_ext_cert_policy_explicit_text_not_nfc() const {
  return this != internal_default_instance() && w_ext_cert_policy_explicit_text_not_nfc_ != NULL;
}
inline void Lints::clear_w_ext_cert_policy_explicit_text_not_nfc() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_not_nfc_ != NULL) delete w_ext_cert_policy_explicit_text_not_nfc_;
  w_ext_cert_policy_explicit_text_not_nfc_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_cert_policy_explicit_text_not_nfc() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
  return w_ext_cert_policy_explicit_text_not_nfc_ != NULL ? *w_ext_cert_policy_explicit_text_not_nfc_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_explicit_text_not_nfc() {
  
  if (w_ext_cert_policy_explicit_text_not_nfc_ == NULL) {
    w_ext_cert_policy_explicit_text_not_nfc_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
  return w_ext_cert_policy_explicit_text_not_nfc_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_cert_policy_explicit_text_not_nfc() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_explicit_text_not_nfc_;
  w_ext_cert_policy_explicit_text_not_nfc_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_cert_policy_explicit_text_not_nfc(::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_nfc) {
  delete w_ext_cert_policy_explicit_text_not_nfc_;
  w_ext_cert_policy_explicit_text_not_nfc_ = w_ext_cert_policy_explicit_text_not_nfc;
  if (w_ext_cert_policy_explicit_text_not_nfc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_explicit_text_not_nfc)
}

// .zsearch.LintResult w_ext_cert_policy_explicit_text_not_utf8 = 53;
inline bool Lints::has_w_ext_cert_policy_explicit_text_not_utf8() const {
  return this != internal_default_instance() && w_ext_cert_policy_explicit_text_not_utf8_ != NULL;
}
inline void Lints::clear_w_ext_cert_policy_explicit_text_not_utf8() {
  if (GetArenaNoVirtual() == NULL && w_ext_cert_policy_explicit_text_not_utf8_ != NULL) delete w_ext_cert_policy_explicit_text_not_utf8_;
  w_ext_cert_policy_explicit_text_not_utf8_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_cert_policy_explicit_text_not_utf8() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
  return w_ext_cert_policy_explicit_text_not_utf8_ != NULL ? *w_ext_cert_policy_explicit_text_not_utf8_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_cert_policy_explicit_text_not_utf8() {
  
  if (w_ext_cert_policy_explicit_text_not_utf8_ == NULL) {
    w_ext_cert_policy_explicit_text_not_utf8_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
  return w_ext_cert_policy_explicit_text_not_utf8_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_cert_policy_explicit_text_not_utf8() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
  
  ::zsearch::LintResult* temp = w_ext_cert_policy_explicit_text_not_utf8_;
  w_ext_cert_policy_explicit_text_not_utf8_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_cert_policy_explicit_text_not_utf8(::zsearch::LintResult* w_ext_cert_policy_explicit_text_not_utf8) {
  delete w_ext_cert_policy_explicit_text_not_utf8_;
  w_ext_cert_policy_explicit_text_not_utf8_ = w_ext_cert_policy_explicit_text_not_utf8;
  if (w_ext_cert_policy_explicit_text_not_utf8) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_cert_policy_explicit_text_not_utf8)
}

// .zsearch.LintResult e_ext_cert_policy_explicit_text_too_long = 54;
inline bool Lints::has_e_ext_cert_policy_explicit_text_too_long() const {
  return this != internal_default_instance() && e_ext_cert_policy_explicit_text_too_long_ != NULL;
}
inline void Lints::clear_e_ext_cert_policy_explicit_text_too_long() {
  if (GetArenaNoVirtual() == NULL && e_ext_cert_policy_explicit_text_too_long_ != NULL) delete e_ext_cert_policy_explicit_text_too_long_;
  e_ext_cert_policy_explicit_text_too_long_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_cert_policy_explicit_text_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
  return e_ext_cert_policy_explicit_text_too_long_ != NULL ? *e_ext_cert_policy_explicit_text_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_cert_policy_explicit_text_too_long() {
  
  if (e_ext_cert_policy_explicit_text_too_long_ == NULL) {
    e_ext_cert_policy_explicit_text_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
  return e_ext_cert_policy_explicit_text_too_long_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_cert_policy_explicit_text_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
  
  ::zsearch::LintResult* temp = e_ext_cert_policy_explicit_text_too_long_;
  e_ext_cert_policy_explicit_text_too_long_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_cert_policy_explicit_text_too_long(::zsearch::LintResult* e_ext_cert_policy_explicit_text_too_long) {
  delete e_ext_cert_policy_explicit_text_too_long_;
  e_ext_cert_policy_explicit_text_too_long_ = e_ext_cert_policy_explicit_text_too_long;
  if (e_ext_cert_policy_explicit_text_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_cert_policy_explicit_text_too_long)
}

// .zsearch.LintResult w_ext_crl_distribution_marked_critical = 55;
inline bool Lints::has_w_ext_crl_distribution_marked_critical() const {
  return this != internal_default_instance() && w_ext_crl_distribution_marked_critical_ != NULL;
}
inline void Lints::clear_w_ext_crl_distribution_marked_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_crl_distribution_marked_critical_ != NULL) delete w_ext_crl_distribution_marked_critical_;
  w_ext_crl_distribution_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_crl_distribution_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_crl_distribution_marked_critical)
  return w_ext_crl_distribution_marked_critical_ != NULL ? *w_ext_crl_distribution_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_crl_distribution_marked_critical() {
  
  if (w_ext_crl_distribution_marked_critical_ == NULL) {
    w_ext_crl_distribution_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_crl_distribution_marked_critical)
  return w_ext_crl_distribution_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_crl_distribution_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_crl_distribution_marked_critical)
  
  ::zsearch::LintResult* temp = w_ext_crl_distribution_marked_critical_;
  w_ext_crl_distribution_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_crl_distribution_marked_critical(::zsearch::LintResult* w_ext_crl_distribution_marked_critical) {
  delete w_ext_crl_distribution_marked_critical_;
  w_ext_crl_distribution_marked_critical_ = w_ext_crl_distribution_marked_critical;
  if (w_ext_crl_distribution_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_crl_distribution_marked_critical)
}

// .zsearch.LintResult e_ext_duplicate_extension = 56;
inline bool Lints::has_e_ext_duplicate_extension() const {
  return this != internal_default_instance() && e_ext_duplicate_extension_ != NULL;
}
inline void Lints::clear_e_ext_duplicate_extension() {
  if (GetArenaNoVirtual() == NULL && e_ext_duplicate_extension_ != NULL) delete e_ext_duplicate_extension_;
  e_ext_duplicate_extension_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_duplicate_extension() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_duplicate_extension)
  return e_ext_duplicate_extension_ != NULL ? *e_ext_duplicate_extension_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_duplicate_extension() {
  
  if (e_ext_duplicate_extension_ == NULL) {
    e_ext_duplicate_extension_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_duplicate_extension)
  return e_ext_duplicate_extension_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_duplicate_extension() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_duplicate_extension)
  
  ::zsearch::LintResult* temp = e_ext_duplicate_extension_;
  e_ext_duplicate_extension_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_duplicate_extension(::zsearch::LintResult* e_ext_duplicate_extension) {
  delete e_ext_duplicate_extension_;
  e_ext_duplicate_extension_ = e_ext_duplicate_extension;
  if (e_ext_duplicate_extension) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_duplicate_extension)
}

// .zsearch.LintResult e_ext_freshest_crl_marked_critical = 57;
inline bool Lints::has_e_ext_freshest_crl_marked_critical() const {
  return this != internal_default_instance() && e_ext_freshest_crl_marked_critical_ != NULL;
}
inline void Lints::clear_e_ext_freshest_crl_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_freshest_crl_marked_critical_ != NULL) delete e_ext_freshest_crl_marked_critical_;
  e_ext_freshest_crl_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_freshest_crl_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_freshest_crl_marked_critical)
  return e_ext_freshest_crl_marked_critical_ != NULL ? *e_ext_freshest_crl_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_freshest_crl_marked_critical() {
  
  if (e_ext_freshest_crl_marked_critical_ == NULL) {
    e_ext_freshest_crl_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_freshest_crl_marked_critical)
  return e_ext_freshest_crl_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_freshest_crl_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_freshest_crl_marked_critical)
  
  ::zsearch::LintResult* temp = e_ext_freshest_crl_marked_critical_;
  e_ext_freshest_crl_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_freshest_crl_marked_critical(::zsearch::LintResult* e_ext_freshest_crl_marked_critical) {
  delete e_ext_freshest_crl_marked_critical_;
  e_ext_freshest_crl_marked_critical_ = e_ext_freshest_crl_marked_critical;
  if (e_ext_freshest_crl_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_freshest_crl_marked_critical)
}

// .zsearch.LintResult w_ext_ian_critical = 58;
inline bool Lints::has_w_ext_ian_critical() const {
  return this != internal_default_instance() && w_ext_ian_critical_ != NULL;
}
inline void Lints::clear_w_ext_ian_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_ian_critical_ != NULL) delete w_ext_ian_critical_;
  w_ext_ian_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_ian_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_ian_critical)
  return w_ext_ian_critical_ != NULL ? *w_ext_ian_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_ian_critical() {
  
  if (w_ext_ian_critical_ == NULL) {
    w_ext_ian_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_ian_critical)
  return w_ext_ian_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_ian_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_ian_critical)
  
  ::zsearch::LintResult* temp = w_ext_ian_critical_;
  w_ext_ian_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_ian_critical(::zsearch::LintResult* w_ext_ian_critical) {
  delete w_ext_ian_critical_;
  w_ext_ian_critical_ = w_ext_ian_critical;
  if (w_ext_ian_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_ian_critical)
}

// .zsearch.LintResult e_ext_ian_dns_not_ia5_string = 59;
inline bool Lints::has_e_ext_ian_dns_not_ia5_string() const {
  return this != internal_default_instance() && e_ext_ian_dns_not_ia5_string_ != NULL;
}
inline void Lints::clear_e_ext_ian_dns_not_ia5_string() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_dns_not_ia5_string_ != NULL) delete e_ext_ian_dns_not_ia5_string_;
  e_ext_ian_dns_not_ia5_string_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_dns_not_ia5_string() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
  return e_ext_ian_dns_not_ia5_string_ != NULL ? *e_ext_ian_dns_not_ia5_string_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_dns_not_ia5_string() {
  
  if (e_ext_ian_dns_not_ia5_string_ == NULL) {
    e_ext_ian_dns_not_ia5_string_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
  return e_ext_ian_dns_not_ia5_string_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_dns_not_ia5_string() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
  
  ::zsearch::LintResult* temp = e_ext_ian_dns_not_ia5_string_;
  e_ext_ian_dns_not_ia5_string_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_dns_not_ia5_string(::zsearch::LintResult* e_ext_ian_dns_not_ia5_string) {
  delete e_ext_ian_dns_not_ia5_string_;
  e_ext_ian_dns_not_ia5_string_ = e_ext_ian_dns_not_ia5_string;
  if (e_ext_ian_dns_not_ia5_string) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_dns_not_ia5_string)
}

// .zsearch.LintResult e_ext_ian_empty_name = 60;
inline bool Lints::has_e_ext_ian_empty_name() const {
  return this != internal_default_instance() && e_ext_ian_empty_name_ != NULL;
}
inline void Lints::clear_e_ext_ian_empty_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_empty_name_ != NULL) delete e_ext_ian_empty_name_;
  e_ext_ian_empty_name_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_empty_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_empty_name)
  return e_ext_ian_empty_name_ != NULL ? *e_ext_ian_empty_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_empty_name() {
  
  if (e_ext_ian_empty_name_ == NULL) {
    e_ext_ian_empty_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_empty_name)
  return e_ext_ian_empty_name_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_empty_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_empty_name)
  
  ::zsearch::LintResult* temp = e_ext_ian_empty_name_;
  e_ext_ian_empty_name_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_empty_name(::zsearch::LintResult* e_ext_ian_empty_name) {
  delete e_ext_ian_empty_name_;
  e_ext_ian_empty_name_ = e_ext_ian_empty_name;
  if (e_ext_ian_empty_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_empty_name)
}

// .zsearch.LintResult e_ext_ian_no_entries = 61;
inline bool Lints::has_e_ext_ian_no_entries() const {
  return this != internal_default_instance() && e_ext_ian_no_entries_ != NULL;
}
inline void Lints::clear_e_ext_ian_no_entries() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_no_entries_ != NULL) delete e_ext_ian_no_entries_;
  e_ext_ian_no_entries_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_no_entries() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_no_entries)
  return e_ext_ian_no_entries_ != NULL ? *e_ext_ian_no_entries_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_no_entries() {
  
  if (e_ext_ian_no_entries_ == NULL) {
    e_ext_ian_no_entries_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_no_entries)
  return e_ext_ian_no_entries_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_no_entries() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_no_entries)
  
  ::zsearch::LintResult* temp = e_ext_ian_no_entries_;
  e_ext_ian_no_entries_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_no_entries(::zsearch::LintResult* e_ext_ian_no_entries) {
  delete e_ext_ian_no_entries_;
  e_ext_ian_no_entries_ = e_ext_ian_no_entries;
  if (e_ext_ian_no_entries) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_no_entries)
}

// .zsearch.LintResult e_ext_ian_rfc822_format_invalid = 62;
inline bool Lints::has_e_ext_ian_rfc822_format_invalid() const {
  return this != internal_default_instance() && e_ext_ian_rfc822_format_invalid_ != NULL;
}
inline void Lints::clear_e_ext_ian_rfc822_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_rfc822_format_invalid_ != NULL) delete e_ext_ian_rfc822_format_invalid_;
  e_ext_ian_rfc822_format_invalid_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_rfc822_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
  return e_ext_ian_rfc822_format_invalid_ != NULL ? *e_ext_ian_rfc822_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_rfc822_format_invalid() {
  
  if (e_ext_ian_rfc822_format_invalid_ == NULL) {
    e_ext_ian_rfc822_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
  return e_ext_ian_rfc822_format_invalid_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_rfc822_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_ian_rfc822_format_invalid_;
  e_ext_ian_rfc822_format_invalid_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_rfc822_format_invalid(::zsearch::LintResult* e_ext_ian_rfc822_format_invalid) {
  delete e_ext_ian_rfc822_format_invalid_;
  e_ext_ian_rfc822_format_invalid_ = e_ext_ian_rfc822_format_invalid;
  if (e_ext_ian_rfc822_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_rfc822_format_invalid)
}

// .zsearch.LintResult e_ext_ian_space_dns_name = 63;
inline bool Lints::has_e_ext_ian_space_dns_name() const {
  return this != internal_default_instance() && e_ext_ian_space_dns_name_ != NULL;
}
inline void Lints::clear_e_ext_ian_space_dns_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_space_dns_name_ != NULL) delete e_ext_ian_space_dns_name_;
  e_ext_ian_space_dns_name_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_space_dns_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_space_dns_name)
  return e_ext_ian_space_dns_name_ != NULL ? *e_ext_ian_space_dns_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_space_dns_name() {
  
  if (e_ext_ian_space_dns_name_ == NULL) {
    e_ext_ian_space_dns_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_space_dns_name)
  return e_ext_ian_space_dns_name_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_space_dns_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_space_dns_name)
  
  ::zsearch::LintResult* temp = e_ext_ian_space_dns_name_;
  e_ext_ian_space_dns_name_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_space_dns_name(::zsearch::LintResult* e_ext_ian_space_dns_name) {
  delete e_ext_ian_space_dns_name_;
  e_ext_ian_space_dns_name_ = e_ext_ian_space_dns_name;
  if (e_ext_ian_space_dns_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_space_dns_name)
}

// .zsearch.LintResult e_ext_ian_uri_format_invalid = 64;
inline bool Lints::has_e_ext_ian_uri_format_invalid() const {
  return this != internal_default_instance() && e_ext_ian_uri_format_invalid_ != NULL;
}
inline void Lints::clear_e_ext_ian_uri_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_format_invalid_ != NULL) delete e_ext_ian_uri_format_invalid_;
  e_ext_ian_uri_format_invalid_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_uri_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_format_invalid)
  return e_ext_ian_uri_format_invalid_ != NULL ? *e_ext_ian_uri_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_format_invalid() {
  
  if (e_ext_ian_uri_format_invalid_ == NULL) {
    e_ext_ian_uri_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_format_invalid)
  return e_ext_ian_uri_format_invalid_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_uri_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_format_invalid_;
  e_ext_ian_uri_format_invalid_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_uri_format_invalid(::zsearch::LintResult* e_ext_ian_uri_format_invalid) {
  delete e_ext_ian_uri_format_invalid_;
  e_ext_ian_uri_format_invalid_ = e_ext_ian_uri_format_invalid;
  if (e_ext_ian_uri_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_format_invalid)
}

// .zsearch.LintResult e_ext_ian_uri_host_not_fqdn_or_ip = 65;
inline bool Lints::has_e_ext_ian_uri_host_not_fqdn_or_ip() const {
  return this != internal_default_instance() && e_ext_ian_uri_host_not_fqdn_or_ip_ != NULL;
}
inline void Lints::clear_e_ext_ian_uri_host_not_fqdn_or_ip() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_host_not_fqdn_or_ip_ != NULL) delete e_ext_ian_uri_host_not_fqdn_or_ip_;
  e_ext_ian_uri_host_not_fqdn_or_ip_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_uri_host_not_fqdn_or_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
  return e_ext_ian_uri_host_not_fqdn_or_ip_ != NULL ? *e_ext_ian_uri_host_not_fqdn_or_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_host_not_fqdn_or_ip() {
  
  if (e_ext_ian_uri_host_not_fqdn_or_ip_ == NULL) {
    e_ext_ian_uri_host_not_fqdn_or_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
  return e_ext_ian_uri_host_not_fqdn_or_ip_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_uri_host_not_fqdn_or_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_host_not_fqdn_or_ip_;
  e_ext_ian_uri_host_not_fqdn_or_ip_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_uri_host_not_fqdn_or_ip(::zsearch::LintResult* e_ext_ian_uri_host_not_fqdn_or_ip) {
  delete e_ext_ian_uri_host_not_fqdn_or_ip_;
  e_ext_ian_uri_host_not_fqdn_or_ip_ = e_ext_ian_uri_host_not_fqdn_or_ip;
  if (e_ext_ian_uri_host_not_fqdn_or_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_host_not_fqdn_or_ip)
}

// .zsearch.LintResult e_ext_ian_uri_not_ia5 = 66;
inline bool Lints::has_e_ext_ian_uri_not_ia5() const {
  return this != internal_default_instance() && e_ext_ian_uri_not_ia5_ != NULL;
}
inline void Lints::clear_e_ext_ian_uri_not_ia5() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_not_ia5_ != NULL) delete e_ext_ian_uri_not_ia5_;
  e_ext_ian_uri_not_ia5_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_uri_not_ia5() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_not_ia5)
  return e_ext_ian_uri_not_ia5_ != NULL ? *e_ext_ian_uri_not_ia5_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_not_ia5() {
  
  if (e_ext_ian_uri_not_ia5_ == NULL) {
    e_ext_ian_uri_not_ia5_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_not_ia5)
  return e_ext_ian_uri_not_ia5_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_uri_not_ia5() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_not_ia5)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_not_ia5_;
  e_ext_ian_uri_not_ia5_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_uri_not_ia5(::zsearch::LintResult* e_ext_ian_uri_not_ia5) {
  delete e_ext_ian_uri_not_ia5_;
  e_ext_ian_uri_not_ia5_ = e_ext_ian_uri_not_ia5;
  if (e_ext_ian_uri_not_ia5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_not_ia5)
}

// .zsearch.LintResult e_ext_ian_uri_relative = 67;
inline bool Lints::has_e_ext_ian_uri_relative() const {
  return this != internal_default_instance() && e_ext_ian_uri_relative_ != NULL;
}
inline void Lints::clear_e_ext_ian_uri_relative() {
  if (GetArenaNoVirtual() == NULL && e_ext_ian_uri_relative_ != NULL) delete e_ext_ian_uri_relative_;
  e_ext_ian_uri_relative_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_ian_uri_relative() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_ian_uri_relative)
  return e_ext_ian_uri_relative_ != NULL ? *e_ext_ian_uri_relative_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_ian_uri_relative() {
  
  if (e_ext_ian_uri_relative_ == NULL) {
    e_ext_ian_uri_relative_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_ian_uri_relative)
  return e_ext_ian_uri_relative_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_ian_uri_relative() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_ian_uri_relative)
  
  ::zsearch::LintResult* temp = e_ext_ian_uri_relative_;
  e_ext_ian_uri_relative_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_ian_uri_relative(::zsearch::LintResult* e_ext_ian_uri_relative) {
  delete e_ext_ian_uri_relative_;
  e_ext_ian_uri_relative_ = e_ext_ian_uri_relative;
  if (e_ext_ian_uri_relative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_ian_uri_relative)
}

// .zsearch.LintResult e_ext_key_usage_cert_sign_without_ca = 68;
inline bool Lints::has_e_ext_key_usage_cert_sign_without_ca() const {
  return this != internal_default_instance() && e_ext_key_usage_cert_sign_without_ca_ != NULL;
}
inline void Lints::clear_e_ext_key_usage_cert_sign_without_ca() {
  if (GetArenaNoVirtual() == NULL && e_ext_key_usage_cert_sign_without_ca_ != NULL) delete e_ext_key_usage_cert_sign_without_ca_;
  e_ext_key_usage_cert_sign_without_ca_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_key_usage_cert_sign_without_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
  return e_ext_key_usage_cert_sign_without_ca_ != NULL ? *e_ext_key_usage_cert_sign_without_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_key_usage_cert_sign_without_ca() {
  
  if (e_ext_key_usage_cert_sign_without_ca_ == NULL) {
    e_ext_key_usage_cert_sign_without_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
  return e_ext_key_usage_cert_sign_without_ca_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_key_usage_cert_sign_without_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
  
  ::zsearch::LintResult* temp = e_ext_key_usage_cert_sign_without_ca_;
  e_ext_key_usage_cert_sign_without_ca_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_key_usage_cert_sign_without_ca(::zsearch::LintResult* e_ext_key_usage_cert_sign_without_ca) {
  delete e_ext_key_usage_cert_sign_without_ca_;
  e_ext_key_usage_cert_sign_without_ca_ = e_ext_key_usage_cert_sign_without_ca;
  if (e_ext_key_usage_cert_sign_without_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_key_usage_cert_sign_without_ca)
}

// .zsearch.LintResult w_ext_key_usage_not_critical = 69;
inline bool Lints::has_w_ext_key_usage_not_critical() const {
  return this != internal_default_instance() && w_ext_key_usage_not_critical_ != NULL;
}
inline void Lints::clear_w_ext_key_usage_not_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_key_usage_not_critical_ != NULL) delete w_ext_key_usage_not_critical_;
  w_ext_key_usage_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_key_usage_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_key_usage_not_critical)
  return w_ext_key_usage_not_critical_ != NULL ? *w_ext_key_usage_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_key_usage_not_critical() {
  
  if (w_ext_key_usage_not_critical_ == NULL) {
    w_ext_key_usage_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_key_usage_not_critical)
  return w_ext_key_usage_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_key_usage_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_key_usage_not_critical)
  
  ::zsearch::LintResult* temp = w_ext_key_usage_not_critical_;
  w_ext_key_usage_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_key_usage_not_critical(::zsearch::LintResult* w_ext_key_usage_not_critical) {
  delete w_ext_key_usage_not_critical_;
  w_ext_key_usage_not_critical_ = w_ext_key_usage_not_critical;
  if (w_ext_key_usage_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_key_usage_not_critical)
}

// .zsearch.LintResult e_ext_key_usage_without_bits = 70;
inline bool Lints::has_e_ext_key_usage_without_bits() const {
  return this != internal_default_instance() && e_ext_key_usage_without_bits_ != NULL;
}
inline void Lints::clear_e_ext_key_usage_without_bits() {
  if (GetArenaNoVirtual() == NULL && e_ext_key_usage_without_bits_ != NULL) delete e_ext_key_usage_without_bits_;
  e_ext_key_usage_without_bits_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_key_usage_without_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_key_usage_without_bits)
  return e_ext_key_usage_without_bits_ != NULL ? *e_ext_key_usage_without_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_key_usage_without_bits() {
  
  if (e_ext_key_usage_without_bits_ == NULL) {
    e_ext_key_usage_without_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_key_usage_without_bits)
  return e_ext_key_usage_without_bits_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_key_usage_without_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_key_usage_without_bits)
  
  ::zsearch::LintResult* temp = e_ext_key_usage_without_bits_;
  e_ext_key_usage_without_bits_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_key_usage_without_bits(::zsearch::LintResult* e_ext_key_usage_without_bits) {
  delete e_ext_key_usage_without_bits_;
  e_ext_key_usage_without_bits_ = e_ext_key_usage_without_bits;
  if (e_ext_key_usage_without_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_key_usage_without_bits)
}

// .zsearch.LintResult e_ext_name_constraints_not_critical = 71;
inline bool Lints::has_e_ext_name_constraints_not_critical() const {
  return this != internal_default_instance() && e_ext_name_constraints_not_critical_ != NULL;
}
inline void Lints::clear_e_ext_name_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_name_constraints_not_critical_ != NULL) delete e_ext_name_constraints_not_critical_;
  e_ext_name_constraints_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_name_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_name_constraints_not_critical)
  return e_ext_name_constraints_not_critical_ != NULL ? *e_ext_name_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_name_constraints_not_critical() {
  
  if (e_ext_name_constraints_not_critical_ == NULL) {
    e_ext_name_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_name_constraints_not_critical)
  return e_ext_name_constraints_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_name_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_name_constraints_not_critical)
  
  ::zsearch::LintResult* temp = e_ext_name_constraints_not_critical_;
  e_ext_name_constraints_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_name_constraints_not_critical(::zsearch::LintResult* e_ext_name_constraints_not_critical) {
  delete e_ext_name_constraints_not_critical_;
  e_ext_name_constraints_not_critical_ = e_ext_name_constraints_not_critical;
  if (e_ext_name_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_name_constraints_not_critical)
}

// .zsearch.LintResult e_ext_name_constraints_not_in_ca = 72;
inline bool Lints::has_e_ext_name_constraints_not_in_ca() const {
  return this != internal_default_instance() && e_ext_name_constraints_not_in_ca_ != NULL;
}
inline void Lints::clear_e_ext_name_constraints_not_in_ca() {
  if (GetArenaNoVirtual() == NULL && e_ext_name_constraints_not_in_ca_ != NULL) delete e_ext_name_constraints_not_in_ca_;
  e_ext_name_constraints_not_in_ca_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_name_constraints_not_in_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_name_constraints_not_in_ca)
  return e_ext_name_constraints_not_in_ca_ != NULL ? *e_ext_name_constraints_not_in_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_name_constraints_not_in_ca() {
  
  if (e_ext_name_constraints_not_in_ca_ == NULL) {
    e_ext_name_constraints_not_in_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_name_constraints_not_in_ca)
  return e_ext_name_constraints_not_in_ca_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_name_constraints_not_in_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_name_constraints_not_in_ca)
  
  ::zsearch::LintResult* temp = e_ext_name_constraints_not_in_ca_;
  e_ext_name_constraints_not_in_ca_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_name_constraints_not_in_ca(::zsearch::LintResult* e_ext_name_constraints_not_in_ca) {
  delete e_ext_name_constraints_not_in_ca_;
  e_ext_name_constraints_not_in_ca_ = e_ext_name_constraints_not_in_ca;
  if (e_ext_name_constraints_not_in_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_name_constraints_not_in_ca)
}

// .zsearch.LintResult e_ext_policy_constraints_empty = 73;
inline bool Lints::has_e_ext_policy_constraints_empty() const {
  return this != internal_default_instance() && e_ext_policy_constraints_empty_ != NULL;
}
inline void Lints::clear_e_ext_policy_constraints_empty() {
  if (GetArenaNoVirtual() == NULL && e_ext_policy_constraints_empty_ != NULL) delete e_ext_policy_constraints_empty_;
  e_ext_policy_constraints_empty_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_policy_constraints_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_policy_constraints_empty)
  return e_ext_policy_constraints_empty_ != NULL ? *e_ext_policy_constraints_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_policy_constraints_empty() {
  
  if (e_ext_policy_constraints_empty_ == NULL) {
    e_ext_policy_constraints_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_policy_constraints_empty)
  return e_ext_policy_constraints_empty_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_policy_constraints_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_policy_constraints_empty)
  
  ::zsearch::LintResult* temp = e_ext_policy_constraints_empty_;
  e_ext_policy_constraints_empty_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_policy_constraints_empty(::zsearch::LintResult* e_ext_policy_constraints_empty) {
  delete e_ext_policy_constraints_empty_;
  e_ext_policy_constraints_empty_ = e_ext_policy_constraints_empty;
  if (e_ext_policy_constraints_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_policy_constraints_empty)
}

// .zsearch.LintResult e_ext_policy_constraints_not_critical = 74;
inline bool Lints::has_e_ext_policy_constraints_not_critical() const {
  return this != internal_default_instance() && e_ext_policy_constraints_not_critical_ != NULL;
}
inline void Lints::clear_e_ext_policy_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_policy_constraints_not_critical_ != NULL) delete e_ext_policy_constraints_not_critical_;
  e_ext_policy_constraints_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_policy_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_policy_constraints_not_critical)
  return e_ext_policy_constraints_not_critical_ != NULL ? *e_ext_policy_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_policy_constraints_not_critical() {
  
  if (e_ext_policy_constraints_not_critical_ == NULL) {
    e_ext_policy_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_policy_constraints_not_critical)
  return e_ext_policy_constraints_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_policy_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_policy_constraints_not_critical)
  
  ::zsearch::LintResult* temp = e_ext_policy_constraints_not_critical_;
  e_ext_policy_constraints_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_policy_constraints_not_critical(::zsearch::LintResult* e_ext_policy_constraints_not_critical) {
  delete e_ext_policy_constraints_not_critical_;
  e_ext_policy_constraints_not_critical_ = e_ext_policy_constraints_not_critical;
  if (e_ext_policy_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_policy_constraints_not_critical)
}

// .zsearch.LintResult e_ext_policy_map_any_policy = 75;
inline bool Lints::has_e_ext_policy_map_any_policy() const {
  return this != internal_default_instance() && e_ext_policy_map_any_policy_ != NULL;
}
inline void Lints::clear_e_ext_policy_map_any_policy() {
  if (GetArenaNoVirtual() == NULL && e_ext_policy_map_any_policy_ != NULL) delete e_ext_policy_map_any_policy_;
  e_ext_policy_map_any_policy_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_policy_map_any_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_policy_map_any_policy)
  return e_ext_policy_map_any_policy_ != NULL ? *e_ext_policy_map_any_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_policy_map_any_policy() {
  
  if (e_ext_policy_map_any_policy_ == NULL) {
    e_ext_policy_map_any_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_policy_map_any_policy)
  return e_ext_policy_map_any_policy_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_policy_map_any_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_policy_map_any_policy)
  
  ::zsearch::LintResult* temp = e_ext_policy_map_any_policy_;
  e_ext_policy_map_any_policy_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_policy_map_any_policy(::zsearch::LintResult* e_ext_policy_map_any_policy) {
  delete e_ext_policy_map_any_policy_;
  e_ext_policy_map_any_policy_ = e_ext_policy_map_any_policy;
  if (e_ext_policy_map_any_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_policy_map_any_policy)
}

// .zsearch.LintResult w_ext_policy_map_not_critical = 76;
inline bool Lints::has_w_ext_policy_map_not_critical() const {
  return this != internal_default_instance() && w_ext_policy_map_not_critical_ != NULL;
}
inline void Lints::clear_w_ext_policy_map_not_critical() {
  if (GetArenaNoVirtual() == NULL && w_ext_policy_map_not_critical_ != NULL) delete w_ext_policy_map_not_critical_;
  w_ext_policy_map_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_policy_map_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_policy_map_not_critical)
  return w_ext_policy_map_not_critical_ != NULL ? *w_ext_policy_map_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_policy_map_not_critical() {
  
  if (w_ext_policy_map_not_critical_ == NULL) {
    w_ext_policy_map_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_policy_map_not_critical)
  return w_ext_policy_map_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_policy_map_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_policy_map_not_critical)
  
  ::zsearch::LintResult* temp = w_ext_policy_map_not_critical_;
  w_ext_policy_map_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_policy_map_not_critical(::zsearch::LintResult* w_ext_policy_map_not_critical) {
  delete w_ext_policy_map_not_critical_;
  w_ext_policy_map_not_critical_ = w_ext_policy_map_not_critical;
  if (w_ext_policy_map_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_policy_map_not_critical)
}

// .zsearch.LintResult w_ext_policy_map_not_in_cert_policy = 77;
inline bool Lints::has_w_ext_policy_map_not_in_cert_policy() const {
  return this != internal_default_instance() && w_ext_policy_map_not_in_cert_policy_ != NULL;
}
inline void Lints::clear_w_ext_policy_map_not_in_cert_policy() {
  if (GetArenaNoVirtual() == NULL && w_ext_policy_map_not_in_cert_policy_ != NULL) delete w_ext_policy_map_not_in_cert_policy_;
  w_ext_policy_map_not_in_cert_policy_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_policy_map_not_in_cert_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
  return w_ext_policy_map_not_in_cert_policy_ != NULL ? *w_ext_policy_map_not_in_cert_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_policy_map_not_in_cert_policy() {
  
  if (w_ext_policy_map_not_in_cert_policy_ == NULL) {
    w_ext_policy_map_not_in_cert_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
  return w_ext_policy_map_not_in_cert_policy_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_policy_map_not_in_cert_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
  
  ::zsearch::LintResult* temp = w_ext_policy_map_not_in_cert_policy_;
  w_ext_policy_map_not_in_cert_policy_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_policy_map_not_in_cert_policy(::zsearch::LintResult* w_ext_policy_map_not_in_cert_policy) {
  delete w_ext_policy_map_not_in_cert_policy_;
  w_ext_policy_map_not_in_cert_policy_ = w_ext_policy_map_not_in_cert_policy;
  if (w_ext_policy_map_not_in_cert_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_policy_map_not_in_cert_policy)
}

// .zsearch.LintResult e_ext_san_contains_reserved_ip = 78;
inline bool Lints::has_e_ext_san_contains_reserved_ip() const {
  return this != internal_default_instance() && e_ext_san_contains_reserved_ip_ != NULL;
}
inline void Lints::clear_e_ext_san_contains_reserved_ip() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_contains_reserved_ip_ != NULL) delete e_ext_san_contains_reserved_ip_;
  e_ext_san_contains_reserved_ip_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_contains_reserved_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_contains_reserved_ip)
  return e_ext_san_contains_reserved_ip_ != NULL ? *e_ext_san_contains_reserved_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_contains_reserved_ip() {
  
  if (e_ext_san_contains_reserved_ip_ == NULL) {
    e_ext_san_contains_reserved_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_contains_reserved_ip)
  return e_ext_san_contains_reserved_ip_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_contains_reserved_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_contains_reserved_ip)
  
  ::zsearch::LintResult* temp = e_ext_san_contains_reserved_ip_;
  e_ext_san_contains_reserved_ip_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_contains_reserved_ip(::zsearch::LintResult* e_ext_san_contains_reserved_ip) {
  delete e_ext_san_contains_reserved_ip_;
  e_ext_san_contains_reserved_ip_ = e_ext_san_contains_reserved_ip;
  if (e_ext_san_contains_reserved_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_contains_reserved_ip)
}

// .zsearch.LintResult w_ext_san_critical_with_subject_dn = 79;
inline bool Lints::has_w_ext_san_critical_with_subject_dn() const {
  return this != internal_default_instance() && w_ext_san_critical_with_subject_dn_ != NULL;
}
inline void Lints::clear_w_ext_san_critical_with_subject_dn() {
  if (GetArenaNoVirtual() == NULL && w_ext_san_critical_with_subject_dn_ != NULL) delete w_ext_san_critical_with_subject_dn_;
  w_ext_san_critical_with_subject_dn_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_san_critical_with_subject_dn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_san_critical_with_subject_dn)
  return w_ext_san_critical_with_subject_dn_ != NULL ? *w_ext_san_critical_with_subject_dn_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_san_critical_with_subject_dn() {
  
  if (w_ext_san_critical_with_subject_dn_ == NULL) {
    w_ext_san_critical_with_subject_dn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_san_critical_with_subject_dn)
  return w_ext_san_critical_with_subject_dn_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_san_critical_with_subject_dn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_san_critical_with_subject_dn)
  
  ::zsearch::LintResult* temp = w_ext_san_critical_with_subject_dn_;
  w_ext_san_critical_with_subject_dn_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_san_critical_with_subject_dn(::zsearch::LintResult* w_ext_san_critical_with_subject_dn) {
  delete w_ext_san_critical_with_subject_dn_;
  w_ext_san_critical_with_subject_dn_ = w_ext_san_critical_with_subject_dn;
  if (w_ext_san_critical_with_subject_dn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_san_critical_with_subject_dn)
}

// .zsearch.LintResult e_ext_san_directory_name_present = 80;
inline bool Lints::has_e_ext_san_directory_name_present() const {
  return this != internal_default_instance() && e_ext_san_directory_name_present_ != NULL;
}
inline void Lints::clear_e_ext_san_directory_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_directory_name_present_ != NULL) delete e_ext_san_directory_name_present_;
  e_ext_san_directory_name_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_directory_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_directory_name_present)
  return e_ext_san_directory_name_present_ != NULL ? *e_ext_san_directory_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_directory_name_present() {
  
  if (e_ext_san_directory_name_present_ == NULL) {
    e_ext_san_directory_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_directory_name_present)
  return e_ext_san_directory_name_present_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_directory_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_directory_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_directory_name_present_;
  e_ext_san_directory_name_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_directory_name_present(::zsearch::LintResult* e_ext_san_directory_name_present) {
  delete e_ext_san_directory_name_present_;
  e_ext_san_directory_name_present_ = e_ext_san_directory_name_present;
  if (e_ext_san_directory_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_directory_name_present)
}

// .zsearch.LintResult e_ext_san_dns_not_ia5_string = 81;
inline bool Lints::has_e_ext_san_dns_not_ia5_string() const {
  return this != internal_default_instance() && e_ext_san_dns_not_ia5_string_ != NULL;
}
inline void Lints::clear_e_ext_san_dns_not_ia5_string() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_dns_not_ia5_string_ != NULL) delete e_ext_san_dns_not_ia5_string_;
  e_ext_san_dns_not_ia5_string_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_dns_not_ia5_string() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_dns_not_ia5_string)
  return e_ext_san_dns_not_ia5_string_ != NULL ? *e_ext_san_dns_not_ia5_string_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_dns_not_ia5_string() {
  
  if (e_ext_san_dns_not_ia5_string_ == NULL) {
    e_ext_san_dns_not_ia5_string_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_dns_not_ia5_string)
  return e_ext_san_dns_not_ia5_string_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_dns_not_ia5_string() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_dns_not_ia5_string)
  
  ::zsearch::LintResult* temp = e_ext_san_dns_not_ia5_string_;
  e_ext_san_dns_not_ia5_string_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_dns_not_ia5_string(::zsearch::LintResult* e_ext_san_dns_not_ia5_string) {
  delete e_ext_san_dns_not_ia5_string_;
  e_ext_san_dns_not_ia5_string_ = e_ext_san_dns_not_ia5_string;
  if (e_ext_san_dns_not_ia5_string) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_dns_not_ia5_string)
}

// .zsearch.LintResult e_ext_san_edi_party_name_present = 84;
inline bool Lints::has_e_ext_san_edi_party_name_present() const {
  return this != internal_default_instance() && e_ext_san_edi_party_name_present_ != NULL;
}
inline void Lints::clear_e_ext_san_edi_party_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_edi_party_name_present_ != NULL) delete e_ext_san_edi_party_name_present_;
  e_ext_san_edi_party_name_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_edi_party_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_edi_party_name_present)
  return e_ext_san_edi_party_name_present_ != NULL ? *e_ext_san_edi_party_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_edi_party_name_present() {
  
  if (e_ext_san_edi_party_name_present_ == NULL) {
    e_ext_san_edi_party_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_edi_party_name_present)
  return e_ext_san_edi_party_name_present_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_edi_party_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_edi_party_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_edi_party_name_present_;
  e_ext_san_edi_party_name_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_edi_party_name_present(::zsearch::LintResult* e_ext_san_edi_party_name_present) {
  delete e_ext_san_edi_party_name_present_;
  e_ext_san_edi_party_name_present_ = e_ext_san_edi_party_name_present;
  if (e_ext_san_edi_party_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_edi_party_name_present)
}

// .zsearch.LintResult e_ext_san_empty_name = 85;
inline bool Lints::has_e_ext_san_empty_name() const {
  return this != internal_default_instance() && e_ext_san_empty_name_ != NULL;
}
inline void Lints::clear_e_ext_san_empty_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_empty_name_ != NULL) delete e_ext_san_empty_name_;
  e_ext_san_empty_name_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_empty_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_empty_name)
  return e_ext_san_empty_name_ != NULL ? *e_ext_san_empty_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_empty_name() {
  
  if (e_ext_san_empty_name_ == NULL) {
    e_ext_san_empty_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_empty_name)
  return e_ext_san_empty_name_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_empty_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_empty_name)
  
  ::zsearch::LintResult* temp = e_ext_san_empty_name_;
  e_ext_san_empty_name_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_empty_name(::zsearch::LintResult* e_ext_san_empty_name) {
  delete e_ext_san_empty_name_;
  e_ext_san_empty_name_ = e_ext_san_empty_name;
  if (e_ext_san_empty_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_empty_name)
}

// .zsearch.LintResult e_ext_san_missing = 86;
inline bool Lints::has_e_ext_san_missing() const {
  return this != internal_default_instance() && e_ext_san_missing_ != NULL;
}
inline void Lints::clear_e_ext_san_missing() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_missing_ != NULL) delete e_ext_san_missing_;
  e_ext_san_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_missing)
  return e_ext_san_missing_ != NULL ? *e_ext_san_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_missing() {
  
  if (e_ext_san_missing_ == NULL) {
    e_ext_san_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_missing)
  return e_ext_san_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_missing)
  
  ::zsearch::LintResult* temp = e_ext_san_missing_;
  e_ext_san_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_missing(::zsearch::LintResult* e_ext_san_missing) {
  delete e_ext_san_missing_;
  e_ext_san_missing_ = e_ext_san_missing;
  if (e_ext_san_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_missing)
}

// .zsearch.LintResult e_ext_san_no_entries = 87;
inline bool Lints::has_e_ext_san_no_entries() const {
  return this != internal_default_instance() && e_ext_san_no_entries_ != NULL;
}
inline void Lints::clear_e_ext_san_no_entries() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_no_entries_ != NULL) delete e_ext_san_no_entries_;
  e_ext_san_no_entries_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_no_entries() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_no_entries)
  return e_ext_san_no_entries_ != NULL ? *e_ext_san_no_entries_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_no_entries() {
  
  if (e_ext_san_no_entries_ == NULL) {
    e_ext_san_no_entries_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_no_entries)
  return e_ext_san_no_entries_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_no_entries() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_no_entries)
  
  ::zsearch::LintResult* temp = e_ext_san_no_entries_;
  e_ext_san_no_entries_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_no_entries(::zsearch::LintResult* e_ext_san_no_entries) {
  delete e_ext_san_no_entries_;
  e_ext_san_no_entries_ = e_ext_san_no_entries;
  if (e_ext_san_no_entries) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_no_entries)
}

// .zsearch.LintResult e_ext_san_not_critical_without_subject = 88;
inline bool Lints::has_e_ext_san_not_critical_without_subject() const {
  return this != internal_default_instance() && e_ext_san_not_critical_without_subject_ != NULL;
}
inline void Lints::clear_e_ext_san_not_critical_without_subject() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_not_critical_without_subject_ != NULL) delete e_ext_san_not_critical_without_subject_;
  e_ext_san_not_critical_without_subject_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_not_critical_without_subject() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_not_critical_without_subject)
  return e_ext_san_not_critical_without_subject_ != NULL ? *e_ext_san_not_critical_without_subject_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_not_critical_without_subject() {
  
  if (e_ext_san_not_critical_without_subject_ == NULL) {
    e_ext_san_not_critical_without_subject_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_not_critical_without_subject)
  return e_ext_san_not_critical_without_subject_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_not_critical_without_subject() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_not_critical_without_subject)
  
  ::zsearch::LintResult* temp = e_ext_san_not_critical_without_subject_;
  e_ext_san_not_critical_without_subject_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_not_critical_without_subject(::zsearch::LintResult* e_ext_san_not_critical_without_subject) {
  delete e_ext_san_not_critical_without_subject_;
  e_ext_san_not_critical_without_subject_ = e_ext_san_not_critical_without_subject;
  if (e_ext_san_not_critical_without_subject) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_not_critical_without_subject)
}

// .zsearch.LintResult e_ext_san_other_name_present = 89;
inline bool Lints::has_e_ext_san_other_name_present() const {
  return this != internal_default_instance() && e_ext_san_other_name_present_ != NULL;
}
inline void Lints::clear_e_ext_san_other_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_other_name_present_ != NULL) delete e_ext_san_other_name_present_;
  e_ext_san_other_name_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_other_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_other_name_present)
  return e_ext_san_other_name_present_ != NULL ? *e_ext_san_other_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_other_name_present() {
  
  if (e_ext_san_other_name_present_ == NULL) {
    e_ext_san_other_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_other_name_present)
  return e_ext_san_other_name_present_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_other_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_other_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_other_name_present_;
  e_ext_san_other_name_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_other_name_present(::zsearch::LintResult* e_ext_san_other_name_present) {
  delete e_ext_san_other_name_present_;
  e_ext_san_other_name_present_ = e_ext_san_other_name_present;
  if (e_ext_san_other_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_other_name_present)
}

// .zsearch.LintResult e_ext_san_registered_id_present = 90;
inline bool Lints::has_e_ext_san_registered_id_present() const {
  return this != internal_default_instance() && e_ext_san_registered_id_present_ != NULL;
}
inline void Lints::clear_e_ext_san_registered_id_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_registered_id_present_ != NULL) delete e_ext_san_registered_id_present_;
  e_ext_san_registered_id_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_registered_id_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_registered_id_present)
  return e_ext_san_registered_id_present_ != NULL ? *e_ext_san_registered_id_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_registered_id_present() {
  
  if (e_ext_san_registered_id_present_ == NULL) {
    e_ext_san_registered_id_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_registered_id_present)
  return e_ext_san_registered_id_present_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_registered_id_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_registered_id_present)
  
  ::zsearch::LintResult* temp = e_ext_san_registered_id_present_;
  e_ext_san_registered_id_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_registered_id_present(::zsearch::LintResult* e_ext_san_registered_id_present) {
  delete e_ext_san_registered_id_present_;
  e_ext_san_registered_id_present_ = e_ext_san_registered_id_present;
  if (e_ext_san_registered_id_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_registered_id_present)
}

// .zsearch.LintResult e_ext_san_rfc822_format_invalid = 91;
inline bool Lints::has_e_ext_san_rfc822_format_invalid() const {
  return this != internal_default_instance() && e_ext_san_rfc822_format_invalid_ != NULL;
}
inline void Lints::clear_e_ext_san_rfc822_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_rfc822_format_invalid_ != NULL) delete e_ext_san_rfc822_format_invalid_;
  e_ext_san_rfc822_format_invalid_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_rfc822_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_rfc822_format_invalid)
  return e_ext_san_rfc822_format_invalid_ != NULL ? *e_ext_san_rfc822_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_rfc822_format_invalid() {
  
  if (e_ext_san_rfc822_format_invalid_ == NULL) {
    e_ext_san_rfc822_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_rfc822_format_invalid)
  return e_ext_san_rfc822_format_invalid_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_rfc822_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_rfc822_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_san_rfc822_format_invalid_;
  e_ext_san_rfc822_format_invalid_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_rfc822_format_invalid(::zsearch::LintResult* e_ext_san_rfc822_format_invalid) {
  delete e_ext_san_rfc822_format_invalid_;
  e_ext_san_rfc822_format_invalid_ = e_ext_san_rfc822_format_invalid;
  if (e_ext_san_rfc822_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_rfc822_format_invalid)
}

// .zsearch.LintResult e_ext_san_rfc822_name_present = 92;
inline bool Lints::has_e_ext_san_rfc822_name_present() const {
  return this != internal_default_instance() && e_ext_san_rfc822_name_present_ != NULL;
}
inline void Lints::clear_e_ext_san_rfc822_name_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_rfc822_name_present_ != NULL) delete e_ext_san_rfc822_name_present_;
  e_ext_san_rfc822_name_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_rfc822_name_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_rfc822_name_present)
  return e_ext_san_rfc822_name_present_ != NULL ? *e_ext_san_rfc822_name_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_rfc822_name_present() {
  
  if (e_ext_san_rfc822_name_present_ == NULL) {
    e_ext_san_rfc822_name_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_rfc822_name_present)
  return e_ext_san_rfc822_name_present_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_rfc822_name_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_rfc822_name_present)
  
  ::zsearch::LintResult* temp = e_ext_san_rfc822_name_present_;
  e_ext_san_rfc822_name_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_rfc822_name_present(::zsearch::LintResult* e_ext_san_rfc822_name_present) {
  delete e_ext_san_rfc822_name_present_;
  e_ext_san_rfc822_name_present_ = e_ext_san_rfc822_name_present;
  if (e_ext_san_rfc822_name_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_rfc822_name_present)
}

// .zsearch.LintResult e_ext_san_space_dns_name = 93;
inline bool Lints::has_e_ext_san_space_dns_name() const {
  return this != internal_default_instance() && e_ext_san_space_dns_name_ != NULL;
}
inline void Lints::clear_e_ext_san_space_dns_name() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_space_dns_name_ != NULL) delete e_ext_san_space_dns_name_;
  e_ext_san_space_dns_name_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_space_dns_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_space_dns_name)
  return e_ext_san_space_dns_name_ != NULL ? *e_ext_san_space_dns_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_space_dns_name() {
  
  if (e_ext_san_space_dns_name_ == NULL) {
    e_ext_san_space_dns_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_space_dns_name)
  return e_ext_san_space_dns_name_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_space_dns_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_space_dns_name)
  
  ::zsearch::LintResult* temp = e_ext_san_space_dns_name_;
  e_ext_san_space_dns_name_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_space_dns_name(::zsearch::LintResult* e_ext_san_space_dns_name) {
  delete e_ext_san_space_dns_name_;
  e_ext_san_space_dns_name_ = e_ext_san_space_dns_name;
  if (e_ext_san_space_dns_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_space_dns_name)
}

// .zsearch.LintResult e_ext_san_uniform_resource_identifier_present = 94;
inline bool Lints::has_e_ext_san_uniform_resource_identifier_present() const {
  return this != internal_default_instance() && e_ext_san_uniform_resource_identifier_present_ != NULL;
}
inline void Lints::clear_e_ext_san_uniform_resource_identifier_present() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uniform_resource_identifier_present_ != NULL) delete e_ext_san_uniform_resource_identifier_present_;
  e_ext_san_uniform_resource_identifier_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_uniform_resource_identifier_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
  return e_ext_san_uniform_resource_identifier_present_ != NULL ? *e_ext_san_uniform_resource_identifier_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_uniform_resource_identifier_present() {
  
  if (e_ext_san_uniform_resource_identifier_present_ == NULL) {
    e_ext_san_uniform_resource_identifier_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
  return e_ext_san_uniform_resource_identifier_present_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_uniform_resource_identifier_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
  
  ::zsearch::LintResult* temp = e_ext_san_uniform_resource_identifier_present_;
  e_ext_san_uniform_resource_identifier_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_uniform_resource_identifier_present(::zsearch::LintResult* e_ext_san_uniform_resource_identifier_present) {
  delete e_ext_san_uniform_resource_identifier_present_;
  e_ext_san_uniform_resource_identifier_present_ = e_ext_san_uniform_resource_identifier_present;
  if (e_ext_san_uniform_resource_identifier_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uniform_resource_identifier_present)
}

// .zsearch.LintResult e_ext_san_uri_format_invalid = 95;
inline bool Lints::has_e_ext_san_uri_format_invalid() const {
  return this != internal_default_instance() && e_ext_san_uri_format_invalid_ != NULL;
}
inline void Lints::clear_e_ext_san_uri_format_invalid() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_format_invalid_ != NULL) delete e_ext_san_uri_format_invalid_;
  e_ext_san_uri_format_invalid_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_uri_format_invalid() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_format_invalid)
  return e_ext_san_uri_format_invalid_ != NULL ? *e_ext_san_uri_format_invalid_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_uri_format_invalid() {
  
  if (e_ext_san_uri_format_invalid_ == NULL) {
    e_ext_san_uri_format_invalid_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_format_invalid)
  return e_ext_san_uri_format_invalid_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_uri_format_invalid() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_format_invalid)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_format_invalid_;
  e_ext_san_uri_format_invalid_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_uri_format_invalid(::zsearch::LintResult* e_ext_san_uri_format_invalid) {
  delete e_ext_san_uri_format_invalid_;
  e_ext_san_uri_format_invalid_ = e_ext_san_uri_format_invalid;
  if (e_ext_san_uri_format_invalid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_format_invalid)
}

// .zsearch.LintResult e_ext_san_uri_host_not_fqdn_or_ip = 96;
inline bool Lints::has_e_ext_san_uri_host_not_fqdn_or_ip() const {
  return this != internal_default_instance() && e_ext_san_uri_host_not_fqdn_or_ip_ != NULL;
}
inline void Lints::clear_e_ext_san_uri_host_not_fqdn_or_ip() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_host_not_fqdn_or_ip_ != NULL) delete e_ext_san_uri_host_not_fqdn_or_ip_;
  e_ext_san_uri_host_not_fqdn_or_ip_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_uri_host_not_fqdn_or_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
  return e_ext_san_uri_host_not_fqdn_or_ip_ != NULL ? *e_ext_san_uri_host_not_fqdn_or_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_uri_host_not_fqdn_or_ip() {
  
  if (e_ext_san_uri_host_not_fqdn_or_ip_ == NULL) {
    e_ext_san_uri_host_not_fqdn_or_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
  return e_ext_san_uri_host_not_fqdn_or_ip_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_uri_host_not_fqdn_or_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_host_not_fqdn_or_ip_;
  e_ext_san_uri_host_not_fqdn_or_ip_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_uri_host_not_fqdn_or_ip(::zsearch::LintResult* e_ext_san_uri_host_not_fqdn_or_ip) {
  delete e_ext_san_uri_host_not_fqdn_or_ip_;
  e_ext_san_uri_host_not_fqdn_or_ip_ = e_ext_san_uri_host_not_fqdn_or_ip;
  if (e_ext_san_uri_host_not_fqdn_or_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_host_not_fqdn_or_ip)
}

// .zsearch.LintResult e_ext_san_uri_not_ia5 = 97;
inline bool Lints::has_e_ext_san_uri_not_ia5() const {
  return this != internal_default_instance() && e_ext_san_uri_not_ia5_ != NULL;
}
inline void Lints::clear_e_ext_san_uri_not_ia5() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_not_ia5_ != NULL) delete e_ext_san_uri_not_ia5_;
  e_ext_san_uri_not_ia5_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_uri_not_ia5() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_not_ia5)
  return e_ext_san_uri_not_ia5_ != NULL ? *e_ext_san_uri_not_ia5_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_uri_not_ia5() {
  
  if (e_ext_san_uri_not_ia5_ == NULL) {
    e_ext_san_uri_not_ia5_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_not_ia5)
  return e_ext_san_uri_not_ia5_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_uri_not_ia5() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_not_ia5)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_not_ia5_;
  e_ext_san_uri_not_ia5_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_uri_not_ia5(::zsearch::LintResult* e_ext_san_uri_not_ia5) {
  delete e_ext_san_uri_not_ia5_;
  e_ext_san_uri_not_ia5_ = e_ext_san_uri_not_ia5;
  if (e_ext_san_uri_not_ia5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_not_ia5)
}

// .zsearch.LintResult e_ext_san_uri_relative = 98;
inline bool Lints::has_e_ext_san_uri_relative() const {
  return this != internal_default_instance() && e_ext_san_uri_relative_ != NULL;
}
inline void Lints::clear_e_ext_san_uri_relative() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_uri_relative_ != NULL) delete e_ext_san_uri_relative_;
  e_ext_san_uri_relative_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_uri_relative() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_uri_relative)
  return e_ext_san_uri_relative_ != NULL ? *e_ext_san_uri_relative_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_uri_relative() {
  
  if (e_ext_san_uri_relative_ == NULL) {
    e_ext_san_uri_relative_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_uri_relative)
  return e_ext_san_uri_relative_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_uri_relative() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_uri_relative)
  
  ::zsearch::LintResult* temp = e_ext_san_uri_relative_;
  e_ext_san_uri_relative_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_uri_relative(::zsearch::LintResult* e_ext_san_uri_relative) {
  delete e_ext_san_uri_relative_;
  e_ext_san_uri_relative_ = e_ext_san_uri_relative;
  if (e_ext_san_uri_relative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_uri_relative)
}

// .zsearch.LintResult e_ext_subject_directory_attr_critical = 99;
inline bool Lints::has_e_ext_subject_directory_attr_critical() const {
  return this != internal_default_instance() && e_ext_subject_directory_attr_critical_ != NULL;
}
inline void Lints::clear_e_ext_subject_directory_attr_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_subject_directory_attr_critical_ != NULL) delete e_ext_subject_directory_attr_critical_;
  e_ext_subject_directory_attr_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_subject_directory_attr_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_subject_directory_attr_critical)
  return e_ext_subject_directory_attr_critical_ != NULL ? *e_ext_subject_directory_attr_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_subject_directory_attr_critical() {
  
  if (e_ext_subject_directory_attr_critical_ == NULL) {
    e_ext_subject_directory_attr_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_subject_directory_attr_critical)
  return e_ext_subject_directory_attr_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_subject_directory_attr_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_subject_directory_attr_critical)
  
  ::zsearch::LintResult* temp = e_ext_subject_directory_attr_critical_;
  e_ext_subject_directory_attr_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_subject_directory_attr_critical(::zsearch::LintResult* e_ext_subject_directory_attr_critical) {
  delete e_ext_subject_directory_attr_critical_;
  e_ext_subject_directory_attr_critical_ = e_ext_subject_directory_attr_critical;
  if (e_ext_subject_directory_attr_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_subject_directory_attr_critical)
}

// .zsearch.LintResult e_ext_subject_key_identifier_critical = 100;
inline bool Lints::has_e_ext_subject_key_identifier_critical() const {
  return this != internal_default_instance() && e_ext_subject_key_identifier_critical_ != NULL;
}
inline void Lints::clear_e_ext_subject_key_identifier_critical() {
  if (GetArenaNoVirtual() == NULL && e_ext_subject_key_identifier_critical_ != NULL) delete e_ext_subject_key_identifier_critical_;
  e_ext_subject_key_identifier_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_subject_key_identifier_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_subject_key_identifier_critical)
  return e_ext_subject_key_identifier_critical_ != NULL ? *e_ext_subject_key_identifier_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_subject_key_identifier_critical() {
  
  if (e_ext_subject_key_identifier_critical_ == NULL) {
    e_ext_subject_key_identifier_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_subject_key_identifier_critical)
  return e_ext_subject_key_identifier_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_subject_key_identifier_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_subject_key_identifier_critical)
  
  ::zsearch::LintResult* temp = e_ext_subject_key_identifier_critical_;
  e_ext_subject_key_identifier_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_subject_key_identifier_critical(::zsearch::LintResult* e_ext_subject_key_identifier_critical) {
  delete e_ext_subject_key_identifier_critical_;
  e_ext_subject_key_identifier_critical_ = e_ext_subject_key_identifier_critical;
  if (e_ext_subject_key_identifier_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_subject_key_identifier_critical)
}

// .zsearch.LintResult e_ext_subject_key_identifier_missing_ca = 101;
inline bool Lints::has_e_ext_subject_key_identifier_missing_ca() const {
  return this != internal_default_instance() && e_ext_subject_key_identifier_missing_ca_ != NULL;
}
inline void Lints::clear_e_ext_subject_key_identifier_missing_ca() {
  if (GetArenaNoVirtual() == NULL && e_ext_subject_key_identifier_missing_ca_ != NULL) delete e_ext_subject_key_identifier_missing_ca_;
  e_ext_subject_key_identifier_missing_ca_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_subject_key_identifier_missing_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
  return e_ext_subject_key_identifier_missing_ca_ != NULL ? *e_ext_subject_key_identifier_missing_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_subject_key_identifier_missing_ca() {
  
  if (e_ext_subject_key_identifier_missing_ca_ == NULL) {
    e_ext_subject_key_identifier_missing_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
  return e_ext_subject_key_identifier_missing_ca_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_subject_key_identifier_missing_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
  
  ::zsearch::LintResult* temp = e_ext_subject_key_identifier_missing_ca_;
  e_ext_subject_key_identifier_missing_ca_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_subject_key_identifier_missing_ca(::zsearch::LintResult* e_ext_subject_key_identifier_missing_ca) {
  delete e_ext_subject_key_identifier_missing_ca_;
  e_ext_subject_key_identifier_missing_ca_ = e_ext_subject_key_identifier_missing_ca;
  if (e_ext_subject_key_identifier_missing_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_subject_key_identifier_missing_ca)
}

// .zsearch.LintResult w_ext_subject_key_identifier_missing_sub_cert = 102;
inline bool Lints::has_w_ext_subject_key_identifier_missing_sub_cert() const {
  return this != internal_default_instance() && w_ext_subject_key_identifier_missing_sub_cert_ != NULL;
}
inline void Lints::clear_w_ext_subject_key_identifier_missing_sub_cert() {
  if (GetArenaNoVirtual() == NULL && w_ext_subject_key_identifier_missing_sub_cert_ != NULL) delete w_ext_subject_key_identifier_missing_sub_cert_;
  w_ext_subject_key_identifier_missing_sub_cert_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ext_subject_key_identifier_missing_sub_cert() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
  return w_ext_subject_key_identifier_missing_sub_cert_ != NULL ? *w_ext_subject_key_identifier_missing_sub_cert_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ext_subject_key_identifier_missing_sub_cert() {
  
  if (w_ext_subject_key_identifier_missing_sub_cert_ == NULL) {
    w_ext_subject_key_identifier_missing_sub_cert_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
  return w_ext_subject_key_identifier_missing_sub_cert_;
}
inline ::zsearch::LintResult* Lints::release_w_ext_subject_key_identifier_missing_sub_cert() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
  
  ::zsearch::LintResult* temp = w_ext_subject_key_identifier_missing_sub_cert_;
  w_ext_subject_key_identifier_missing_sub_cert_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ext_subject_key_identifier_missing_sub_cert(::zsearch::LintResult* w_ext_subject_key_identifier_missing_sub_cert) {
  delete w_ext_subject_key_identifier_missing_sub_cert_;
  w_ext_subject_key_identifier_missing_sub_cert_ = w_ext_subject_key_identifier_missing_sub_cert;
  if (w_ext_subject_key_identifier_missing_sub_cert) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ext_subject_key_identifier_missing_sub_cert)
}

// .zsearch.LintResult e_generalized_time_does_not_include_seconds = 103;
inline bool Lints::has_e_generalized_time_does_not_include_seconds() const {
  return this != internal_default_instance() && e_generalized_time_does_not_include_seconds_ != NULL;
}
inline void Lints::clear_e_generalized_time_does_not_include_seconds() {
  if (GetArenaNoVirtual() == NULL && e_generalized_time_does_not_include_seconds_ != NULL) delete e_generalized_time_does_not_include_seconds_;
  e_generalized_time_does_not_include_seconds_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_generalized_time_does_not_include_seconds() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_generalized_time_does_not_include_seconds)
  return e_generalized_time_does_not_include_seconds_ != NULL ? *e_generalized_time_does_not_include_seconds_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_generalized_time_does_not_include_seconds() {
  
  if (e_generalized_time_does_not_include_seconds_ == NULL) {
    e_generalized_time_does_not_include_seconds_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_generalized_time_does_not_include_seconds)
  return e_generalized_time_does_not_include_seconds_;
}
inline ::zsearch::LintResult* Lints::release_e_generalized_time_does_not_include_seconds() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_generalized_time_does_not_include_seconds)
  
  ::zsearch::LintResult* temp = e_generalized_time_does_not_include_seconds_;
  e_generalized_time_does_not_include_seconds_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_generalized_time_does_not_include_seconds(::zsearch::LintResult* e_generalized_time_does_not_include_seconds) {
  delete e_generalized_time_does_not_include_seconds_;
  e_generalized_time_does_not_include_seconds_ = e_generalized_time_does_not_include_seconds;
  if (e_generalized_time_does_not_include_seconds) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_generalized_time_does_not_include_seconds)
}

// .zsearch.LintResult e_generalized_time_includes_fraction_seconds = 104;
inline bool Lints::has_e_generalized_time_includes_fraction_seconds() const {
  return this != internal_default_instance() && e_generalized_time_includes_fraction_seconds_ != NULL;
}
inline void Lints::clear_e_generalized_time_includes_fraction_seconds() {
  if (GetArenaNoVirtual() == NULL && e_generalized_time_includes_fraction_seconds_ != NULL) delete e_generalized_time_includes_fraction_seconds_;
  e_generalized_time_includes_fraction_seconds_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_generalized_time_includes_fraction_seconds() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
  return e_generalized_time_includes_fraction_seconds_ != NULL ? *e_generalized_time_includes_fraction_seconds_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_generalized_time_includes_fraction_seconds() {
  
  if (e_generalized_time_includes_fraction_seconds_ == NULL) {
    e_generalized_time_includes_fraction_seconds_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
  return e_generalized_time_includes_fraction_seconds_;
}
inline ::zsearch::LintResult* Lints::release_e_generalized_time_includes_fraction_seconds() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
  
  ::zsearch::LintResult* temp = e_generalized_time_includes_fraction_seconds_;
  e_generalized_time_includes_fraction_seconds_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_generalized_time_includes_fraction_seconds(::zsearch::LintResult* e_generalized_time_includes_fraction_seconds) {
  delete e_generalized_time_includes_fraction_seconds_;
  e_generalized_time_includes_fraction_seconds_ = e_generalized_time_includes_fraction_seconds;
  if (e_generalized_time_includes_fraction_seconds) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_generalized_time_includes_fraction_seconds)
}

// .zsearch.LintResult e_generalized_time_not_in_zulu = 105;
inline bool Lints::has_e_generalized_time_not_in_zulu() const {
  return this != internal_default_instance() && e_generalized_time_not_in_zulu_ != NULL;
}
inline void Lints::clear_e_generalized_time_not_in_zulu() {
  if (GetArenaNoVirtual() == NULL && e_generalized_time_not_in_zulu_ != NULL) delete e_generalized_time_not_in_zulu_;
  e_generalized_time_not_in_zulu_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_generalized_time_not_in_zulu() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_generalized_time_not_in_zulu)
  return e_generalized_time_not_in_zulu_ != NULL ? *e_generalized_time_not_in_zulu_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_generalized_time_not_in_zulu() {
  
  if (e_generalized_time_not_in_zulu_ == NULL) {
    e_generalized_time_not_in_zulu_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_generalized_time_not_in_zulu)
  return e_generalized_time_not_in_zulu_;
}
inline ::zsearch::LintResult* Lints::release_e_generalized_time_not_in_zulu() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_generalized_time_not_in_zulu)
  
  ::zsearch::LintResult* temp = e_generalized_time_not_in_zulu_;
  e_generalized_time_not_in_zulu_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_generalized_time_not_in_zulu(::zsearch::LintResult* e_generalized_time_not_in_zulu) {
  delete e_generalized_time_not_in_zulu_;
  e_generalized_time_not_in_zulu_ = e_generalized_time_not_in_zulu;
  if (e_generalized_time_not_in_zulu) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_generalized_time_not_in_zulu)
}

// .zsearch.LintResult e_ian_dns_name_includes_null_char = 107;
inline bool Lints::has_e_ian_dns_name_includes_null_char() const {
  return this != internal_default_instance() && e_ian_dns_name_includes_null_char_ != NULL;
}
inline void Lints::clear_e_ian_dns_name_includes_null_char() {
  if (GetArenaNoVirtual() == NULL && e_ian_dns_name_includes_null_char_ != NULL) delete e_ian_dns_name_includes_null_char_;
  e_ian_dns_name_includes_null_char_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ian_dns_name_includes_null_char() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_dns_name_includes_null_char)
  return e_ian_dns_name_includes_null_char_ != NULL ? *e_ian_dns_name_includes_null_char_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ian_dns_name_includes_null_char() {
  
  if (e_ian_dns_name_includes_null_char_ == NULL) {
    e_ian_dns_name_includes_null_char_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_dns_name_includes_null_char)
  return e_ian_dns_name_includes_null_char_;
}
inline ::zsearch::LintResult* Lints::release_e_ian_dns_name_includes_null_char() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_dns_name_includes_null_char)
  
  ::zsearch::LintResult* temp = e_ian_dns_name_includes_null_char_;
  e_ian_dns_name_includes_null_char_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ian_dns_name_includes_null_char(::zsearch::LintResult* e_ian_dns_name_includes_null_char) {
  delete e_ian_dns_name_includes_null_char_;
  e_ian_dns_name_includes_null_char_ = e_ian_dns_name_includes_null_char;
  if (e_ian_dns_name_includes_null_char) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_dns_name_includes_null_char)
}

// .zsearch.LintResult e_ian_dns_name_starts_with_period = 108;
inline bool Lints::has_e_ian_dns_name_starts_with_period() const {
  return this != internal_default_instance() && e_ian_dns_name_starts_with_period_ != NULL;
}
inline void Lints::clear_e_ian_dns_name_starts_with_period() {
  if (GetArenaNoVirtual() == NULL && e_ian_dns_name_starts_with_period_ != NULL) delete e_ian_dns_name_starts_with_period_;
  e_ian_dns_name_starts_with_period_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ian_dns_name_starts_with_period() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ian_dns_name_starts_with_period)
  return e_ian_dns_name_starts_with_period_ != NULL ? *e_ian_dns_name_starts_with_period_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ian_dns_name_starts_with_period() {
  
  if (e_ian_dns_name_starts_with_period_ == NULL) {
    e_ian_dns_name_starts_with_period_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ian_dns_name_starts_with_period)
  return e_ian_dns_name_starts_with_period_;
}
inline ::zsearch::LintResult* Lints::release_e_ian_dns_name_starts_with_period() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ian_dns_name_starts_with_period)
  
  ::zsearch::LintResult* temp = e_ian_dns_name_starts_with_period_;
  e_ian_dns_name_starts_with_period_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ian_dns_name_starts_with_period(::zsearch::LintResult* e_ian_dns_name_starts_with_period) {
  delete e_ian_dns_name_starts_with_period_;
  e_ian_dns_name_starts_with_period_ = e_ian_dns_name_starts_with_period;
  if (e_ian_dns_name_starts_with_period) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ian_dns_name_starts_with_period)
}

// .zsearch.LintResult w_ian_iana_pub_suffix_empty = 109;
inline bool Lints::has_w_ian_iana_pub_suffix_empty() const {
  return this != internal_default_instance() && w_ian_iana_pub_suffix_empty_ != NULL;
}
inline void Lints::clear_w_ian_iana_pub_suffix_empty() {
  if (GetArenaNoVirtual() == NULL && w_ian_iana_pub_suffix_empty_ != NULL) delete w_ian_iana_pub_suffix_empty_;
  w_ian_iana_pub_suffix_empty_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_ian_iana_pub_suffix_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_ian_iana_pub_suffix_empty)
  return w_ian_iana_pub_suffix_empty_ != NULL ? *w_ian_iana_pub_suffix_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_ian_iana_pub_suffix_empty() {
  
  if (w_ian_iana_pub_suffix_empty_ == NULL) {
    w_ian_iana_pub_suffix_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_ian_iana_pub_suffix_empty)
  return w_ian_iana_pub_suffix_empty_;
}
inline ::zsearch::LintResult* Lints::release_w_ian_iana_pub_suffix_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_ian_iana_pub_suffix_empty)
  
  ::zsearch::LintResult* temp = w_ian_iana_pub_suffix_empty_;
  w_ian_iana_pub_suffix_empty_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_ian_iana_pub_suffix_empty(::zsearch::LintResult* w_ian_iana_pub_suffix_empty) {
  delete w_ian_iana_pub_suffix_empty_;
  w_ian_iana_pub_suffix_empty_ = w_ian_iana_pub_suffix_empty;
  if (w_ian_iana_pub_suffix_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_ian_iana_pub_suffix_empty)
}

// .zsearch.LintResult e_inhibit_any_policy_not_critical = 110;
inline bool Lints::has_e_inhibit_any_policy_not_critical() const {
  return this != internal_default_instance() && e_inhibit_any_policy_not_critical_ != NULL;
}
inline void Lints::clear_e_inhibit_any_policy_not_critical() {
  if (GetArenaNoVirtual() == NULL && e_inhibit_any_policy_not_critical_ != NULL) delete e_inhibit_any_policy_not_critical_;
  e_inhibit_any_policy_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_inhibit_any_policy_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_inhibit_any_policy_not_critical)
  return e_inhibit_any_policy_not_critical_ != NULL ? *e_inhibit_any_policy_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_inhibit_any_policy_not_critical() {
  
  if (e_inhibit_any_policy_not_critical_ == NULL) {
    e_inhibit_any_policy_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_inhibit_any_policy_not_critical)
  return e_inhibit_any_policy_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_inhibit_any_policy_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_inhibit_any_policy_not_critical)
  
  ::zsearch::LintResult* temp = e_inhibit_any_policy_not_critical_;
  e_inhibit_any_policy_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_inhibit_any_policy_not_critical(::zsearch::LintResult* e_inhibit_any_policy_not_critical) {
  delete e_inhibit_any_policy_not_critical_;
  e_inhibit_any_policy_not_critical_ = e_inhibit_any_policy_not_critical;
  if (e_inhibit_any_policy_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_inhibit_any_policy_not_critical)
}

// .zsearch.LintResult e_invalid_certificate_version = 111;
inline bool Lints::has_e_invalid_certificate_version() const {
  return this != internal_default_instance() && e_invalid_certificate_version_ != NULL;
}
inline void Lints::clear_e_invalid_certificate_version() {
  if (GetArenaNoVirtual() == NULL && e_invalid_certificate_version_ != NULL) delete e_invalid_certificate_version_;
  e_invalid_certificate_version_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_invalid_certificate_version() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_invalid_certificate_version)
  return e_invalid_certificate_version_ != NULL ? *e_invalid_certificate_version_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_invalid_certificate_version() {
  
  if (e_invalid_certificate_version_ == NULL) {
    e_invalid_certificate_version_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_invalid_certificate_version)
  return e_invalid_certificate_version_;
}
inline ::zsearch::LintResult* Lints::release_e_invalid_certificate_version() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_invalid_certificate_version)
  
  ::zsearch::LintResult* temp = e_invalid_certificate_version_;
  e_invalid_certificate_version_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_invalid_certificate_version(::zsearch::LintResult* e_invalid_certificate_version) {
  delete e_invalid_certificate_version_;
  e_invalid_certificate_version_ = e_invalid_certificate_version;
  if (e_invalid_certificate_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_invalid_certificate_version)
}

// .zsearch.LintResult e_issuer_field_empty = 112;
inline bool Lints::has_e_issuer_field_empty() const {
  return this != internal_default_instance() && e_issuer_field_empty_ != NULL;
}
inline void Lints::clear_e_issuer_field_empty() {
  if (GetArenaNoVirtual() == NULL && e_issuer_field_empty_ != NULL) delete e_issuer_field_empty_;
  e_issuer_field_empty_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_issuer_field_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_issuer_field_empty)
  return e_issuer_field_empty_ != NULL ? *e_issuer_field_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_issuer_field_empty() {
  
  if (e_issuer_field_empty_ == NULL) {
    e_issuer_field_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_issuer_field_empty)
  return e_issuer_field_empty_;
}
inline ::zsearch::LintResult* Lints::release_e_issuer_field_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_issuer_field_empty)
  
  ::zsearch::LintResult* temp = e_issuer_field_empty_;
  e_issuer_field_empty_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_issuer_field_empty(::zsearch::LintResult* e_issuer_field_empty) {
  delete e_issuer_field_empty_;
  e_issuer_field_empty_ = e_issuer_field_empty;
  if (e_issuer_field_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_issuer_field_empty)
}

// .zsearch.LintResult e_name_constraint_empty = 113;
inline bool Lints::has_e_name_constraint_empty() const {
  return this != internal_default_instance() && e_name_constraint_empty_ != NULL;
}
inline void Lints::clear_e_name_constraint_empty() {
  if (GetArenaNoVirtual() == NULL && e_name_constraint_empty_ != NULL) delete e_name_constraint_empty_;
  e_name_constraint_empty_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_name_constraint_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_name_constraint_empty)
  return e_name_constraint_empty_ != NULL ? *e_name_constraint_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_name_constraint_empty() {
  
  if (e_name_constraint_empty_ == NULL) {
    e_name_constraint_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_name_constraint_empty)
  return e_name_constraint_empty_;
}
inline ::zsearch::LintResult* Lints::release_e_name_constraint_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_name_constraint_empty)
  
  ::zsearch::LintResult* temp = e_name_constraint_empty_;
  e_name_constraint_empty_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_name_constraint_empty(::zsearch::LintResult* e_name_constraint_empty) {
  delete e_name_constraint_empty_;
  e_name_constraint_empty_ = e_name_constraint_empty;
  if (e_name_constraint_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_name_constraint_empty)
}

// .zsearch.LintResult e_name_constraint_maximum_not_absent = 114;
inline bool Lints::has_e_name_constraint_maximum_not_absent() const {
  return this != internal_default_instance() && e_name_constraint_maximum_not_absent_ != NULL;
}
inline void Lints::clear_e_name_constraint_maximum_not_absent() {
  if (GetArenaNoVirtual() == NULL && e_name_constraint_maximum_not_absent_ != NULL) delete e_name_constraint_maximum_not_absent_;
  e_name_constraint_maximum_not_absent_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_name_constraint_maximum_not_absent() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_name_constraint_maximum_not_absent)
  return e_name_constraint_maximum_not_absent_ != NULL ? *e_name_constraint_maximum_not_absent_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_name_constraint_maximum_not_absent() {
  
  if (e_name_constraint_maximum_not_absent_ == NULL) {
    e_name_constraint_maximum_not_absent_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_name_constraint_maximum_not_absent)
  return e_name_constraint_maximum_not_absent_;
}
inline ::zsearch::LintResult* Lints::release_e_name_constraint_maximum_not_absent() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_name_constraint_maximum_not_absent)
  
  ::zsearch::LintResult* temp = e_name_constraint_maximum_not_absent_;
  e_name_constraint_maximum_not_absent_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_name_constraint_maximum_not_absent(::zsearch::LintResult* e_name_constraint_maximum_not_absent) {
  delete e_name_constraint_maximum_not_absent_;
  e_name_constraint_maximum_not_absent_ = e_name_constraint_maximum_not_absent;
  if (e_name_constraint_maximum_not_absent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_name_constraint_maximum_not_absent)
}

// .zsearch.LintResult e_name_constraint_minimum_non_zero = 115;
inline bool Lints::has_e_name_constraint_minimum_non_zero() const {
  return this != internal_default_instance() && e_name_constraint_minimum_non_zero_ != NULL;
}
inline void Lints::clear_e_name_constraint_minimum_non_zero() {
  if (GetArenaNoVirtual() == NULL && e_name_constraint_minimum_non_zero_ != NULL) delete e_name_constraint_minimum_non_zero_;
  e_name_constraint_minimum_non_zero_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_name_constraint_minimum_non_zero() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_name_constraint_minimum_non_zero)
  return e_name_constraint_minimum_non_zero_ != NULL ? *e_name_constraint_minimum_non_zero_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_name_constraint_minimum_non_zero() {
  
  if (e_name_constraint_minimum_non_zero_ == NULL) {
    e_name_constraint_minimum_non_zero_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_name_constraint_minimum_non_zero)
  return e_name_constraint_minimum_non_zero_;
}
inline ::zsearch::LintResult* Lints::release_e_name_constraint_minimum_non_zero() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_name_constraint_minimum_non_zero)
  
  ::zsearch::LintResult* temp = e_name_constraint_minimum_non_zero_;
  e_name_constraint_minimum_non_zero_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_name_constraint_minimum_non_zero(::zsearch::LintResult* e_name_constraint_minimum_non_zero) {
  delete e_name_constraint_minimum_non_zero_;
  e_name_constraint_minimum_non_zero_ = e_name_constraint_minimum_non_zero;
  if (e_name_constraint_minimum_non_zero) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_name_constraint_minimum_non_zero)
}

// .zsearch.LintResult w_name_constraint_on_edi_party_name = 116;
inline bool Lints::has_w_name_constraint_on_edi_party_name() const {
  return this != internal_default_instance() && w_name_constraint_on_edi_party_name_ != NULL;
}
inline void Lints::clear_w_name_constraint_on_edi_party_name() {
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_edi_party_name_ != NULL) delete w_name_constraint_on_edi_party_name_;
  w_name_constraint_on_edi_party_name_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_name_constraint_on_edi_party_name() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_name_constraint_on_edi_party_name)
  return w_name_constraint_on_edi_party_name_ != NULL ? *w_name_constraint_on_edi_party_name_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_name_constraint_on_edi_party_name() {
  
  if (w_name_constraint_on_edi_party_name_ == NULL) {
    w_name_constraint_on_edi_party_name_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_name_constraint_on_edi_party_name)
  return w_name_constraint_on_edi_party_name_;
}
inline ::zsearch::LintResult* Lints::release_w_name_constraint_on_edi_party_name() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_name_constraint_on_edi_party_name)
  
  ::zsearch::LintResult* temp = w_name_constraint_on_edi_party_name_;
  w_name_constraint_on_edi_party_name_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_name_constraint_on_edi_party_name(::zsearch::LintResult* w_name_constraint_on_edi_party_name) {
  delete w_name_constraint_on_edi_party_name_;
  w_name_constraint_on_edi_party_name_ = w_name_constraint_on_edi_party_name;
  if (w_name_constraint_on_edi_party_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_name_constraint_on_edi_party_name)
}

// .zsearch.LintResult w_name_constraint_on_registered_id = 117;
inline bool Lints::has_w_name_constraint_on_registered_id() const {
  return this != internal_default_instance() && w_name_constraint_on_registered_id_ != NULL;
}
inline void Lints::clear_w_name_constraint_on_registered_id() {
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_registered_id_ != NULL) delete w_name_constraint_on_registered_id_;
  w_name_constraint_on_registered_id_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_name_constraint_on_registered_id() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_name_constraint_on_registered_id)
  return w_name_constraint_on_registered_id_ != NULL ? *w_name_constraint_on_registered_id_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_name_constraint_on_registered_id() {
  
  if (w_name_constraint_on_registered_id_ == NULL) {
    w_name_constraint_on_registered_id_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_name_constraint_on_registered_id)
  return w_name_constraint_on_registered_id_;
}
inline ::zsearch::LintResult* Lints::release_w_name_constraint_on_registered_id() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_name_constraint_on_registered_id)
  
  ::zsearch::LintResult* temp = w_name_constraint_on_registered_id_;
  w_name_constraint_on_registered_id_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_name_constraint_on_registered_id(::zsearch::LintResult* w_name_constraint_on_registered_id) {
  delete w_name_constraint_on_registered_id_;
  w_name_constraint_on_registered_id_ = w_name_constraint_on_registered_id;
  if (w_name_constraint_on_registered_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_name_constraint_on_registered_id)
}

// .zsearch.LintResult w_name_constraint_on_x400 = 118;
inline bool Lints::has_w_name_constraint_on_x400() const {
  return this != internal_default_instance() && w_name_constraint_on_x400_ != NULL;
}
inline void Lints::clear_w_name_constraint_on_x400() {
  if (GetArenaNoVirtual() == NULL && w_name_constraint_on_x400_ != NULL) delete w_name_constraint_on_x400_;
  w_name_constraint_on_x400_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_name_constraint_on_x400() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_name_constraint_on_x400)
  return w_name_constraint_on_x400_ != NULL ? *w_name_constraint_on_x400_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_name_constraint_on_x400() {
  
  if (w_name_constraint_on_x400_ == NULL) {
    w_name_constraint_on_x400_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_name_constraint_on_x400)
  return w_name_constraint_on_x400_;
}
inline ::zsearch::LintResult* Lints::release_w_name_constraint_on_x400() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_name_constraint_on_x400)
  
  ::zsearch::LintResult* temp = w_name_constraint_on_x400_;
  w_name_constraint_on_x400_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_name_constraint_on_x400(::zsearch::LintResult* w_name_constraint_on_x400) {
  delete w_name_constraint_on_x400_;
  w_name_constraint_on_x400_ = w_name_constraint_on_x400;
  if (w_name_constraint_on_x400) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_name_constraint_on_x400)
}

// .zsearch.LintResult e_old_root_ca_rsa_mod_less_than_2048_bits = 119;
inline bool Lints::has_e_old_root_ca_rsa_mod_less_than_2048_bits() const {
  return this != internal_default_instance() && e_old_root_ca_rsa_mod_less_than_2048_bits_ != NULL;
}
inline void Lints::clear_e_old_root_ca_rsa_mod_less_than_2048_bits() {
  if (GetArenaNoVirtual() == NULL && e_old_root_ca_rsa_mod_less_than_2048_bits_ != NULL) delete e_old_root_ca_rsa_mod_less_than_2048_bits_;
  e_old_root_ca_rsa_mod_less_than_2048_bits_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_old_root_ca_rsa_mod_less_than_2048_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
  return e_old_root_ca_rsa_mod_less_than_2048_bits_ != NULL ? *e_old_root_ca_rsa_mod_less_than_2048_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_old_root_ca_rsa_mod_less_than_2048_bits() {
  
  if (e_old_root_ca_rsa_mod_less_than_2048_bits_ == NULL) {
    e_old_root_ca_rsa_mod_less_than_2048_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
  return e_old_root_ca_rsa_mod_less_than_2048_bits_;
}
inline ::zsearch::LintResult* Lints::release_e_old_root_ca_rsa_mod_less_than_2048_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
  
  ::zsearch::LintResult* temp = e_old_root_ca_rsa_mod_less_than_2048_bits_;
  e_old_root_ca_rsa_mod_less_than_2048_bits_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_old_root_ca_rsa_mod_less_than_2048_bits(::zsearch::LintResult* e_old_root_ca_rsa_mod_less_than_2048_bits) {
  delete e_old_root_ca_rsa_mod_less_than_2048_bits_;
  e_old_root_ca_rsa_mod_less_than_2048_bits_ = e_old_root_ca_rsa_mod_less_than_2048_bits;
  if (e_old_root_ca_rsa_mod_less_than_2048_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_old_root_ca_rsa_mod_less_than_2048_bits)
}

// .zsearch.LintResult e_old_sub_ca_rsa_mod_less_than_1024_bits = 120;
inline bool Lints::has_e_old_sub_ca_rsa_mod_less_than_1024_bits() const {
  return this != internal_default_instance() && e_old_sub_ca_rsa_mod_less_than_1024_bits_ != NULL;
}
inline void Lints::clear_e_old_sub_ca_rsa_mod_less_than_1024_bits() {
  if (GetArenaNoVirtual() == NULL && e_old_sub_ca_rsa_mod_less_than_1024_bits_ != NULL) delete e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  e_old_sub_ca_rsa_mod_less_than_1024_bits_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_old_sub_ca_rsa_mod_less_than_1024_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
  return e_old_sub_ca_rsa_mod_less_than_1024_bits_ != NULL ? *e_old_sub_ca_rsa_mod_less_than_1024_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_old_sub_ca_rsa_mod_less_than_1024_bits() {
  
  if (e_old_sub_ca_rsa_mod_less_than_1024_bits_ == NULL) {
    e_old_sub_ca_rsa_mod_less_than_1024_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
  return e_old_sub_ca_rsa_mod_less_than_1024_bits_;
}
inline ::zsearch::LintResult* Lints::release_e_old_sub_ca_rsa_mod_less_than_1024_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
  
  ::zsearch::LintResult* temp = e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  e_old_sub_ca_rsa_mod_less_than_1024_bits_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_old_sub_ca_rsa_mod_less_than_1024_bits(::zsearch::LintResult* e_old_sub_ca_rsa_mod_less_than_1024_bits) {
  delete e_old_sub_ca_rsa_mod_less_than_1024_bits_;
  e_old_sub_ca_rsa_mod_less_than_1024_bits_ = e_old_sub_ca_rsa_mod_less_than_1024_bits;
  if (e_old_sub_ca_rsa_mod_less_than_1024_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_old_sub_ca_rsa_mod_less_than_1024_bits)
}

// .zsearch.LintResult e_old_sub_cert_rsa_mod_less_than_1024_bits = 121;
inline bool Lints::has_e_old_sub_cert_rsa_mod_less_than_1024_bits() const {
  return this != internal_default_instance() && e_old_sub_cert_rsa_mod_less_than_1024_bits_ != NULL;
}
inline void Lints::clear_e_old_sub_cert_rsa_mod_less_than_1024_bits() {
  if (GetArenaNoVirtual() == NULL && e_old_sub_cert_rsa_mod_less_than_1024_bits_ != NULL) delete e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  e_old_sub_cert_rsa_mod_less_than_1024_bits_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_old_sub_cert_rsa_mod_less_than_1024_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
  return e_old_sub_cert_rsa_mod_less_than_1024_bits_ != NULL ? *e_old_sub_cert_rsa_mod_less_than_1024_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_old_sub_cert_rsa_mod_less_than_1024_bits() {
  
  if (e_old_sub_cert_rsa_mod_less_than_1024_bits_ == NULL) {
    e_old_sub_cert_rsa_mod_less_than_1024_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
  return e_old_sub_cert_rsa_mod_less_than_1024_bits_;
}
inline ::zsearch::LintResult* Lints::release_e_old_sub_cert_rsa_mod_less_than_1024_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
  
  ::zsearch::LintResult* temp = e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  e_old_sub_cert_rsa_mod_less_than_1024_bits_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_old_sub_cert_rsa_mod_less_than_1024_bits(::zsearch::LintResult* e_old_sub_cert_rsa_mod_less_than_1024_bits) {
  delete e_old_sub_cert_rsa_mod_less_than_1024_bits_;
  e_old_sub_cert_rsa_mod_less_than_1024_bits_ = e_old_sub_cert_rsa_mod_less_than_1024_bits;
  if (e_old_sub_cert_rsa_mod_less_than_1024_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_old_sub_cert_rsa_mod_less_than_1024_bits)
}

// .zsearch.LintResult e_path_len_constraint_improperly_included = 122;
inline bool Lints::has_e_path_len_constraint_improperly_included() const {
  return this != internal_default_instance() && e_path_len_constraint_improperly_included_ != NULL;
}
inline void Lints::clear_e_path_len_constraint_improperly_included() {
  if (GetArenaNoVirtual() == NULL && e_path_len_constraint_improperly_included_ != NULL) delete e_path_len_constraint_improperly_included_;
  e_path_len_constraint_improperly_included_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_path_len_constraint_improperly_included() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_path_len_constraint_improperly_included)
  return e_path_len_constraint_improperly_included_ != NULL ? *e_path_len_constraint_improperly_included_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_path_len_constraint_improperly_included() {
  
  if (e_path_len_constraint_improperly_included_ == NULL) {
    e_path_len_constraint_improperly_included_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_path_len_constraint_improperly_included)
  return e_path_len_constraint_improperly_included_;
}
inline ::zsearch::LintResult* Lints::release_e_path_len_constraint_improperly_included() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_path_len_constraint_improperly_included)
  
  ::zsearch::LintResult* temp = e_path_len_constraint_improperly_included_;
  e_path_len_constraint_improperly_included_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_path_len_constraint_improperly_included(::zsearch::LintResult* e_path_len_constraint_improperly_included) {
  delete e_path_len_constraint_improperly_included_;
  e_path_len_constraint_improperly_included_ = e_path_len_constraint_improperly_included;
  if (e_path_len_constraint_improperly_included) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_path_len_constraint_improperly_included)
}

// .zsearch.LintResult e_path_len_constraint_zero_or_less = 123;
inline bool Lints::has_e_path_len_constraint_zero_or_less() const {
  return this != internal_default_instance() && e_path_len_constraint_zero_or_less_ != NULL;
}
inline void Lints::clear_e_path_len_constraint_zero_or_less() {
  if (GetArenaNoVirtual() == NULL && e_path_len_constraint_zero_or_less_ != NULL) delete e_path_len_constraint_zero_or_less_;
  e_path_len_constraint_zero_or_less_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_path_len_constraint_zero_or_less() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_path_len_constraint_zero_or_less)
  return e_path_len_constraint_zero_or_less_ != NULL ? *e_path_len_constraint_zero_or_less_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_path_len_constraint_zero_or_less() {
  
  if (e_path_len_constraint_zero_or_less_ == NULL) {
    e_path_len_constraint_zero_or_less_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_path_len_constraint_zero_or_less)
  return e_path_len_constraint_zero_or_less_;
}
inline ::zsearch::LintResult* Lints::release_e_path_len_constraint_zero_or_less() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_path_len_constraint_zero_or_less)
  
  ::zsearch::LintResult* temp = e_path_len_constraint_zero_or_less_;
  e_path_len_constraint_zero_or_less_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_path_len_constraint_zero_or_less(::zsearch::LintResult* e_path_len_constraint_zero_or_less) {
  delete e_path_len_constraint_zero_or_less_;
  e_path_len_constraint_zero_or_less_ = e_path_len_constraint_zero_or_less;
  if (e_path_len_constraint_zero_or_less) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_path_len_constraint_zero_or_less)
}

// .zsearch.LintResult e_public_key_type_not_allowed = 124;
inline bool Lints::has_e_public_key_type_not_allowed() const {
  return this != internal_default_instance() && e_public_key_type_not_allowed_ != NULL;
}
inline void Lints::clear_e_public_key_type_not_allowed() {
  if (GetArenaNoVirtual() == NULL && e_public_key_type_not_allowed_ != NULL) delete e_public_key_type_not_allowed_;
  e_public_key_type_not_allowed_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_public_key_type_not_allowed() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_public_key_type_not_allowed)
  return e_public_key_type_not_allowed_ != NULL ? *e_public_key_type_not_allowed_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_public_key_type_not_allowed() {
  
  if (e_public_key_type_not_allowed_ == NULL) {
    e_public_key_type_not_allowed_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_public_key_type_not_allowed)
  return e_public_key_type_not_allowed_;
}
inline ::zsearch::LintResult* Lints::release_e_public_key_type_not_allowed() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_public_key_type_not_allowed)
  
  ::zsearch::LintResult* temp = e_public_key_type_not_allowed_;
  e_public_key_type_not_allowed_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_public_key_type_not_allowed(::zsearch::LintResult* e_public_key_type_not_allowed) {
  delete e_public_key_type_not_allowed_;
  e_public_key_type_not_allowed_ = e_public_key_type_not_allowed;
  if (e_public_key_type_not_allowed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_public_key_type_not_allowed)
}

// .zsearch.LintResult w_root_ca_basic_constraints_path_len_constraint_field_present = 125;
inline bool Lints::has_w_root_ca_basic_constraints_path_len_constraint_field_present() const {
  return this != internal_default_instance() && w_root_ca_basic_constraints_path_len_constraint_field_present_ != NULL;
}
inline void Lints::clear_w_root_ca_basic_constraints_path_len_constraint_field_present() {
  if (GetArenaNoVirtual() == NULL && w_root_ca_basic_constraints_path_len_constraint_field_present_ != NULL) delete w_root_ca_basic_constraints_path_len_constraint_field_present_;
  w_root_ca_basic_constraints_path_len_constraint_field_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_root_ca_basic_constraints_path_len_constraint_field_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
  return w_root_ca_basic_constraints_path_len_constraint_field_present_ != NULL ? *w_root_ca_basic_constraints_path_len_constraint_field_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_root_ca_basic_constraints_path_len_constraint_field_present() {
  
  if (w_root_ca_basic_constraints_path_len_constraint_field_present_ == NULL) {
    w_root_ca_basic_constraints_path_len_constraint_field_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
  return w_root_ca_basic_constraints_path_len_constraint_field_present_;
}
inline ::zsearch::LintResult* Lints::release_w_root_ca_basic_constraints_path_len_constraint_field_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
  
  ::zsearch::LintResult* temp = w_root_ca_basic_constraints_path_len_constraint_field_present_;
  w_root_ca_basic_constraints_path_len_constraint_field_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_root_ca_basic_constraints_path_len_constraint_field_present(::zsearch::LintResult* w_root_ca_basic_constraints_path_len_constraint_field_present) {
  delete w_root_ca_basic_constraints_path_len_constraint_field_present_;
  w_root_ca_basic_constraints_path_len_constraint_field_present_ = w_root_ca_basic_constraints_path_len_constraint_field_present;
  if (w_root_ca_basic_constraints_path_len_constraint_field_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_root_ca_basic_constraints_path_len_constraint_field_present)
}

// .zsearch.LintResult w_root_ca_contains_cert_policy = 126;
inline bool Lints::has_w_root_ca_contains_cert_policy() const {
  return this != internal_default_instance() && w_root_ca_contains_cert_policy_ != NULL;
}
inline void Lints::clear_w_root_ca_contains_cert_policy() {
  if (GetArenaNoVirtual() == NULL && w_root_ca_contains_cert_policy_ != NULL) delete w_root_ca_contains_cert_policy_;
  w_root_ca_contains_cert_policy_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_root_ca_contains_cert_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_root_ca_contains_cert_policy)
  return w_root_ca_contains_cert_policy_ != NULL ? *w_root_ca_contains_cert_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_root_ca_contains_cert_policy() {
  
  if (w_root_ca_contains_cert_policy_ == NULL) {
    w_root_ca_contains_cert_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_root_ca_contains_cert_policy)
  return w_root_ca_contains_cert_policy_;
}
inline ::zsearch::LintResult* Lints::release_w_root_ca_contains_cert_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_root_ca_contains_cert_policy)
  
  ::zsearch::LintResult* temp = w_root_ca_contains_cert_policy_;
  w_root_ca_contains_cert_policy_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_root_ca_contains_cert_policy(::zsearch::LintResult* w_root_ca_contains_cert_policy) {
  delete w_root_ca_contains_cert_policy_;
  w_root_ca_contains_cert_policy_ = w_root_ca_contains_cert_policy;
  if (w_root_ca_contains_cert_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_root_ca_contains_cert_policy)
}

// .zsearch.LintResult e_root_ca_extended_key_usage_present = 127;
inline bool Lints::has_e_root_ca_extended_key_usage_present() const {
  return this != internal_default_instance() && e_root_ca_extended_key_usage_present_ != NULL;
}
inline void Lints::clear_e_root_ca_extended_key_usage_present() {
  if (GetArenaNoVirtual() == NULL && e_root_ca_extended_key_usage_present_ != NULL) delete e_root_ca_extended_key_usage_present_;
  e_root_ca_extended_key_usage_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_root_ca_extended_key_usage_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_root_ca_extended_key_usage_present)
  return e_root_ca_extended_key_usage_present_ != NULL ? *e_root_ca_extended_key_usage_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_root_ca_extended_key_usage_present() {
  
  if (e_root_ca_extended_key_usage_present_ == NULL) {
    e_root_ca_extended_key_usage_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_root_ca_extended_key_usage_present)
  return e_root_ca_extended_key_usage_present_;
}
inline ::zsearch::LintResult* Lints::release_e_root_ca_extended_key_usage_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_root_ca_extended_key_usage_present)
  
  ::zsearch::LintResult* temp = e_root_ca_extended_key_usage_present_;
  e_root_ca_extended_key_usage_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_root_ca_extended_key_usage_present(::zsearch::LintResult* e_root_ca_extended_key_usage_present) {
  delete e_root_ca_extended_key_usage_present_;
  e_root_ca_extended_key_usage_present_ = e_root_ca_extended_key_usage_present;
  if (e_root_ca_extended_key_usage_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_root_ca_extended_key_usage_present)
}

// .zsearch.LintResult e_rsa_exp_negative = 128;
inline bool Lints::has_e_rsa_exp_negative() const {
  return this != internal_default_instance() && e_rsa_exp_negative_ != NULL;
}
inline void Lints::clear_e_rsa_exp_negative() {
  if (GetArenaNoVirtual() == NULL && e_rsa_exp_negative_ != NULL) delete e_rsa_exp_negative_;
  e_rsa_exp_negative_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_rsa_exp_negative() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_exp_negative)
  return e_rsa_exp_negative_ != NULL ? *e_rsa_exp_negative_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_rsa_exp_negative() {
  
  if (e_rsa_exp_negative_ == NULL) {
    e_rsa_exp_negative_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_exp_negative)
  return e_rsa_exp_negative_;
}
inline ::zsearch::LintResult* Lints::release_e_rsa_exp_negative() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_exp_negative)
  
  ::zsearch::LintResult* temp = e_rsa_exp_negative_;
  e_rsa_exp_negative_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_rsa_exp_negative(::zsearch::LintResult* e_rsa_exp_negative) {
  delete e_rsa_exp_negative_;
  e_rsa_exp_negative_ = e_rsa_exp_negative;
  if (e_rsa_exp_negative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_exp_negative)
}

// .zsearch.LintResult w_rsa_mod_factors_smaller_than_752 = 129;
inline bool Lints::has_w_rsa_mod_factors_smaller_than_752() const {
  return this != internal_default_instance() && w_rsa_mod_factors_smaller_than_752_ != NULL;
}
inline void Lints::clear_w_rsa_mod_factors_smaller_than_752() {
  if (GetArenaNoVirtual() == NULL && w_rsa_mod_factors_smaller_than_752_ != NULL) delete w_rsa_mod_factors_smaller_than_752_;
  w_rsa_mod_factors_smaller_than_752_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_rsa_mod_factors_smaller_than_752() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
  return w_rsa_mod_factors_smaller_than_752_ != NULL ? *w_rsa_mod_factors_smaller_than_752_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_rsa_mod_factors_smaller_than_752() {
  
  if (w_rsa_mod_factors_smaller_than_752_ == NULL) {
    w_rsa_mod_factors_smaller_than_752_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
  return w_rsa_mod_factors_smaller_than_752_;
}
inline ::zsearch::LintResult* Lints::release_w_rsa_mod_factors_smaller_than_752() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
  
  ::zsearch::LintResult* temp = w_rsa_mod_factors_smaller_than_752_;
  w_rsa_mod_factors_smaller_than_752_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_rsa_mod_factors_smaller_than_752(::zsearch::LintResult* w_rsa_mod_factors_smaller_than_752) {
  delete w_rsa_mod_factors_smaller_than_752_;
  w_rsa_mod_factors_smaller_than_752_ = w_rsa_mod_factors_smaller_than_752;
  if (w_rsa_mod_factors_smaller_than_752) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_rsa_mod_factors_smaller_than_752)
}

// .zsearch.LintResult e_rsa_mod_less_than_2048_bits = 130;
inline bool Lints::has_e_rsa_mod_less_than_2048_bits() const {
  return this != internal_default_instance() && e_rsa_mod_less_than_2048_bits_ != NULL;
}
inline void Lints::clear_e_rsa_mod_less_than_2048_bits() {
  if (GetArenaNoVirtual() == NULL && e_rsa_mod_less_than_2048_bits_ != NULL) delete e_rsa_mod_less_than_2048_bits_;
  e_rsa_mod_less_than_2048_bits_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_rsa_mod_less_than_2048_bits() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
  return e_rsa_mod_less_than_2048_bits_ != NULL ? *e_rsa_mod_less_than_2048_bits_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_rsa_mod_less_than_2048_bits() {
  
  if (e_rsa_mod_less_than_2048_bits_ == NULL) {
    e_rsa_mod_less_than_2048_bits_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
  return e_rsa_mod_less_than_2048_bits_;
}
inline ::zsearch::LintResult* Lints::release_e_rsa_mod_less_than_2048_bits() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
  
  ::zsearch::LintResult* temp = e_rsa_mod_less_than_2048_bits_;
  e_rsa_mod_less_than_2048_bits_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_rsa_mod_less_than_2048_bits(::zsearch::LintResult* e_rsa_mod_less_than_2048_bits) {
  delete e_rsa_mod_less_than_2048_bits_;
  e_rsa_mod_less_than_2048_bits_ = e_rsa_mod_less_than_2048_bits;
  if (e_rsa_mod_less_than_2048_bits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_mod_less_than_2048_bits)
}

// .zsearch.LintResult w_rsa_mod_not_odd = 131;
inline bool Lints::has_w_rsa_mod_not_odd() const {
  return this != internal_default_instance() && w_rsa_mod_not_odd_ != NULL;
}
inline void Lints::clear_w_rsa_mod_not_odd() {
  if (GetArenaNoVirtual() == NULL && w_rsa_mod_not_odd_ != NULL) delete w_rsa_mod_not_odd_;
  w_rsa_mod_not_odd_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_rsa_mod_not_odd() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_rsa_mod_not_odd)
  return w_rsa_mod_not_odd_ != NULL ? *w_rsa_mod_not_odd_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_rsa_mod_not_odd() {
  
  if (w_rsa_mod_not_odd_ == NULL) {
    w_rsa_mod_not_odd_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_rsa_mod_not_odd)
  return w_rsa_mod_not_odd_;
}
inline ::zsearch::LintResult* Lints::release_w_rsa_mod_not_odd() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_rsa_mod_not_odd)
  
  ::zsearch::LintResult* temp = w_rsa_mod_not_odd_;
  w_rsa_mod_not_odd_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_rsa_mod_not_odd(::zsearch::LintResult* w_rsa_mod_not_odd) {
  delete w_rsa_mod_not_odd_;
  w_rsa_mod_not_odd_ = w_rsa_mod_not_odd;
  if (w_rsa_mod_not_odd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_rsa_mod_not_odd)
}

// .zsearch.LintResult w_rsa_public_exponent_not_in_range = 132;
inline bool Lints::has_w_rsa_public_exponent_not_in_range() const {
  return this != internal_default_instance() && w_rsa_public_exponent_not_in_range_ != NULL;
}
inline void Lints::clear_w_rsa_public_exponent_not_in_range() {
  if (GetArenaNoVirtual() == NULL && w_rsa_public_exponent_not_in_range_ != NULL) delete w_rsa_public_exponent_not_in_range_;
  w_rsa_public_exponent_not_in_range_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_rsa_public_exponent_not_in_range() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_rsa_public_exponent_not_in_range)
  return w_rsa_public_exponent_not_in_range_ != NULL ? *w_rsa_public_exponent_not_in_range_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_rsa_public_exponent_not_in_range() {
  
  if (w_rsa_public_exponent_not_in_range_ == NULL) {
    w_rsa_public_exponent_not_in_range_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_rsa_public_exponent_not_in_range)
  return w_rsa_public_exponent_not_in_range_;
}
inline ::zsearch::LintResult* Lints::release_w_rsa_public_exponent_not_in_range() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_rsa_public_exponent_not_in_range)
  
  ::zsearch::LintResult* temp = w_rsa_public_exponent_not_in_range_;
  w_rsa_public_exponent_not_in_range_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_rsa_public_exponent_not_in_range(::zsearch::LintResult* w_rsa_public_exponent_not_in_range) {
  delete w_rsa_public_exponent_not_in_range_;
  w_rsa_public_exponent_not_in_range_ = w_rsa_public_exponent_not_in_range;
  if (w_rsa_public_exponent_not_in_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_rsa_public_exponent_not_in_range)
}

// .zsearch.LintResult e_rsa_public_exponent_not_odd = 133;
inline bool Lints::has_e_rsa_public_exponent_not_odd() const {
  return this != internal_default_instance() && e_rsa_public_exponent_not_odd_ != NULL;
}
inline void Lints::clear_e_rsa_public_exponent_not_odd() {
  if (GetArenaNoVirtual() == NULL && e_rsa_public_exponent_not_odd_ != NULL) delete e_rsa_public_exponent_not_odd_;
  e_rsa_public_exponent_not_odd_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_rsa_public_exponent_not_odd() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_public_exponent_not_odd)
  return e_rsa_public_exponent_not_odd_ != NULL ? *e_rsa_public_exponent_not_odd_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_rsa_public_exponent_not_odd() {
  
  if (e_rsa_public_exponent_not_odd_ == NULL) {
    e_rsa_public_exponent_not_odd_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_public_exponent_not_odd)
  return e_rsa_public_exponent_not_odd_;
}
inline ::zsearch::LintResult* Lints::release_e_rsa_public_exponent_not_odd() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_public_exponent_not_odd)
  
  ::zsearch::LintResult* temp = e_rsa_public_exponent_not_odd_;
  e_rsa_public_exponent_not_odd_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_rsa_public_exponent_not_odd(::zsearch::LintResult* e_rsa_public_exponent_not_odd) {
  delete e_rsa_public_exponent_not_odd_;
  e_rsa_public_exponent_not_odd_ = e_rsa_public_exponent_not_odd;
  if (e_rsa_public_exponent_not_odd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_public_exponent_not_odd)
}

// .zsearch.LintResult e_rsa_public_exponent_too_small = 134;
inline bool Lints::has_e_rsa_public_exponent_too_small() const {
  return this != internal_default_instance() && e_rsa_public_exponent_too_small_ != NULL;
}
inline void Lints::clear_e_rsa_public_exponent_too_small() {
  if (GetArenaNoVirtual() == NULL && e_rsa_public_exponent_too_small_ != NULL) delete e_rsa_public_exponent_too_small_;
  e_rsa_public_exponent_too_small_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_rsa_public_exponent_too_small() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_public_exponent_too_small)
  return e_rsa_public_exponent_too_small_ != NULL ? *e_rsa_public_exponent_too_small_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_rsa_public_exponent_too_small() {
  
  if (e_rsa_public_exponent_too_small_ == NULL) {
    e_rsa_public_exponent_too_small_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_public_exponent_too_small)
  return e_rsa_public_exponent_too_small_;
}
inline ::zsearch::LintResult* Lints::release_e_rsa_public_exponent_too_small() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_public_exponent_too_small)
  
  ::zsearch::LintResult* temp = e_rsa_public_exponent_too_small_;
  e_rsa_public_exponent_too_small_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_rsa_public_exponent_too_small(::zsearch::LintResult* e_rsa_public_exponent_too_small) {
  delete e_rsa_public_exponent_too_small_;
  e_rsa_public_exponent_too_small_ = e_rsa_public_exponent_too_small;
  if (e_rsa_public_exponent_too_small) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_public_exponent_too_small)
}

// .zsearch.LintResult e_san_dns_name_includes_null_char = 135;
inline bool Lints::has_e_san_dns_name_includes_null_char() const {
  return this != internal_default_instance() && e_san_dns_name_includes_null_char_ != NULL;
}
inline void Lints::clear_e_san_dns_name_includes_null_char() {
  if (GetArenaNoVirtual() == NULL && e_san_dns_name_includes_null_char_ != NULL) delete e_san_dns_name_includes_null_char_;
  e_san_dns_name_includes_null_char_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_san_dns_name_includes_null_char() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_dns_name_includes_null_char)
  return e_san_dns_name_includes_null_char_ != NULL ? *e_san_dns_name_includes_null_char_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_san_dns_name_includes_null_char() {
  
  if (e_san_dns_name_includes_null_char_ == NULL) {
    e_san_dns_name_includes_null_char_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_dns_name_includes_null_char)
  return e_san_dns_name_includes_null_char_;
}
inline ::zsearch::LintResult* Lints::release_e_san_dns_name_includes_null_char() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_dns_name_includes_null_char)
  
  ::zsearch::LintResult* temp = e_san_dns_name_includes_null_char_;
  e_san_dns_name_includes_null_char_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_san_dns_name_includes_null_char(::zsearch::LintResult* e_san_dns_name_includes_null_char) {
  delete e_san_dns_name_includes_null_char_;
  e_san_dns_name_includes_null_char_ = e_san_dns_name_includes_null_char;
  if (e_san_dns_name_includes_null_char) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_dns_name_includes_null_char)
}

// .zsearch.LintResult e_san_dns_name_starts_with_period = 136;
inline bool Lints::has_e_san_dns_name_starts_with_period() const {
  return this != internal_default_instance() && e_san_dns_name_starts_with_period_ != NULL;
}
inline void Lints::clear_e_san_dns_name_starts_with_period() {
  if (GetArenaNoVirtual() == NULL && e_san_dns_name_starts_with_period_ != NULL) delete e_san_dns_name_starts_with_period_;
  e_san_dns_name_starts_with_period_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_san_dns_name_starts_with_period() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_san_dns_name_starts_with_period)
  return e_san_dns_name_starts_with_period_ != NULL ? *e_san_dns_name_starts_with_period_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_san_dns_name_starts_with_period() {
  
  if (e_san_dns_name_starts_with_period_ == NULL) {
    e_san_dns_name_starts_with_period_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_san_dns_name_starts_with_period)
  return e_san_dns_name_starts_with_period_;
}
inline ::zsearch::LintResult* Lints::release_e_san_dns_name_starts_with_period() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_san_dns_name_starts_with_period)
  
  ::zsearch::LintResult* temp = e_san_dns_name_starts_with_period_;
  e_san_dns_name_starts_with_period_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_san_dns_name_starts_with_period(::zsearch::LintResult* e_san_dns_name_starts_with_period) {
  delete e_san_dns_name_starts_with_period_;
  e_san_dns_name_starts_with_period_ = e_san_dns_name_starts_with_period;
  if (e_san_dns_name_starts_with_period) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_san_dns_name_starts_with_period)
}

// .zsearch.LintResult w_san_iana_pub_suffix_empty = 137;
inline bool Lints::has_w_san_iana_pub_suffix_empty() const {
  return this != internal_default_instance() && w_san_iana_pub_suffix_empty_ != NULL;
}
inline void Lints::clear_w_san_iana_pub_suffix_empty() {
  if (GetArenaNoVirtual() == NULL && w_san_iana_pub_suffix_empty_ != NULL) delete w_san_iana_pub_suffix_empty_;
  w_san_iana_pub_suffix_empty_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_san_iana_pub_suffix_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_san_iana_pub_suffix_empty)
  return w_san_iana_pub_suffix_empty_ != NULL ? *w_san_iana_pub_suffix_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_san_iana_pub_suffix_empty() {
  
  if (w_san_iana_pub_suffix_empty_ == NULL) {
    w_san_iana_pub_suffix_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_san_iana_pub_suffix_empty)
  return w_san_iana_pub_suffix_empty_;
}
inline ::zsearch::LintResult* Lints::release_w_san_iana_pub_suffix_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_san_iana_pub_suffix_empty)
  
  ::zsearch::LintResult* temp = w_san_iana_pub_suffix_empty_;
  w_san_iana_pub_suffix_empty_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_san_iana_pub_suffix_empty(::zsearch::LintResult* w_san_iana_pub_suffix_empty) {
  delete w_san_iana_pub_suffix_empty_;
  w_san_iana_pub_suffix_empty_ = w_san_iana_pub_suffix_empty;
  if (w_san_iana_pub_suffix_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_san_iana_pub_suffix_empty)
}

// .zsearch.LintResult e_serial_number_longer_than_20_octets = 138;
inline bool Lints::has_e_serial_number_longer_than_20_octets() const {
  return this != internal_default_instance() && e_serial_number_longer_than_20_octets_ != NULL;
}
inline void Lints::clear_e_serial_number_longer_than_20_octets() {
  if (GetArenaNoVirtual() == NULL && e_serial_number_longer_than_20_octets_ != NULL) delete e_serial_number_longer_than_20_octets_;
  e_serial_number_longer_than_20_octets_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_serial_number_longer_than_20_octets() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_serial_number_longer_than_20_octets)
  return e_serial_number_longer_than_20_octets_ != NULL ? *e_serial_number_longer_than_20_octets_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_serial_number_longer_than_20_octets() {
  
  if (e_serial_number_longer_than_20_octets_ == NULL) {
    e_serial_number_longer_than_20_octets_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_serial_number_longer_than_20_octets)
  return e_serial_number_longer_than_20_octets_;
}
inline ::zsearch::LintResult* Lints::release_e_serial_number_longer_than_20_octets() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_serial_number_longer_than_20_octets)
  
  ::zsearch::LintResult* temp = e_serial_number_longer_than_20_octets_;
  e_serial_number_longer_than_20_octets_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_serial_number_longer_than_20_octets(::zsearch::LintResult* e_serial_number_longer_than_20_octets) {
  delete e_serial_number_longer_than_20_octets_;
  e_serial_number_longer_than_20_octets_ = e_serial_number_longer_than_20_octets;
  if (e_serial_number_longer_than_20_octets) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_serial_number_longer_than_20_octets)
}

// .zsearch.LintResult e_serial_number_not_positive = 139;
inline bool Lints::has_e_serial_number_not_positive() const {
  return this != internal_default_instance() && e_serial_number_not_positive_ != NULL;
}
inline void Lints::clear_e_serial_number_not_positive() {
  if (GetArenaNoVirtual() == NULL && e_serial_number_not_positive_ != NULL) delete e_serial_number_not_positive_;
  e_serial_number_not_positive_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_serial_number_not_positive() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_serial_number_not_positive)
  return e_serial_number_not_positive_ != NULL ? *e_serial_number_not_positive_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_serial_number_not_positive() {
  
  if (e_serial_number_not_positive_ == NULL) {
    e_serial_number_not_positive_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_serial_number_not_positive)
  return e_serial_number_not_positive_;
}
inline ::zsearch::LintResult* Lints::release_e_serial_number_not_positive() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_serial_number_not_positive)
  
  ::zsearch::LintResult* temp = e_serial_number_not_positive_;
  e_serial_number_not_positive_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_serial_number_not_positive(::zsearch::LintResult* e_serial_number_not_positive) {
  delete e_serial_number_not_positive_;
  e_serial_number_not_positive_ = e_serial_number_not_positive;
  if (e_serial_number_not_positive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_serial_number_not_positive)
}

// .zsearch.LintResult w_sub_ca_aia_does_not_contain_issuing_ca_url = 140;
inline bool Lints::has_w_sub_ca_aia_does_not_contain_issuing_ca_url() const {
  return this != internal_default_instance() && w_sub_ca_aia_does_not_contain_issuing_ca_url_ != NULL;
}
inline void Lints::clear_w_sub_ca_aia_does_not_contain_issuing_ca_url() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_aia_does_not_contain_issuing_ca_url_ != NULL) delete w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  w_sub_ca_aia_does_not_contain_issuing_ca_url_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_ca_aia_does_not_contain_issuing_ca_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
  return w_sub_ca_aia_does_not_contain_issuing_ca_url_ != NULL ? *w_sub_ca_aia_does_not_contain_issuing_ca_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_ca_aia_does_not_contain_issuing_ca_url() {
  
  if (w_sub_ca_aia_does_not_contain_issuing_ca_url_ == NULL) {
    w_sub_ca_aia_does_not_contain_issuing_ca_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
  return w_sub_ca_aia_does_not_contain_issuing_ca_url_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_ca_aia_does_not_contain_issuing_ca_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
  
  ::zsearch::LintResult* temp = w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  w_sub_ca_aia_does_not_contain_issuing_ca_url_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_ca_aia_does_not_contain_issuing_ca_url(::zsearch::LintResult* w_sub_ca_aia_does_not_contain_issuing_ca_url) {
  delete w_sub_ca_aia_does_not_contain_issuing_ca_url_;
  w_sub_ca_aia_does_not_contain_issuing_ca_url_ = w_sub_ca_aia_does_not_contain_issuing_ca_url;
  if (w_sub_ca_aia_does_not_contain_issuing_ca_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_aia_does_not_contain_issuing_ca_url)
}

// .zsearch.LintResult e_sub_ca_aia_does_not_contain_ocsp_url = 141;
inline bool Lints::has_e_sub_ca_aia_does_not_contain_ocsp_url() const {
  return this != internal_default_instance() && e_sub_ca_aia_does_not_contain_ocsp_url_ != NULL;
}
inline void Lints::clear_e_sub_ca_aia_does_not_contain_ocsp_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_does_not_contain_ocsp_url_ != NULL) delete e_sub_ca_aia_does_not_contain_ocsp_url_;
  e_sub_ca_aia_does_not_contain_ocsp_url_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_aia_does_not_contain_ocsp_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
  return e_sub_ca_aia_does_not_contain_ocsp_url_ != NULL ? *e_sub_ca_aia_does_not_contain_ocsp_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_aia_does_not_contain_ocsp_url() {
  
  if (e_sub_ca_aia_does_not_contain_ocsp_url_ == NULL) {
    e_sub_ca_aia_does_not_contain_ocsp_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
  return e_sub_ca_aia_does_not_contain_ocsp_url_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_aia_does_not_contain_ocsp_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
  
  ::zsearch::LintResult* temp = e_sub_ca_aia_does_not_contain_ocsp_url_;
  e_sub_ca_aia_does_not_contain_ocsp_url_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_aia_does_not_contain_ocsp_url(::zsearch::LintResult* e_sub_ca_aia_does_not_contain_ocsp_url) {
  delete e_sub_ca_aia_does_not_contain_ocsp_url_;
  e_sub_ca_aia_does_not_contain_ocsp_url_ = e_sub_ca_aia_does_not_contain_ocsp_url;
  if (e_sub_ca_aia_does_not_contain_ocsp_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_aia_does_not_contain_ocsp_url)
}

// .zsearch.LintResult e_sub_ca_aia_missing = 142;
inline bool Lints::has_e_sub_ca_aia_missing() const {
  return this != internal_default_instance() && e_sub_ca_aia_missing_ != NULL;
}
inline void Lints::clear_e_sub_ca_aia_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_missing_ != NULL) delete e_sub_ca_aia_missing_;
  e_sub_ca_aia_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_aia_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_aia_missing)
  return e_sub_ca_aia_missing_ != NULL ? *e_sub_ca_aia_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_aia_missing() {
  
  if (e_sub_ca_aia_missing_ == NULL) {
    e_sub_ca_aia_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_aia_missing)
  return e_sub_ca_aia_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_aia_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_aia_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_aia_missing_;
  e_sub_ca_aia_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_aia_missing(::zsearch::LintResult* e_sub_ca_aia_missing) {
  delete e_sub_ca_aia_missing_;
  e_sub_ca_aia_missing_ = e_sub_ca_aia_missing;
  if (e_sub_ca_aia_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_aia_missing)
}

// .zsearch.LintResult w_sub_ca_certificate_policies_marked_critical = 143;
inline bool Lints::has_w_sub_ca_certificate_policies_marked_critical() const {
  return this != internal_default_instance() && w_sub_ca_certificate_policies_marked_critical_ != NULL;
}
inline void Lints::clear_w_sub_ca_certificate_policies_marked_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_certificate_policies_marked_critical_ != NULL) delete w_sub_ca_certificate_policies_marked_critical_;
  w_sub_ca_certificate_policies_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_ca_certificate_policies_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
  return w_sub_ca_certificate_policies_marked_critical_ != NULL ? *w_sub_ca_certificate_policies_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_ca_certificate_policies_marked_critical() {
  
  if (w_sub_ca_certificate_policies_marked_critical_ == NULL) {
    w_sub_ca_certificate_policies_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
  return w_sub_ca_certificate_policies_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_ca_certificate_policies_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
  
  ::zsearch::LintResult* temp = w_sub_ca_certificate_policies_marked_critical_;
  w_sub_ca_certificate_policies_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_ca_certificate_policies_marked_critical(::zsearch::LintResult* w_sub_ca_certificate_policies_marked_critical) {
  delete w_sub_ca_certificate_policies_marked_critical_;
  w_sub_ca_certificate_policies_marked_critical_ = w_sub_ca_certificate_policies_marked_critical;
  if (w_sub_ca_certificate_policies_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_certificate_policies_marked_critical)
}

// .zsearch.LintResult e_sub_ca_certificate_policies_missing = 144;
inline bool Lints::has_e_sub_ca_certificate_policies_missing() const {
  return this != internal_default_instance() && e_sub_ca_certificate_policies_missing_ != NULL;
}
inline void Lints::clear_e_sub_ca_certificate_policies_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_certificate_policies_missing_ != NULL) delete e_sub_ca_certificate_policies_missing_;
  e_sub_ca_certificate_policies_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_certificate_policies_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_certificate_policies_missing)
  return e_sub_ca_certificate_policies_missing_ != NULL ? *e_sub_ca_certificate_policies_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_certificate_policies_missing() {
  
  if (e_sub_ca_certificate_policies_missing_ == NULL) {
    e_sub_ca_certificate_policies_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_certificate_policies_missing)
  return e_sub_ca_certificate_policies_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_certificate_policies_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_certificate_policies_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_certificate_policies_missing_;
  e_sub_ca_certificate_policies_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_certificate_policies_missing(::zsearch::LintResult* e_sub_ca_certificate_policies_missing) {
  delete e_sub_ca_certificate_policies_missing_;
  e_sub_ca_certificate_policies_missing_ = e_sub_ca_certificate_policies_missing;
  if (e_sub_ca_certificate_policies_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_certificate_policies_missing)
}

// .zsearch.LintResult e_sub_ca_crl_distribution_points_does_not_contain_url = 145;
inline bool Lints::has_e_sub_ca_crl_distribution_points_does_not_contain_url() const {
  return this != internal_default_instance() && e_sub_ca_crl_distribution_points_does_not_contain_url_ != NULL;
}
inline void Lints::clear_e_sub_ca_crl_distribution_points_does_not_contain_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_does_not_contain_url_ != NULL) delete e_sub_ca_crl_distribution_points_does_not_contain_url_;
  e_sub_ca_crl_distribution_points_does_not_contain_url_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_crl_distribution_points_does_not_contain_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
  return e_sub_ca_crl_distribution_points_does_not_contain_url_ != NULL ? *e_sub_ca_crl_distribution_points_does_not_contain_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_crl_distribution_points_does_not_contain_url() {
  
  if (e_sub_ca_crl_distribution_points_does_not_contain_url_ == NULL) {
    e_sub_ca_crl_distribution_points_does_not_contain_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
  return e_sub_ca_crl_distribution_points_does_not_contain_url_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_crl_distribution_points_does_not_contain_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
  
  ::zsearch::LintResult* temp = e_sub_ca_crl_distribution_points_does_not_contain_url_;
  e_sub_ca_crl_distribution_points_does_not_contain_url_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_crl_distribution_points_does_not_contain_url(::zsearch::LintResult* e_sub_ca_crl_distribution_points_does_not_contain_url) {
  delete e_sub_ca_crl_distribution_points_does_not_contain_url_;
  e_sub_ca_crl_distribution_points_does_not_contain_url_ = e_sub_ca_crl_distribution_points_does_not_contain_url;
  if (e_sub_ca_crl_distribution_points_does_not_contain_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_crl_distribution_points_does_not_contain_url)
}

// .zsearch.LintResult e_sub_ca_crl_distribution_points_marked_critical = 146;
inline bool Lints::has_e_sub_ca_crl_distribution_points_marked_critical() const {
  return this != internal_default_instance() && e_sub_ca_crl_distribution_points_marked_critical_ != NULL;
}
inline void Lints::clear_e_sub_ca_crl_distribution_points_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_marked_critical_ != NULL) delete e_sub_ca_crl_distribution_points_marked_critical_;
  e_sub_ca_crl_distribution_points_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_crl_distribution_points_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
  return e_sub_ca_crl_distribution_points_marked_critical_ != NULL ? *e_sub_ca_crl_distribution_points_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_crl_distribution_points_marked_critical() {
  
  if (e_sub_ca_crl_distribution_points_marked_critical_ == NULL) {
    e_sub_ca_crl_distribution_points_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
  return e_sub_ca_crl_distribution_points_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_crl_distribution_points_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_ca_crl_distribution_points_marked_critical_;
  e_sub_ca_crl_distribution_points_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_crl_distribution_points_marked_critical(::zsearch::LintResult* e_sub_ca_crl_distribution_points_marked_critical) {
  delete e_sub_ca_crl_distribution_points_marked_critical_;
  e_sub_ca_crl_distribution_points_marked_critical_ = e_sub_ca_crl_distribution_points_marked_critical;
  if (e_sub_ca_crl_distribution_points_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_crl_distribution_points_marked_critical)
}

// .zsearch.LintResult e_sub_ca_crl_distribution_points_missing = 147;
inline bool Lints::has_e_sub_ca_crl_distribution_points_missing() const {
  return this != internal_default_instance() && e_sub_ca_crl_distribution_points_missing_ != NULL;
}
inline void Lints::clear_e_sub_ca_crl_distribution_points_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_crl_distribution_points_missing_ != NULL) delete e_sub_ca_crl_distribution_points_missing_;
  e_sub_ca_crl_distribution_points_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_crl_distribution_points_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
  return e_sub_ca_crl_distribution_points_missing_ != NULL ? *e_sub_ca_crl_distribution_points_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_crl_distribution_points_missing() {
  
  if (e_sub_ca_crl_distribution_points_missing_ == NULL) {
    e_sub_ca_crl_distribution_points_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
  return e_sub_ca_crl_distribution_points_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_crl_distribution_points_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_crl_distribution_points_missing_;
  e_sub_ca_crl_distribution_points_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_crl_distribution_points_missing(::zsearch::LintResult* e_sub_ca_crl_distribution_points_missing) {
  delete e_sub_ca_crl_distribution_points_missing_;
  e_sub_ca_crl_distribution_points_missing_ = e_sub_ca_crl_distribution_points_missing;
  if (e_sub_ca_crl_distribution_points_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_crl_distribution_points_missing)
}

// .zsearch.LintResult w_sub_ca_eku_critical = 148;
inline bool Lints::has_w_sub_ca_eku_critical() const {
  return this != internal_default_instance() && w_sub_ca_eku_critical_ != NULL;
}
inline void Lints::clear_w_sub_ca_eku_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_eku_critical_ != NULL) delete w_sub_ca_eku_critical_;
  w_sub_ca_eku_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_ca_eku_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_eku_critical)
  return w_sub_ca_eku_critical_ != NULL ? *w_sub_ca_eku_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_ca_eku_critical() {
  
  if (w_sub_ca_eku_critical_ == NULL) {
    w_sub_ca_eku_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_eku_critical)
  return w_sub_ca_eku_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_ca_eku_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_eku_critical)
  
  ::zsearch::LintResult* temp = w_sub_ca_eku_critical_;
  w_sub_ca_eku_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_ca_eku_critical(::zsearch::LintResult* w_sub_ca_eku_critical) {
  delete w_sub_ca_eku_critical_;
  w_sub_ca_eku_critical_ = w_sub_ca_eku_critical;
  if (w_sub_ca_eku_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_eku_critical)
}

// .zsearch.LintResult w_sub_ca_name_constraints_not_critical = 149;
inline bool Lints::has_w_sub_ca_name_constraints_not_critical() const {
  return this != internal_default_instance() && w_sub_ca_name_constraints_not_critical_ != NULL;
}
inline void Lints::clear_w_sub_ca_name_constraints_not_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_ca_name_constraints_not_critical_ != NULL) delete w_sub_ca_name_constraints_not_critical_;
  w_sub_ca_name_constraints_not_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_ca_name_constraints_not_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
  return w_sub_ca_name_constraints_not_critical_ != NULL ? *w_sub_ca_name_constraints_not_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_ca_name_constraints_not_critical() {
  
  if (w_sub_ca_name_constraints_not_critical_ == NULL) {
    w_sub_ca_name_constraints_not_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
  return w_sub_ca_name_constraints_not_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_ca_name_constraints_not_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
  
  ::zsearch::LintResult* temp = w_sub_ca_name_constraints_not_critical_;
  w_sub_ca_name_constraints_not_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_ca_name_constraints_not_critical(::zsearch::LintResult* w_sub_ca_name_constraints_not_critical) {
  delete w_sub_ca_name_constraints_not_critical_;
  w_sub_ca_name_constraints_not_critical_ = w_sub_ca_name_constraints_not_critical;
  if (w_sub_ca_name_constraints_not_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_ca_name_constraints_not_critical)
}

// .zsearch.LintResult e_sub_cert_aia_does_not_contain_ocsp_url = 153;
inline bool Lints::has_e_sub_cert_aia_does_not_contain_ocsp_url() const {
  return this != internal_default_instance() && e_sub_cert_aia_does_not_contain_ocsp_url_ != NULL;
}
inline void Lints::clear_e_sub_cert_aia_does_not_contain_ocsp_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_does_not_contain_ocsp_url_ != NULL) delete e_sub_cert_aia_does_not_contain_ocsp_url_;
  e_sub_cert_aia_does_not_contain_ocsp_url_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_aia_does_not_contain_ocsp_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
  return e_sub_cert_aia_does_not_contain_ocsp_url_ != NULL ? *e_sub_cert_aia_does_not_contain_ocsp_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_aia_does_not_contain_ocsp_url() {
  
  if (e_sub_cert_aia_does_not_contain_ocsp_url_ == NULL) {
    e_sub_cert_aia_does_not_contain_ocsp_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
  return e_sub_cert_aia_does_not_contain_ocsp_url_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_aia_does_not_contain_ocsp_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
  
  ::zsearch::LintResult* temp = e_sub_cert_aia_does_not_contain_ocsp_url_;
  e_sub_cert_aia_does_not_contain_ocsp_url_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_aia_does_not_contain_ocsp_url(::zsearch::LintResult* e_sub_cert_aia_does_not_contain_ocsp_url) {
  delete e_sub_cert_aia_does_not_contain_ocsp_url_;
  e_sub_cert_aia_does_not_contain_ocsp_url_ = e_sub_cert_aia_does_not_contain_ocsp_url;
  if (e_sub_cert_aia_does_not_contain_ocsp_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_aia_does_not_contain_ocsp_url)
}

// .zsearch.LintResult e_sub_cert_aia_missing = 154;
inline bool Lints::has_e_sub_cert_aia_missing() const {
  return this != internal_default_instance() && e_sub_cert_aia_missing_ != NULL;
}
inline void Lints::clear_e_sub_cert_aia_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_missing_ != NULL) delete e_sub_cert_aia_missing_;
  e_sub_cert_aia_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_aia_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_aia_missing)
  return e_sub_cert_aia_missing_ != NULL ? *e_sub_cert_aia_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_aia_missing() {
  
  if (e_sub_cert_aia_missing_ == NULL) {
    e_sub_cert_aia_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_aia_missing)
  return e_sub_cert_aia_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_aia_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_aia_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_aia_missing_;
  e_sub_cert_aia_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_aia_missing(::zsearch::LintResult* e_sub_cert_aia_missing) {
  delete e_sub_cert_aia_missing_;
  e_sub_cert_aia_missing_ = e_sub_cert_aia_missing;
  if (e_sub_cert_aia_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_aia_missing)
}

// .zsearch.LintResult e_sub_cert_cert_policy_empty = 155;
inline bool Lints::has_e_sub_cert_cert_policy_empty() const {
  return this != internal_default_instance() && e_sub_cert_cert_policy_empty_ != NULL;
}
inline void Lints::clear_e_sub_cert_cert_policy_empty() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_cert_policy_empty_ != NULL) delete e_sub_cert_cert_policy_empty_;
  e_sub_cert_cert_policy_empty_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_cert_policy_empty() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_cert_policy_empty)
  return e_sub_cert_cert_policy_empty_ != NULL ? *e_sub_cert_cert_policy_empty_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_cert_policy_empty() {
  
  if (e_sub_cert_cert_policy_empty_ == NULL) {
    e_sub_cert_cert_policy_empty_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_cert_policy_empty)
  return e_sub_cert_cert_policy_empty_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_cert_policy_empty() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_cert_policy_empty)
  
  ::zsearch::LintResult* temp = e_sub_cert_cert_policy_empty_;
  e_sub_cert_cert_policy_empty_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_cert_policy_empty(::zsearch::LintResult* e_sub_cert_cert_policy_empty) {
  delete e_sub_cert_cert_policy_empty_;
  e_sub_cert_cert_policy_empty_ = e_sub_cert_cert_policy_empty;
  if (e_sub_cert_cert_policy_empty) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_cert_policy_empty)
}

// .zsearch.LintResult w_sub_cert_certificate_policies_marked_critical = 156;
inline bool Lints::has_w_sub_cert_certificate_policies_marked_critical() const {
  return this != internal_default_instance() && w_sub_cert_certificate_policies_marked_critical_ != NULL;
}
inline void Lints::clear_w_sub_cert_certificate_policies_marked_critical() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_certificate_policies_marked_critical_ != NULL) delete w_sub_cert_certificate_policies_marked_critical_;
  w_sub_cert_certificate_policies_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_cert_certificate_policies_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
  return w_sub_cert_certificate_policies_marked_critical_ != NULL ? *w_sub_cert_certificate_policies_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_cert_certificate_policies_marked_critical() {
  
  if (w_sub_cert_certificate_policies_marked_critical_ == NULL) {
    w_sub_cert_certificate_policies_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
  return w_sub_cert_certificate_policies_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_cert_certificate_policies_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
  
  ::zsearch::LintResult* temp = w_sub_cert_certificate_policies_marked_critical_;
  w_sub_cert_certificate_policies_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_cert_certificate_policies_marked_critical(::zsearch::LintResult* w_sub_cert_certificate_policies_marked_critical) {
  delete w_sub_cert_certificate_policies_marked_critical_;
  w_sub_cert_certificate_policies_marked_critical_ = w_sub_cert_certificate_policies_marked_critical;
  if (w_sub_cert_certificate_policies_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_certificate_policies_marked_critical)
}

// .zsearch.LintResult e_sub_cert_crl_distribution_points_does_not_contain_url = 157;
inline bool Lints::has_e_sub_cert_crl_distribution_points_does_not_contain_url() const {
  return this != internal_default_instance() && e_sub_cert_crl_distribution_points_does_not_contain_url_ != NULL;
}
inline void Lints::clear_e_sub_cert_crl_distribution_points_does_not_contain_url() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_crl_distribution_points_does_not_contain_url_ != NULL) delete e_sub_cert_crl_distribution_points_does_not_contain_url_;
  e_sub_cert_crl_distribution_points_does_not_contain_url_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_crl_distribution_points_does_not_contain_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
  return e_sub_cert_crl_distribution_points_does_not_contain_url_ != NULL ? *e_sub_cert_crl_distribution_points_does_not_contain_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_crl_distribution_points_does_not_contain_url() {
  
  if (e_sub_cert_crl_distribution_points_does_not_contain_url_ == NULL) {
    e_sub_cert_crl_distribution_points_does_not_contain_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
  return e_sub_cert_crl_distribution_points_does_not_contain_url_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_crl_distribution_points_does_not_contain_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
  
  ::zsearch::LintResult* temp = e_sub_cert_crl_distribution_points_does_not_contain_url_;
  e_sub_cert_crl_distribution_points_does_not_contain_url_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_crl_distribution_points_does_not_contain_url(::zsearch::LintResult* e_sub_cert_crl_distribution_points_does_not_contain_url) {
  delete e_sub_cert_crl_distribution_points_does_not_contain_url_;
  e_sub_cert_crl_distribution_points_does_not_contain_url_ = e_sub_cert_crl_distribution_points_does_not_contain_url;
  if (e_sub_cert_crl_distribution_points_does_not_contain_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_crl_distribution_points_does_not_contain_url)
}

// .zsearch.LintResult e_sub_cert_crl_distribution_points_marked_critical = 158;
inline bool Lints::has_e_sub_cert_crl_distribution_points_marked_critical() const {
  return this != internal_default_instance() && e_sub_cert_crl_distribution_points_marked_critical_ != NULL;
}
inline void Lints::clear_e_sub_cert_crl_distribution_points_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_crl_distribution_points_marked_critical_ != NULL) delete e_sub_cert_crl_distribution_points_marked_critical_;
  e_sub_cert_crl_distribution_points_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_crl_distribution_points_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
  return e_sub_cert_crl_distribution_points_marked_critical_ != NULL ? *e_sub_cert_crl_distribution_points_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_crl_distribution_points_marked_critical() {
  
  if (e_sub_cert_crl_distribution_points_marked_critical_ == NULL) {
    e_sub_cert_crl_distribution_points_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
  return e_sub_cert_crl_distribution_points_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_crl_distribution_points_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_cert_crl_distribution_points_marked_critical_;
  e_sub_cert_crl_distribution_points_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_crl_distribution_points_marked_critical(::zsearch::LintResult* e_sub_cert_crl_distribution_points_marked_critical) {
  delete e_sub_cert_crl_distribution_points_marked_critical_;
  e_sub_cert_crl_distribution_points_marked_critical_ = e_sub_cert_crl_distribution_points_marked_critical;
  if (e_sub_cert_crl_distribution_points_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_crl_distribution_points_marked_critical)
}

// .zsearch.LintResult w_sub_cert_eku_extra_values = 159;
inline bool Lints::has_w_sub_cert_eku_extra_values() const {
  return this != internal_default_instance() && w_sub_cert_eku_extra_values_ != NULL;
}
inline void Lints::clear_w_sub_cert_eku_extra_values() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_eku_extra_values_ != NULL) delete w_sub_cert_eku_extra_values_;
  w_sub_cert_eku_extra_values_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_cert_eku_extra_values() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_eku_extra_values)
  return w_sub_cert_eku_extra_values_ != NULL ? *w_sub_cert_eku_extra_values_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_cert_eku_extra_values() {
  
  if (w_sub_cert_eku_extra_values_ == NULL) {
    w_sub_cert_eku_extra_values_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_eku_extra_values)
  return w_sub_cert_eku_extra_values_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_cert_eku_extra_values() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_eku_extra_values)
  
  ::zsearch::LintResult* temp = w_sub_cert_eku_extra_values_;
  w_sub_cert_eku_extra_values_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_cert_eku_extra_values(::zsearch::LintResult* w_sub_cert_eku_extra_values) {
  delete w_sub_cert_eku_extra_values_;
  w_sub_cert_eku_extra_values_ = w_sub_cert_eku_extra_values;
  if (w_sub_cert_eku_extra_values) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_eku_extra_values)
}

// .zsearch.LintResult e_sub_cert_eku_missing = 160;
inline bool Lints::has_e_sub_cert_eku_missing() const {
  return this != internal_default_instance() && e_sub_cert_eku_missing_ != NULL;
}
inline void Lints::clear_e_sub_cert_eku_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_eku_missing_ != NULL) delete e_sub_cert_eku_missing_;
  e_sub_cert_eku_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_eku_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_eku_missing)
  return e_sub_cert_eku_missing_ != NULL ? *e_sub_cert_eku_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_eku_missing() {
  
  if (e_sub_cert_eku_missing_ == NULL) {
    e_sub_cert_eku_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_eku_missing)
  return e_sub_cert_eku_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_eku_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_eku_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_eku_missing_;
  e_sub_cert_eku_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_eku_missing(::zsearch::LintResult* e_sub_cert_eku_missing) {
  delete e_sub_cert_eku_missing_;
  e_sub_cert_eku_missing_ = e_sub_cert_eku_missing;
  if (e_sub_cert_eku_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_eku_missing)
}

// .zsearch.LintResult e_sub_cert_eku_server_auth_client_auth_missing = 161;
inline bool Lints::has_e_sub_cert_eku_server_auth_client_auth_missing() const {
  return this != internal_default_instance() && e_sub_cert_eku_server_auth_client_auth_missing_ != NULL;
}
inline void Lints::clear_e_sub_cert_eku_server_auth_client_auth_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_eku_server_auth_client_auth_missing_ != NULL) delete e_sub_cert_eku_server_auth_client_auth_missing_;
  e_sub_cert_eku_server_auth_client_auth_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_eku_server_auth_client_auth_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
  return e_sub_cert_eku_server_auth_client_auth_missing_ != NULL ? *e_sub_cert_eku_server_auth_client_auth_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_eku_server_auth_client_auth_missing() {
  
  if (e_sub_cert_eku_server_auth_client_auth_missing_ == NULL) {
    e_sub_cert_eku_server_auth_client_auth_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
  return e_sub_cert_eku_server_auth_client_auth_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_eku_server_auth_client_auth_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_eku_server_auth_client_auth_missing_;
  e_sub_cert_eku_server_auth_client_auth_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_eku_server_auth_client_auth_missing(::zsearch::LintResult* e_sub_cert_eku_server_auth_client_auth_missing) {
  delete e_sub_cert_eku_server_auth_client_auth_missing_;
  e_sub_cert_eku_server_auth_client_auth_missing_ = e_sub_cert_eku_server_auth_client_auth_missing;
  if (e_sub_cert_eku_server_auth_client_auth_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_eku_server_auth_client_auth_missing)
}

// .zsearch.LintResult e_sub_cert_key_usage_cert_sign_bit_set = 162;
inline bool Lints::has_e_sub_cert_key_usage_cert_sign_bit_set() const {
  return this != internal_default_instance() && e_sub_cert_key_usage_cert_sign_bit_set_ != NULL;
}
inline void Lints::clear_e_sub_cert_key_usage_cert_sign_bit_set() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_key_usage_cert_sign_bit_set_ != NULL) delete e_sub_cert_key_usage_cert_sign_bit_set_;
  e_sub_cert_key_usage_cert_sign_bit_set_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_key_usage_cert_sign_bit_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
  return e_sub_cert_key_usage_cert_sign_bit_set_ != NULL ? *e_sub_cert_key_usage_cert_sign_bit_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_key_usage_cert_sign_bit_set() {
  
  if (e_sub_cert_key_usage_cert_sign_bit_set_ == NULL) {
    e_sub_cert_key_usage_cert_sign_bit_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
  return e_sub_cert_key_usage_cert_sign_bit_set_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_key_usage_cert_sign_bit_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
  
  ::zsearch::LintResult* temp = e_sub_cert_key_usage_cert_sign_bit_set_;
  e_sub_cert_key_usage_cert_sign_bit_set_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_key_usage_cert_sign_bit_set(::zsearch::LintResult* e_sub_cert_key_usage_cert_sign_bit_set) {
  delete e_sub_cert_key_usage_cert_sign_bit_set_;
  e_sub_cert_key_usage_cert_sign_bit_set_ = e_sub_cert_key_usage_cert_sign_bit_set;
  if (e_sub_cert_key_usage_cert_sign_bit_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_key_usage_cert_sign_bit_set)
}

// .zsearch.LintResult e_sub_cert_or_sub_ca_using_sha1 = 163;
inline bool Lints::has_e_sub_cert_or_sub_ca_using_sha1() const {
  return this != internal_default_instance() && e_sub_cert_or_sub_ca_using_sha1_ != NULL;
}
inline void Lints::clear_e_sub_cert_or_sub_ca_using_sha1() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_or_sub_ca_using_sha1_ != NULL) delete e_sub_cert_or_sub_ca_using_sha1_;
  e_sub_cert_or_sub_ca_using_sha1_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_or_sub_ca_using_sha1() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
  return e_sub_cert_or_sub_ca_using_sha1_ != NULL ? *e_sub_cert_or_sub_ca_using_sha1_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_or_sub_ca_using_sha1() {
  
  if (e_sub_cert_or_sub_ca_using_sha1_ == NULL) {
    e_sub_cert_or_sub_ca_using_sha1_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
  return e_sub_cert_or_sub_ca_using_sha1_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_or_sub_ca_using_sha1() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
  
  ::zsearch::LintResult* temp = e_sub_cert_or_sub_ca_using_sha1_;
  e_sub_cert_or_sub_ca_using_sha1_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_or_sub_ca_using_sha1(::zsearch::LintResult* e_sub_cert_or_sub_ca_using_sha1) {
  delete e_sub_cert_or_sub_ca_using_sha1_;
  e_sub_cert_or_sub_ca_using_sha1_ = e_sub_cert_or_sub_ca_using_sha1;
  if (e_sub_cert_or_sub_ca_using_sha1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_or_sub_ca_using_sha1)
}

// .zsearch.LintResult w_sub_cert_sha1_expiration_too_long = 164;
inline bool Lints::has_w_sub_cert_sha1_expiration_too_long() const {
  return this != internal_default_instance() && w_sub_cert_sha1_expiration_too_long_ != NULL;
}
inline void Lints::clear_w_sub_cert_sha1_expiration_too_long() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_sha1_expiration_too_long_ != NULL) delete w_sub_cert_sha1_expiration_too_long_;
  w_sub_cert_sha1_expiration_too_long_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_cert_sha1_expiration_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
  return w_sub_cert_sha1_expiration_too_long_ != NULL ? *w_sub_cert_sha1_expiration_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_cert_sha1_expiration_too_long() {
  
  if (w_sub_cert_sha1_expiration_too_long_ == NULL) {
    w_sub_cert_sha1_expiration_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
  return w_sub_cert_sha1_expiration_too_long_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_cert_sha1_expiration_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
  
  ::zsearch::LintResult* temp = w_sub_cert_sha1_expiration_too_long_;
  w_sub_cert_sha1_expiration_too_long_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_cert_sha1_expiration_too_long(::zsearch::LintResult* w_sub_cert_sha1_expiration_too_long) {
  delete w_sub_cert_sha1_expiration_too_long_;
  w_sub_cert_sha1_expiration_too_long_ = w_sub_cert_sha1_expiration_too_long;
  if (w_sub_cert_sha1_expiration_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_sha1_expiration_too_long)
}

// .zsearch.LintResult n_subject_common_name_included = 166;
inline bool Lints::has_n_subject_common_name_included() const {
  return this != internal_default_instance() && n_subject_common_name_included_ != NULL;
}
inline void Lints::clear_n_subject_common_name_included() {
  if (GetArenaNoVirtual() == NULL && n_subject_common_name_included_ != NULL) delete n_subject_common_name_included_;
  n_subject_common_name_included_ = NULL;
}
inline const ::zsearch::LintResult& Lints::n_subject_common_name_included() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_subject_common_name_included)
  return n_subject_common_name_included_ != NULL ? *n_subject_common_name_included_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_n_subject_common_name_included() {
  
  if (n_subject_common_name_included_ == NULL) {
    n_subject_common_name_included_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_subject_common_name_included)
  return n_subject_common_name_included_;
}
inline ::zsearch::LintResult* Lints::release_n_subject_common_name_included() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_subject_common_name_included)
  
  ::zsearch::LintResult* temp = n_subject_common_name_included_;
  n_subject_common_name_included_ = NULL;
  return temp;
}
inline void Lints::set_allocated_n_subject_common_name_included(::zsearch::LintResult* n_subject_common_name_included) {
  delete n_subject_common_name_included_;
  n_subject_common_name_included_ = n_subject_common_name_included;
  if (n_subject_common_name_included) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_subject_common_name_included)
}

// .zsearch.LintResult e_subject_common_name_not_from_san = 167;
inline bool Lints::has_e_subject_common_name_not_from_san() const {
  return this != internal_default_instance() && e_subject_common_name_not_from_san_ != NULL;
}
inline void Lints::clear_e_subject_common_name_not_from_san() {
  if (GetArenaNoVirtual() == NULL && e_subject_common_name_not_from_san_ != NULL) delete e_subject_common_name_not_from_san_;
  e_subject_common_name_not_from_san_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_common_name_not_from_san() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_common_name_not_from_san)
  return e_subject_common_name_not_from_san_ != NULL ? *e_subject_common_name_not_from_san_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_common_name_not_from_san() {
  
  if (e_subject_common_name_not_from_san_ == NULL) {
    e_subject_common_name_not_from_san_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_common_name_not_from_san)
  return e_subject_common_name_not_from_san_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_common_name_not_from_san() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_common_name_not_from_san)
  
  ::zsearch::LintResult* temp = e_subject_common_name_not_from_san_;
  e_subject_common_name_not_from_san_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_common_name_not_from_san(::zsearch::LintResult* e_subject_common_name_not_from_san) {
  delete e_subject_common_name_not_from_san_;
  e_subject_common_name_not_from_san_ = e_subject_common_name_not_from_san;
  if (e_subject_common_name_not_from_san) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_common_name_not_from_san)
}

// .zsearch.LintResult e_subject_contains_noninformational_value = 168;
inline bool Lints::has_e_subject_contains_noninformational_value() const {
  return this != internal_default_instance() && e_subject_contains_noninformational_value_ != NULL;
}
inline void Lints::clear_e_subject_contains_noninformational_value() {
  if (GetArenaNoVirtual() == NULL && e_subject_contains_noninformational_value_ != NULL) delete e_subject_contains_noninformational_value_;
  e_subject_contains_noninformational_value_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_contains_noninformational_value() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_contains_noninformational_value)
  return e_subject_contains_noninformational_value_ != NULL ? *e_subject_contains_noninformational_value_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_contains_noninformational_value() {
  
  if (e_subject_contains_noninformational_value_ == NULL) {
    e_subject_contains_noninformational_value_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_contains_noninformational_value)
  return e_subject_contains_noninformational_value_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_contains_noninformational_value() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_contains_noninformational_value)
  
  ::zsearch::LintResult* temp = e_subject_contains_noninformational_value_;
  e_subject_contains_noninformational_value_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_contains_noninformational_value(::zsearch::LintResult* e_subject_contains_noninformational_value) {
  delete e_subject_contains_noninformational_value_;
  e_subject_contains_noninformational_value_ = e_subject_contains_noninformational_value;
  if (e_subject_contains_noninformational_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_contains_noninformational_value)
}

// .zsearch.LintResult e_subject_contains_reserved_ip = 169;
inline bool Lints::has_e_subject_contains_reserved_ip() const {
  return this != internal_default_instance() && e_subject_contains_reserved_ip_ != NULL;
}
inline void Lints::clear_e_subject_contains_reserved_ip() {
  if (GetArenaNoVirtual() == NULL && e_subject_contains_reserved_ip_ != NULL) delete e_subject_contains_reserved_ip_;
  e_subject_contains_reserved_ip_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_contains_reserved_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_contains_reserved_ip)
  return e_subject_contains_reserved_ip_ != NULL ? *e_subject_contains_reserved_ip_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_contains_reserved_ip() {
  
  if (e_subject_contains_reserved_ip_ == NULL) {
    e_subject_contains_reserved_ip_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_contains_reserved_ip)
  return e_subject_contains_reserved_ip_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_contains_reserved_ip() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_contains_reserved_ip)
  
  ::zsearch::LintResult* temp = e_subject_contains_reserved_ip_;
  e_subject_contains_reserved_ip_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_contains_reserved_ip(::zsearch::LintResult* e_subject_contains_reserved_ip) {
  delete e_subject_contains_reserved_ip_;
  e_subject_contains_reserved_ip_ = e_subject_contains_reserved_ip;
  if (e_subject_contains_reserved_ip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_contains_reserved_ip)
}

// .zsearch.LintResult e_subject_country_not_iso = 170;
inline bool Lints::has_e_subject_country_not_iso() const {
  return this != internal_default_instance() && e_subject_country_not_iso_ != NULL;
}
inline void Lints::clear_e_subject_country_not_iso() {
  if (GetArenaNoVirtual() == NULL && e_subject_country_not_iso_ != NULL) delete e_subject_country_not_iso_;
  e_subject_country_not_iso_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_country_not_iso() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_country_not_iso)
  return e_subject_country_not_iso_ != NULL ? *e_subject_country_not_iso_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_country_not_iso() {
  
  if (e_subject_country_not_iso_ == NULL) {
    e_subject_country_not_iso_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_country_not_iso)
  return e_subject_country_not_iso_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_country_not_iso() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_country_not_iso)
  
  ::zsearch::LintResult* temp = e_subject_country_not_iso_;
  e_subject_country_not_iso_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_country_not_iso(::zsearch::LintResult* e_subject_country_not_iso) {
  delete e_subject_country_not_iso_;
  e_subject_country_not_iso_ = e_subject_country_not_iso;
  if (e_subject_country_not_iso) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_country_not_iso)
}

// .zsearch.LintResult e_subject_empty_without_san = 171;
inline bool Lints::has_e_subject_empty_without_san() const {
  return this != internal_default_instance() && e_subject_empty_without_san_ != NULL;
}
inline void Lints::clear_e_subject_empty_without_san() {
  if (GetArenaNoVirtual() == NULL && e_subject_empty_without_san_ != NULL) delete e_subject_empty_without_san_;
  e_subject_empty_without_san_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_empty_without_san() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_empty_without_san)
  return e_subject_empty_without_san_ != NULL ? *e_subject_empty_without_san_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_empty_without_san() {
  
  if (e_subject_empty_without_san_ == NULL) {
    e_subject_empty_without_san_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_empty_without_san)
  return e_subject_empty_without_san_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_empty_without_san() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_empty_without_san)
  
  ::zsearch::LintResult* temp = e_subject_empty_without_san_;
  e_subject_empty_without_san_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_empty_without_san(::zsearch::LintResult* e_subject_empty_without_san) {
  delete e_subject_empty_without_san_;
  e_subject_empty_without_san_ = e_subject_empty_without_san;
  if (e_subject_empty_without_san) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_empty_without_san)
}

// .zsearch.LintResult e_subject_info_access_marked_critical = 172;
inline bool Lints::has_e_subject_info_access_marked_critical() const {
  return this != internal_default_instance() && e_subject_info_access_marked_critical_ != NULL;
}
inline void Lints::clear_e_subject_info_access_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_subject_info_access_marked_critical_ != NULL) delete e_subject_info_access_marked_critical_;
  e_subject_info_access_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_info_access_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_info_access_marked_critical)
  return e_subject_info_access_marked_critical_ != NULL ? *e_subject_info_access_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_info_access_marked_critical() {
  
  if (e_subject_info_access_marked_critical_ == NULL) {
    e_subject_info_access_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_info_access_marked_critical)
  return e_subject_info_access_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_info_access_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_info_access_marked_critical)
  
  ::zsearch::LintResult* temp = e_subject_info_access_marked_critical_;
  e_subject_info_access_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_info_access_marked_critical(::zsearch::LintResult* e_subject_info_access_marked_critical) {
  delete e_subject_info_access_marked_critical_;
  e_subject_info_access_marked_critical_ = e_subject_info_access_marked_critical;
  if (e_subject_info_access_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_info_access_marked_critical)
}

// .zsearch.LintResult e_subject_not_dn = 174;
inline bool Lints::has_e_subject_not_dn() const {
  return this != internal_default_instance() && e_subject_not_dn_ != NULL;
}
inline void Lints::clear_e_subject_not_dn() {
  if (GetArenaNoVirtual() == NULL && e_subject_not_dn_ != NULL) delete e_subject_not_dn_;
  e_subject_not_dn_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_not_dn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_not_dn)
  return e_subject_not_dn_ != NULL ? *e_subject_not_dn_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_not_dn() {
  
  if (e_subject_not_dn_ == NULL) {
    e_subject_not_dn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_not_dn)
  return e_subject_not_dn_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_not_dn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_not_dn)
  
  ::zsearch::LintResult* temp = e_subject_not_dn_;
  e_subject_not_dn_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_not_dn(::zsearch::LintResult* e_subject_not_dn) {
  delete e_subject_not_dn_;
  e_subject_not_dn_ = e_subject_not_dn;
  if (e_subject_not_dn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_not_dn)
}

// .zsearch.LintResult e_utc_time_does_not_include_seconds = 180;
inline bool Lints::has_e_utc_time_does_not_include_seconds() const {
  return this != internal_default_instance() && e_utc_time_does_not_include_seconds_ != NULL;
}
inline void Lints::clear_e_utc_time_does_not_include_seconds() {
  if (GetArenaNoVirtual() == NULL && e_utc_time_does_not_include_seconds_ != NULL) delete e_utc_time_does_not_include_seconds_;
  e_utc_time_does_not_include_seconds_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_utc_time_does_not_include_seconds() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_utc_time_does_not_include_seconds)
  return e_utc_time_does_not_include_seconds_ != NULL ? *e_utc_time_does_not_include_seconds_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_utc_time_does_not_include_seconds() {
  
  if (e_utc_time_does_not_include_seconds_ == NULL) {
    e_utc_time_does_not_include_seconds_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_utc_time_does_not_include_seconds)
  return e_utc_time_does_not_include_seconds_;
}
inline ::zsearch::LintResult* Lints::release_e_utc_time_does_not_include_seconds() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_utc_time_does_not_include_seconds)
  
  ::zsearch::LintResult* temp = e_utc_time_does_not_include_seconds_;
  e_utc_time_does_not_include_seconds_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_utc_time_does_not_include_seconds(::zsearch::LintResult* e_utc_time_does_not_include_seconds) {
  delete e_utc_time_does_not_include_seconds_;
  e_utc_time_does_not_include_seconds_ = e_utc_time_does_not_include_seconds;
  if (e_utc_time_does_not_include_seconds) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_utc_time_does_not_include_seconds)
}

// .zsearch.LintResult e_utc_time_not_in_zulu = 181;
inline bool Lints::has_e_utc_time_not_in_zulu() const {
  return this != internal_default_instance() && e_utc_time_not_in_zulu_ != NULL;
}
inline void Lints::clear_e_utc_time_not_in_zulu() {
  if (GetArenaNoVirtual() == NULL && e_utc_time_not_in_zulu_ != NULL) delete e_utc_time_not_in_zulu_;
  e_utc_time_not_in_zulu_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_utc_time_not_in_zulu() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_utc_time_not_in_zulu)
  return e_utc_time_not_in_zulu_ != NULL ? *e_utc_time_not_in_zulu_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_utc_time_not_in_zulu() {
  
  if (e_utc_time_not_in_zulu_ == NULL) {
    e_utc_time_not_in_zulu_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_utc_time_not_in_zulu)
  return e_utc_time_not_in_zulu_;
}
inline ::zsearch::LintResult* Lints::release_e_utc_time_not_in_zulu() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_utc_time_not_in_zulu)
  
  ::zsearch::LintResult* temp = e_utc_time_not_in_zulu_;
  e_utc_time_not_in_zulu_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_utc_time_not_in_zulu(::zsearch::LintResult* e_utc_time_not_in_zulu) {
  delete e_utc_time_not_in_zulu_;
  e_utc_time_not_in_zulu_ = e_utc_time_not_in_zulu;
  if (e_utc_time_not_in_zulu) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_utc_time_not_in_zulu)
}

// .zsearch.LintResult e_validity_time_not_positive = 182;
inline bool Lints::has_e_validity_time_not_positive() const {
  return this != internal_default_instance() && e_validity_time_not_positive_ != NULL;
}
inline void Lints::clear_e_validity_time_not_positive() {
  if (GetArenaNoVirtual() == NULL && e_validity_time_not_positive_ != NULL) delete e_validity_time_not_positive_;
  e_validity_time_not_positive_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_validity_time_not_positive() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_validity_time_not_positive)
  return e_validity_time_not_positive_ != NULL ? *e_validity_time_not_positive_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_validity_time_not_positive() {
  
  if (e_validity_time_not_positive_ == NULL) {
    e_validity_time_not_positive_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_validity_time_not_positive)
  return e_validity_time_not_positive_;
}
inline ::zsearch::LintResult* Lints::release_e_validity_time_not_positive() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_validity_time_not_positive)
  
  ::zsearch::LintResult* temp = e_validity_time_not_positive_;
  e_validity_time_not_positive_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_validity_time_not_positive(::zsearch::LintResult* e_validity_time_not_positive) {
  delete e_validity_time_not_positive_;
  e_validity_time_not_positive_ = e_validity_time_not_positive;
  if (e_validity_time_not_positive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_validity_time_not_positive)
}

// .zsearch.LintResult e_wrong_time_format_pre2050 = 183;
inline bool Lints::has_e_wrong_time_format_pre2050() const {
  return this != internal_default_instance() && e_wrong_time_format_pre2050_ != NULL;
}
inline void Lints::clear_e_wrong_time_format_pre2050() {
  if (GetArenaNoVirtual() == NULL && e_wrong_time_format_pre2050_ != NULL) delete e_wrong_time_format_pre2050_;
  e_wrong_time_format_pre2050_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_wrong_time_format_pre2050() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_wrong_time_format_pre2050)
  return e_wrong_time_format_pre2050_ != NULL ? *e_wrong_time_format_pre2050_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_wrong_time_format_pre2050() {
  
  if (e_wrong_time_format_pre2050_ == NULL) {
    e_wrong_time_format_pre2050_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_wrong_time_format_pre2050)
  return e_wrong_time_format_pre2050_;
}
inline ::zsearch::LintResult* Lints::release_e_wrong_time_format_pre2050() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_wrong_time_format_pre2050)
  
  ::zsearch::LintResult* temp = e_wrong_time_format_pre2050_;
  e_wrong_time_format_pre2050_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_wrong_time_format_pre2050(::zsearch::LintResult* e_wrong_time_format_pre2050) {
  delete e_wrong_time_format_pre2050_;
  e_wrong_time_format_pre2050_ = e_wrong_time_format_pre2050;
  if (e_wrong_time_format_pre2050) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_wrong_time_format_pre2050)
}

// .zsearch.LintResult e_rsa_no_public_key = 184;
inline bool Lints::has_e_rsa_no_public_key() const {
  return this != internal_default_instance() && e_rsa_no_public_key_ != NULL;
}
inline void Lints::clear_e_rsa_no_public_key() {
  if (GetArenaNoVirtual() == NULL && e_rsa_no_public_key_ != NULL) delete e_rsa_no_public_key_;
  e_rsa_no_public_key_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_rsa_no_public_key() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_rsa_no_public_key)
  return e_rsa_no_public_key_ != NULL ? *e_rsa_no_public_key_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_rsa_no_public_key() {
  
  if (e_rsa_no_public_key_ == NULL) {
    e_rsa_no_public_key_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_rsa_no_public_key)
  return e_rsa_no_public_key_;
}
inline ::zsearch::LintResult* Lints::release_e_rsa_no_public_key() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_rsa_no_public_key)
  
  ::zsearch::LintResult* temp = e_rsa_no_public_key_;
  e_rsa_no_public_key_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_rsa_no_public_key(::zsearch::LintResult* e_rsa_no_public_key) {
  delete e_rsa_no_public_key_;
  e_rsa_no_public_key_ = e_rsa_no_public_key;
  if (e_rsa_no_public_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_rsa_no_public_key)
}

// .zsearch.LintResult e_sub_cert_certificate_policies_missing = 185;
inline bool Lints::has_e_sub_cert_certificate_policies_missing() const {
  return this != internal_default_instance() && e_sub_cert_certificate_policies_missing_ != NULL;
}
inline void Lints::clear_e_sub_cert_certificate_policies_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_certificate_policies_missing_ != NULL) delete e_sub_cert_certificate_policies_missing_;
  e_sub_cert_certificate_policies_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_certificate_policies_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_certificate_policies_missing)
  return e_sub_cert_certificate_policies_missing_ != NULL ? *e_sub_cert_certificate_policies_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_certificate_policies_missing() {
  
  if (e_sub_cert_certificate_policies_missing_ == NULL) {
    e_sub_cert_certificate_policies_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_certificate_policies_missing)
  return e_sub_cert_certificate_policies_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_certificate_policies_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_certificate_policies_missing)
  
  ::zsearch::LintResult* temp = e_sub_cert_certificate_policies_missing_;
  e_sub_cert_certificate_policies_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_certificate_policies_missing(::zsearch::LintResult* e_sub_cert_certificate_policies_missing) {
  delete e_sub_cert_certificate_policies_missing_;
  e_sub_cert_certificate_policies_missing_ = e_sub_cert_certificate_policies_missing;
  if (e_sub_cert_certificate_policies_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_certificate_policies_missing)
}

// .zsearch.LintResult e_sub_cert_key_usage_crl_sign_bit_set = 186;
inline bool Lints::has_e_sub_cert_key_usage_crl_sign_bit_set() const {
  return this != internal_default_instance() && e_sub_cert_key_usage_crl_sign_bit_set_ != NULL;
}
inline void Lints::clear_e_sub_cert_key_usage_crl_sign_bit_set() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_key_usage_crl_sign_bit_set_ != NULL) delete e_sub_cert_key_usage_crl_sign_bit_set_;
  e_sub_cert_key_usage_crl_sign_bit_set_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_key_usage_crl_sign_bit_set() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
  return e_sub_cert_key_usage_crl_sign_bit_set_ != NULL ? *e_sub_cert_key_usage_crl_sign_bit_set_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_key_usage_crl_sign_bit_set() {
  
  if (e_sub_cert_key_usage_crl_sign_bit_set_ == NULL) {
    e_sub_cert_key_usage_crl_sign_bit_set_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
  return e_sub_cert_key_usage_crl_sign_bit_set_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_key_usage_crl_sign_bit_set() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
  
  ::zsearch::LintResult* temp = e_sub_cert_key_usage_crl_sign_bit_set_;
  e_sub_cert_key_usage_crl_sign_bit_set_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_key_usage_crl_sign_bit_set(::zsearch::LintResult* e_sub_cert_key_usage_crl_sign_bit_set) {
  delete e_sub_cert_key_usage_crl_sign_bit_set_;
  e_sub_cert_key_usage_crl_sign_bit_set_ = e_sub_cert_key_usage_crl_sign_bit_set;
  if (e_sub_cert_key_usage_crl_sign_bit_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_key_usage_crl_sign_bit_set)
}

// .zsearch.LintResult e_subject_common_name_max_length = 187;
inline bool Lints::has_e_subject_common_name_max_length() const {
  return this != internal_default_instance() && e_subject_common_name_max_length_ != NULL;
}
inline void Lints::clear_e_subject_common_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_common_name_max_length_ != NULL) delete e_subject_common_name_max_length_;
  e_subject_common_name_max_length_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_common_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_common_name_max_length)
  return e_subject_common_name_max_length_ != NULL ? *e_subject_common_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_common_name_max_length() {
  
  if (e_subject_common_name_max_length_ == NULL) {
    e_subject_common_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_common_name_max_length)
  return e_subject_common_name_max_length_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_common_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_common_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_common_name_max_length_;
  e_subject_common_name_max_length_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_common_name_max_length(::zsearch::LintResult* e_subject_common_name_max_length) {
  delete e_subject_common_name_max_length_;
  e_subject_common_name_max_length_ = e_subject_common_name_max_length;
  if (e_subject_common_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_common_name_max_length)
}

// .zsearch.LintResult e_subject_locality_name_max_length = 188;
inline bool Lints::has_e_subject_locality_name_max_length() const {
  return this != internal_default_instance() && e_subject_locality_name_max_length_ != NULL;
}
inline void Lints::clear_e_subject_locality_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_locality_name_max_length_ != NULL) delete e_subject_locality_name_max_length_;
  e_subject_locality_name_max_length_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_locality_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_locality_name_max_length)
  return e_subject_locality_name_max_length_ != NULL ? *e_subject_locality_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_locality_name_max_length() {
  
  if (e_subject_locality_name_max_length_ == NULL) {
    e_subject_locality_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_locality_name_max_length)
  return e_subject_locality_name_max_length_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_locality_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_locality_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_locality_name_max_length_;
  e_subject_locality_name_max_length_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_locality_name_max_length(::zsearch::LintResult* e_subject_locality_name_max_length) {
  delete e_subject_locality_name_max_length_;
  e_subject_locality_name_max_length_ = e_subject_locality_name_max_length;
  if (e_subject_locality_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_locality_name_max_length)
}

// .zsearch.LintResult e_subject_organization_name_max_length = 189;
inline bool Lints::has_e_subject_organization_name_max_length() const {
  return this != internal_default_instance() && e_subject_organization_name_max_length_ != NULL;
}
inline void Lints::clear_e_subject_organization_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_organization_name_max_length_ != NULL) delete e_subject_organization_name_max_length_;
  e_subject_organization_name_max_length_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_organization_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_organization_name_max_length)
  return e_subject_organization_name_max_length_ != NULL ? *e_subject_organization_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_organization_name_max_length() {
  
  if (e_subject_organization_name_max_length_ == NULL) {
    e_subject_organization_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_organization_name_max_length)
  return e_subject_organization_name_max_length_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_organization_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_organization_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_organization_name_max_length_;
  e_subject_organization_name_max_length_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_organization_name_max_length(::zsearch::LintResult* e_subject_organization_name_max_length) {
  delete e_subject_organization_name_max_length_;
  e_subject_organization_name_max_length_ = e_subject_organization_name_max_length;
  if (e_subject_organization_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_organization_name_max_length)
}

// .zsearch.LintResult e_subject_organizational_unit_name_max_length = 190;
inline bool Lints::has_e_subject_organizational_unit_name_max_length() const {
  return this != internal_default_instance() && e_subject_organizational_unit_name_max_length_ != NULL;
}
inline void Lints::clear_e_subject_organizational_unit_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_organizational_unit_name_max_length_ != NULL) delete e_subject_organizational_unit_name_max_length_;
  e_subject_organizational_unit_name_max_length_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_organizational_unit_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_organizational_unit_name_max_length)
  return e_subject_organizational_unit_name_max_length_ != NULL ? *e_subject_organizational_unit_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_organizational_unit_name_max_length() {
  
  if (e_subject_organizational_unit_name_max_length_ == NULL) {
    e_subject_organizational_unit_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_organizational_unit_name_max_length)
  return e_subject_organizational_unit_name_max_length_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_organizational_unit_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_organizational_unit_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_organizational_unit_name_max_length_;
  e_subject_organizational_unit_name_max_length_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_organizational_unit_name_max_length(::zsearch::LintResult* e_subject_organizational_unit_name_max_length) {
  delete e_subject_organizational_unit_name_max_length_;
  e_subject_organizational_unit_name_max_length_ = e_subject_organizational_unit_name_max_length;
  if (e_subject_organizational_unit_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_organizational_unit_name_max_length)
}

// .zsearch.LintResult e_subject_state_name_max_length = 191;
inline bool Lints::has_e_subject_state_name_max_length() const {
  return this != internal_default_instance() && e_subject_state_name_max_length_ != NULL;
}
inline void Lints::clear_e_subject_state_name_max_length() {
  if (GetArenaNoVirtual() == NULL && e_subject_state_name_max_length_ != NULL) delete e_subject_state_name_max_length_;
  e_subject_state_name_max_length_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_subject_state_name_max_length() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_subject_state_name_max_length)
  return e_subject_state_name_max_length_ != NULL ? *e_subject_state_name_max_length_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_subject_state_name_max_length() {
  
  if (e_subject_state_name_max_length_ == NULL) {
    e_subject_state_name_max_length_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_subject_state_name_max_length)
  return e_subject_state_name_max_length_;
}
inline ::zsearch::LintResult* Lints::release_e_subject_state_name_max_length() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_subject_state_name_max_length)
  
  ::zsearch::LintResult* temp = e_subject_state_name_max_length_;
  e_subject_state_name_max_length_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_subject_state_name_max_length(::zsearch::LintResult* e_subject_state_name_max_length) {
  delete e_subject_state_name_max_length_;
  e_subject_state_name_max_length_ = e_subject_state_name_max_length;
  if (e_subject_state_name_max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_subject_state_name_max_length)
}

// .zsearch.LintResult w_multiple_subject_rdn = 192;
inline bool Lints::has_w_multiple_subject_rdn() const {
  return this != internal_default_instance() && w_multiple_subject_rdn_ != NULL;
}
inline void Lints::clear_w_multiple_subject_rdn() {
  if (GetArenaNoVirtual() == NULL && w_multiple_subject_rdn_ != NULL) delete w_multiple_subject_rdn_;
  w_multiple_subject_rdn_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_multiple_subject_rdn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_multiple_subject_rdn)
  return w_multiple_subject_rdn_ != NULL ? *w_multiple_subject_rdn_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_multiple_subject_rdn() {
  
  if (w_multiple_subject_rdn_ == NULL) {
    w_multiple_subject_rdn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_multiple_subject_rdn)
  return w_multiple_subject_rdn_;
}
inline ::zsearch::LintResult* Lints::release_w_multiple_subject_rdn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_multiple_subject_rdn)
  
  ::zsearch::LintResult* temp = w_multiple_subject_rdn_;
  w_multiple_subject_rdn_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_multiple_subject_rdn(::zsearch::LintResult* w_multiple_subject_rdn) {
  delete w_multiple_subject_rdn_;
  w_multiple_subject_rdn_ = w_multiple_subject_rdn;
  if (w_multiple_subject_rdn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_multiple_subject_rdn)
}

// .zsearch.LintResult w_multiple_issuer_rdn = 193;
inline bool Lints::has_w_multiple_issuer_rdn() const {
  return this != internal_default_instance() && w_multiple_issuer_rdn_ != NULL;
}
inline void Lints::clear_w_multiple_issuer_rdn() {
  if (GetArenaNoVirtual() == NULL && w_multiple_issuer_rdn_ != NULL) delete w_multiple_issuer_rdn_;
  w_multiple_issuer_rdn_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_multiple_issuer_rdn() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_multiple_issuer_rdn)
  return w_multiple_issuer_rdn_ != NULL ? *w_multiple_issuer_rdn_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_multiple_issuer_rdn() {
  
  if (w_multiple_issuer_rdn_ == NULL) {
    w_multiple_issuer_rdn_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_multiple_issuer_rdn)
  return w_multiple_issuer_rdn_;
}
inline ::zsearch::LintResult* Lints::release_w_multiple_issuer_rdn() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_multiple_issuer_rdn)
  
  ::zsearch::LintResult* temp = w_multiple_issuer_rdn_;
  w_multiple_issuer_rdn_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_multiple_issuer_rdn(::zsearch::LintResult* w_multiple_issuer_rdn) {
  delete w_multiple_issuer_rdn_;
  w_multiple_issuer_rdn_ = w_multiple_issuer_rdn;
  if (w_multiple_issuer_rdn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_multiple_issuer_rdn)
}

// .zsearch.LintResult w_issuer_dn_trailing_whitespace = 194;
inline bool Lints::has_w_issuer_dn_trailing_whitespace() const {
  return this != internal_default_instance() && w_issuer_dn_trailing_whitespace_ != NULL;
}
inline void Lints::clear_w_issuer_dn_trailing_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_issuer_dn_trailing_whitespace_ != NULL) delete w_issuer_dn_trailing_whitespace_;
  w_issuer_dn_trailing_whitespace_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_issuer_dn_trailing_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_issuer_dn_trailing_whitespace)
  return w_issuer_dn_trailing_whitespace_ != NULL ? *w_issuer_dn_trailing_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_issuer_dn_trailing_whitespace() {
  
  if (w_issuer_dn_trailing_whitespace_ == NULL) {
    w_issuer_dn_trailing_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_issuer_dn_trailing_whitespace)
  return w_issuer_dn_trailing_whitespace_;
}
inline ::zsearch::LintResult* Lints::release_w_issuer_dn_trailing_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_issuer_dn_trailing_whitespace)
  
  ::zsearch::LintResult* temp = w_issuer_dn_trailing_whitespace_;
  w_issuer_dn_trailing_whitespace_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_issuer_dn_trailing_whitespace(::zsearch::LintResult* w_issuer_dn_trailing_whitespace) {
  delete w_issuer_dn_trailing_whitespace_;
  w_issuer_dn_trailing_whitespace_ = w_issuer_dn_trailing_whitespace;
  if (w_issuer_dn_trailing_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_issuer_dn_trailing_whitespace)
}

// .zsearch.LintResult w_issuer_dn_leading_whitespace = 195;
inline bool Lints::has_w_issuer_dn_leading_whitespace() const {
  return this != internal_default_instance() && w_issuer_dn_leading_whitespace_ != NULL;
}
inline void Lints::clear_w_issuer_dn_leading_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_issuer_dn_leading_whitespace_ != NULL) delete w_issuer_dn_leading_whitespace_;
  w_issuer_dn_leading_whitespace_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_issuer_dn_leading_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_issuer_dn_leading_whitespace)
  return w_issuer_dn_leading_whitespace_ != NULL ? *w_issuer_dn_leading_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_issuer_dn_leading_whitespace() {
  
  if (w_issuer_dn_leading_whitespace_ == NULL) {
    w_issuer_dn_leading_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_issuer_dn_leading_whitespace)
  return w_issuer_dn_leading_whitespace_;
}
inline ::zsearch::LintResult* Lints::release_w_issuer_dn_leading_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_issuer_dn_leading_whitespace)
  
  ::zsearch::LintResult* temp = w_issuer_dn_leading_whitespace_;
  w_issuer_dn_leading_whitespace_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_issuer_dn_leading_whitespace(::zsearch::LintResult* w_issuer_dn_leading_whitespace) {
  delete w_issuer_dn_leading_whitespace_;
  w_issuer_dn_leading_whitespace_ = w_issuer_dn_leading_whitespace;
  if (w_issuer_dn_leading_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_issuer_dn_leading_whitespace)
}

// .zsearch.LintResult w_subject_dn_trailing_whitespace = 196;
inline bool Lints::has_w_subject_dn_trailing_whitespace() const {
  return this != internal_default_instance() && w_subject_dn_trailing_whitespace_ != NULL;
}
inline void Lints::clear_w_subject_dn_trailing_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_subject_dn_trailing_whitespace_ != NULL) delete w_subject_dn_trailing_whitespace_;
  w_subject_dn_trailing_whitespace_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_subject_dn_trailing_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_subject_dn_trailing_whitespace)
  return w_subject_dn_trailing_whitespace_ != NULL ? *w_subject_dn_trailing_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_subject_dn_trailing_whitespace() {
  
  if (w_subject_dn_trailing_whitespace_ == NULL) {
    w_subject_dn_trailing_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_subject_dn_trailing_whitespace)
  return w_subject_dn_trailing_whitespace_;
}
inline ::zsearch::LintResult* Lints::release_w_subject_dn_trailing_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_subject_dn_trailing_whitespace)
  
  ::zsearch::LintResult* temp = w_subject_dn_trailing_whitespace_;
  w_subject_dn_trailing_whitespace_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_subject_dn_trailing_whitespace(::zsearch::LintResult* w_subject_dn_trailing_whitespace) {
  delete w_subject_dn_trailing_whitespace_;
  w_subject_dn_trailing_whitespace_ = w_subject_dn_trailing_whitespace;
  if (w_subject_dn_trailing_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_subject_dn_trailing_whitespace)
}

// .zsearch.LintResult w_subject_dn_leading_whitespace = 197;
inline bool Lints::has_w_subject_dn_leading_whitespace() const {
  return this != internal_default_instance() && w_subject_dn_leading_whitespace_ != NULL;
}
inline void Lints::clear_w_subject_dn_leading_whitespace() {
  if (GetArenaNoVirtual() == NULL && w_subject_dn_leading_whitespace_ != NULL) delete w_subject_dn_leading_whitespace_;
  w_subject_dn_leading_whitespace_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_subject_dn_leading_whitespace() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_subject_dn_leading_whitespace)
  return w_subject_dn_leading_whitespace_ != NULL ? *w_subject_dn_leading_whitespace_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_subject_dn_leading_whitespace() {
  
  if (w_subject_dn_leading_whitespace_ == NULL) {
    w_subject_dn_leading_whitespace_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_subject_dn_leading_whitespace)
  return w_subject_dn_leading_whitespace_;
}
inline ::zsearch::LintResult* Lints::release_w_subject_dn_leading_whitespace() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_subject_dn_leading_whitespace)
  
  ::zsearch::LintResult* temp = w_subject_dn_leading_whitespace_;
  w_subject_dn_leading_whitespace_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_subject_dn_leading_whitespace(::zsearch::LintResult* w_subject_dn_leading_whitespace) {
  delete w_subject_dn_leading_whitespace_;
  w_subject_dn_leading_whitespace_ = w_subject_dn_leading_whitespace;
  if (w_subject_dn_leading_whitespace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_subject_dn_leading_whitespace)
}

// .zsearch.LintResult e_sub_cert_locality_name_must_appear = 198;
inline bool Lints::has_e_sub_cert_locality_name_must_appear() const {
  return this != internal_default_instance() && e_sub_cert_locality_name_must_appear_ != NULL;
}
inline void Lints::clear_e_sub_cert_locality_name_must_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_locality_name_must_appear_ != NULL) delete e_sub_cert_locality_name_must_appear_;
  e_sub_cert_locality_name_must_appear_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_locality_name_must_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_locality_name_must_appear)
  return e_sub_cert_locality_name_must_appear_ != NULL ? *e_sub_cert_locality_name_must_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_locality_name_must_appear() {
  
  if (e_sub_cert_locality_name_must_appear_ == NULL) {
    e_sub_cert_locality_name_must_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_locality_name_must_appear)
  return e_sub_cert_locality_name_must_appear_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_locality_name_must_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_locality_name_must_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_locality_name_must_appear_;
  e_sub_cert_locality_name_must_appear_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_locality_name_must_appear(::zsearch::LintResult* e_sub_cert_locality_name_must_appear) {
  delete e_sub_cert_locality_name_must_appear_;
  e_sub_cert_locality_name_must_appear_ = e_sub_cert_locality_name_must_appear;
  if (e_sub_cert_locality_name_must_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_locality_name_must_appear)
}

// .zsearch.LintResult e_signature_algorithm_not_supported = 199;
inline bool Lints::has_e_signature_algorithm_not_supported() const {
  return this != internal_default_instance() && e_signature_algorithm_not_supported_ != NULL;
}
inline void Lints::clear_e_signature_algorithm_not_supported() {
  if (GetArenaNoVirtual() == NULL && e_signature_algorithm_not_supported_ != NULL) delete e_signature_algorithm_not_supported_;
  e_signature_algorithm_not_supported_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_signature_algorithm_not_supported() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_signature_algorithm_not_supported)
  return e_signature_algorithm_not_supported_ != NULL ? *e_signature_algorithm_not_supported_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_signature_algorithm_not_supported() {
  
  if (e_signature_algorithm_not_supported_ == NULL) {
    e_signature_algorithm_not_supported_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_signature_algorithm_not_supported)
  return e_signature_algorithm_not_supported_;
}
inline ::zsearch::LintResult* Lints::release_e_signature_algorithm_not_supported() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_signature_algorithm_not_supported)
  
  ::zsearch::LintResult* temp = e_signature_algorithm_not_supported_;
  e_signature_algorithm_not_supported_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_signature_algorithm_not_supported(::zsearch::LintResult* e_signature_algorithm_not_supported) {
  delete e_signature_algorithm_not_supported_;
  e_signature_algorithm_not_supported_ = e_signature_algorithm_not_supported;
  if (e_signature_algorithm_not_supported) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_signature_algorithm_not_supported)
}

// .zsearch.LintResult e_dnsname_hyphen_in_sld = 200;
inline bool Lints::has_e_dnsname_hyphen_in_sld() const {
  return this != internal_default_instance() && e_dnsname_hyphen_in_sld_ != NULL;
}
inline void Lints::clear_e_dnsname_hyphen_in_sld() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_hyphen_in_sld_ != NULL) delete e_dnsname_hyphen_in_sld_;
  e_dnsname_hyphen_in_sld_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_hyphen_in_sld() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_hyphen_in_sld)
  return e_dnsname_hyphen_in_sld_ != NULL ? *e_dnsname_hyphen_in_sld_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_hyphen_in_sld() {
  
  if (e_dnsname_hyphen_in_sld_ == NULL) {
    e_dnsname_hyphen_in_sld_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_hyphen_in_sld)
  return e_dnsname_hyphen_in_sld_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_hyphen_in_sld() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_hyphen_in_sld)
  
  ::zsearch::LintResult* temp = e_dnsname_hyphen_in_sld_;
  e_dnsname_hyphen_in_sld_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_hyphen_in_sld(::zsearch::LintResult* e_dnsname_hyphen_in_sld) {
  delete e_dnsname_hyphen_in_sld_;
  e_dnsname_hyphen_in_sld_ = e_dnsname_hyphen_in_sld;
  if (e_dnsname_hyphen_in_sld) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_hyphen_in_sld)
}

// .zsearch.LintResult e_dsa_correct_order_in_subgroup = 201;
inline bool Lints::has_e_dsa_correct_order_in_subgroup() const {
  return this != internal_default_instance() && e_dsa_correct_order_in_subgroup_ != NULL;
}
inline void Lints::clear_e_dsa_correct_order_in_subgroup() {
  if (GetArenaNoVirtual() == NULL && e_dsa_correct_order_in_subgroup_ != NULL) delete e_dsa_correct_order_in_subgroup_;
  e_dsa_correct_order_in_subgroup_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dsa_correct_order_in_subgroup() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_correct_order_in_subgroup)
  return e_dsa_correct_order_in_subgroup_ != NULL ? *e_dsa_correct_order_in_subgroup_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dsa_correct_order_in_subgroup() {
  
  if (e_dsa_correct_order_in_subgroup_ == NULL) {
    e_dsa_correct_order_in_subgroup_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_correct_order_in_subgroup)
  return e_dsa_correct_order_in_subgroup_;
}
inline ::zsearch::LintResult* Lints::release_e_dsa_correct_order_in_subgroup() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_correct_order_in_subgroup)
  
  ::zsearch::LintResult* temp = e_dsa_correct_order_in_subgroup_;
  e_dsa_correct_order_in_subgroup_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dsa_correct_order_in_subgroup(::zsearch::LintResult* e_dsa_correct_order_in_subgroup) {
  delete e_dsa_correct_order_in_subgroup_;
  e_dsa_correct_order_in_subgroup_ = e_dsa_correct_order_in_subgroup;
  if (e_dsa_correct_order_in_subgroup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_correct_order_in_subgroup)
}

// .zsearch.LintResult n_sub_ca_eku_not_technically_constrained = 202;
inline bool Lints::has_n_sub_ca_eku_not_technically_constrained() const {
  return this != internal_default_instance() && n_sub_ca_eku_not_technically_constrained_ != NULL;
}
inline void Lints::clear_n_sub_ca_eku_not_technically_constrained() {
  if (GetArenaNoVirtual() == NULL && n_sub_ca_eku_not_technically_constrained_ != NULL) delete n_sub_ca_eku_not_technically_constrained_;
  n_sub_ca_eku_not_technically_constrained_ = NULL;
}
inline const ::zsearch::LintResult& Lints::n_sub_ca_eku_not_technically_constrained() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
  return n_sub_ca_eku_not_technically_constrained_ != NULL ? *n_sub_ca_eku_not_technically_constrained_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_n_sub_ca_eku_not_technically_constrained() {
  
  if (n_sub_ca_eku_not_technically_constrained_ == NULL) {
    n_sub_ca_eku_not_technically_constrained_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
  return n_sub_ca_eku_not_technically_constrained_;
}
inline ::zsearch::LintResult* Lints::release_n_sub_ca_eku_not_technically_constrained() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
  
  ::zsearch::LintResult* temp = n_sub_ca_eku_not_technically_constrained_;
  n_sub_ca_eku_not_technically_constrained_ = NULL;
  return temp;
}
inline void Lints::set_allocated_n_sub_ca_eku_not_technically_constrained(::zsearch::LintResult* n_sub_ca_eku_not_technically_constrained) {
  delete n_sub_ca_eku_not_technically_constrained_;
  n_sub_ca_eku_not_technically_constrained_ = n_sub_ca_eku_not_technically_constrained;
  if (n_sub_ca_eku_not_technically_constrained) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_sub_ca_eku_not_technically_constrained)
}

// .zsearch.LintResult e_dnsname_empty_label = 203;
inline bool Lints::has_e_dnsname_empty_label() const {
  return this != internal_default_instance() && e_dnsname_empty_label_ != NULL;
}
inline void Lints::clear_e_dnsname_empty_label() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_empty_label_ != NULL) delete e_dnsname_empty_label_;
  e_dnsname_empty_label_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_empty_label() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_empty_label)
  return e_dnsname_empty_label_ != NULL ? *e_dnsname_empty_label_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_empty_label() {
  
  if (e_dnsname_empty_label_ == NULL) {
    e_dnsname_empty_label_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_empty_label)
  return e_dnsname_empty_label_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_empty_label() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_empty_label)
  
  ::zsearch::LintResult* temp = e_dnsname_empty_label_;
  e_dnsname_empty_label_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_empty_label(::zsearch::LintResult* e_dnsname_empty_label) {
  delete e_dnsname_empty_label_;
  e_dnsname_empty_label_ = e_dnsname_empty_label;
  if (e_dnsname_empty_label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_empty_label)
}

// .zsearch.LintResult e_ca_common_name_missing = 204;
inline bool Lints::has_e_ca_common_name_missing() const {
  return this != internal_default_instance() && e_ca_common_name_missing_ != NULL;
}
inline void Lints::clear_e_ca_common_name_missing() {
  if (GetArenaNoVirtual() == NULL && e_ca_common_name_missing_ != NULL) delete e_ca_common_name_missing_;
  e_ca_common_name_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_common_name_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_common_name_missing)
  return e_ca_common_name_missing_ != NULL ? *e_ca_common_name_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_common_name_missing() {
  
  if (e_ca_common_name_missing_ == NULL) {
    e_ca_common_name_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_common_name_missing)
  return e_ca_common_name_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_common_name_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_common_name_missing)
  
  ::zsearch::LintResult* temp = e_ca_common_name_missing_;
  e_ca_common_name_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_common_name_missing(::zsearch::LintResult* e_ca_common_name_missing) {
  delete e_ca_common_name_missing_;
  e_ca_common_name_missing_ = e_ca_common_name_missing;
  if (e_ca_common_name_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_common_name_missing)
}

// .zsearch.LintResult e_dnsname_wildcard_only_in_left_label = 205;
inline bool Lints::has_e_dnsname_wildcard_only_in_left_label() const {
  return this != internal_default_instance() && e_dnsname_wildcard_only_in_left_label_ != NULL;
}
inline void Lints::clear_e_dnsname_wildcard_only_in_left_label() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_wildcard_only_in_left_label_ != NULL) delete e_dnsname_wildcard_only_in_left_label_;
  e_dnsname_wildcard_only_in_left_label_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_wildcard_only_in_left_label() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
  return e_dnsname_wildcard_only_in_left_label_ != NULL ? *e_dnsname_wildcard_only_in_left_label_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_wildcard_only_in_left_label() {
  
  if (e_dnsname_wildcard_only_in_left_label_ == NULL) {
    e_dnsname_wildcard_only_in_left_label_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
  return e_dnsname_wildcard_only_in_left_label_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_wildcard_only_in_left_label() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
  
  ::zsearch::LintResult* temp = e_dnsname_wildcard_only_in_left_label_;
  e_dnsname_wildcard_only_in_left_label_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_wildcard_only_in_left_label(::zsearch::LintResult* e_dnsname_wildcard_only_in_left_label) {
  delete e_dnsname_wildcard_only_in_left_label_;
  e_dnsname_wildcard_only_in_left_label_ = e_dnsname_wildcard_only_in_left_label;
  if (e_dnsname_wildcard_only_in_left_label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_wildcard_only_in_left_label)
}

// .zsearch.LintResult e_sub_cert_valid_time_too_long = 206;
inline bool Lints::has_e_sub_cert_valid_time_too_long() const {
  return this != internal_default_instance() && e_sub_cert_valid_time_too_long_ != NULL;
}
inline void Lints::clear_e_sub_cert_valid_time_too_long() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_valid_time_too_long_ != NULL) delete e_sub_cert_valid_time_too_long_;
  e_sub_cert_valid_time_too_long_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_valid_time_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_valid_time_too_long)
  return e_sub_cert_valid_time_too_long_ != NULL ? *e_sub_cert_valid_time_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_valid_time_too_long() {
  
  if (e_sub_cert_valid_time_too_long_ == NULL) {
    e_sub_cert_valid_time_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_valid_time_too_long)
  return e_sub_cert_valid_time_too_long_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_valid_time_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_valid_time_too_long)
  
  ::zsearch::LintResult* temp = e_sub_cert_valid_time_too_long_;
  e_sub_cert_valid_time_too_long_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_valid_time_too_long(::zsearch::LintResult* e_sub_cert_valid_time_too_long) {
  delete e_sub_cert_valid_time_too_long_;
  e_sub_cert_valid_time_too_long_ = e_sub_cert_valid_time_too_long;
  if (e_sub_cert_valid_time_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_valid_time_too_long)
}

// .zsearch.LintResult e_dnsname_left_label_wildcard_correct = 207;
inline bool Lints::has_e_dnsname_left_label_wildcard_correct() const {
  return this != internal_default_instance() && e_dnsname_left_label_wildcard_correct_ != NULL;
}
inline void Lints::clear_e_dnsname_left_label_wildcard_correct() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_left_label_wildcard_correct_ != NULL) delete e_dnsname_left_label_wildcard_correct_;
  e_dnsname_left_label_wildcard_correct_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_left_label_wildcard_correct() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
  return e_dnsname_left_label_wildcard_correct_ != NULL ? *e_dnsname_left_label_wildcard_correct_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_left_label_wildcard_correct() {
  
  if (e_dnsname_left_label_wildcard_correct_ == NULL) {
    e_dnsname_left_label_wildcard_correct_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
  return e_dnsname_left_label_wildcard_correct_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_left_label_wildcard_correct() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
  
  ::zsearch::LintResult* temp = e_dnsname_left_label_wildcard_correct_;
  e_dnsname_left_label_wildcard_correct_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_left_label_wildcard_correct(::zsearch::LintResult* e_dnsname_left_label_wildcard_correct) {
  delete e_dnsname_left_label_wildcard_correct_;
  e_dnsname_left_label_wildcard_correct_ = e_dnsname_left_label_wildcard_correct;
  if (e_dnsname_left_label_wildcard_correct) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_left_label_wildcard_correct)
}

// .zsearch.LintResult w_serial_number_low_entropy = 208;
inline bool Lints::has_w_serial_number_low_entropy() const {
  return this != internal_default_instance() && w_serial_number_low_entropy_ != NULL;
}
inline void Lints::clear_w_serial_number_low_entropy() {
  if (GetArenaNoVirtual() == NULL && w_serial_number_low_entropy_ != NULL) delete w_serial_number_low_entropy_;
  w_serial_number_low_entropy_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_serial_number_low_entropy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_serial_number_low_entropy)
  return w_serial_number_low_entropy_ != NULL ? *w_serial_number_low_entropy_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_serial_number_low_entropy() {
  
  if (w_serial_number_low_entropy_ == NULL) {
    w_serial_number_low_entropy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_serial_number_low_entropy)
  return w_serial_number_low_entropy_;
}
inline ::zsearch::LintResult* Lints::release_w_serial_number_low_entropy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_serial_number_low_entropy)
  
  ::zsearch::LintResult* temp = w_serial_number_low_entropy_;
  w_serial_number_low_entropy_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_serial_number_low_entropy(::zsearch::LintResult* w_serial_number_low_entropy) {
  delete w_serial_number_low_entropy_;
  w_serial_number_low_entropy_ = w_serial_number_low_entropy;
  if (w_serial_number_low_entropy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_serial_number_low_entropy)
}

// .zsearch.LintResult e_dnsname_label_too_long = 209;
inline bool Lints::has_e_dnsname_label_too_long() const {
  return this != internal_default_instance() && e_dnsname_label_too_long_ != NULL;
}
inline void Lints::clear_e_dnsname_label_too_long() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_label_too_long_ != NULL) delete e_dnsname_label_too_long_;
  e_dnsname_label_too_long_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_label_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_label_too_long)
  return e_dnsname_label_too_long_ != NULL ? *e_dnsname_label_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_label_too_long() {
  
  if (e_dnsname_label_too_long_ == NULL) {
    e_dnsname_label_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_label_too_long)
  return e_dnsname_label_too_long_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_label_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_label_too_long)
  
  ::zsearch::LintResult* temp = e_dnsname_label_too_long_;
  e_dnsname_label_too_long_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_label_too_long(::zsearch::LintResult* e_dnsname_label_too_long) {
  delete e_dnsname_label_too_long_;
  e_dnsname_label_too_long_ = e_dnsname_label_too_long;
  if (e_dnsname_label_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_label_too_long)
}

// .zsearch.LintResult e_root_ca_key_usage_present = 210;
inline bool Lints::has_e_root_ca_key_usage_present() const {
  return this != internal_default_instance() && e_root_ca_key_usage_present_ != NULL;
}
inline void Lints::clear_e_root_ca_key_usage_present() {
  if (GetArenaNoVirtual() == NULL && e_root_ca_key_usage_present_ != NULL) delete e_root_ca_key_usage_present_;
  e_root_ca_key_usage_present_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_root_ca_key_usage_present() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_root_ca_key_usage_present)
  return e_root_ca_key_usage_present_ != NULL ? *e_root_ca_key_usage_present_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_root_ca_key_usage_present() {
  
  if (e_root_ca_key_usage_present_ == NULL) {
    e_root_ca_key_usage_present_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_root_ca_key_usage_present)
  return e_root_ca_key_usage_present_;
}
inline ::zsearch::LintResult* Lints::release_e_root_ca_key_usage_present() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_root_ca_key_usage_present)
  
  ::zsearch::LintResult* temp = e_root_ca_key_usage_present_;
  e_root_ca_key_usage_present_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_root_ca_key_usage_present(::zsearch::LintResult* e_root_ca_key_usage_present) {
  delete e_root_ca_key_usage_present_;
  e_root_ca_key_usage_present_ = e_root_ca_key_usage_present;
  if (e_root_ca_key_usage_present) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_root_ca_key_usage_present)
}

// .zsearch.LintResult w_dnsname_wildcard_left_of_public_suffix = 211;
inline bool Lints::has_w_dnsname_wildcard_left_of_public_suffix() const {
  return this != internal_default_instance() && w_dnsname_wildcard_left_of_public_suffix_ != NULL;
}
inline void Lints::clear_w_dnsname_wildcard_left_of_public_suffix() {
  if (GetArenaNoVirtual() == NULL && w_dnsname_wildcard_left_of_public_suffix_ != NULL) delete w_dnsname_wildcard_left_of_public_suffix_;
  w_dnsname_wildcard_left_of_public_suffix_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_dnsname_wildcard_left_of_public_suffix() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
  return w_dnsname_wildcard_left_of_public_suffix_ != NULL ? *w_dnsname_wildcard_left_of_public_suffix_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_dnsname_wildcard_left_of_public_suffix() {
  
  if (w_dnsname_wildcard_left_of_public_suffix_ == NULL) {
    w_dnsname_wildcard_left_of_public_suffix_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
  return w_dnsname_wildcard_left_of_public_suffix_;
}
inline ::zsearch::LintResult* Lints::release_w_dnsname_wildcard_left_of_public_suffix() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
  
  ::zsearch::LintResult* temp = w_dnsname_wildcard_left_of_public_suffix_;
  w_dnsname_wildcard_left_of_public_suffix_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_dnsname_wildcard_left_of_public_suffix(::zsearch::LintResult* w_dnsname_wildcard_left_of_public_suffix) {
  delete w_dnsname_wildcard_left_of_public_suffix_;
  w_dnsname_wildcard_left_of_public_suffix_ = w_dnsname_wildcard_left_of_public_suffix;
  if (w_dnsname_wildcard_left_of_public_suffix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_dnsname_wildcard_left_of_public_suffix)
}

// .zsearch.LintResult e_international_dns_name_not_unicode = 212;
inline bool Lints::has_e_international_dns_name_not_unicode() const {
  return this != internal_default_instance() && e_international_dns_name_not_unicode_ != NULL;
}
inline void Lints::clear_e_international_dns_name_not_unicode() {
  if (GetArenaNoVirtual() == NULL && e_international_dns_name_not_unicode_ != NULL) delete e_international_dns_name_not_unicode_;
  e_international_dns_name_not_unicode_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_international_dns_name_not_unicode() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_international_dns_name_not_unicode)
  return e_international_dns_name_not_unicode_ != NULL ? *e_international_dns_name_not_unicode_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_international_dns_name_not_unicode() {
  
  if (e_international_dns_name_not_unicode_ == NULL) {
    e_international_dns_name_not_unicode_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_international_dns_name_not_unicode)
  return e_international_dns_name_not_unicode_;
}
inline ::zsearch::LintResult* Lints::release_e_international_dns_name_not_unicode() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_international_dns_name_not_unicode)
  
  ::zsearch::LintResult* temp = e_international_dns_name_not_unicode_;
  e_international_dns_name_not_unicode_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_international_dns_name_not_unicode(::zsearch::LintResult* e_international_dns_name_not_unicode) {
  delete e_international_dns_name_not_unicode_;
  e_international_dns_name_not_unicode_ = e_international_dns_name_not_unicode;
  if (e_international_dns_name_not_unicode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_international_dns_name_not_unicode)
}

// .zsearch.LintResult w_dnsname_underscore_in_trd = 213;
inline bool Lints::has_w_dnsname_underscore_in_trd() const {
  return this != internal_default_instance() && w_dnsname_underscore_in_trd_ != NULL;
}
inline void Lints::clear_w_dnsname_underscore_in_trd() {
  if (GetArenaNoVirtual() == NULL && w_dnsname_underscore_in_trd_ != NULL) delete w_dnsname_underscore_in_trd_;
  w_dnsname_underscore_in_trd_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_dnsname_underscore_in_trd() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_dnsname_underscore_in_trd)
  return w_dnsname_underscore_in_trd_ != NULL ? *w_dnsname_underscore_in_trd_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_dnsname_underscore_in_trd() {
  
  if (w_dnsname_underscore_in_trd_ == NULL) {
    w_dnsname_underscore_in_trd_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_dnsname_underscore_in_trd)
  return w_dnsname_underscore_in_trd_;
}
inline ::zsearch::LintResult* Lints::release_w_dnsname_underscore_in_trd() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_dnsname_underscore_in_trd)
  
  ::zsearch::LintResult* temp = w_dnsname_underscore_in_trd_;
  w_dnsname_underscore_in_trd_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_dnsname_underscore_in_trd(::zsearch::LintResult* w_dnsname_underscore_in_trd) {
  delete w_dnsname_underscore_in_trd_;
  w_dnsname_underscore_in_trd_ = w_dnsname_underscore_in_trd;
  if (w_dnsname_underscore_in_trd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_dnsname_underscore_in_trd)
}

// .zsearch.LintResult w_sub_cert_aia_does_not_contain_issuing_ca_url = 214;
inline bool Lints::has_w_sub_cert_aia_does_not_contain_issuing_ca_url() const {
  return this != internal_default_instance() && w_sub_cert_aia_does_not_contain_issuing_ca_url_ != NULL;
}
inline void Lints::clear_w_sub_cert_aia_does_not_contain_issuing_ca_url() {
  if (GetArenaNoVirtual() == NULL && w_sub_cert_aia_does_not_contain_issuing_ca_url_ != NULL) delete w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  w_sub_cert_aia_does_not_contain_issuing_ca_url_ = NULL;
}
inline const ::zsearch::LintResult& Lints::w_sub_cert_aia_does_not_contain_issuing_ca_url() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
  return w_sub_cert_aia_does_not_contain_issuing_ca_url_ != NULL ? *w_sub_cert_aia_does_not_contain_issuing_ca_url_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_w_sub_cert_aia_does_not_contain_issuing_ca_url() {
  
  if (w_sub_cert_aia_does_not_contain_issuing_ca_url_ == NULL) {
    w_sub_cert_aia_does_not_contain_issuing_ca_url_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
  return w_sub_cert_aia_does_not_contain_issuing_ca_url_;
}
inline ::zsearch::LintResult* Lints::release_w_sub_cert_aia_does_not_contain_issuing_ca_url() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
  
  ::zsearch::LintResult* temp = w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  w_sub_cert_aia_does_not_contain_issuing_ca_url_ = NULL;
  return temp;
}
inline void Lints::set_allocated_w_sub_cert_aia_does_not_contain_issuing_ca_url(::zsearch::LintResult* w_sub_cert_aia_does_not_contain_issuing_ca_url) {
  delete w_sub_cert_aia_does_not_contain_issuing_ca_url_;
  w_sub_cert_aia_does_not_contain_issuing_ca_url_ = w_sub_cert_aia_does_not_contain_issuing_ca_url;
  if (w_sub_cert_aia_does_not_contain_issuing_ca_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.w_sub_cert_aia_does_not_contain_issuing_ca_url)
}

// .zsearch.LintResult e_sub_cert_locality_name_must_not_appear = 215;
inline bool Lints::has_e_sub_cert_locality_name_must_not_appear() const {
  return this != internal_default_instance() && e_sub_cert_locality_name_must_not_appear_ != NULL;
}
inline void Lints::clear_e_sub_cert_locality_name_must_not_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_locality_name_must_not_appear_ != NULL) delete e_sub_cert_locality_name_must_not_appear_;
  e_sub_cert_locality_name_must_not_appear_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_locality_name_must_not_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
  return e_sub_cert_locality_name_must_not_appear_ != NULL ? *e_sub_cert_locality_name_must_not_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_locality_name_must_not_appear() {
  
  if (e_sub_cert_locality_name_must_not_appear_ == NULL) {
    e_sub_cert_locality_name_must_not_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
  return e_sub_cert_locality_name_must_not_appear_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_locality_name_must_not_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_locality_name_must_not_appear_;
  e_sub_cert_locality_name_must_not_appear_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_locality_name_must_not_appear(::zsearch::LintResult* e_sub_cert_locality_name_must_not_appear) {
  delete e_sub_cert_locality_name_must_not_appear_;
  e_sub_cert_locality_name_must_not_appear_ = e_sub_cert_locality_name_must_not_appear;
  if (e_sub_cert_locality_name_must_not_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_locality_name_must_not_appear)
}

// .zsearch.LintResult e_sub_cert_country_name_must_appear = 216;
inline bool Lints::has_e_sub_cert_country_name_must_appear() const {
  return this != internal_default_instance() && e_sub_cert_country_name_must_appear_ != NULL;
}
inline void Lints::clear_e_sub_cert_country_name_must_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_country_name_must_appear_ != NULL) delete e_sub_cert_country_name_must_appear_;
  e_sub_cert_country_name_must_appear_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_country_name_must_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_country_name_must_appear)
  return e_sub_cert_country_name_must_appear_ != NULL ? *e_sub_cert_country_name_must_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_country_name_must_appear() {
  
  if (e_sub_cert_country_name_must_appear_ == NULL) {
    e_sub_cert_country_name_must_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_country_name_must_appear)
  return e_sub_cert_country_name_must_appear_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_country_name_must_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_country_name_must_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_country_name_must_appear_;
  e_sub_cert_country_name_must_appear_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_country_name_must_appear(::zsearch::LintResult* e_sub_cert_country_name_must_appear) {
  delete e_sub_cert_country_name_must_appear_;
  e_sub_cert_country_name_must_appear_ = e_sub_cert_country_name_must_appear;
  if (e_sub_cert_country_name_must_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_country_name_must_appear)
}

// .zsearch.LintResult e_dnsname_bad_character_in_label = 217;
inline bool Lints::has_e_dnsname_bad_character_in_label() const {
  return this != internal_default_instance() && e_dnsname_bad_character_in_label_ != NULL;
}
inline void Lints::clear_e_dnsname_bad_character_in_label() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_bad_character_in_label_ != NULL) delete e_dnsname_bad_character_in_label_;
  e_dnsname_bad_character_in_label_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_bad_character_in_label() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_bad_character_in_label)
  return e_dnsname_bad_character_in_label_ != NULL ? *e_dnsname_bad_character_in_label_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_bad_character_in_label() {
  
  if (e_dnsname_bad_character_in_label_ == NULL) {
    e_dnsname_bad_character_in_label_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_bad_character_in_label)
  return e_dnsname_bad_character_in_label_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_bad_character_in_label() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_bad_character_in_label)
  
  ::zsearch::LintResult* temp = e_dnsname_bad_character_in_label_;
  e_dnsname_bad_character_in_label_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_bad_character_in_label(::zsearch::LintResult* e_dnsname_bad_character_in_label) {
  delete e_dnsname_bad_character_in_label_;
  e_dnsname_bad_character_in_label_ = e_dnsname_bad_character_in_label;
  if (e_dnsname_bad_character_in_label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_bad_character_in_label)
}

// .zsearch.LintResult e_sub_ca_must_not_contain_any_policy = 218;
inline bool Lints::has_e_sub_ca_must_not_contain_any_policy() const {
  return this != internal_default_instance() && e_sub_ca_must_not_contain_any_policy_ != NULL;
}
inline void Lints::clear_e_sub_ca_must_not_contain_any_policy() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_must_not_contain_any_policy_ != NULL) delete e_sub_ca_must_not_contain_any_policy_;
  e_sub_ca_must_not_contain_any_policy_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_must_not_contain_any_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
  return e_sub_ca_must_not_contain_any_policy_ != NULL ? *e_sub_ca_must_not_contain_any_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_must_not_contain_any_policy() {
  
  if (e_sub_ca_must_not_contain_any_policy_ == NULL) {
    e_sub_ca_must_not_contain_any_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
  return e_sub_ca_must_not_contain_any_policy_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_must_not_contain_any_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
  
  ::zsearch::LintResult* temp = e_sub_ca_must_not_contain_any_policy_;
  e_sub_ca_must_not_contain_any_policy_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_must_not_contain_any_policy(::zsearch::LintResult* e_sub_ca_must_not_contain_any_policy) {
  delete e_sub_ca_must_not_contain_any_policy_;
  e_sub_ca_must_not_contain_any_policy_ = e_sub_ca_must_not_contain_any_policy;
  if (e_sub_ca_must_not_contain_any_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_must_not_contain_any_policy)
}

// .zsearch.LintResult e_international_dns_name_not_nfkc = 219;
inline bool Lints::has_e_international_dns_name_not_nfkc() const {
  return this != internal_default_instance() && e_international_dns_name_not_nfkc_ != NULL;
}
inline void Lints::clear_e_international_dns_name_not_nfkc() {
  if (GetArenaNoVirtual() == NULL && e_international_dns_name_not_nfkc_ != NULL) delete e_international_dns_name_not_nfkc_;
  e_international_dns_name_not_nfkc_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_international_dns_name_not_nfkc() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_international_dns_name_not_nfkc)
  return e_international_dns_name_not_nfkc_ != NULL ? *e_international_dns_name_not_nfkc_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_international_dns_name_not_nfkc() {
  
  if (e_international_dns_name_not_nfkc_ == NULL) {
    e_international_dns_name_not_nfkc_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_international_dns_name_not_nfkc)
  return e_international_dns_name_not_nfkc_;
}
inline ::zsearch::LintResult* Lints::release_e_international_dns_name_not_nfkc() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_international_dns_name_not_nfkc)
  
  ::zsearch::LintResult* temp = e_international_dns_name_not_nfkc_;
  e_international_dns_name_not_nfkc_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_international_dns_name_not_nfkc(::zsearch::LintResult* e_international_dns_name_not_nfkc) {
  delete e_international_dns_name_not_nfkc_;
  e_international_dns_name_not_nfkc_ = e_international_dns_name_not_nfkc;
  if (e_international_dns_name_not_nfkc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_international_dns_name_not_nfkc)
}

// .zsearch.LintResult e_sub_cert_aia_marked_critical = 220;
inline bool Lints::has_e_sub_cert_aia_marked_critical() const {
  return this != internal_default_instance() && e_sub_cert_aia_marked_critical_ != NULL;
}
inline void Lints::clear_e_sub_cert_aia_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_aia_marked_critical_ != NULL) delete e_sub_cert_aia_marked_critical_;
  e_sub_cert_aia_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_aia_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_aia_marked_critical)
  return e_sub_cert_aia_marked_critical_ != NULL ? *e_sub_cert_aia_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_aia_marked_critical() {
  
  if (e_sub_cert_aia_marked_critical_ == NULL) {
    e_sub_cert_aia_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_aia_marked_critical)
  return e_sub_cert_aia_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_aia_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_aia_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_cert_aia_marked_critical_;
  e_sub_cert_aia_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_aia_marked_critical(::zsearch::LintResult* e_sub_cert_aia_marked_critical) {
  delete e_sub_cert_aia_marked_critical_;
  e_sub_cert_aia_marked_critical_ = e_sub_cert_aia_marked_critical;
  if (e_sub_cert_aia_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_aia_marked_critical)
}

// .zsearch.LintResult e_ca_is_ca = 221;
inline bool Lints::has_e_ca_is_ca() const {
  return this != internal_default_instance() && e_ca_is_ca_ != NULL;
}
inline void Lints::clear_e_ca_is_ca() {
  if (GetArenaNoVirtual() == NULL && e_ca_is_ca_ != NULL) delete e_ca_is_ca_;
  e_ca_is_ca_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ca_is_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ca_is_ca)
  return e_ca_is_ca_ != NULL ? *e_ca_is_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ca_is_ca() {
  
  if (e_ca_is_ca_ == NULL) {
    e_ca_is_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ca_is_ca)
  return e_ca_is_ca_;
}
inline ::zsearch::LintResult* Lints::release_e_ca_is_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ca_is_ca)
  
  ::zsearch::LintResult* temp = e_ca_is_ca_;
  e_ca_is_ca_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ca_is_ca(::zsearch::LintResult* e_ca_is_ca) {
  delete e_ca_is_ca_;
  e_ca_is_ca_ = e_ca_is_ca;
  if (e_ca_is_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ca_is_ca)
}

// .zsearch.LintResult e_sub_cert_street_address_should_not_exist = 222;
inline bool Lints::has_e_sub_cert_street_address_should_not_exist() const {
  return this != internal_default_instance() && e_sub_cert_street_address_should_not_exist_ != NULL;
}
inline void Lints::clear_e_sub_cert_street_address_should_not_exist() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_street_address_should_not_exist_ != NULL) delete e_sub_cert_street_address_should_not_exist_;
  e_sub_cert_street_address_should_not_exist_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_street_address_should_not_exist() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
  return e_sub_cert_street_address_should_not_exist_ != NULL ? *e_sub_cert_street_address_should_not_exist_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_street_address_should_not_exist() {
  
  if (e_sub_cert_street_address_should_not_exist_ == NULL) {
    e_sub_cert_street_address_should_not_exist_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
  return e_sub_cert_street_address_should_not_exist_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_street_address_should_not_exist() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
  
  ::zsearch::LintResult* temp = e_sub_cert_street_address_should_not_exist_;
  e_sub_cert_street_address_should_not_exist_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_street_address_should_not_exist(::zsearch::LintResult* e_sub_cert_street_address_should_not_exist) {
  delete e_sub_cert_street_address_should_not_exist_;
  e_sub_cert_street_address_should_not_exist_ = e_sub_cert_street_address_should_not_exist;
  if (e_sub_cert_street_address_should_not_exist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_street_address_should_not_exist)
}

// .zsearch.LintResult e_sub_ca_eku_missing = 223;
inline bool Lints::has_e_sub_ca_eku_missing() const {
  return this != internal_default_instance() && e_sub_ca_eku_missing_ != NULL;
}
inline void Lints::clear_e_sub_ca_eku_missing() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_eku_missing_ != NULL) delete e_sub_ca_eku_missing_;
  e_sub_ca_eku_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_eku_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_eku_missing)
  return e_sub_ca_eku_missing_ != NULL ? *e_sub_ca_eku_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_eku_missing() {
  
  if (e_sub_ca_eku_missing_ == NULL) {
    e_sub_ca_eku_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_eku_missing)
  return e_sub_ca_eku_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_eku_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_eku_missing)
  
  ::zsearch::LintResult* temp = e_sub_ca_eku_missing_;
  e_sub_ca_eku_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_eku_missing(::zsearch::LintResult* e_sub_ca_eku_missing) {
  delete e_sub_ca_eku_missing_;
  e_sub_ca_eku_missing_ = e_sub_ca_eku_missing;
  if (e_sub_ca_eku_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_eku_missing)
}

// .zsearch.LintResult e_sub_cert_province_must_not_appear = 224;
inline bool Lints::has_e_sub_cert_province_must_not_appear() const {
  return this != internal_default_instance() && e_sub_cert_province_must_not_appear_ != NULL;
}
inline void Lints::clear_e_sub_cert_province_must_not_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_province_must_not_appear_ != NULL) delete e_sub_cert_province_must_not_appear_;
  e_sub_cert_province_must_not_appear_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_province_must_not_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_province_must_not_appear)
  return e_sub_cert_province_must_not_appear_ != NULL ? *e_sub_cert_province_must_not_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_province_must_not_appear() {
  
  if (e_sub_cert_province_must_not_appear_ == NULL) {
    e_sub_cert_province_must_not_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_province_must_not_appear)
  return e_sub_cert_province_must_not_appear_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_province_must_not_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_province_must_not_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_province_must_not_appear_;
  e_sub_cert_province_must_not_appear_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_province_must_not_appear(::zsearch::LintResult* e_sub_cert_province_must_not_appear) {
  delete e_sub_cert_province_must_not_appear_;
  e_sub_cert_province_must_not_appear_ = e_sub_cert_province_must_not_appear;
  if (e_sub_cert_province_must_not_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_province_must_not_appear)
}

// .zsearch.LintResult e_dnsname_underscore_in_sld = 225;
inline bool Lints::has_e_dnsname_underscore_in_sld() const {
  return this != internal_default_instance() && e_dnsname_underscore_in_sld_ != NULL;
}
inline void Lints::clear_e_dnsname_underscore_in_sld() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_underscore_in_sld_ != NULL) delete e_dnsname_underscore_in_sld_;
  e_dnsname_underscore_in_sld_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_underscore_in_sld() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_underscore_in_sld)
  return e_dnsname_underscore_in_sld_ != NULL ? *e_dnsname_underscore_in_sld_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_underscore_in_sld() {
  
  if (e_dnsname_underscore_in_sld_ == NULL) {
    e_dnsname_underscore_in_sld_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_underscore_in_sld)
  return e_dnsname_underscore_in_sld_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_underscore_in_sld() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_underscore_in_sld)
  
  ::zsearch::LintResult* temp = e_dnsname_underscore_in_sld_;
  e_dnsname_underscore_in_sld_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_underscore_in_sld(::zsearch::LintResult* e_dnsname_underscore_in_sld) {
  delete e_dnsname_underscore_in_sld_;
  e_dnsname_underscore_in_sld_ = e_dnsname_underscore_in_sld;
  if (e_dnsname_underscore_in_sld) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_underscore_in_sld)
}

// .zsearch.LintResult e_sub_ca_eku_name_constraints = 226;
inline bool Lints::has_e_sub_ca_eku_name_constraints() const {
  return this != internal_default_instance() && e_sub_ca_eku_name_constraints_ != NULL;
}
inline void Lints::clear_e_sub_ca_eku_name_constraints() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_eku_name_constraints_ != NULL) delete e_sub_ca_eku_name_constraints_;
  e_sub_ca_eku_name_constraints_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_eku_name_constraints() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_eku_name_constraints)
  return e_sub_ca_eku_name_constraints_ != NULL ? *e_sub_ca_eku_name_constraints_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_eku_name_constraints() {
  
  if (e_sub_ca_eku_name_constraints_ == NULL) {
    e_sub_ca_eku_name_constraints_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_eku_name_constraints)
  return e_sub_ca_eku_name_constraints_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_eku_name_constraints() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_eku_name_constraints)
  
  ::zsearch::LintResult* temp = e_sub_ca_eku_name_constraints_;
  e_sub_ca_eku_name_constraints_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_eku_name_constraints(::zsearch::LintResult* e_sub_ca_eku_name_constraints) {
  delete e_sub_ca_eku_name_constraints_;
  e_sub_ca_eku_name_constraints_ = e_sub_ca_eku_name_constraints;
  if (e_sub_ca_eku_name_constraints) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_eku_name_constraints)
}

// .zsearch.LintResult e_sub_cert_not_is_ca = 227;
inline bool Lints::has_e_sub_cert_not_is_ca() const {
  return this != internal_default_instance() && e_sub_cert_not_is_ca_ != NULL;
}
inline void Lints::clear_e_sub_cert_not_is_ca() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_not_is_ca_ != NULL) delete e_sub_cert_not_is_ca_;
  e_sub_cert_not_is_ca_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_not_is_ca() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_not_is_ca)
  return e_sub_cert_not_is_ca_ != NULL ? *e_sub_cert_not_is_ca_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_not_is_ca() {
  
  if (e_sub_cert_not_is_ca_ == NULL) {
    e_sub_cert_not_is_ca_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_not_is_ca)
  return e_sub_cert_not_is_ca_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_not_is_ca() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_not_is_ca)
  
  ::zsearch::LintResult* temp = e_sub_cert_not_is_ca_;
  e_sub_cert_not_is_ca_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_not_is_ca(::zsearch::LintResult* e_sub_cert_not_is_ca) {
  delete e_sub_cert_not_is_ca_;
  e_sub_cert_not_is_ca_ = e_sub_cert_not_is_ca;
  if (e_sub_cert_not_is_ca) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_not_is_ca)
}

// .zsearch.LintResult e_dsa_unique_correct_representation = 228;
inline bool Lints::has_e_dsa_unique_correct_representation() const {
  return this != internal_default_instance() && e_dsa_unique_correct_representation_ != NULL;
}
inline void Lints::clear_e_dsa_unique_correct_representation() {
  if (GetArenaNoVirtual() == NULL && e_dsa_unique_correct_representation_ != NULL) delete e_dsa_unique_correct_representation_;
  e_dsa_unique_correct_representation_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dsa_unique_correct_representation() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_unique_correct_representation)
  return e_dsa_unique_correct_representation_ != NULL ? *e_dsa_unique_correct_representation_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dsa_unique_correct_representation() {
  
  if (e_dsa_unique_correct_representation_ == NULL) {
    e_dsa_unique_correct_representation_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_unique_correct_representation)
  return e_dsa_unique_correct_representation_;
}
inline ::zsearch::LintResult* Lints::release_e_dsa_unique_correct_representation() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_unique_correct_representation)
  
  ::zsearch::LintResult* temp = e_dsa_unique_correct_representation_;
  e_dsa_unique_correct_representation_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dsa_unique_correct_representation(::zsearch::LintResult* e_dsa_unique_correct_representation) {
  delete e_dsa_unique_correct_representation_;
  e_dsa_unique_correct_representation_ = e_dsa_unique_correct_representation;
  if (e_dsa_unique_correct_representation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_unique_correct_representation)
}

// .zsearch.LintResult e_sub_cert_province_must_appear = 229;
inline bool Lints::has_e_sub_cert_province_must_appear() const {
  return this != internal_default_instance() && e_sub_cert_province_must_appear_ != NULL;
}
inline void Lints::clear_e_sub_cert_province_must_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_province_must_appear_ != NULL) delete e_sub_cert_province_must_appear_;
  e_sub_cert_province_must_appear_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_province_must_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_province_must_appear)
  return e_sub_cert_province_must_appear_ != NULL ? *e_sub_cert_province_must_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_province_must_appear() {
  
  if (e_sub_cert_province_must_appear_ == NULL) {
    e_sub_cert_province_must_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_province_must_appear)
  return e_sub_cert_province_must_appear_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_province_must_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_province_must_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_province_must_appear_;
  e_sub_cert_province_must_appear_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_province_must_appear(::zsearch::LintResult* e_sub_cert_province_must_appear) {
  delete e_sub_cert_province_must_appear_;
  e_sub_cert_province_must_appear_ = e_sub_cert_province_must_appear;
  if (e_sub_cert_province_must_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_province_must_appear)
}

// .zsearch.LintResult e_root_ca_key_usage_must_be_critical = 230;
inline bool Lints::has_e_root_ca_key_usage_must_be_critical() const {
  return this != internal_default_instance() && e_root_ca_key_usage_must_be_critical_ != NULL;
}
inline void Lints::clear_e_root_ca_key_usage_must_be_critical() {
  if (GetArenaNoVirtual() == NULL && e_root_ca_key_usage_must_be_critical_ != NULL) delete e_root_ca_key_usage_must_be_critical_;
  e_root_ca_key_usage_must_be_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_root_ca_key_usage_must_be_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
  return e_root_ca_key_usage_must_be_critical_ != NULL ? *e_root_ca_key_usage_must_be_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_root_ca_key_usage_must_be_critical() {
  
  if (e_root_ca_key_usage_must_be_critical_ == NULL) {
    e_root_ca_key_usage_must_be_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
  return e_root_ca_key_usage_must_be_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_root_ca_key_usage_must_be_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
  
  ::zsearch::LintResult* temp = e_root_ca_key_usage_must_be_critical_;
  e_root_ca_key_usage_must_be_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_root_ca_key_usage_must_be_critical(::zsearch::LintResult* e_root_ca_key_usage_must_be_critical) {
  delete e_root_ca_key_usage_must_be_critical_;
  e_root_ca_key_usage_must_be_critical_ = e_root_ca_key_usage_must_be_critical;
  if (e_root_ca_key_usage_must_be_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_root_ca_key_usage_must_be_critical)
}

// .zsearch.LintResult e_ext_san_dns_name_too_long = 231;
inline bool Lints::has_e_ext_san_dns_name_too_long() const {
  return this != internal_default_instance() && e_ext_san_dns_name_too_long_ != NULL;
}
inline void Lints::clear_e_ext_san_dns_name_too_long() {
  if (GetArenaNoVirtual() == NULL && e_ext_san_dns_name_too_long_ != NULL) delete e_ext_san_dns_name_too_long_;
  e_ext_san_dns_name_too_long_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_ext_san_dns_name_too_long() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_ext_san_dns_name_too_long)
  return e_ext_san_dns_name_too_long_ != NULL ? *e_ext_san_dns_name_too_long_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_ext_san_dns_name_too_long() {
  
  if (e_ext_san_dns_name_too_long_ == NULL) {
    e_ext_san_dns_name_too_long_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_ext_san_dns_name_too_long)
  return e_ext_san_dns_name_too_long_;
}
inline ::zsearch::LintResult* Lints::release_e_ext_san_dns_name_too_long() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_ext_san_dns_name_too_long)
  
  ::zsearch::LintResult* temp = e_ext_san_dns_name_too_long_;
  e_ext_san_dns_name_too_long_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_ext_san_dns_name_too_long(::zsearch::LintResult* e_ext_san_dns_name_too_long) {
  delete e_ext_san_dns_name_too_long_;
  e_ext_san_dns_name_too_long_ = e_ext_san_dns_name_too_long;
  if (e_ext_san_dns_name_too_long) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_ext_san_dns_name_too_long)
}

// .zsearch.LintResult e_dsa_params_missing = 232;
inline bool Lints::has_e_dsa_params_missing() const {
  return this != internal_default_instance() && e_dsa_params_missing_ != NULL;
}
inline void Lints::clear_e_dsa_params_missing() {
  if (GetArenaNoVirtual() == NULL && e_dsa_params_missing_ != NULL) delete e_dsa_params_missing_;
  e_dsa_params_missing_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dsa_params_missing() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dsa_params_missing)
  return e_dsa_params_missing_ != NULL ? *e_dsa_params_missing_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dsa_params_missing() {
  
  if (e_dsa_params_missing_ == NULL) {
    e_dsa_params_missing_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dsa_params_missing)
  return e_dsa_params_missing_;
}
inline ::zsearch::LintResult* Lints::release_e_dsa_params_missing() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dsa_params_missing)
  
  ::zsearch::LintResult* temp = e_dsa_params_missing_;
  e_dsa_params_missing_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dsa_params_missing(::zsearch::LintResult* e_dsa_params_missing) {
  delete e_dsa_params_missing_;
  e_dsa_params_missing_ = e_dsa_params_missing;
  if (e_dsa_params_missing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dsa_params_missing)
}

// .zsearch.LintResult e_sub_ca_aia_marked_critical = 233;
inline bool Lints::has_e_sub_ca_aia_marked_critical() const {
  return this != internal_default_instance() && e_sub_ca_aia_marked_critical_ != NULL;
}
inline void Lints::clear_e_sub_ca_aia_marked_critical() {
  if (GetArenaNoVirtual() == NULL && e_sub_ca_aia_marked_critical_ != NULL) delete e_sub_ca_aia_marked_critical_;
  e_sub_ca_aia_marked_critical_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_ca_aia_marked_critical() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_ca_aia_marked_critical)
  return e_sub_ca_aia_marked_critical_ != NULL ? *e_sub_ca_aia_marked_critical_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_ca_aia_marked_critical() {
  
  if (e_sub_ca_aia_marked_critical_ == NULL) {
    e_sub_ca_aia_marked_critical_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_ca_aia_marked_critical)
  return e_sub_ca_aia_marked_critical_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_ca_aia_marked_critical() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_ca_aia_marked_critical)
  
  ::zsearch::LintResult* temp = e_sub_ca_aia_marked_critical_;
  e_sub_ca_aia_marked_critical_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_ca_aia_marked_critical(::zsearch::LintResult* e_sub_ca_aia_marked_critical) {
  delete e_sub_ca_aia_marked_critical_;
  e_sub_ca_aia_marked_critical_ = e_sub_ca_aia_marked_critical;
  if (e_sub_ca_aia_marked_critical) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_ca_aia_marked_critical)
}

// .zsearch.LintResult e_sub_cert_given_name_surname_contains_correct_policy = 234;
inline bool Lints::has_e_sub_cert_given_name_surname_contains_correct_policy() const {
  return this != internal_default_instance() && e_sub_cert_given_name_surname_contains_correct_policy_ != NULL;
}
inline void Lints::clear_e_sub_cert_given_name_surname_contains_correct_policy() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_given_name_surname_contains_correct_policy_ != NULL) delete e_sub_cert_given_name_surname_contains_correct_policy_;
  e_sub_cert_given_name_surname_contains_correct_policy_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_given_name_surname_contains_correct_policy() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
  return e_sub_cert_given_name_surname_contains_correct_policy_ != NULL ? *e_sub_cert_given_name_surname_contains_correct_policy_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_given_name_surname_contains_correct_policy() {
  
  if (e_sub_cert_given_name_surname_contains_correct_policy_ == NULL) {
    e_sub_cert_given_name_surname_contains_correct_policy_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
  return e_sub_cert_given_name_surname_contains_correct_policy_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_given_name_surname_contains_correct_policy() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
  
  ::zsearch::LintResult* temp = e_sub_cert_given_name_surname_contains_correct_policy_;
  e_sub_cert_given_name_surname_contains_correct_policy_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_given_name_surname_contains_correct_policy(::zsearch::LintResult* e_sub_cert_given_name_surname_contains_correct_policy) {
  delete e_sub_cert_given_name_surname_contains_correct_policy_;
  e_sub_cert_given_name_surname_contains_correct_policy_ = e_sub_cert_given_name_surname_contains_correct_policy;
  if (e_sub_cert_given_name_surname_contains_correct_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_given_name_surname_contains_correct_policy)
}

// .zsearch.LintResult e_sub_cert_postal_code_must_not_appear = 235;
inline bool Lints::has_e_sub_cert_postal_code_must_not_appear() const {
  return this != internal_default_instance() && e_sub_cert_postal_code_must_not_appear_ != NULL;
}
inline void Lints::clear_e_sub_cert_postal_code_must_not_appear() {
  if (GetArenaNoVirtual() == NULL && e_sub_cert_postal_code_must_not_appear_ != NULL) delete e_sub_cert_postal_code_must_not_appear_;
  e_sub_cert_postal_code_must_not_appear_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_sub_cert_postal_code_must_not_appear() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
  return e_sub_cert_postal_code_must_not_appear_ != NULL ? *e_sub_cert_postal_code_must_not_appear_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_sub_cert_postal_code_must_not_appear() {
  
  if (e_sub_cert_postal_code_must_not_appear_ == NULL) {
    e_sub_cert_postal_code_must_not_appear_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
  return e_sub_cert_postal_code_must_not_appear_;
}
inline ::zsearch::LintResult* Lints::release_e_sub_cert_postal_code_must_not_appear() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
  
  ::zsearch::LintResult* temp = e_sub_cert_postal_code_must_not_appear_;
  e_sub_cert_postal_code_must_not_appear_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_sub_cert_postal_code_must_not_appear(::zsearch::LintResult* e_sub_cert_postal_code_must_not_appear) {
  delete e_sub_cert_postal_code_must_not_appear_;
  e_sub_cert_postal_code_must_not_appear_ = e_sub_cert_postal_code_must_not_appear;
  if (e_sub_cert_postal_code_must_not_appear) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_sub_cert_postal_code_must_not_appear)
}

// .zsearch.LintResult e_dnsname_not_valid_tld = 236;
inline bool Lints::has_e_dnsname_not_valid_tld() const {
  return this != internal_default_instance() && e_dnsname_not_valid_tld_ != NULL;
}
inline void Lints::clear_e_dnsname_not_valid_tld() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_not_valid_tld_ != NULL) delete e_dnsname_not_valid_tld_;
  e_dnsname_not_valid_tld_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_not_valid_tld() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_not_valid_tld)
  return e_dnsname_not_valid_tld_ != NULL ? *e_dnsname_not_valid_tld_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_not_valid_tld() {
  
  if (e_dnsname_not_valid_tld_ == NULL) {
    e_dnsname_not_valid_tld_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_not_valid_tld)
  return e_dnsname_not_valid_tld_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_not_valid_tld() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_not_valid_tld)
  
  ::zsearch::LintResult* temp = e_dnsname_not_valid_tld_;
  e_dnsname_not_valid_tld_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_not_valid_tld(::zsearch::LintResult* e_dnsname_not_valid_tld) {
  delete e_dnsname_not_valid_tld_;
  e_dnsname_not_valid_tld_ = e_dnsname_not_valid_tld;
  if (e_dnsname_not_valid_tld) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_not_valid_tld)
}

// .zsearch.LintResult n_contains_redacted_dnsname = 237;
inline bool Lints::has_n_contains_redacted_dnsname() const {
  return this != internal_default_instance() && n_contains_redacted_dnsname_ != NULL;
}
inline void Lints::clear_n_contains_redacted_dnsname() {
  if (GetArenaNoVirtual() == NULL && n_contains_redacted_dnsname_ != NULL) delete n_contains_redacted_dnsname_;
  n_contains_redacted_dnsname_ = NULL;
}
inline const ::zsearch::LintResult& Lints::n_contains_redacted_dnsname() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.n_contains_redacted_dnsname)
  return n_contains_redacted_dnsname_ != NULL ? *n_contains_redacted_dnsname_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_n_contains_redacted_dnsname() {
  
  if (n_contains_redacted_dnsname_ == NULL) {
    n_contains_redacted_dnsname_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.n_contains_redacted_dnsname)
  return n_contains_redacted_dnsname_;
}
inline ::zsearch::LintResult* Lints::release_n_contains_redacted_dnsname() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.n_contains_redacted_dnsname)
  
  ::zsearch::LintResult* temp = n_contains_redacted_dnsname_;
  n_contains_redacted_dnsname_ = NULL;
  return temp;
}
inline void Lints::set_allocated_n_contains_redacted_dnsname(::zsearch::LintResult* n_contains_redacted_dnsname) {
  delete n_contains_redacted_dnsname_;
  n_contains_redacted_dnsname_ = n_contains_redacted_dnsname;
  if (n_contains_redacted_dnsname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.n_contains_redacted_dnsname)
}

// .zsearch.LintResult e_dnsname_contains_bare_iana_suffix = 238;
inline bool Lints::has_e_dnsname_contains_bare_iana_suffix() const {
  return this != internal_default_instance() && e_dnsname_contains_bare_iana_suffix_ != NULL;
}
inline void Lints::clear_e_dnsname_contains_bare_iana_suffix() {
  if (GetArenaNoVirtual() == NULL && e_dnsname_contains_bare_iana_suffix_ != NULL) delete e_dnsname_contains_bare_iana_suffix_;
  e_dnsname_contains_bare_iana_suffix_ = NULL;
}
inline const ::zsearch::LintResult& Lints::e_dnsname_contains_bare_iana_suffix() const {
  // @@protoc_insertion_point(field_get:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
  return e_dnsname_contains_bare_iana_suffix_ != NULL ? *e_dnsname_contains_bare_iana_suffix_
                         : *::zsearch::LintResult::internal_default_instance();
}
inline ::zsearch::LintResult* Lints::mutable_e_dnsname_contains_bare_iana_suffix() {
  
  if (e_dnsname_contains_bare_iana_suffix_ == NULL) {
    e_dnsname_contains_bare_iana_suffix_ = new ::zsearch::LintResult;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
  return e_dnsname_contains_bare_iana_suffix_;
}
inline ::zsearch::LintResult* Lints::release_e_dnsname_contains_bare_iana_suffix() {
  // @@protoc_insertion_point(field_release:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
  
  ::zsearch::LintResult* temp = e_dnsname_contains_bare_iana_suffix_;
  e_dnsname_contains_bare_iana_suffix_ = NULL;
  return temp;
}
inline void Lints::set_allocated_e_dnsname_contains_bare_iana_suffix(::zsearch::LintResult* e_dnsname_contains_bare_iana_suffix) {
  delete e_dnsname_contains_bare_iana_suffix_;
  e_dnsname_contains_bare_iana_suffix_ = e_dnsname_contains_bare_iana_suffix;
  if (e_dnsname_contains_bare_iana_suffix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.Lints.e_dnsname_contains_bare_iana_suffix)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace zsearch

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zsearch::LintResultStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::LintResultStatus>() {
  return ::zsearch::LintResultStatus_descriptor();
}
template <> struct is_proto_enum< ::zsearch::ZLintStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::ZLintStatus>() {
  return ::zsearch::ZLintStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zlint_2eproto__INCLUDED
