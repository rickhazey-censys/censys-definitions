// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: caa.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "caa.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zsearch {
class CAATagValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CAATagValue> {
} _CAATagValue_default_instance_;
class CAARecordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CAARecord> {
} _CAARecord_default_instance_;
class CAALookupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CAALookup> {
} _CAALookup_default_instance_;

namespace protobuf_caa_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAATagValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAATagValue, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAATagValue, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAATagValue, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAATagValue, ttl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAARecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAARecord, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAARecord, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAARecord, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAALookup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAALookup, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAALookup, records_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CAATagValue)},
  { 8, -1, sizeof(CAARecord)},
  { 15, -1, sizeof(CAALookup)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CAATagValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CAARecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CAALookup_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "caa.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _CAATagValue_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CAARecord_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CAALookup_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CAATagValue_default_instance_.DefaultConstruct();
  _CAARecord_default_instance_.DefaultConstruct();
  _CAALookup_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tcaa.proto\022\007zsearch\"D\n\013CAATagValue\022\014\n\004f"
      "lag\030\001 \001(\005\022\013\n\003tag\030\002 \001(\t\022\r\n\005value\030\003 \001(\t\022\013\n"
      "\003ttl\030\004 \001(\r\"e\n\tCAARecord\022\016\n\006domain\030\001 \001(\t\022"
      "\"\n\006result\030\002 \001(\0162\022.zsearch.CAAStatus\022$\n\006v"
      "alues\030\003 \003(\0132\024.zsearch.CAATagValue\"C\n\tCAA"
      "Lookup\022\021\n\ttimestamp\030\001 \001(\004\022#\n\007records\030\002 \003"
      "(\0132\022.zsearch.CAARecord*\231\004\n\tCAAStatus\022\027\n\023"
      "CAA_STATUS_RESERVED\020\000\022!\n\035CAA_STATUS_VALI"
      "DATION_SUCCESS\020\001\022\036\n\032CAA_STATUS_VALIDATIO"
      "N_FAIL\020\002\022!\n\035CAA_STATUS_VALIDATION_SKIPPE"
      "D\020\003\022!\n\035CAA_STATUS_DNS_ERROR_SERVFAIL\020\004\022!"
      "\n\035CAA_STATUS_DNS_ERROR_AUTHFAIL\020\005\022\"\n\036CAA"
      "_STATUS_DNS_ERROR_NO_RECORD\020\006\022\"\n\036CAA_STA"
      "TUS_DNS_ERROR_BLACKLIST\020\007\022\"\n\036CAA_STATUS_"
      "DNS_ERROR_NO_OUTPUT\020\010\022\"\n\036CAA_STATUS_DNS_"
      "ERROR_NO_ANSWER\020\t\022&\n\"CAA_STATUS_DNS_ERRO"
      "R_ILLEGAL_INPUT\020\n\022 \n\034CAA_STATUS_DNS_ERRO"
      "R_TIMEOUT\020\013\022%\n!CAA_STATUS_DNS_ERROR_ITER"
      "_TIMEOUT\020\014\022\"\n\036CAA_STATUS_DNS_ERROR_TEMPO"
      "RARY\020\r\022\"\n\036CAA_STATUS_DNS_ERROR_TRUNCATED"
      "\020\016b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 810);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "caa.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_caa_2eproto

const ::google::protobuf::EnumDescriptor* CAAStatus_descriptor() {
  protobuf_caa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_caa_2eproto::file_level_enum_descriptors[0];
}
bool CAAStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAATagValue::kFlagFieldNumber;
const int CAATagValue::kTagFieldNumber;
const int CAATagValue::kValueFieldNumber;
const int CAATagValue::kTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAATagValue::CAATagValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_caa_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zsearch.CAATagValue)
}
CAATagValue::CAATagValue(const CAATagValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag().size() > 0) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&flag_, &from.flag_,
    reinterpret_cast<char*>(&ttl_) -
    reinterpret_cast<char*>(&flag_) + sizeof(ttl_));
  // @@protoc_insertion_point(copy_constructor:zsearch.CAATagValue)
}

void CAATagValue::SharedCtor() {
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flag_, 0, reinterpret_cast<char*>(&ttl_) -
    reinterpret_cast<char*>(&flag_) + sizeof(ttl_));
  _cached_size_ = 0;
}

CAATagValue::~CAATagValue() {
  // @@protoc_insertion_point(destructor:zsearch.CAATagValue)
  SharedDtor();
}

void CAATagValue::SharedDtor() {
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CAATagValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAATagValue::descriptor() {
  protobuf_caa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_caa_2eproto::file_level_metadata[0].descriptor;
}

const CAATagValue& CAATagValue::default_instance() {
  protobuf_caa_2eproto::InitDefaults();
  return *internal_default_instance();
}

CAATagValue* CAATagValue::New(::google::protobuf::Arena* arena) const {
  CAATagValue* n = new CAATagValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAATagValue::Clear() {
// @@protoc_insertion_point(message_clear_start:zsearch.CAATagValue)
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flag_, 0, reinterpret_cast<char*>(&ttl_) -
    reinterpret_cast<char*>(&flag_) + sizeof(ttl_));
}

bool CAATagValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zsearch.CAATagValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 flag = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tag = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zsearch.CAATagValue.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zsearch.CAATagValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ttl = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zsearch.CAATagValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zsearch.CAATagValue)
  return false;
#undef DO_
}

void CAATagValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zsearch.CAATagValue)
  // int32 flag = 1;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  // string tag = 2;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.CAATagValue.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag(), output);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.CAATagValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // uint32 ttl = 4;
  if (this->ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ttl(), output);
  }

  // @@protoc_insertion_point(serialize_end:zsearch.CAATagValue)
}

::google::protobuf::uint8* CAATagValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zsearch.CAATagValue)
  // int32 flag = 1;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  // string tag = 2;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.CAATagValue.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag(), target);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.CAATagValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // uint32 ttl = 4;
  if (this->ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ttl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:zsearch.CAATagValue)
  return target;
}

size_t CAATagValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zsearch.CAATagValue)
  size_t total_size = 0;

  // string tag = 2;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int32 flag = 1;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  // uint32 ttl = 4;
  if (this->ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ttl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAATagValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zsearch.CAATagValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CAATagValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CAATagValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zsearch.CAATagValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zsearch.CAATagValue)
    MergeFrom(*source);
  }
}

void CAATagValue::MergeFrom(const CAATagValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zsearch.CAATagValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.ttl() != 0) {
    set_ttl(from.ttl());
  }
}

void CAATagValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zsearch.CAATagValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAATagValue::CopyFrom(const CAATagValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zsearch.CAATagValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAATagValue::IsInitialized() const {
  return true;
}

void CAATagValue::Swap(CAATagValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAATagValue::InternalSwap(CAATagValue* other) {
  tag_.Swap(&other->tag_);
  value_.Swap(&other->value_);
  std::swap(flag_, other->flag_);
  std::swap(ttl_, other->ttl_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAATagValue::GetMetadata() const {
  protobuf_caa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_caa_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAATagValue

// int32 flag = 1;
void CAATagValue::clear_flag() {
  flag_ = 0;
}
::google::protobuf::int32 CAATagValue::flag() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.flag)
  return flag_;
}
void CAATagValue::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.flag)
}

// string tag = 2;
void CAATagValue::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CAATagValue::tag() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.tag)
  return tag_.GetNoArena();
}
void CAATagValue::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.tag)
}
#if LANG_CXX11
void CAATagValue::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.CAATagValue.tag)
}
#endif
void CAATagValue::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.CAATagValue.tag)
}
void CAATagValue::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.CAATagValue.tag)
}
::std::string* CAATagValue::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.CAATagValue.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CAATagValue::release_tag() {
  // @@protoc_insertion_point(field_release:zsearch.CAATagValue.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CAATagValue::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:zsearch.CAATagValue.tag)
}

// string value = 3;
void CAATagValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CAATagValue::value() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.value)
  return value_.GetNoArena();
}
void CAATagValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.value)
}
#if LANG_CXX11
void CAATagValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.CAATagValue.value)
}
#endif
void CAATagValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.CAATagValue.value)
}
void CAATagValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.CAATagValue.value)
}
::std::string* CAATagValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.CAATagValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CAATagValue::release_value() {
  // @@protoc_insertion_point(field_release:zsearch.CAATagValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CAATagValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:zsearch.CAATagValue.value)
}

// uint32 ttl = 4;
void CAATagValue::clear_ttl() {
  ttl_ = 0u;
}
::google::protobuf::uint32 CAATagValue::ttl() const {
  // @@protoc_insertion_point(field_get:zsearch.CAATagValue.ttl)
  return ttl_;
}
void CAATagValue::set_ttl(::google::protobuf::uint32 value) {
  
  ttl_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAATagValue.ttl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAARecord::kDomainFieldNumber;
const int CAARecord::kResultFieldNumber;
const int CAARecord::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAARecord::CAARecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_caa_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zsearch.CAARecord)
}
CAARecord::CAARecord(const CAARecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:zsearch.CAARecord)
}

void CAARecord::SharedCtor() {
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

CAARecord::~CAARecord() {
  // @@protoc_insertion_point(destructor:zsearch.CAARecord)
  SharedDtor();
}

void CAARecord::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CAARecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAARecord::descriptor() {
  protobuf_caa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_caa_2eproto::file_level_metadata[1].descriptor;
}

const CAARecord& CAARecord::default_instance() {
  protobuf_caa_2eproto::InitDefaults();
  return *internal_default_instance();
}

CAARecord* CAARecord::New(::google::protobuf::Arena* arena) const {
  CAARecord* n = new CAARecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAARecord::Clear() {
// @@protoc_insertion_point(message_clear_start:zsearch.CAARecord)
  values_.Clear();
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool CAARecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zsearch.CAARecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string domain = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zsearch.CAARecord.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zsearch.CAAStatus result = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::zsearch::CAAStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zsearch.CAATagValue values = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zsearch.CAARecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zsearch.CAARecord)
  return false;
#undef DO_
}

void CAARecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zsearch.CAARecord)
  // string domain = 1;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.CAARecord.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->domain(), output);
  }

  // .zsearch.CAAStatus result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // repeated .zsearch.CAATagValue values = 3;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->values(i), output);
  }

  // @@protoc_insertion_point(serialize_end:zsearch.CAARecord)
}

::google::protobuf::uint8* CAARecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zsearch.CAARecord)
  // string domain = 1;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zsearch.CAARecord.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->domain(), target);
  }

  // .zsearch.CAAStatus result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // repeated .zsearch.CAATagValue values = 3;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->values(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:zsearch.CAARecord)
  return target;
}

size_t CAARecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zsearch.CAARecord)
  size_t total_size = 0;

  // repeated .zsearch.CAATagValue values = 3;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // .zsearch.CAAStatus result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAARecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zsearch.CAARecord)
  GOOGLE_DCHECK_NE(&from, this);
  const CAARecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CAARecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zsearch.CAARecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zsearch.CAARecord)
    MergeFrom(*source);
  }
}

void CAARecord::MergeFrom(const CAARecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zsearch.CAARecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CAARecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zsearch.CAARecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAARecord::CopyFrom(const CAARecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zsearch.CAARecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAARecord::IsInitialized() const {
  return true;
}

void CAARecord::Swap(CAARecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAARecord::InternalSwap(CAARecord* other) {
  values_.UnsafeArenaSwap(&other->values_);
  domain_.Swap(&other->domain_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAARecord::GetMetadata() const {
  protobuf_caa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_caa_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAARecord

// string domain = 1;
void CAARecord::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CAARecord::domain() const {
  // @@protoc_insertion_point(field_get:zsearch.CAARecord.domain)
  return domain_.GetNoArena();
}
void CAARecord::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.CAARecord.domain)
}
#if LANG_CXX11
void CAARecord::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.CAARecord.domain)
}
#endif
void CAARecord::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.CAARecord.domain)
}
void CAARecord::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.CAARecord.domain)
}
::std::string* CAARecord::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.CAARecord.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CAARecord::release_domain() {
  // @@protoc_insertion_point(field_release:zsearch.CAARecord.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CAARecord::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:zsearch.CAARecord.domain)
}

// .zsearch.CAAStatus result = 2;
void CAARecord::clear_result() {
  result_ = 0;
}
::zsearch::CAAStatus CAARecord::result() const {
  // @@protoc_insertion_point(field_get:zsearch.CAARecord.result)
  return static_cast< ::zsearch::CAAStatus >(result_);
}
void CAARecord::set_result(::zsearch::CAAStatus value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAARecord.result)
}

// repeated .zsearch.CAATagValue values = 3;
int CAARecord::values_size() const {
  return values_.size();
}
void CAARecord::clear_values() {
  values_.Clear();
}
const ::zsearch::CAATagValue& CAARecord::values(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.CAARecord.values)
  return values_.Get(index);
}
::zsearch::CAATagValue* CAARecord::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.CAARecord.values)
  return values_.Mutable(index);
}
::zsearch::CAATagValue* CAARecord::add_values() {
  // @@protoc_insertion_point(field_add:zsearch.CAARecord.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::zsearch::CAATagValue >*
CAARecord::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.CAARecord.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::zsearch::CAATagValue >&
CAARecord::values() const {
  // @@protoc_insertion_point(field_list:zsearch.CAARecord.values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAALookup::kTimestampFieldNumber;
const int CAALookup::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAALookup::CAALookup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_caa_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zsearch.CAALookup)
}
CAALookup::CAALookup(const CAALookup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      records_(from.records_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:zsearch.CAALookup)
}

void CAALookup::SharedCtor() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

CAALookup::~CAALookup() {
  // @@protoc_insertion_point(destructor:zsearch.CAALookup)
  SharedDtor();
}

void CAALookup::SharedDtor() {
}

void CAALookup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAALookup::descriptor() {
  protobuf_caa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_caa_2eproto::file_level_metadata[2].descriptor;
}

const CAALookup& CAALookup::default_instance() {
  protobuf_caa_2eproto::InitDefaults();
  return *internal_default_instance();
}

CAALookup* CAALookup::New(::google::protobuf::Arena* arena) const {
  CAALookup* n = new CAALookup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAALookup::Clear() {
// @@protoc_insertion_point(message_clear_start:zsearch.CAALookup)
  records_.Clear();
  timestamp_ = GOOGLE_ULONGLONG(0);
}

bool CAALookup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zsearch.CAALookup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 timestamp = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zsearch.CAARecord records = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zsearch.CAALookup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zsearch.CAALookup)
  return false;
#undef DO_
}

void CAALookup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zsearch.CAALookup)
  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .zsearch.CAARecord records = 2;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->records(i), output);
  }

  // @@protoc_insertion_point(serialize_end:zsearch.CAALookup)
}

::google::protobuf::uint8* CAALookup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zsearch.CAALookup)
  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // repeated .zsearch.CAARecord records = 2;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->records(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:zsearch.CAALookup)
  return target;
}

size_t CAALookup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zsearch.CAALookup)
  size_t total_size = 0;

  // repeated .zsearch.CAARecord records = 2;
  {
    unsigned int count = this->records_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->records(i));
    }
  }

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAALookup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zsearch.CAALookup)
  GOOGLE_DCHECK_NE(&from, this);
  const CAALookup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CAALookup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zsearch.CAALookup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zsearch.CAALookup)
    MergeFrom(*source);
  }
}

void CAALookup::MergeFrom(const CAALookup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zsearch.CAALookup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  records_.MergeFrom(from.records_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void CAALookup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zsearch.CAALookup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAALookup::CopyFrom(const CAALookup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zsearch.CAALookup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAALookup::IsInitialized() const {
  return true;
}

void CAALookup::Swap(CAALookup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAALookup::InternalSwap(CAALookup* other) {
  records_.UnsafeArenaSwap(&other->records_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAALookup::GetMetadata() const {
  protobuf_caa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_caa_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAALookup

// uint64 timestamp = 1;
void CAALookup::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CAALookup::timestamp() const {
  // @@protoc_insertion_point(field_get:zsearch.CAALookup.timestamp)
  return timestamp_;
}
void CAALookup::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CAALookup.timestamp)
}

// repeated .zsearch.CAARecord records = 2;
int CAALookup::records_size() const {
  return records_.size();
}
void CAALookup::clear_records() {
  records_.Clear();
}
const ::zsearch::CAARecord& CAALookup::records(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.CAALookup.records)
  return records_.Get(index);
}
::zsearch::CAARecord* CAALookup::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.CAALookup.records)
  return records_.Mutable(index);
}
::zsearch::CAARecord* CAALookup::add_records() {
  // @@protoc_insertion_point(field_add:zsearch.CAALookup.records)
  return records_.Add();
}
::google::protobuf::RepeatedPtrField< ::zsearch::CAARecord >*
CAALookup::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.CAALookup.records)
  return &records_;
}
const ::google::protobuf::RepeatedPtrField< ::zsearch::CAARecord >&
CAALookup::records() const {
  // @@protoc_insertion_point(field_list:zsearch.CAALookup.records)
  return records_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zsearch

// @@protoc_insertion_point(global_scope)
