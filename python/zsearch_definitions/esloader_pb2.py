# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: esloader.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import anonstore_pb2 as anonstore__pb2
import hoststore_pb2 as hoststore__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='esloader.proto',
  package='esloader',
  syntax='proto3',
  serialized_pb=_b('\n\x0e\x65sloader.proto\x12\x08\x65sloader\x1a\x0f\x61nonstore.proto\x1a\x0fhoststore.proto\"\x1c\n\x0cHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\nHelloReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"\x14\n\x12HealthCheckRequest\"\x8e\x01\n\x13HealthCheckResponse\x12;\n\x06status\x18\x01 \x01(\x0e\x32+.esloader.HealthCheckResponse.ServingStatus\":\n\rServingStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07SERVING\x10\x01\x12\x0f\n\x0bNOT_SERVING\x10\x02\"2\n\x10\x44\x65ltaLoadRequest\x12\x1e\n\x06\x64\x65ltas\x18\x01 \x03(\x0b\x32\x0e.zsearch.Delta\"y\n\x11\x44\x65ltaLoadResponse\x12:\n\x06status\x18\x01 \x01(\x0e\x32*.esloader.DeltaLoadResponse.ResponseStatus\"(\n\x0eResponseStatus\x12\x0b\n\x07SUCCESS\x10\x00\x12\t\n\x05\x45RROR\x10\x01\"N\n\x19\x41nonymousDeltaLoadRequest\x12\x31\n\x10\x61nonymous_deltas\x18\x01 \x03(\x0b\x32\x17.zsearch.AnonymousDelta\"\x8b\x01\n\x1a\x41nonymousDeltaLoadResponse\x12\x43\n\x06status\x18\x01 \x01(\x0e\x32\x33.esloader.AnonymousDeltaLoadResponse.ResponseStatus\"(\n\x0eResponseStatus\x12\x0b\n\x07SUCCESS\x10\x00\x12\t\n\x05\x45RROR\x10\x01\x32\xb9\x02\n\x08\x45SLoader\x12:\n\x08SayHello\x12\x16.esloader.HelloRequest\x1a\x14.esloader.HelloReply\"\x00\x12J\n\x0bHealthCheck\x12\x1c.esloader.HealthCheckRequest\x1a\x1d.esloader.HealthCheckResponse\x12\x44\n\tDeltaLoad\x12\x1a.esloader.DeltaLoadRequest\x1a\x1b.esloader.DeltaLoadResponse\x12_\n\x12\x41nonymousDeltaLoad\x12#.esloader.AnonymousDeltaLoadRequest\x1a$.esloader.AnonymousDeltaLoadResponseb\x06proto3')
  ,
  dependencies=[anonstore__pb2.DESCRIPTOR,hoststore__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_HEALTHCHECKRESPONSE_SERVINGSTATUS = _descriptor.EnumDescriptor(
  name='ServingStatus',
  full_name='esloader.HealthCheckResponse.ServingStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_SERVING', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=230,
  serialized_end=288,
)
_sym_db.RegisterEnumDescriptor(_HEALTHCHECKRESPONSE_SERVINGSTATUS)

_DELTALOADRESPONSE_RESPONSESTATUS = _descriptor.EnumDescriptor(
  name='ResponseStatus',
  full_name='esloader.DeltaLoadResponse.ResponseStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=423,
  serialized_end=463,
)
_sym_db.RegisterEnumDescriptor(_DELTALOADRESPONSE_RESPONSESTATUS)

_ANONYMOUSDELTALOADRESPONSE_RESPONSESTATUS = _descriptor.EnumDescriptor(
  name='ResponseStatus',
  full_name='esloader.AnonymousDeltaLoadResponse.ResponseStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=423,
  serialized_end=463,
)
_sym_db.RegisterEnumDescriptor(_ANONYMOUSDELTALOADRESPONSE_RESPONSESTATUS)


_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='esloader.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='esloader.HelloRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=90,
)


_HELLOREPLY = _descriptor.Descriptor(
  name='HelloReply',
  full_name='esloader.HelloReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='esloader.HelloReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=121,
)


_HEALTHCHECKREQUEST = _descriptor.Descriptor(
  name='HealthCheckRequest',
  full_name='esloader.HealthCheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=143,
)


_HEALTHCHECKRESPONSE = _descriptor.Descriptor(
  name='HealthCheckResponse',
  full_name='esloader.HealthCheckResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='esloader.HealthCheckResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _HEALTHCHECKRESPONSE_SERVINGSTATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=146,
  serialized_end=288,
)


_DELTALOADREQUEST = _descriptor.Descriptor(
  name='DeltaLoadRequest',
  full_name='esloader.DeltaLoadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='deltas', full_name='esloader.DeltaLoadRequest.deltas', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=290,
  serialized_end=340,
)


_DELTALOADRESPONSE = _descriptor.Descriptor(
  name='DeltaLoadResponse',
  full_name='esloader.DeltaLoadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='esloader.DeltaLoadResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DELTALOADRESPONSE_RESPONSESTATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=342,
  serialized_end=463,
)


_ANONYMOUSDELTALOADREQUEST = _descriptor.Descriptor(
  name='AnonymousDeltaLoadRequest',
  full_name='esloader.AnonymousDeltaLoadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='anonymous_deltas', full_name='esloader.AnonymousDeltaLoadRequest.anonymous_deltas', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=465,
  serialized_end=543,
)


_ANONYMOUSDELTALOADRESPONSE = _descriptor.Descriptor(
  name='AnonymousDeltaLoadResponse',
  full_name='esloader.AnonymousDeltaLoadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='esloader.AnonymousDeltaLoadResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ANONYMOUSDELTALOADRESPONSE_RESPONSESTATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=546,
  serialized_end=685,
)

_HEALTHCHECKRESPONSE.fields_by_name['status'].enum_type = _HEALTHCHECKRESPONSE_SERVINGSTATUS
_HEALTHCHECKRESPONSE_SERVINGSTATUS.containing_type = _HEALTHCHECKRESPONSE
_DELTALOADREQUEST.fields_by_name['deltas'].message_type = hoststore__pb2._DELTA
_DELTALOADRESPONSE.fields_by_name['status'].enum_type = _DELTALOADRESPONSE_RESPONSESTATUS
_DELTALOADRESPONSE_RESPONSESTATUS.containing_type = _DELTALOADRESPONSE
_ANONYMOUSDELTALOADREQUEST.fields_by_name['anonymous_deltas'].message_type = anonstore__pb2._ANONYMOUSDELTA
_ANONYMOUSDELTALOADRESPONSE.fields_by_name['status'].enum_type = _ANONYMOUSDELTALOADRESPONSE_RESPONSESTATUS
_ANONYMOUSDELTALOADRESPONSE_RESPONSESTATUS.containing_type = _ANONYMOUSDELTALOADRESPONSE
DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloReply'] = _HELLOREPLY
DESCRIPTOR.message_types_by_name['HealthCheckRequest'] = _HEALTHCHECKREQUEST
DESCRIPTOR.message_types_by_name['HealthCheckResponse'] = _HEALTHCHECKRESPONSE
DESCRIPTOR.message_types_by_name['DeltaLoadRequest'] = _DELTALOADREQUEST
DESCRIPTOR.message_types_by_name['DeltaLoadResponse'] = _DELTALOADRESPONSE
DESCRIPTOR.message_types_by_name['AnonymousDeltaLoadRequest'] = _ANONYMOUSDELTALOADREQUEST
DESCRIPTOR.message_types_by_name['AnonymousDeltaLoadResponse'] = _ANONYMOUSDELTALOADRESPONSE

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

HelloReply = _reflection.GeneratedProtocolMessageType('HelloReply', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREPLY,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.HelloReply)
  ))
_sym_db.RegisterMessage(HelloReply)

HealthCheckRequest = _reflection.GeneratedProtocolMessageType('HealthCheckRequest', (_message.Message,), dict(
  DESCRIPTOR = _HEALTHCHECKREQUEST,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.HealthCheckRequest)
  ))
_sym_db.RegisterMessage(HealthCheckRequest)

HealthCheckResponse = _reflection.GeneratedProtocolMessageType('HealthCheckResponse', (_message.Message,), dict(
  DESCRIPTOR = _HEALTHCHECKRESPONSE,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.HealthCheckResponse)
  ))
_sym_db.RegisterMessage(HealthCheckResponse)

DeltaLoadRequest = _reflection.GeneratedProtocolMessageType('DeltaLoadRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELTALOADREQUEST,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.DeltaLoadRequest)
  ))
_sym_db.RegisterMessage(DeltaLoadRequest)

DeltaLoadResponse = _reflection.GeneratedProtocolMessageType('DeltaLoadResponse', (_message.Message,), dict(
  DESCRIPTOR = _DELTALOADRESPONSE,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.DeltaLoadResponse)
  ))
_sym_db.RegisterMessage(DeltaLoadResponse)

AnonymousDeltaLoadRequest = _reflection.GeneratedProtocolMessageType('AnonymousDeltaLoadRequest', (_message.Message,), dict(
  DESCRIPTOR = _ANONYMOUSDELTALOADREQUEST,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.AnonymousDeltaLoadRequest)
  ))
_sym_db.RegisterMessage(AnonymousDeltaLoadRequest)

AnonymousDeltaLoadResponse = _reflection.GeneratedProtocolMessageType('AnonymousDeltaLoadResponse', (_message.Message,), dict(
  DESCRIPTOR = _ANONYMOUSDELTALOADRESPONSE,
  __module__ = 'esloader_pb2'
  # @@protoc_insertion_point(class_scope:esloader.AnonymousDeltaLoadResponse)
  ))
_sym_db.RegisterMessage(AnonymousDeltaLoadResponse)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class ESLoaderStub(object):
    """The root interface exported by our gRPC server that's the doorway into our
    elasticsearch-loader as a service API.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.SayHello = channel.unary_unary(
          '/esloader.ESLoader/SayHello',
          request_serializer=HelloRequest.SerializeToString,
          response_deserializer=HelloReply.FromString,
          )
      self.HealthCheck = channel.unary_unary(
          '/esloader.ESLoader/HealthCheck',
          request_serializer=HealthCheckRequest.SerializeToString,
          response_deserializer=HealthCheckResponse.FromString,
          )
      self.DeltaLoad = channel.unary_unary(
          '/esloader.ESLoader/DeltaLoad',
          request_serializer=DeltaLoadRequest.SerializeToString,
          response_deserializer=DeltaLoadResponse.FromString,
          )
      self.AnonymousDeltaLoad = channel.unary_unary(
          '/esloader.ESLoader/AnonymousDeltaLoad',
          request_serializer=AnonymousDeltaLoadRequest.SerializeToString,
          response_deserializer=AnonymousDeltaLoadResponse.FromString,
          )


  class ESLoaderServicer(object):
    """The root interface exported by our gRPC server that's the doorway into our
    elasticsearch-loader as a service API.
    """

    def SayHello(self, request, context):
      """A simple remote procedure call to echo back what you send it
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
      """A health checking endpoint, see
      https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeltaLoad(self, request, context):
      """A remote procedure call to load into Elasticsearch a list of Delta
      objects, i.e., for indexing IPv4 and Domain entries.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AnonymousDeltaLoad(self, request, context):
      """A remote procedure call to load into Elasticsearch a list of
      AnonymousDelta objects, i.e., for indexing Certificate entries.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ESLoaderServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SayHello': grpc.unary_unary_rpc_method_handler(
            servicer.SayHello,
            request_deserializer=HelloRequest.FromString,
            response_serializer=HelloReply.SerializeToString,
        ),
        'HealthCheck': grpc.unary_unary_rpc_method_handler(
            servicer.HealthCheck,
            request_deserializer=HealthCheckRequest.FromString,
            response_serializer=HealthCheckResponse.SerializeToString,
        ),
        'DeltaLoad': grpc.unary_unary_rpc_method_handler(
            servicer.DeltaLoad,
            request_deserializer=DeltaLoadRequest.FromString,
            response_serializer=DeltaLoadResponse.SerializeToString,
        ),
        'AnonymousDeltaLoad': grpc.unary_unary_rpc_method_handler(
            servicer.AnonymousDeltaLoad,
            request_deserializer=AnonymousDeltaLoadRequest.FromString,
            response_serializer=AnonymousDeltaLoadResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'esloader.ESLoader', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaESLoaderServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The root interface exported by our gRPC server that's the doorway into our
    elasticsearch-loader as a service API.
    """
    def SayHello(self, request, context):
      """A simple remote procedure call to echo back what you send it
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HealthCheck(self, request, context):
      """A health checking endpoint, see
      https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeltaLoad(self, request, context):
      """A remote procedure call to load into Elasticsearch a list of Delta
      objects, i.e., for indexing IPv4 and Domain entries.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AnonymousDeltaLoad(self, request, context):
      """A remote procedure call to load into Elasticsearch a list of
      AnonymousDelta objects, i.e., for indexing Certificate entries.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaESLoaderStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The root interface exported by our gRPC server that's the doorway into our
    elasticsearch-loader as a service API.
    """
    def SayHello(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """A simple remote procedure call to echo back what you send it
      """
      raise NotImplementedError()
    SayHello.future = None
    def HealthCheck(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """A health checking endpoint, see
      https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      """
      raise NotImplementedError()
    HealthCheck.future = None
    def DeltaLoad(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """A remote procedure call to load into Elasticsearch a list of Delta
      objects, i.e., for indexing IPv4 and Domain entries.
      """
      raise NotImplementedError()
    DeltaLoad.future = None
    def AnonymousDeltaLoad(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """A remote procedure call to load into Elasticsearch a list of
      AnonymousDelta objects, i.e., for indexing Certificate entries.
      """
      raise NotImplementedError()
    AnonymousDeltaLoad.future = None


  def beta_create_ESLoader_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('esloader.ESLoader', 'AnonymousDeltaLoad'): AnonymousDeltaLoadRequest.FromString,
      ('esloader.ESLoader', 'DeltaLoad'): DeltaLoadRequest.FromString,
      ('esloader.ESLoader', 'HealthCheck'): HealthCheckRequest.FromString,
      ('esloader.ESLoader', 'SayHello'): HelloRequest.FromString,
    }
    response_serializers = {
      ('esloader.ESLoader', 'AnonymousDeltaLoad'): AnonymousDeltaLoadResponse.SerializeToString,
      ('esloader.ESLoader', 'DeltaLoad'): DeltaLoadResponse.SerializeToString,
      ('esloader.ESLoader', 'HealthCheck'): HealthCheckResponse.SerializeToString,
      ('esloader.ESLoader', 'SayHello'): HelloReply.SerializeToString,
    }
    method_implementations = {
      ('esloader.ESLoader', 'AnonymousDeltaLoad'): face_utilities.unary_unary_inline(servicer.AnonymousDeltaLoad),
      ('esloader.ESLoader', 'DeltaLoad'): face_utilities.unary_unary_inline(servicer.DeltaLoad),
      ('esloader.ESLoader', 'HealthCheck'): face_utilities.unary_unary_inline(servicer.HealthCheck),
      ('esloader.ESLoader', 'SayHello'): face_utilities.unary_unary_inline(servicer.SayHello),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ESLoader_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('esloader.ESLoader', 'AnonymousDeltaLoad'): AnonymousDeltaLoadRequest.SerializeToString,
      ('esloader.ESLoader', 'DeltaLoad'): DeltaLoadRequest.SerializeToString,
      ('esloader.ESLoader', 'HealthCheck'): HealthCheckRequest.SerializeToString,
      ('esloader.ESLoader', 'SayHello'): HelloRequest.SerializeToString,
    }
    response_deserializers = {
      ('esloader.ESLoader', 'AnonymousDeltaLoad'): AnonymousDeltaLoadResponse.FromString,
      ('esloader.ESLoader', 'DeltaLoad'): DeltaLoadResponse.FromString,
      ('esloader.ESLoader', 'HealthCheck'): HealthCheckResponse.FromString,
      ('esloader.ESLoader', 'SayHello'): HelloReply.FromString,
    }
    cardinalities = {
      'AnonymousDeltaLoad': cardinality.Cardinality.UNARY_UNARY,
      'DeltaLoad': cardinality.Cardinality.UNARY_UNARY,
      'HealthCheck': cardinality.Cardinality.UNARY_UNARY,
      'SayHello': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'esloader.ESLoader', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
