# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import esloader_pb2 as esloader__pb2


class ESLoaderStub(object):
  """The root interface exported by our gRPC server that's the doorway into our
  elasticsearch-loader as a service API.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/esloader.ESLoader/SayHello',
        request_serializer=esloader__pb2.HelloRequest.SerializeToString,
        response_deserializer=esloader__pb2.HelloReply.FromString,
        )
    self.HealthCheck = channel.unary_unary(
        '/esloader.ESLoader/HealthCheck',
        request_serializer=esloader__pb2.HealthCheckRequest.SerializeToString,
        response_deserializer=esloader__pb2.HealthCheckResponse.FromString,
        )
    self.DeltaLoad = channel.unary_unary(
        '/esloader.ESLoader/DeltaLoad',
        request_serializer=esloader__pb2.DeltaLoadRequest.SerializeToString,
        response_deserializer=esloader__pb2.DeltaLoadResponse.FromString,
        )
    self.AnonymousDeltaLoad = channel.unary_unary(
        '/esloader.ESLoader/AnonymousDeltaLoad',
        request_serializer=esloader__pb2.AnonymousDeltaLoadRequest.SerializeToString,
        response_deserializer=esloader__pb2.AnonymousDeltaLoadResponse.FromString,
        )


class ESLoaderServicer(object):
  """The root interface exported by our gRPC server that's the doorway into our
  elasticsearch-loader as a service API.
  """

  def SayHello(self, request, context):
    """A simple remote procedure call to echo back what you send it
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HealthCheck(self, request, context):
    """A health checking endpoint, see
    https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeltaLoad(self, request, context):
    """A remote procedure call to load into Elasticsearch a list of Delta
    objects for indexing Host Delta entries.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AnonymousDeltaLoad(self, request, context):
    """A remote procedure call to load into Elasticsearch a list of
    AnonymousDelta objects, i.e., for indexing Certificate entries.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ESLoaderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=esloader__pb2.HelloRequest.FromString,
          response_serializer=esloader__pb2.HelloReply.SerializeToString,
      ),
      'HealthCheck': grpc.unary_unary_rpc_method_handler(
          servicer.HealthCheck,
          request_deserializer=esloader__pb2.HealthCheckRequest.FromString,
          response_serializer=esloader__pb2.HealthCheckResponse.SerializeToString,
      ),
      'DeltaLoad': grpc.unary_unary_rpc_method_handler(
          servicer.DeltaLoad,
          request_deserializer=esloader__pb2.DeltaLoadRequest.FromString,
          response_serializer=esloader__pb2.DeltaLoadResponse.SerializeToString,
      ),
      'AnonymousDeltaLoad': grpc.unary_unary_rpc_method_handler(
          servicer.AnonymousDeltaLoad,
          request_deserializer=esloader__pb2.AnonymousDeltaLoadRequest.FromString,
          response_serializer=esloader__pb2.AnonymousDeltaLoadResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'esloader.ESLoader', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
