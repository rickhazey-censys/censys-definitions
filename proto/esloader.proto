syntax = "proto3";

package esloader;

import "anonstore.proto";
import "hoststore.proto";

// The root interface exported by our gRPC server that's the doorway into our
// elasticsearch-loader as a service API.
service ESLoader {
    // A simple remote procedure call to echo back what you send it
    rpc SayHello (HelloRequest) returns (HelloReply) {}

    // A health checking endpoint, see
    // https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);

    // A remote procedure call to load into Elasticsearch a list of Delta
    // objects for indexing IPv4 entries.
    rpc IPv4DeltaLoad(DeltaLoadRequest) returns (DeltaLoadResponse);

    // A remote procedure call to load into Elasticsearch a list of Delta
    // objects for indexing Domain entries.
    rpc DomainDeltaLoad(DeltaLoadRequest) returns (DeltaLoadResponse);

    // A remote procedure call to load into Elasticsearch a list of
    // AnonymousDelta objects, i.e., for indexing Certificate entries.
    rpc AnonymousDeltaLoad(AnonymousDeltaLoadRequest) returns (AnonymousDeltaLoadResponse);
}

message HelloRequest {
    string name = 1;
}

message HelloReply {
    string message = 1;
}

message HealthCheckRequest {
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
    }
    ServingStatus status = 1;
}

message DeltaLoadRequest {
    repeated zsearch.Delta deltas = 1;
}

message DeltaLoadResponse {
    enum ResponseStatus {
        SUCCESS = 0;
        ERROR = 1;
    }
    ResponseStatus status = 1;
}

message AnonymousDeltaLoadRequest {
    repeated zsearch.AnonymousDelta anonymous_deltas = 1;
}

message AnonymousDeltaLoadResponse {
    enum ResponseStatus {
        SUCCESS = 0;
        ERROR = 1;
    }
    ResponseStatus status = 1;
}
